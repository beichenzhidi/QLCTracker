{"version":3,"sources":["webpack:///node_modules/jsonrpc-lite sync","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///(webpack)/buildin/global.js","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.guard.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/account/account.component.html","webpack:///src/app/components/account/account.component.ts","webpack:///src/app/components/accounts/accounts.component.html","webpack:///src/app/components/accounts/accounts.component.ts","webpack:///src/app/components/ccswap/ccswap.component.html","webpack:///src/app/components/ccswap/ccswap.component.ts","webpack:///src/app/components/chainx/chainx-account/chainx-account.component.html","webpack:///src/app/components/chainx/chainx-account/chainx-account.component.ts","webpack:///src/app/components/chainx/chainx-create/chainx-create.component.html","webpack:///src/app/components/chainx/chainx-create/chainx-create.component.ts","webpack:///src/app/components/chainx/chainx-send/chainx-send.component.html","webpack:///src/app/components/chainx/chainx-send/chainx-send.component.ts","webpack:///src/app/components/chainx/chainx-staking/chainx-staking.component.html","webpack:///src/app/components/chainx/chainx-staking/chainx-staking.component.ts","webpack:///src/app/components/createwallet/createwallet.component.html","webpack:///src/app/components/createwallet/createwallet.component.ts","webpack:///src/app/components/desktop/desktop.component.html","webpack:///src/app/components/desktop/desktop.component.ts","webpack:///src/app/components/erc20/erc20-wallet/erc20-wallet.component.html","webpack:///src/app/components/erc20/erc20-wallet/erc20-wallet.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/import-address-book/import-address-book.component.html","webpack:///src/app/components/import-address-book/import-address-book.component.ts","webpack:///src/app/components/import-wallet/import-wallet.component.html","webpack:///src/app/components/import-wallet/import-wallet.component.ts","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/modal-unlock/modal-unlock.component.ts","webpack:///src/app/components/modal-unlock/modal-unlock.component.html","webpack:///src/app/components/myaccount/myaccount.component.html","webpack:///src/app/components/myaccount/myaccount.component.ts","webpack:///src/app/components/myaccounts/myaccounts.component.html","webpack:///src/app/components/myaccounts/myaccounts.component.ts","webpack:///src/app/components/mystakings/mystakings.component.html","webpack:///src/app/components/mystakings/mystakings.component.ts","webpack:///src/app/components/nav/nav.component.ts","webpack:///src/app/components/neo/myneowallet/myneowallet.component.html","webpack:///src/app/components/neo/myneowallet/myneowallet.component.ts","webpack:///src/app/components/neo/neo-create/neo-create.component.html","webpack:///src/app/components/neo/neo-create/neo-create.component.ts","webpack:///src/app/components/neo/neo-import/neo-import.component.ts","webpack:///src/app/components/neo/neo-import/neo-import.component.html","webpack:///src/app/components/neo/neo-settings/neo-settings.component.html","webpack:///src/app/components/neo/neo-settings/neo-settings.component.ts","webpack:///src/app/components/neo/sendneo/sendneo.component.html","webpack:///src/app/components/neo/sendneo/sendneo.component.ts","webpack:///src/app/components/news/news.component.html","webpack:///src/app/components/news/news.component.ts","webpack:///src/app/components/notifications/notifications.component.ts","webpack:///src/app/components/notifications/notifications.component.html","webpack:///src/app/components/portal/portal.component.html","webpack:///src/app/components/portal/portal.component.ts","webpack:///src/app/components/pov-explorer/pov-explorer.component.html","webpack:///src/app/components/pov-explorer/pov-explorer.component.ts","webpack:///src/app/components/pov-view/pov-view.component.html","webpack:///src/app/components/pov-view/pov-view.component.ts","webpack:///src/app/components/qlc/mining/mining-reward/mining-reward.component.html","webpack:///src/app/components/qlc/mining/mining-reward/mining-reward.component.ts","webpack:///src/app/components/qlc/mining/mining/mining.component.html","webpack:///src/app/components/qlc/mining/mining/mining.component.ts","webpack:///src/app/components/qlc/representation/manage-representatives/manage-representatives.component.html","webpack:///src/app/components/qlc/representation/manage-representatives/manage-representatives.component.ts","webpack:///src/app/components/qlc/representation/myrepresentatives/myrepresentatives.component.html","webpack:///src/app/components/qlc/representation/myrepresentatives/myrepresentatives.component.ts","webpack:///src/app/components/qlc/representation/representation-reward/representation-reward.component.html","webpack:///src/app/components/qlc/representation/representation-reward/representation-reward.component.ts","webpack:///src/app/components/qlc/representation/representatives/representatives.component.html","webpack:///src/app/components/qlc/representation/representatives/representatives.component.ts","webpack:///src/app/components/search/search.component.html","webpack:///src/app/components/search/search.component.ts","webpack:///src/app/components/send/send.component.html","webpack:///src/app/components/send/send.component.ts","webpack:///src/app/components/settings/settings.component.html","webpack:///src/app/components/settings/settings.component.ts","webpack:///src/app/components/staking-create/staking-create.component.html","webpack:///src/app/components/staking-create/staking-create.component.ts","webpack:///src/app/components/staking-dashboard/staking-dashboard.component.ts","webpack:///src/app/components/staking-dashboard/staking-dashboard.component.html","webpack:///src/app/components/staking-revoke/staking-revoke.component.ts","webpack:///src/app/components/staking-revoke/staking-revoke.component.html","webpack:///src/app/components/tokens/tokens.component.html","webpack:///src/app/components/tokens/tokens.component.ts","webpack:///src/app/components/topwallets/topwallets.component.ts","webpack:///src/app/components/topwallets/topwallets.component.html","webpack:///src/app/components/transaction/transaction.component.html","webpack:///src/app/components/transaction/transaction.component.ts","webpack:///src/app/components/transactions/transactions.component.html","webpack:///src/app/components/transactions/transactions.component.ts","webpack:///src/app/components/user-dashboard/user-dashboard.component.ts","webpack:///src/app/components/user-dashboard/user-dashboard.component.html","webpack:///src/app/components/user-dashboard/user-submenu/user-submenu.component.html","webpack:///src/app/components/user-dashboard/user-submenu/user-submenu.component.ts","webpack:///src/app/directives/amount-validator.directive.ts","webpack:///src/app/directives/autofocus.directive.ts","webpack:///src/app/http-error.interceptor.ts","webpack:///src/app/pipes/fiat.pipe.ts","webpack:///src/app/pipes/no-comma.pipe.ts","webpack:///src/app/pipes/qlc.pipe.ts","webpack:///src/app/pipes/squeeze-number.pipe.ts","webpack:///src/app/pipes/squeeze.pipe.ts","webpack:///src/app/services/address-book.service.ts","webpack:///src/app/services/api-confidant.service.ts","webpack:///src/app/services/api-nep5.service.ts","webpack:///src/app/services/api.service.ts","webpack:///src/app/services/app-settings.service.ts","webpack:///src/app/services/chainx-account.service.ts","webpack:///src/app/services/ether-wallet.service.ts","webpack:///src/app/services/ipc.service.ts","webpack:///src/app/services/lang.service.ts","webpack:///src/app/services/neo-wallet.service.ts","webpack:///src/app/services/node.service.ts","webpack:///src/app/services/notification.service.ts","webpack:///src/app/services/pow.service.ts","webpack:///src/app/services/price.service.ts","webpack:///src/app/services/qlc-block.service.ts","webpack:///src/app/services/qlc-websocket.service.ts","webpack:///src/app/services/representative.service.ts","webpack:///src/app/services/util.service.ts","webpack:///src/app/services/wallet.service.ts","webpack:///src/app/services/work-pool.service.ts","webpack:///src/assets/data sync ^\\.\\/neoTokenList_.*\\.json$","webpack:///src/constants/abi/neo5toerc20swap.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///util (ignored)","webpack:///util (ignored)?b0c9","webpack:///buffer (ignored)","webpack:///crypto (ignored)","webpack:///crypto (ignored)?57ae","webpack:///buffer (ignored)?c145","webpack:///buffer (ignored)?656e"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","g","Function","window","webpackEmptyAsyncContext","Promise","then","CanActivateRouteGuard","wallet","router","isConfigured","navigate","providedIn","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","walletService","addressBook","settings","notifications","node","workPool","price","lang","api","webSocket","showUpdate","updateText","updateLink","updateBreak","desktop","addEventListener","locked","lockOnClose","lockWallet","events","subscribe","event","scrollTo","connect","loadAddressBook","loadStoredWallet","loadAppSettings","loadWorkCache","updates","updatesQuery","result","title","link","selector","templateUrl","styleUrls","createTranslateLoader","http","AppModule","provide","useClass","multi","loader","useFactory","deps","serverLoggingUrl","rpcUrl","level","DEBUG","serverLogLevel","ERROR","declarations","providers","bootstrap","entryComponents","modalRef","AccountComponent","route","modalService","accountHistory","pendingBlocks","pendingSum","pageSize","accountBlocksCount","accountMeta","accountId","routerSub","qrCodeImage","showEditName","addressBookTempName","addressBookModel","loadAccountDetails","load","unsubscribe","status","reload","source","abc","val","snapshot","params","account","loadTokens","accountInfo","error","am","tokens","token","tokenMap","hasOwnProperty","type","tokenInfo","accountsPending","accountPending","pendingResult","forEach","pending","push","amount","tokenName","timestamp","hash","Number","pendingRaw","reduce","prev","current","plus","getAccountHistory","console","log","qrCode","resetPage","prepareQLCBlockView","template","show","openModal","AccountsComponent","accounts","accountsCreated","pages","allPages","activePage","offSet","page","undefined","setPage","Math","floor","displayPages","Array","fill","i","loadAccounts","accountsCount","setPages","tokenSymbol","image","tokenId","stakingForm","setValue","nacl","CcswapComponent","addressBookService","neoService","nep5api","util","trans","confidantApi","etherService","neotubeSite","neoNetwork","etherscan","transactions","step","recover","zeroHash","checkingTxid","recovering_txid","continueInvoke","neoTxHash","ethTxHash","FastGasPrice","parseInt","random","toString","ProposeGasPrice","SafeGasPrice","gasPrices","LastBlock","selectedGasPrice","sendingSecurityCode","confidantConfirmed","invokeSteps","recoverSteps","confidants","macaddresses","neowallets","metamask","staking","main","name","minAmount","minTime","test","msg3","recoverForm","recover_txid","compose","required","pattern","maxLength","minLength","recover_validation_messages","message","recoverErrorMsg","stakingType","fromNEOWallet","toQLCWallet","availableQLCBalance","endDate","amounToStake","durationInDays","tokenSupply","tokenDecimals","email_address","security_code","staking_validation_messages","terms","invalidTokenSymbol","invalidTokenName","stakingTypes","web3","currentProvider","publicConfigStore","on","data","selectAccount","getEtherAccounts","loadBalances","getAccounts","etheraccounts","selectedAddress","getEthBalance","ethbalance","getEthQLCBalance","etherqlcbalance","getThreeGasPrice","threeGasPrices","txhash","get","value","length","startsWith","sendWarning","swapInfoByTxHash","state","haveswappedamount","dividedBy","pow","toNumber","getEthOwnerSign","amountWithDecimals","getEthMint","ethUserAddr","utils","toWei","ethMint","setInterval","clearInterval","msg","checkimg","formGroup","values","controls","control","markAsTouched","markFormGroupTouched","localStorage","getItem","tokensResult","findToken","find","String","toLowerCase","sendSecurityCode","confirm","checkSecurityCode","valid","mac_addresses","res","getBalances","getswapHistory","initEthThreeGasFee","balances","addressBookName","getAccountName","getneoTuboBalance","balance","assetId","asset_hash","selectedNEOWallet","a","tokenList","networks","checkIfMinAmount","isGreaterThan","integerValue","ROUND_FLOOR","mac_address","findIndex","findMacAddress","splice","findConfidant","setValidators","parseFloat","fromWei","walletIsLocked","burnERC20Token","burnEth","contractLock","txData","txHash","unsignedData","signTheTransaction","signData","signature","sendNeoTransaction","publicKey","mintERC20Token","mintData","address","swapInfosByAddress","infos","toBN","mul","neo5Address","getEthBurn","waitTimer","toswapAmount","txid","multipliedBy","packNeoTransaction","pType","request1","beneficial","request2","multiSigAddress","lockTxId","prepareBenefitPledge","preparedPledge","getPreparePledge","totalSupply","decimals","prepareMintagePledge","getPrepareMintagePledge","block","keyPair","getFittestHeader","povFittest","poVHeight","height","blockHash","signed","sign","detached","hex","toUint8","secretKey","fromUint8","generateWorkFor","previous","accountPublicKey","workExists","sendInfo","getWork","work","process","processResponse","addWorkToCache","removeFromCache","ChainxAccountComponent","changeDetection","notificationService","chainxAccountService","mnemonic","wif","addressBookNameTemp","recoverMnemonicText","recoverPrivateKeyText","recoveredMnemonic","recoveredPrivateKey","subscriptions","loading","getPublicKey","replace","loadAccount","getTransactions","chainxAccounts","getAssetsByAccount","assets","asset","details","TotalBalance","transfers","trim","deleteAddress","sendSuccess","saveAddress","sendError","existingAccountIndex","saveWalletExport","onShow","onShown","onHide","onHidden","markForCheck","reason","decrypt","privateKey","editName","deleteWallet","recoverPrivateKey","ChainxCreateComponent","activePanel","selectedImportOption","accountName","alreadyImporting","newAccountMnemonic","newAccountPrivateKey","newAccount","importPrivateKey","importMnemonic","isLocked","nameExists","createAccount","checkPrivateKey","checkMnemonic","ChainxSendComponent","currencyPipe","noCommaPipe","chainxAccount","accountFrom","accountFromName","accountTo","accountToBook","accountToName","memo","confirmingTransaction","alreadySending","refresh","transform","divisor","gt","Free","transformAmount","sender","destination","transfer","response","resetFields","amountFiat","nomination","ChainxStakingComponent","nominationRecords","candidate","candidateStaked","defaultLogo","alreadyInvoking","alreadyClaiming","changeStaking","stakingWarning","unfreezing","url","loadCandidates","getNominatioRecords","invoking","getCandidates","candidates","filter","isActive","sort","b","selfVote","stakingTotal","unfreezeLockedTotal","unclaimedTotal","getStakingDividendByAccount","stakingDividend","getNominationRecords","nominationRecord","candidateAddress","getPublicAddress","jackpot","unclaimed","entries","unfreezeReserved","revocations","nominations","nominationTotal","unfreezeLocked","target","claim","updateStakingData","nominate","navigateByUrl","unnominate","staked","revocationIndex","unfreeze","unfreezeDetails","candidateAccount","nominationRecordsUnfreeze","action","availableAmount","totalNomination","eq","CreatewalletComponent","newWalletSeed","newWalletMnemonic","importSeedModel","importSeedMnemonicModel","walletPasswordModel","walletPasswordConfirmModel","agree","importOptions","msg1","msg2","msg4","msg5","msg6","msg7","msg8","msg9","msg10","msg11","msg12","msg13","msg14","msg15","msg16","msg17","msg18","msg19","msg20","msg21","loadLang","onLangChange","panel","createNewWallet","newSeed","newPassword","password","importSeed","existingSeed","words","split","toUpperCase","identifier","createWalletFromSeed","removeNotification","files","file","reader","FileReader","onload","fileData","importData","JSON","parse","seed","walletEncrypted","btoa","stringify","fragment","err","readAsText","DesktopComponent","ipc","minerAccounts","selectedMinerAccount","minerStats","modalConfig","backdrop","ignoreBackdropClick","desktopConfig","version","nodeData","filename","gitrev","platform","minerData","poolData","showNodeControl","deleteLedgerWarning","deleteLedgerWarningProgress","deleteLedgerWarningFinish","deleteLedgerWarningShowOnUpdate","downloadProgress","newVersion","startingDesktop","stoppedDesktop","stoppingNode","updateCheckDesktop","showCheckingStatus","showNodeFound","showNoNodeFound","showDownload","showDownloadUpdate","showDownloadNew","showDownloading","showDownloadFinished","showStartNode","showStartingNode","showSynchronizingNode","showNoUpdate","showNodeStopped","nodeMemoryUsage","nodeCPUUsage","nodeUptime","arch","minerLastMsg","minerLog","selectedMiner","selectedAlgo","selectedPoolMiner","showCheckingMinerStatus","showMinerFound","showNoMinerFound","showDownloadMinerNew","showDownloadMinerUpdate","showDownloadMiner","showDownloadingMiner","showDownloadMinerFinished","downloadMinerProgress","newMinerVersion","showNoMinerUpdate","showStartMiner","showStartingMiner","showStartedMiner","stoppingMiner","showMinerControl","poolLastMsg","poolLog","showCheckingPoolStatus","showPoolFound","showNoPoolFound","showDownloadPoolNew","showDownloadPoolUpdate","showDownloadPool","showDownloadingPool","showDownloadPoolFinished","downloadPoolProgress","newPoolVersion","showNoPoolUpdate","showStartPool","showStartingPool","showStartedPool","stoppingPool","showPoolControl","checkProccesInterval$","nodeVersion","latest","openUpdateCheckModal","templateUpdateCheck","progress","running","setSynchronizingPov","setSynchronizingTransactions","setOffline","openNodeStoppedModal","templateNodeStopped","config","stats","cpu","memory","millisecondsTohhmmss","elapsed","nodeGetProcess","pov_getLatestAccountState","repStatus","accountState","vote","send","milliseconds","totalSeconds","days","hours","minutes","seconds","hide","nodeBlocksCount","nodeMainBlocksCount","modalNodeStoppedRef","modalUpdateCheckRef","modalMiningSetupRef","templateMiningSetup","checkIfMinerAccounts","openGqlcMiningSetupModal","openPoolSetupModal","openPoolMinersModalCPU","openPoolMinersModalGPU","openPoolMinersModalASIC","modalPoolSetupRef","templatePoolSetup","closePoolSetupModal","modalPoolRef","templatePool","closePoolModal","modalPoolMinersRef","templatePoolMiners","closePoolMinersModal","modalPoolMinersCPURef","templatePoolMinersCPU","modalPoolMinersGPURef","templatePoolMinersGPU","modalPoolMinersASICRef","templatePoolMinersASIC","modalGqlcMiningSetupRef","templateGqlcMiningSetup","closeGqlcMiningSetupModal","modalMinerRef","templateMiner","openMinerModal","minerVersion","openPoolModal","poolVersion","getMinerStats","minerStatsQuery","displayMinerStats","key","mainBlockNum","mainRewardAmount","firstBlockTime","lastBlockTime","firstBlockHeight","lastBlockHeight","isHourOnline","isDayOnline","read","Erc20WalletComponent","swapHistory","noWallet","addresslc","loadWallet","HeaderComponent","search_text","unlockPassword","$","myTarget","preventDefault","removeClass","attr","addClass","focus","click","stopPropagation","toggleClass","closest","next","langMenuState","hasClass","jQuery","unlockWallet","unlocked","b64Encoded","encodeURI","search","HomeComponent","ws","representativeOnline","representativesCount","nodesOnline","nodesTotal","votingPower","votingPowerPercent","tokensCount","latestPovHeight","povHeaders","minerOnline","minerCount","newsList","miningRewardsGraphData","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","borderDash","borderWidth","transactionsGraphData","yAxisID","graphOptions","legend","display","padding","transactionsgraphOptions","scales","yAxes","position","gridLines","drawOnChartArea","blockHashData","hoverBackgroundColor","totalHashesPerSecond2Hours","blockHashData24","totalHashesPerSecond24Hours","pieChartOptions","povInfo","totalMiningReward","totalRepReward","latestTransactionsInterval$","loadTransactions","loadStatuses","news","loadNews","getLastNHourInfo","povInfoQuery","graphMiningRewards","graphRepRewards","graphTransactions","graphBlocks","hashInfoData","sha256d_2h","x11_2h","scrypt_2h","hashInfoData24","sha256d_24h","x11_24h","scrypt_24h","HourItemList","hourInfo","Hour","AllMinerReward","AllRepReward","AllTxNum","AllBlockNum","Sha256dBlockNum","X11BlockNum","ScryptBlockNum","reverse","oldDataSet","oldDataSet2","newDataSet","newDataSet2","newState","transactionsOldDataSet","transactionsOldDataSet2","transactionsNewDataSet","transactionsNewDataSet2","transactionsNewState","dayOnlineCount","hashOldDataSet","hashNewDataSet","hashNewState","hashOldDataSet24","hashNewDataSet24","hashNewState24","refreshBlocks","representatives","onlineRepresentatives","onlineReps","tokenInfoByName","votingOnline","rep","representative","isArray","repMeta","total","toFixed","peersCount","nodesInfoQuery","online","all","getLatestHeader","latesPovHeader","basHdr","batchGetHeadersByHeight","povHeadersQuery","newPovHeaders","headers","header","blocks","ImportAddressBookComponent","validImportData","conflictingEntries","newEntries","existingEntries","importDataError","decodedData","atob","importBlob","entry","originalName","importedCount","ImportWalletComponent","walletPassword","decryptedBytes","decryptedSeed","Utf8","loadImportedWallet","accountsIndex","LoginComponent","unlockWalletConfirm","ModalUnlockComponent","_bsModalRef","MyaccountComponent","repService","successfulBlocks","maxPageSize","repLabel","addressBookEntry","showEditRepresentative","representativeModel","showRepresentatives","representativeListMatch","isNaN","processingPending","msgEdit1","msgEdit2","walletAccount","loadPending","otherTokens","pendingPerTokenCount","latestTransactions","historyResult","blocksInfo","preBlock","link_as_account","getPublicAccountID","processPendingBlock","MyaccountsComponent","isLedgerWallet","activeSlideIndex","msgLocked","getNeoScanBalance","asset_symbol","addWalletAccount","removeWalletAccount","tempBookName","MystakingsComponent","blockService","pledges","pledgesCompleted","rewards","myStakingVolume","myStakingEarnings","totalPledgeAmount","revokeSteps","getStakings","getTotalPledgeAmount","dateNow","Date","now","pledgeInfoByBeneficial","element","nep5TxId","getTotalRewards","rewardsResult","earnings","getConfidantRewards","rewardsValues","totalAccountReward","reward","rewardLine","index","pledge","getWalletAccount","revoke","confirmInvokeWaitForTXIDConfirm","getTransaction","transaction","mintagePledge","benefitPledge","pledgeResult","linkText","processInvokeBlock","pledgetxid","unlockPledge","contractUnlockPrepare","getMintageWithdraw","withdrawBlock","getWithdraw","processBlock","confirmRevokeWaitForTXIDConfirm","unlockTxId","unlockTxParams","NEP5TxId","mintageWithdraw","benefitWithdraw","NavComponent","isCollapsed","MyneowalletComponent","encryptedwif","claimableGas","walletHistory","reloadTimer","walletId","neoPrivateCode","neoPrivateCodeButton","neoPrivateCodeRecoverStatus","swaptransactions","getClaimAmount","getLastTransactions","_combine","claimGas","NeoCreateComponent","neoWallet","walletNameModel","importPrivateKeyModel","importEncryptedKeyModel","importEncryptedKeyPasswordModel","newWalletPrivateKey","newWalletEncryptedKey","newWallet","wip","createWallet","NeoImportComponent","NeoSettingsComponent","neoNodes","getGoodNodes","nodes","getNodes","SendneoComponent","qlcBlock","qlc","selectedWallet","accountTokens","selectedToken","selectedTokenHash","selectedWalletBalances","addressBookResults$","showAddressBook","addressBookMatch","newHashId","amounts","shortName","selectedAmount","amountRaw","rawAmount","fromAccount","fromAccountID","fromAddressBook","toAccountID","bookContact","toAddressBook","toAccountStatus","searchAddressBook","queryParams","to","validateDestination","accountIDWithBalance","tokenMeta","getAmountBaseValue","lte","precision","displayCurrency","fiatAmount","rawToMqlc","times","lastPrice","div","mqlcToRaw","qlcVal","rawToQlc","qlcAmount","getAmountValueFromBase","qlcToRaw","unSelectedAccount","addresses","setTimeout","newHash","errMessage","resetRaw","reloadBalances","maxAmount","kqlcToRaw","rawToKqlc","NewsComponent","archiveList","newsArchive","archive","NotificationsComponent","notificationLength","notifications$","notification","options","existingNotification","n","newNotification","cssClass","getCssClass","removeNotification$","alert","PortalComponent","applicationForm","telegram","qlc_address","applicationType","ipAddress","hardwareType","bandwidth","storage","os","hardwareModel","miningAlgo","computational_power","button_text","sending_status","apply","portalApply","PovExplorerComponent","povHeadersCount","povLatestHeader","refreshButton","minersNum","totalQgasMined","relativeTo","getPovHeaders","startHeight","totalMinerReward","normDifficulty","bigNorm","toFormat","PovViewComponent","param","blockJSON","loadBlock","getBlockByHash","blockQuery","getBlockByHeight","MiningRewardComponent","minerAccountsNotStarted","nonMinerAccounts","miningForm","qlcAddress","sentHash","showGetReward","availRewardAmount","showNoRewardAvailabe","showChecking","showCheckOtherAddress","showError","errorMsg","showPreparingBlock","showProcessingBlock","showBlockProcessed","rewardProcessHash","miningReward","isMiner","minerInfo","minerHistory","minerRewards","showProcessingReward","errorTxt","checkMiners","miner","getAvailRewardInfo","availRewardInfoQuery","needCallReward","miner_getRewardHistory","availRewardHistoryInfoQuery","compareMinerStats","availRewardInfo","getRewardSendBlock","availStartHeight","availEndHeight","availRewardBlocks","rewardSendBlock","processBlockWithPov","processRewardSend","getRewardRecvBlockBySendHash","rewardRecvBlockQuery","procesRewardRecv","MiningComponent","activeView","procesRewardSend","ManageRepresentativesComponent","nodeApi","newRepAccount","newRepName","newRepTrusted","newRepWarn","representatives$","pipe","reps","indexOf","loadRepresentativeList","getOnlineRepresentatives","trusted","warn","document","getElementById","invalidAccountMsg","validateAccountNumber","saveRepresentative","cancelNewRep","accountID","deleteRepresentative","MyrepresentativesComponent","representativeService","logger","changeAccountID","toRepresentativeID","representativeSelect","representativeResults$","representativeOverview","changingRepresentatives","selectedAccounts","fullAccounts","loadRepresentativeOverview","searchRepresentatives","getWalletAccountDetails","walletAccountInfos","uniqueRepresentatives","getAccountRepresentatives","getRepresentativesDetails","representativesDetails","representativesOverview","repOnline","knownRep","getRepresentative","qlcWeight","weight","percent","gte","totalWeight","coinBalance","network","oracle","votingWeight","repOverview","delegatedWeight","tokenMetas","qlcTokenMeta","tm","qlcTokenHash","debug","accountVotingWeight","repInfos","existingRep","newRep","newAccountID","repInput","nativeElement","scrollIntoView","behavior","existingAccount","allExists","getSortedRepresentatives","matches","selectRepresentative","validateRepresentative","accountInfoByToken","allAccounts","accountsToChange","accountsNeedingChange","generateChange","changed","selectRep","RepresentationRewardComponent","repRewardForm","repAccounts","nonRepAccounts","repStats","getRepStatus","isRep","repInfo","repHistory","repRewards","checkReps","rep_getAvailRewardInfo","rep_getRewardHistory","pov_getRepStats","repStatsQuery","allRepStats","onlineRepStats","offlineRepStats","eligibleForRewards","repStat","mainOnlinePeriod","stableBlockNum","stableRewardAmount","stableOnlinePeriod","lastOnlineTime","lastOnlineHeight","isOnline","displayReps","repReward","rewardRep","eligible","rep_getRewardSendBlock","RepresentativesComponent","onlineRepsWithRewards","offlineRepsWithRewards","loaded","loadData","SearchComponent","phoneBlocks","receive","messageBlocks","phoneNumber","decode","senderNumber","receiverNumber","receiver","messageHash","messageHashRequest","SendComponent","selectedTokenSymbol","hideFiat","otherInterval","isValid","from","balanceBN","checkDP","dp","warnMessage","isLessThan","minus","mod","generateSend","tokenVal","selectedSlide","tokenData","selectedAccount","SettingsComponent","appSettings","msg22","msg23","msg24","msg25","msg26","msg27","msg28","msg29","msg30","msg31","msg32","msg33","msg34","msg35","msg36","msg37","msg38","msg39","msg40","msg41","confirmPassword","updatePasswordButton","updatePasswordButtonDisabled","showQRExport","QRExportUrl","QRExportImg","addressBookShowQRExport","addressBookQRExportUrl","addressBookQRExportImg","denominations","selectedDenomination","languages","selectedLang","storageOptions","selectedStorage","currencies","selectedCurrency","inactivityOptions","selectedInactivityMinutes","lockOptions","selectedLockOption","powOptions","selectedPoWOption","receiveOptions","selectedReceiveOption","blockOptions","selectedBlockOption","langService","loadFromSettings","matchingLang","d","matchingCurrency","matchingDenomination","displayDenomination","matchingStorage","walletStore","matchingInactivityMinutes","lockInactivityMinutes","matchingLockOption","matchingPowOption","powSource","matchingReceiveOption","newStorage","resaveWallet","newCurrency","reloadFiat","newLang","reloadLang","newSettings","setAppSettings","changeLang","getPrice","setAppSetting","reloadFiatBalances","clearCache","resetWallet","removeWalletData","deleteCache","clearAddressBook","clearAppSettings","neowallet","encrypt","exportUrl","generateExportUrl","exportData","base64Data","fileName","triggerFileDownload","blob","Blob","iOS","navigator","msSaveOrOpenBlob","msSaveBlob","elem","createElement","objUrl","URL","createObjectURL","href","download","body","appendChild","removeChild","revokeObjectURL","generateExportData","updateAppSettings","StakingCreateComponent","continueInvokePledge","contractGetLockInfo","neoAddress","getNeoWallet","pledgeInfoByTransactionID","pledgeInfo","lockEnd","lockInfo","setDuration","setDate","getDate","confirmInvokeWaitForTXIDConfirmByPledge","confirmMacAddresses","setMac","StakingDashboardComponent","StakingRevokeComponent","TokensComponent","TopwalletsComponent","TransactionComponent","transactionHash","transactionJSON","loadTransactionDetails","blockAccount","accountForPublicKey","TransactionsComponent","transactionsCount","blocksCount","count","UserDashboardComponent","UserSubmenuComponent","AmountValidatorDirective","minAmountValidator","forbidden","AutofocusDirective","el","HttpErrorInterceptor","request","handle","errorMessage","ErrorEvent","FiatPipe","currencyCode","digits","locale","NoCommaPipe","QlcPipe","QLC","args","NaN","SqueezeNumberPipe","arg","numberLength","SqueezePipe","openingChars","closingChars","firstChars","slice","join","lastChars","AddressBookService","storeKey","addressBook$","addressBookStore","existingName","saveAddressBook","setItem","removeItem","addressList","match","ApiConfidantService","explorerUrl","post","toPromise","neo_address","ApiNEP5Service","nep5Url","qlcChainNetwork","jsonrpc","method","benefitParams","lockTxParams","txWithdraw","offset","mintagePledgeParams","unLockTxParams","ApiService","alive","connectTimer","reconnectTime","reconnectInterval","reconnectTimeMax","HTTP_RPC","c","airdropTx","syncing","syncQuery","setOnline","synchronizedPov","pov_getPovStatus","povSyncQuery","syncState","setSynchronizedPov","blocksCountMain","blocksMainQuery","blocksQuery","mainRpcUrl","synchronizedTransactions","setSynchronizedTransactions","buildinLedger","reconnect","ledger","accountsBalances","accountsFrontiers","delegatorsCount","net","order","accountHistoryTopn","accountValidate","tokenHash","tokenResult","rpc","desktopVersion","start","direction","limit","beginTime","endTime","beginBlock","endBlock","coinbase","endHeight","rewardBlocks","rewardAmount","AppSettingsService","settingsStore","assign","saveAppSettings","settingsObject","ChainxAccountService","extrinsic","reject","signAndSend","apiUrl","pageIndex","chainx","isRpcReady","stake","getIntentions","chainxApi","blockNumber","isReady","chain","getBlockHash","getBlockByNumber","getBlock","blockData","extrinsics","raw","voteClaim","chainxNetwork","chainxNetworkDefault","chainxExplorer","decodeAddress","encodeAddress","decryptedData","newMnemonic","setNet","EtherWalletService","etherswapSmartContract","neo5toerc20swapwrapperurl","neo5toerc20swapjwtauth","abi","ETH","ethereum","ethAddress","getAllTransactions","qlcBalance","qlcBalanceNumber","ethBalance","ethBalanceNumber","erc20Transactions","internalTransactions","getERC20Transactions","getInternalTransactions","ethEtherscanApi","ethNetworkDefault","ethEtherscanApiKey","contractaddress","numOfTransactions","size","ethExplorer","enable","eth","getBalance","getThreeGasPriceUrl","authorization","nep5SenderAddr","erc20ReceiverAddr","pagesize","checkIfWallet","Contract","methods","balanceOf","call","sum","nep5Hash","gasPrice","mint","depositethTransactionSent","estimateGas","gasAmount","nep5Address","burn","withdrawethTransactionSent","IpcService","_ipc","require","ipcRenderer","channel","cb","LangService","translate","currentUrl","activeLinkClassString","enActive","cnActive","langClass","emailsendbutton","emailsendStatus","emailsendbuttonDefault","emailsendbuttonSending","emailsendbuttonSuccessmsg","setDefaultLang","getUrlSlug","loadSubscribeTranslation","currentUrlSlug","slugIsLang","slug","use","NeoWalletService","MIN_PASSPHRASE_LEN","apiAddress","neoScanApi","neonNetwork","neoscan","neoScan","neoswap","swapUrl","neotube","smartContractScript","neoSmartContract","neoswapsmartContractScript","neo5swapSmartContract","neoqlcsmartContractScript","neo5QLCSmartContract","claimingTimer","selectedNode","returnData","isWIF","isAddress","encryptedKey","encryptedWIF","Account","generatePrivateKey","neoAccount","apiProvider","myProvider","balanceResults","getMaxClaimAmount","claims","getClaims","claimed","claimGasTimer","maxClaimAmount","neoBalance","lastTransactionsResults","address_from","address_to","item","symbol","transactionResult","receivingAddress","intent","makeIntent","NEO","GAS","intents","sendAsset","returnAsset","contractScriptHash","numOfDecimals","amtToSend","additionalInvocationGas","additionalIntents","generator","Fixed8","builder","script","str","gas","doInvoke","errorConfig","returnToken","props","scriptHash","operation","create","Query","invokeScript","getRPCEndpoint","execute","neoWalletAddress","neo5qlcAmount","erc20WalletAddress","providerapi","invoke","ContractParam","byteArray","integer","str2hexstring","invokeConfig","config2","returnTokeninvokeConfig","qlcWalletAddress","multisigAcct","createMultiSig","neoPublicKey","sb","ScriptBuilder","invokeFunction","reverseHex","stack","lockStart","c2","fromReverseHex","hexstring2str","multiSigWallet","contractUnlock","unlock","constructTx","invocationTx","addAttribute","serialize","txHex","sig1","noCache","goodNodes","bestRPC","Balance","bal","neoscanBalances","unspent","addAsset","parseUnspent","addToken","claimable","Claims","parseClaims","info","unspentArr","coin","claimArr","start_height","end","end_height","NodeService","successMsg","setSynchronizing","setSynchronized","NotificationService","sendNotification","PowService","deviceService","webGLAvailable","webGLTested","PoWPool","parallelQueue","processingQueueItem","isDesktop","hasWebGLSupport","hasWorkerSupport","existingPoW","p","promise","addQueueItem","queueItem","getDeferredPromise","processQueue","canvas","webGL","getContext","processNextQueueItem","determineBestPoWMethod","getHashCPUWorker","getHashWebGL","shift","infoMessage","getPOWServer","successMessage","getPow","PoW","cwrap","NUM_THREADS","hardwareConcurrency","workers","defer","PriceService","lastPriceBTC","lastPrice$","currency","convertString","quote","currencyPrice","btcPrice","price_btc","usdPrice","price_usd","QLCBlockService","confirmTxTimer","representativeAccount","generateChangeBlock","changeBlock","tokenTypeHash","generateSendBlock","sendBlock","sourceBlock","srcBlockInfo","getReceiveRewardBlock","rewardReceiveBlock","povHeight","rep_getRewardRecvBlockBySendHash","generateReceiveBlock","receiveBlock","confirmTx","notConfirmed","blockConfirmedStatus","blockConfirmedQuery","sleep","ms","QLCWebSocketService","queuedCommands","queuedAwaitAnswers","reconnectTimeout","socket","connected","subscribedAccounts","latestBlocks","latestTransactionTimeStamp","latestBlocksTimeStamp","latest5Transactions","latest5Blocks","ledger_subscription","pov_subscription","debug_subscription","getTime","wsUrl","WebSocket","onopen","onerror","onclose","attemptReconnect","onmessage","newEvent","subscription","sub","pov_newBlock","ledger_blocks","newBalance","newPending","pendingCount","receiveAccount","awaitMethod","povBlocks","results","skipTimeCheck","unshift","self","t","close","RepresentativeService","defaultRepresentatives","list","representativeStore","newRepresentative","existingRepresentative","r","saveRepresentatives","existingIndex","weightedReps","UtilService","toUint4","hexToUint4","uint8ToHex","hexToUint8","uint4","toUint5","uint4ToUint5","uint4ToUint8","uint5","uint5ToString","uint8","uint8ToUint4","fromHex","toHex","dec","decToHex","generateAccountSecretKeyBytes","generateAccountKeyPair","generateSeedBytes","getAccountPublicKey","b64","encodeUnicode","b64EncodeUnicode","decodeUnicode","b64DecodeUnicode","encodeURIComponent","toSolidBytes","p1","fromCharCode","decodeURIComponent","charCodeAt","hexValue","Uint8Array","substr","hexString","uintValue","m","z","right","left","uint4ToHex","letter_list","string","uint5ToUint4","aux","decValue","bytes","hexArray","s","pop","diff","j","stringToUint5","string_array","seedBytes","accountIndex","accountBytes","context","newKey","accountSecretKeyBytes","fromSecretKey","accountPublicKeyBytes","accountHex","keyBytes","checksum","errAccountMessage","account_crop","substring","key_uint4","array_crop","hash_uint4","key_array","blake_hash","errChecksumMessage","equal_arrays","Mqlc","kqlc","array","cropped_array","array1","array2","randomBytes","WalletService","loadingPending","tokenRefreshTime","pendingRefreshInterval$","blocksCountInterval$","newAddressBook","reloadAddressBook","obj","processPendingBlocks","newhash","pendingBlock","getTokenBalance","is_send","addPendingBlock","walletID","walletData","walletJson","walletType","loadWalletAccount","loadAccountsFromIndex","loadNeoWalletAccount","loadChainxAccount","encryptedSeed","secret","emptyAccountBuffer","emptyTicker","usedIndices","greatestUsedIndex","batchSize","batch","batchAccounts","batchAccountsArray","accountKeyPair","accountAddress","used","accountFrontier","frontierResult","reloadPending","hashes","tokensMeta","loadPendingBlocksForWallet","nextIndex","messages","createSeedAccount","walletAccountIndex","existingHash","nextBlock","removeBlockFromPendingAccount","generateReceive","auto","generateWalletExport","preparedBlocks","WorkPoolService","cacheLength","workCache","retryCount","cachedIndex","saveWorkCache","cached","workCacheStore","neo5toerc20swap","environment","production","mainnet","ropsten","rinkeby","testSmartContract","chainxWs","bootstrapModule"],"mappings":"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;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA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A;;AACE;;AAAmC;;AAAmD;;;;;;AAAgC;;AAAO;;AAC/H;;AACA;;AACE;;AAAmC;;AAAwB;;AAAgD;;AAAO;;AACpH;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAe;;AACrC;;AACA;;AACE;;AAAmC;;AAA2B;;AAA2B;;AAAO;;AAClG;;AACA;;AACE;;AAAmC;;AAAwB;;AAA0C;;AAAO;;AAC9G;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAY;;AAClC;;AACA;;AACE;;AAAmC;;AAA2B;;;;AAA0C;;AAAO;;AACjH;;AACA;;AACE;;AAAmC;;AAAwB;;;;AAAqD;;AAAO;;AACzH;;AACF;;AACF;;AACF;;AAEF;;AACF;;AAIA;;AACI;;AAGE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAyB;;AAC/B;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACI;;AAAM;;AAAwB;;AAAO;;AAAwB;;;;AAAuD;;AACxH;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAgB;;AACtB;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAM;;AAAuB;;AAAO;;AAAwB;;AAA2B;;AACzF;;AACA;;AACE;;AAAM;;AAA2B;;AAAO;;AAAwB;;AAA2B;;AAC7F;;AACF;;AACF;;AACF;;AACF;;AAEF;;AACF;;AACF;;AACI;;AAGE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAmB;;AACzB;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAEF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAoB;;AAC1B;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAEF;;AACF;;AACF;;AACF;;AAEF;;AACF;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yD;;AAAA;;AACU;;AAAA;;AACV;;AAAA;;AAGtD;;AAAA;;AAAuF;;AAKvF;;AAAA;;AAAuF;;AAM3F;;AAAA;;AAGF;;AAAA;;AAGwE;;AAAA;;AAED;;AAAA;;AAGD;;AAAA;;AAED;;AAAA;;;;;;AAcnF;;AACE;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAgB;;AAAO;;AAAmB;;AAAO;;AACnD;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAEE;;AACE;;AACE;;AACE;;AACE;;AAAqE;;AAAa;;AAClF;;AAA4D;;AAAM;;AAClE;;AAA+E;;AAAI;;AACnF;;AAAyF;;AAAa;;AACxG;;AACA;;AACE;;AACE;;AAAiC;;AAAyC;;AAAuB;;AAAO;;AACtG;;AAAgC;;AACpC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAgB;;AAAO;;AAAqB;;AAAO;;AACrD;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAa;;AACnC;;AACA;;AACE;;AAAkD;;AAAS;;AAC7D;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAa;;AACnC;;AACA;;AACE;;AAAkD;;AAAC;;AACrD;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAe;;AACrC;;AACA;;AACE;;AAAkD;;AAAC;;AACrD;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAgB;;AACtC;;AACA;;AACE;;AAAkD;;AAAC;;AACrD;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AAMA;;AACE;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAgB;;AAAO;;AAAmB;;AAAO;;AACnD;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAEE;;AACE;;AACE;;AACE;;AACE;;AAAqE;;AAAa;;AAClF;;AAA4D;;AAAM;;AAClE;;AAA+E;;AAAI;;AACnF;;AAAyF;;AAAa;;AACxG;;AACA;;AACI;;AACI;;AAA6C;;;;AAAkC;;AACnF;;AACA;;AACI;;AAAiC;;AAAyC;;AAAuC;;AAAO;;AACtH;;AAA+C;;AAC/C;;AAAuF;;AAA4D;;AAAI;;AAC7J;;AACJ;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAgB;;AAAO;;AAAqB;;AAAO;;AACrD;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAa;;AACnC;;AACA;;AACE;;AAAkD;;AAAS;;AAC7D;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAa;;AACnC;;AACA;;AACE;;AAAkD;;AAAC;;AACrD;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAe;;AACrC;;AACA;;AACE;;AAAkD;;AAAC;;AACrD;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAgB;;AACtC;;AACA;;AACE;;AAAkD;;AAAC;;AACrD;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AA/EuB;;AAAA;;AAA0C;;AAAA;;;;;;AA6F/B;;AAA6C;;AAA8B;;;;;;AAC3E;;AAA8C;;AAAmB;;;;;;AACjE;;AAA6C;;AAAmB;;;;;;AAyBpF;;AAEE;;AACE;;AAA4D;;;;AAAiD;;AAAI;;AACjH;;AAA6C;;AAA4B;;AAAQ;;AACnF;;AACA;;AACE;;AAA4D;;;;AAAiD;;AAAI;;AACjH;;AAA6C;;AAA4B;;AAAQ;;AACnF;;AACA;;AACE;;AAA4D;;;;AAAiD;;AAAI;;AACjH;;AAA6C;;AAA4B;;AAAQ;;AACnF;;AACA;;AACE;;AAA4D;;;;AAA+C;;AAAI;;AAC/G;;AAA6C;;AAA4B;;AAAQ;;AACnF;;AACA;;AACE;;AAA4D;;;;AAA+C;;AAAI;;AAC/G;;AAA6C;;AAA4B;;AAAQ;;AACnF;;AACA;;AACE;;AAAsD;;AAA+B;;;;AAA0D;;AAAQ;;AAAI;;AAC3J;;AAA6C;;AAAc;;AAAQ;;AAA+C;;AACpH;;AACA;;AACE;;AAA6C;;AAAmB;;AAAQ;;AAA8C;;AACtH;;AAA6C;;AAAiB;;AAAQ;;AACxE;;AACA;;AACE;;AAA6C;;AAAoB;;AAAQ;;AAAgD;;AACzH;;AAA6C;;AAA0B;;AAAQ;;AACjF;;AAEF;;;;;;AAhCO;;AAAA;;AAAyD;;AAAA;;AACqB;;AAAA;;AAG9E;;AAAA;;AAAyD;;AAAA;;AACqB;;AAAA;;AAG9E;;AAAA;;AAAyD;;AAAA;;AACqB;;AAAA;;AAG9E;;AAAA;;AAAyD;;AAAA;;AACqB;;AAAA;;AAG9E;;AAAA;;AAAyD;;AAAA;;AACqB;;AAAA;;AAGI;;AAAA;;AAClB;;AAAA;;AAGK;;AAAA;;AACF;;AAAA;;AAGG;;AAAA;;AACM;;AAAA;;;;;;AAInF;;AACE;;AACE;;AAAiC;;AAAyC;;AAA6B;;AAAO;;AAC5G;;AAAuD;;AAC3D;;AACF;;;;;;AAYY;;AACC;;AAAqF;;;;;;AAD7C;;AACxC;;AAAA;;;;;;;;AAVb;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AAEF;;AACA;;AACF;;AACF;;AAEA;;AAAsB;;AAAM;;AAC5B;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AAlBsC;;AAAA;;AAGlB;;AAAA;;;;;;AAgBpB;;AAEE;;AAA4B;;AAAyC;;AAAW;;AAAO;;AACrF;;AAAyB;;AAE3B;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAyC;;AAAyC;;AAAyC;;AAAyC;;AACpK;;AAAyC;;AAAyC;;AAAyC;;AAAyC;;AACtK;;AACF;;AAEF;;AACF;;AACF;;AACF;;;;;;AACA;;AACE;;AACE;;AACF;;AACF;;;;;;AAFI;;AAAA;;;;;;;;AAGJ;;AACE;;AACI;;AAA4B;;AAAyC;;AAAsB;;AAAO;;AAChG;;AAAkD;;AAAiB;;AAAO;;AAC1E;;AAAwE;;AAA0C;;AAAI;;AAGxH;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACA;;AACE;;AACF;;AACJ;;AACF;;;;;;AAVW;;AAAA;;AAAqE;;AAAA;;AAMlE;;AAAA;;;;;;AA0BM;;AAA6C;;AAAqC;;;;;;AAClF;;AAA8C;;AAAqB;;;;;;AACnE;;AAA6C;;AAAqB;;;;;;AAiBpF;;AAAyF;;;;;;AAA2E;;;;;;AAA3E;;AAAA;;;;;;AACzF;;AAA0F;;AAAS;;;;;;AAanG;;AAAyF;;AAA0C;;;;;;AAA1C;;AAAA;;;;;;AACzF;;AAA0F;;AAAC;;;;;;AAa3F;;AAAyF;;AAA2C;;;;;;AAA3C;;AAAA;;;;;;AACzF;;AAA0F;;AAAC;;;;;;AAa3F;;AAAyF;;;;AAAmE;;;;;;AAAnE;;AAAA;;;;;;AACzF;;AAA0F;;AAAC;;;;;;AArO3G;;AAEI;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAgB;;AAAkF;;AAClG;;AAAgB;;AAAwE;;AACxF;;AAAgB;;AAAuE;;AACzF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAGE;;AACE;;AAGE;;AAEE;;AACE;;AAAqE;;AAAa;;AAClF;;AAA4D;;AAAM;;AAClE;;AAA+E;;AAAI;;AACnF;;AAAyF;;AAAa;;AACxG;;AAEA;;AAoCA;;AAQA;;AAyBA;;AAoBA;;AAKA;;AAiBF;;AAEF;;AACF;;AAEF;;AACF;;AAKA;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAgB;;AAAyF;;AACzG;;AAAgB;;AAA0E;;AAC1F;;AAAgB;;AAAyE;;AAC3F;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AAEE;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAa;;AACnC;;AACA;;AACE;;AACA;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAa;;AACnC;;AACA;;AACE;;AACA;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAe;;AACrC;;AACA;;AACE;;AACA;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAgB;;AACtC;;AACA;;AACE;;AACA;;AACF;;AACF;;AACF;;AACF;;AAEF;;AACF;;AAQJ;;;;;;AA1OwC;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAyBmC;;AAAA;;AAoCA;;AAAA;;AAQ4B;;AAAA;;AAyBpF;;AAAA;;AAoBY;;AAAA;;AAKA;;AAAA;;AAoCS;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAiB0B;;AAAA;;AACA;;AAAA;;AAaA;;AAAA;;AACA;;AAAA;;AAaA;;AAAA;;AACA;;AAAA;;AAaA;;AAAA;;AACA;;AAAA;;;;QC3jBrDwjC,qB;;;AA8BX,qCACU3lC,aADV,EAEUQ,GAFV,EAGUq5B,YAHV,EAIU15B,aAJV,EAKUsD,KALV,EAK+B;AAAA;;AAJrB,aAAAzD,aAAA,GAAAA,aAAA;AACA,aAAAQ,GAAA,GAAAA,GAAA;AACA,aAAAq5B,YAAA,GAAAA,YAAA;AACA,aAAA15B,aAAA,GAAAA,aAAA;AACA,aAAAsD,KAAA,GAAAA,KAAA;AAjCV,aAAA6D,QAAA,GAAW,KAAKtH,aAAL,CAAmBb,MAAnB,CAA0BmI,QAArC;AACA,aAAAyb,aAAA,GAAgB,EAAhB;AACA,aAAA6iB,uBAAA,GAA0B,EAA1B;AACA,aAAAC,gBAAA,GAAmB,EAAnB;AAEA,aAAA5iB,UAAA,GAAa,EAAb;AAEA,aAAA6iB,UAAA,GAAa,IAAI,wDAAJ,CAAc;AACzBC,oBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAmB,0DAAWl6B,QAA9B,CADa;AAEzBwI,oBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAmB,0DAAWxI,QAA9B,CAFa;AAGzBm6B,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAmB,0DAAWn6B,QAA9B;AAHe,SAAd,CAAb;AAMA,aAAAo6B,aAAA,GAAgB,CAAhB;AACA,aAAAC,iBAAA,GAAoB,CAApB;AACA,aAAAC,oBAAA,GAAuB,CAAvB;AACA,aAAAC,YAAA,GAAe,CAAf;AACA,aAAAC,qBAAA,GAAwB,CAAxB;AACA,aAAAC,SAAA,GAAY,CAAZ;AACA,aAAAC,QAAA,GAAW,EAAX;AACA,aAAAC,kBAAA,GAAqB,CAArB;AACA,aAAAC,mBAAA,GAAsB,CAAtB;AACA,aAAAC,kBAAA,GAAqB,CAArB;AACA,aAAAC,iBAAA,GAAoB,EAApB;AAEA,aAAAC,YAAA,GAAe,EAAf;AASK;;;;mCAEY;;;;;;;;;;;;AACf,yBAAKd,UAAL,CAAgBx3B,GAAhB,CAAoB,YAApB,EAAkC1F,QAAlC,CAA2C,KAAKtB,QAAL,CAAc,CAAd,EAAiBlJ,EAA5D;AACA,yBAAK0nC,UAAL,CAAgBx3B,GAAhB,CAAoB,YAApB,EAAkC1F,QAAlC,CAA2C,KAAKtB,QAAL,CAAc,CAAd,EAAiBlJ,EAA5D;;AACA,2BAAM,KAAK+tB,aAAL,EAAN;;;;;;;;;;;;;;;AAEWlnB,qC;AAA4B;AAC/B4hC,qC,GAAU,OAAI,CAAC5jB,UAAL,CAAgB3S,IAAhB,CAAqB,UAAA7R,CAAC;AAAA,uCAAIA,CAAC,CAAC8U,OAAF,KAActO,OAAO,CAAC7G,EAA1B;AAAA,+BAAtB,C;;mCACZyoC,O;;;;;AACF,qCAAI,CAAC9jB,aAAL,CAAmB9c,IAAnB,CAAwB;AACtBhB,uCAAO,EAAPA,OADsB;AAEtB6hC,yCAAS,EAAGD,OAFU;AAGtBE,4CAAY,EAAE;AACZriC,wCAAM,EAAE;AADI,iCAHQ;AAMtBsiC,4CAAY,EAAE;AACZtiC,wCAAM,EAAE,CADI;AAEZuhC,+CAAa,EAAE,CAFH;AAGZgB,sDAAoB,EAAE,CAHV;AAIZX,2CAAS,EAAE,CAJC;AAKZY,0CAAQ,EAAE,EALE;AAMZP,mDAAiB,EAAE,EANP;AAOZD,oDAAkB,EAAE;AAPR;AANQ,+BAAxB;;;;;;;AAkBkB,qCAAM,OAAI,CAAClmC,GAAL,CAAS2oB,yBAAT,CAAmClkB,OAAO,CAAC7G,EAA3C,CAAN;;;AAAZgrB,uC;;AACN,kCAAIA,SAAS,CAACtnB,MAAd,EAAsB;AACpB;AACA,oCAAIsnB,SAAS,CAACtnB,MAAV,CAAiBunB,YAAjB,IAAiCD,SAAS,CAACtnB,MAAV,CAAiBunB,YAAjB,IAAiC,IAAtE,EAA4E;AAC1E,sCAAID,SAAS,CAACtnB,MAAV,CAAiBunB,YAAjB,CAA8BC,IAA9B,IAAsCF,SAAS,CAACtnB,MAAV,CAAiBunB,YAAjB,CAA8BC,IAA9B,IAAsC,cAAhF,EAAgG;AAC9F;AACA;AACA,2CAAI,CAACsc,uBAAL,CAA6B3/B,IAA7B,CAAkChB,OAAlC;AACD,mCAJD,MAIO;AACL,2CAAI,CAAC4gC,gBAAL,CAAsB5/B,IAAtB,CAA2BhB,OAA3B;AACD;AACF,iCARD,MAQO;AACL,yCAAI,CAAC4gC,gBAAL,CAAsB5/B,IAAtB,CAA2BhB,OAA3B;AACD;AACF,+BAbD,MAaO;AACL,uCAAI,CAAC4gC,gBAAL,CAAsB5/B,IAAtB,CAA2BhB,OAA3B;AACD;;;;;;;;;kCArCiB,KAAKqC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwC3B,yBAAK6/B,WAAL,G,CACA;AACA;;;;;;;;;AACD;;;sCAEmB;;;;;;;;;;;;;;kCACA,KAAKpkB,a;;;;;;;;AAAdqkB,yB;AACPA,yBAAK,CAACJ,YAAN,CAAmBtiC,MAAnB,GAA4B,CAA5B;AACA0iC,yBAAK,CAACJ,YAAN,CAAmBx5B,IAAnB,GAA0B,EAA1B;AACA45B,yBAAK,CAACJ,YAAN,CAAmBf,aAAnB,GAAmC,CAAnC;AACAmB,yBAAK,CAACJ,YAAN,CAAmBC,oBAAnB,GAA0C,CAA1C;AACAG,yBAAK,CAACJ,YAAN,CAAmBV,SAAnB,GAA+B,CAA/B;AACAc,yBAAK,CAACJ,YAAN,CAAmBE,QAAnB,GAA8B,EAA9B;AACAE,yBAAK,CAACJ,YAAN,CAAmBL,iBAAnB,GAAuC,EAAvC;AACAS,yBAAK,CAACJ,YAAN,CAAmBN,kBAAnB,GAAwC,CAAxC;AACAU,yBAAK,CAACL,YAAN,CAAmBriC,MAAnB,GAA4B,CAA5B;;AAE6B,2BAAM,KAAKlE,GAAL,CAAS6mC,kBAAT,CAA4BD,KAAK,CAACniC,OAAN,CAAc7G,EAA1C,CAAN;;;AAAvBkpC,wC;;AACN,wBAAIA,oBAAoB,CAACxlC,MAAzB,EAAiC;AAC/B,0BAAIwlC,oBAAoB,CAACxlC,MAArB,CAA4BylC,cAA5B,IAA8C,IAAlD,EAAwD;AACtD;AACAH,6BAAK,CAACJ,YAAN,CAAmBtiC,MAAnB,GAA4B,CAA5B;AACA0iC,6BAAK,CAACJ,YAAN,CAAmBx5B,IAAnB,GAA0B85B,oBAAoB,CAACxlC,MAA/C;AACAslC,6BAAK,CAACJ,YAAN,CAAmBf,aAAnB,GAAmC,CAAnC;AACD,uBALD,MAKO;AACL;AACAmB,6BAAK,CAACJ,YAAN,CAAmBtiC,MAAnB,GAA4B,CAAC,CAA7B;AAED;AACF;;;AACmC,2BAAM,KAAKlE,GAAL,CAASgnC,sBAAT,CAAgCJ,KAAK,CAACniC,OAAN,CAAc7G,EAA9C,CAAN;;;AAA9BqpC,+C;;AACN,wBAAIA,2BAA2B,CAAC3lC,MAAhC,EAAwC;AACtC;AACAslC,2BAAK,CAACL,YAAN,CAAmBriC,MAAnB,GAA4B,CAA5B;AACA0iC,2BAAK,CAACL,YAAN,CAAmBv5B,IAAnB,GAA0Bi6B,2BAA2B,CAAC3lC,MAAtD,CAHsC,CAItC;AACD,qBALD,MAKO;AACL;AACAslC,2BAAK,CAACL,YAAN,CAAmBriC,MAAnB,GAA4B,CAAC,CAA7B;AAED,qB,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH;;;wCAEqB;;;;;;;;;;AACI,2BAAM,KAAKlE,GAAL,CAAS2rB,aAAT,EAAN;;;AAAlBC,mC;;yBACFA,eAAe,CAACtqB,M;;;;;AACZmhB,8B,GAAamJ,eAAe,CAACtqB,MAAhB,CAAuBmhB,U;AACtCoJ,qC,GAAoB,E;;AACxB,yBAASC,GAAT,IAAgBrJ,UAAhB,EAA4B;AAC1B;AACAoJ,uCAAiB,CAACpmB,IAAlB,CAAuB;AACrB,mCAAYqmB,GADS;AAErB,wCAAgBrJ,UAAU,CAACqJ,GAAD,CAAV,CAAgBC,YAFX;AAGrB,4CAAoBtJ,UAAU,CAACqJ,GAAD,CAAV,CAAgBE,gBAHf;AAIrB,0CAAkBvJ,UAAU,CAACqJ,GAAD,CAAV,CAAgBG,cAJb;AAKrB,yCAAiBxJ,UAAU,CAACqJ,GAAD,CAAV,CAAgBI,aALZ;AAMrB,4CAAoBzJ,UAAU,CAACqJ,GAAD,CAAV,CAAgBK,gBANf;AAOrB,2CAAmB1J,UAAU,CAACqJ,GAAD,CAAV,CAAgBM,eAPd;AAQrB,wCAAgB3J,UAAU,CAACqJ,GAAD,CAAV,CAAgBO,YARX;AASrB,uCAAe5J,UAAU,CAACqJ,GAAD,CAAV,CAAgBQ;AATV,uBAAvB;AAWD;;AACDT,qCAAiB,CAACxP,IAAlB,CAAuB,KAAK6qB,iBAA5B;AACA,yBAAKzkB,UAAL,GAAkBoJ,iBAAlB;wDACO,I;;;wDAEF,K;;;;;;;;;AAER;;;0CAEkB3a,C,EAAGoL,C,EAAC;AACrB;;;;;;;AAOA,iBAAOA,CAAC,CAACgQ,WAAF,GAAgBpb,CAAC,CAACob,WAAlB,IAAiChQ,CAAC,CAAC+P,YAAF,GAAiBnb,CAAC,CAACmb,YAA3D;AACD;;;oCAEW;AACV,eAAKuZ,YAAL,GAAoB,CAApB;AACA,eAAKH,aAAL,GAAqB,CAArB;AACA,eAAKE,oBAAL,GAA4B,CAA5B;AACA,eAAKE,qBAAL,GAA6B,CAA7B;AACA,eAAKC,SAAL,GAAiB,CAAjB;AACA,eAAKC,QAAL,GAAgB,EAAhB;AACA,eAAKC,kBAAL,GAA0B,CAA1B;AACA,eAAKC,mBAAL,GAA2B,CAA3B;AACA,eAAKC,kBAAL,GAA0B,CAA1B;AACA,eAAKC,iBAAL,GAAyB,EAAzB;AACD;;;oCAEiB;;;;;;;;;yBACZ,KAAK3mC,aAAL,CAAmByS,cAAnB,E;;;;;wDACE,KAAKtS,aAAL,CAAmBuO,WAAnB,CAA+B,qBAA/B,C;;;AAEN,yBAAK03B,YAAL,GAAoB,CAApB;AACML,8B,GAAa,KAAKD,UAAL,CAAgBv3B,KAAhB,CAAsBw3B,U;;AAEZ,2BAAM,KAAKvlC,GAAL,CAAS6mC,kBAAT,CAA4BtB,UAA5B,CAAN;;;AAAvBuB,wC;;AAEN,wBAAIA,oBAAoB,CAACxlC,MAAzB,EAAiC;AAC/B,0BAAIwlC,oBAAoB,CAACxlC,MAArB,CAA4BylC,cAA5B,IAA8C,IAAlD,EAAwD;AACtD;AACA,6BAAKtB,aAAL,GAAqB,CAArB;AACA,6BAAKW,YAAL,GAAoBU,oBAAoB,CAACxlC,MAAzC;AACA,6BAAKokC,iBAAL,GAAyBoB,oBAAoB,CAACxlC,MAArB,CAA4BokC,iBAArD;AACD,uBALD,MAKO;AACL,6BAAKD,aAAL,GAAqB,CAArB;AACA,6BAAKE,oBAAL,GAA4B,CAA5B;AACD;AACF;;AAED,yBAAKE,qBAAL,GAA6B,CAA7B;;;;;;;;;AAED;;;kCAEeN,U,EAAY;;;;;;;;;yBACtB,KAAK/lC,aAAL,CAAmByS,cAAnB,E;;;;;wDACE,KAAKtS,aAAL,CAAmBuO,WAAnB,CAA+B,qBAA/B,C;;;AAEF04B,yB,GAAQ,KAAKrkB,aAAL,CAAmBzS,IAAnB,CAAwB,UAAA7R,CAAC;AAAA,6BAAIA,CAAC,CAACwG,OAAF,CAAU7G,EAAV,KAAiB2nC,UAArB;AAAA,qBAAzB,C;AACZqB,yBAAK,CAACJ,YAAN,CAAmBV,SAAnB,GAA+B,CAA/B;AACAc,yBAAK,CAACJ,YAAN,CAAmBE,QAAnB,GAA8B,EAA9B;AACAE,yBAAK,CAACJ,YAAN,CAAmBf,aAAnB,GAAmC,CAAnC;AACAmB,yBAAK,CAACJ,YAAN,CAAmBC,oBAAnB,GAA0C,CAA1C;AAEM5yB,8B,GAAa,KAAKyxB,UAAL,CAAgBv3B,KAAhB,CAAsB8F,U,EACzC;AACA;;;AAC6B,2BAAM,KAAK7T,GAAL,CAAS6mC,kBAAT,CAA4BtB,UAA5B,CAAN;;;AAAvBuB,wC;;yBAEFA,oBAAoB,CAACxlC,M;;;;;AACjB6lC,mC,GAAkBL,oBAAoB,CAACxlC,M;;0BACzC6lC,eAAe,CAACJ,cAAhB,IAAkC,I;;;;;;AACZ,2BAAM,KAAK/mC,GAAL,CAASonC,kBAAT,CAA4B7B,UAA5B,EAAuC1xB,UAAvC,EAAkDszB,eAAe,CAACE,gBAAlE,EAAmFF,eAAe,CAACG,cAAnG,EAAkHH,eAAe,CAACI,iBAAlI,EAAoJJ,eAAe,CAACzB,iBAApK,CAAN;;;AAAlB8B,mC;;wBAGDA,eAAe,CAAClmC,M;;;;;AACnBslC,yBAAK,CAACJ,YAAN,CAAmBC,oBAAnB,GAA0C,CAA1C;AACAG,yBAAK,CAACJ,YAAN,CAAmBV,SAAnB,GAA+B,CAA/B;AACAc,yBAAK,CAACJ,YAAN,CAAmBE,QAAnB,GAA8B,qDAA9B;AACAE,yBAAK,CAACJ,YAAN,CAAmBf,aAAnB,GAAmC,CAAnC;;;;;AAGoB,2BAAM,KAAKjmC,aAAL,CAAmBu7B,gBAAnB,CAAoCwK,UAApC,CAAN;;;AAAhBvN,iC;;AAGoB,2BAAM,KAAKqB,YAAL,CAAkBoO,mBAAlB,CAAsCD,eAAe,CAAClmC,MAAtD,EAA6D02B,aAAa,CAACvjB,OAA3E,CAAN;;;AAApBizB,qC;;wBACDA,iBAAiB,CAACpmC,M;;;;;AACrBslC,yBAAK,CAACJ,YAAN,CAAmBC,oBAAnB,GAA0C,CAA1C;AACAG,yBAAK,CAACJ,YAAN,CAAmBV,SAAnB,GAA+B,CAA/B;AACAc,yBAAK,CAACJ,YAAN,CAAmBE,QAAnB,GAA8B,qCAAqCgB,iBAAiB,CAAC9iC,KAAlB,CAAwB8G,OAA7D,GAAuE,GAArG;AACAk7B,yBAAK,CAACJ,YAAN,CAAmBf,aAAnB,GAAmC,CAAnC;;;;AAGFmB,yBAAK,CAACJ,YAAN,CAAmBL,iBAAnB,GAAuCuB,iBAAiB,CAACpmC,MAAzD;AACAslC,yBAAK,CAACJ,YAAN,CAAmBC,oBAAnB,GAA0C,CAA1C;AACAG,yBAAK,CAACJ,YAAN,CAAmBN,kBAAnB,GAAwC,CAAxC,C,CAEA;;;;;;AAEAU,yBAAK,CAACJ,YAAN,CAAmBC,oBAAnB,GAA0C,CAA1C;AACAG,yBAAK,CAACJ,YAAN,CAAmBV,SAAnB,GAA+B,CAA/B;AACAc,yBAAK,CAACJ,YAAN,CAAmBE,QAAnB,GAA8B,qDAA9B;;;;;;;;;;;;AAML;;;wCAEqB;;;;;;;;;AAEdlB,4B,GAAW,KAAKF,UAAL,CAAgBv3B,KAAhB,CAAsBy3B,Q,EACvC;;;AAC6B,2BAAM,KAAKxlC,GAAL,CAAS2nC,4BAAT,CAAsCnC,QAAtC,CAAN;;;AAAvBoC,wC;AACN;AACMrC,8B,GAAa,KAAKD,UAAL,CAAgBv3B,KAAhB,CAAsBw3B,U;;AACnB,2BAAM,KAAK/lC,aAAL,CAAmBu7B,gBAAnB,CAAoCwK,UAApC,CAAN;;;AAAhBvN,iC;;AACmB,2BAAM,KAAKqB,YAAL,CAAkBoO,mBAAlB,CAAsCG,oBAAoB,CAACtmC,MAA3D,EAAkE02B,aAAa,CAACvjB,OAAhF,CAAN;;;AAAnBozB,oC;;;;;;;;;AAEP;;;;;;;uBA7QU1C,qB,EAAqB,8I,EAAA,wI,EAAA,mJ,EAAA,0J,EAAA,+H;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,e;AAAA,a;AAAA,yhK;AAAA;AAAA;ADblC;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAgB;;AAAS;;AAC3B;;AACF;;AACA;;AACE;;AAAkG;AAAA,mBAAS,IAAAwB,WAAA,EAAT;AAAsB,WAAtB;;AAChG;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAGE;;AACE;;AAGE;;AAEE;;AACE;;AAAqE;;AAAa;;AAClF;;AAA4D;;AAAM;;AAClE;;AAA8D;;AAAU;;AACxE;;AAA0E;;AAAM;;AAChF;;AAA+E;;AAAa;;AAC5F;;AAAyF;;AAAI;;AAC/F;;AAGA;;AAOA;;AAaA;;AAoDF;;AAEF;;AACF;;AAEF;;AACF;;AAGA;;AAgHA;;AAkHA;;;;AAnTuE;;AAAA;;AAOC;;AAAA;;AAaD;;AAAA;;AA6DlE;;AAAA;;AAgHA;;AAAA;;AAkHA;;AAAA;;;;;;;;;;sECtVQxB,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT1jC,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqG5B;;AACE;;AACE;;AACA;;AACE;;AAA6B;;AAAU;;AACzC;;AACA;;AACA;;AACA;;AACE;;AAA6B;;AAAS;;AACxC;;AACF;;AACA;;AACE;;AAA8C;;;;AAAuC;;AACvF;;AACA;;AACE;;AAA8C;;;;AAAuC;;AACvF;;AACA;;AACE;;AAA8C;;;;AAAuC;;AAAI;;AACzF;;AAA6C;;AAAY;;AAAO;;AAAwB;;AACxF;;AAA6C;;AAAQ;;AAAO;;;;;;;;AAC9D;;AACA;;AACE;;AAA8C;;;;AAAuC;;AAAI;;AACzF;;AAA6C;;AAAY;;AAAO;;AAAwB;;AACxF;;AAA6C;;AAAQ;;AAAO;;;;;;;;AAC9D;;AACA;;AACE;;AAA8C;;;;AAAqC;;AAAI;;AACvF;;AAA6C;;AAAY;;AAAO;;AAAwB;;AACxF;;AAA6C;;AAAQ;;AAAO;;;;;;;;AAC9D;;AACA;;AACI;;AACJ;;AACA;;AACE;;;;;;;;AAAwF;;AAAI;;AAC9F;;AACA;;AACE;;AAA6C;;AAAmB;;AAAQ;;AACxE;;AACA;;AAA6C;;AAAkB;;AAAQ;;AACzE;;AACA;;AACE;;AAA6C;;AAAiB;;AAAQ;;;;AACtE;;AACA;;AAA6C;;AAAgB;;AAAQ;;;;AACvE;;AACF;;;;;;AA/CU;;AAAA;;AAA6E;;AAK7E;;AAAA;;AAA6E;;AAMhF;;AAAA;;AAA2C;;AAAA;;AAG3C;;AAAA;;AAA2C;;AAAA;;AAG3C;;AAAA;;AAA2C;;AAAA;;AACkB;;AAAA;;AACJ;;AAAA;;AAGzD;;AAAA;;AAA2C;;AAAA;;AACkB;;AAAA;;AACJ;;AAAA;;AAGzD;;AAAA;;AAA2C;;AAAA;;AACkB;;AAAA;;AACJ;;AAAA;;AAG1D;;AAAA;;AAGF;;AAAA;;AAGwE;;AAAA;;AAED;;AAAA;;AAGD;;AAAA;;AAED;;AAAA;;;;QCnJlEmmC,e;;;AA4DX,+BACUtoC,aADV,EAEUQ,GAFV,EAGUq5B,YAHV,EAIU15B,aAJV,EAKUsD,KALV,EAK+B;AAAA;;AAJrB,aAAAzD,aAAA,GAAAA,aAAA;AACA,aAAAQ,GAAA,GAAAA,GAAA;AACA,aAAAq5B,YAAA,GAAAA,YAAA;AACA,aAAA15B,aAAA,GAAAA,aAAA;AACA,aAAAsD,KAAA,GAAAA,KAAA;AAhEV,aAAA6D,QAAA,GAAW,KAAKtH,aAAL,CAAmBb,MAAnB,CAA0BmI,QAArC;AAEA,aAAA2b,UAAA,GAAa,EAAb;AAEA,aAAA6iB,UAAA,GAAa,IAAI,wDAAJ,CAAc;AACzBC,oBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAmB,0DAAWl6B,QAA9B,CADa;AAEzBm6B,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAmB,0DAAWn6B,QAA9B;AAFe,SAAd,CAAb;AAKA,aAAA08B,UAAA,GAAa,QAAb;AAEA,aAAAtC,aAAA,GAAgB,CAAhB;AACA,aAAAC,iBAAA,GAAoB,CAApB;AACA,aAAAC,oBAAA,GAAuB,CAAvB;AACA,aAAAC,YAAA,GAAe,CAAf;AACA,aAAAC,qBAAA,GAAwB,CAAxB;AACA,aAAAC,SAAA,GAAY,CAAZ;AACA,aAAAC,QAAA,GAAW,EAAX;AACA,aAAAC,kBAAA,GAAqB,CAArB;AACA,aAAAC,mBAAA,GAAsB,CAAtB;AACA,aAAAC,kBAAA,GAAqB,CAArB;AACA,aAAAC,iBAAA,GAAoB,EAApB;AAEA,aAAAC,YAAA,GAAe,EAAf;AAEA,aAAApC,eAAA,GAAkB,CAAlB;AACA,aAAAC,eAAA,GAAkB;AACnB,oBAAU;AACR,uBAAW,CADH;AAER,wBAAY,kEAFJ;AAGR,0BAAc,kEAHN;AAIR,yBAAa,CAJL;AAKR,oBAAQ,CALA;AAMR,qBAAS,CAND;AAOR,oBAAQ,kEAPA;AAQR,sBAAU;AARF,WADS;AAWnB,oBAAU,IAXS;AAYnB,kBAAQ;AACN,uBAAW,CADL;AAEN,qBAAS,EAFH;AAIN,sBAAU,EAJJ;AAMN,yBAAa,kEANP;AAON,qBAAS,CAPH;AAQN,oBAAQ;AARF,WAZW;AAsBnB,sBAAY,EAtBO;AAuBnB,4BAAkB,CAvBC;AAwBnB,sBAAY,CAxBO;AAyBnB,4BAAkB,CAzBC;AA0BnB,4BAAkB;AA1BC,SAAlB;AA4BA,aAAAC,aAAA,GAAgB,SAAhB;AACA,aAAAC,SAAA,GAAY,CAAZ;AACA,aAAAC,cAAA,GAAiB,CAAjB;AASK;;;;mCAEY;;;;;;;;;;AACf,yBAAKnhC,KAAL,CAAW4Y,GAAX,CAAejb,SAAf,CAAyB,UAACvD,CAAD,EAAK;AAC5B,0BAAI,OAAOA,CAAC,CAAC,CAAD,CAAR,IAAe,WAAnB,EAAgC;AAC9B;AACA,4BAAIA,CAAC,CAAC,CAAD,CAAD,CAAK4B,IAAL,IAAa,OAAjB,EAA0B;AACxB,iCAAI,CAAC8oC,UAAL,GAAkB1qC,CAAC,CAAC,CAAD,CAAD,CAAK4B,IAAvB;AACD,yBAFD,MAEO;AACL,iCAAI,CAAC8oC,UAAL,GAAkB,QAAlB;AACD;AACF;AACF,qBATD,E,CAUA;;AACA,yBAAKpc,aAAL;;;;;;;;;AACD;;;wCAEqB;;;;;;;;;;AACG,2BAAM,KAAK3rB,GAAL,CAASk1B,eAAT,EAAN;;;AAAjBC,kC;;AACR,wBAAI,CAACA,cAAc,CAACvwB,KAApB,EAA2B;AACvB,2BAAKo/B,eAAL,GAAuB7O,cAAc,CAAC7zB,MAAf,CAAsB8zB,MAAtB,CAA6BvgB,MAApD;AACA,2BAAKovB,eAAL,GAAuB9O,cAAc,CAAC7zB,MAAtC;AACH;;AACD,yBAAK6iC,SAAL,GAAiB,CAAjB;AACA,yBAAKC,cAAL,GAAsB,CAAtB;;AAC0B,2BAAM,KAAKpkC,GAAL,CAAS2rB,aAAT,EAAN;;;AAAlBC,mC;;AACN,wBAAIA,eAAe,CAACtqB,MAApB,EAA4B;AAC7B,2BAAK6iC,SAAL,GAAiBvY,eAAe,CAACtqB,MAAhB,CAAuB0tB,UAAxC;AACA,2BAAKoV,cAAL,GAAsBxY,eAAe,CAACtqB,MAAhB,CAAuBkjC,gBAA7C;AACS/hB,gCAHoB,GAGPmJ,eAAe,CAACtqB,MAAhB,CAAuBmhB,UAHhB;AAItBoJ,uCAJsB,GAIF,EAJE;;AAK1B,2BAASC,GAAT,IAAgBrJ,UAAhB,EAA4B;AAC1B;AACAoJ,yCAAiB,CAACpmB,IAAlB,CAAuB;AACrB,qCAAYqmB,GADS;AAErB,0CAAgBrJ,UAAU,CAACqJ,GAAD,CAAV,CAAgBC,YAFX;AAGrB,8CAAoBtJ,UAAU,CAACqJ,GAAD,CAAV,CAAgBE,gBAHf;AAIrB,4CAAkBvJ,UAAU,CAACqJ,GAAD,CAAV,CAAgBG,cAJb;AAKrB,2CAAiBxJ,UAAU,CAACqJ,GAAD,CAAV,CAAgBI,aALZ;AAMrB,8CAAoBzJ,UAAU,CAACqJ,GAAD,CAAV,CAAgBK,gBANf;AAOrB,6CAAmB1J,UAAU,CAACqJ,GAAD,CAAV,CAAgBM,eAPd;AAQrB,0CAAgB3J,UAAU,CAACqJ,GAAD,CAAV,CAAgBO,YARX;AASrB,yCAAe5J,UAAU,CAACqJ,GAAD,CAAV,CAAgBQ;AATV,yBAAvB;AAWD;;AACDT,uCAAiB,CAACxP,IAAlB,CAAuB,KAAK6qB,iBAA5B;AACA,2BAAKzkB,UAAL,GAAkBoJ,iBAAlB;AACD,qB,CACD;;;;;;;;;;AACD;;;0CAEkB3a,C,EAAGoL,C,EAAC;AACrB;;;;;;;AAOA,iBAAOA,CAAC,CAACgQ,WAAF,GAAgBpb,CAAC,CAACob,WAAlB,IAAiChQ,CAAC,CAAC+P,YAAF,GAAiBnb,CAAC,CAACmb,YAA3D;AACD;;;oCAEW;AACV,eAAKuZ,YAAL,GAAoB,CAApB;AACA,eAAKH,aAAL,GAAqB,CAArB;AACA,eAAKE,oBAAL,GAA4B,CAA5B;AACA,eAAKE,qBAAL,GAA6B,CAA7B;AACA,eAAKC,SAAL,GAAiB,CAAjB;AACA,eAAKC,QAAL,GAAgB,EAAhB;AACA,eAAKC,kBAAL,GAA0B,CAA1B;AACA,eAAKC,mBAAL,GAA2B,CAA3B;AACA,eAAKC,kBAAL,GAA0B,CAA1B;AACA,eAAKC,iBAAL,GAAyB,EAAzB;AACD;;;oCAEiB;;;;;;;;;yBACZ,KAAK3mC,aAAL,CAAmByS,cAAnB,E;;;;;wDACE,KAAKtS,aAAL,CAAmBuO,WAAnB,CAA+B,qBAA/B,C;;;AAEN,yBAAK03B,YAAL,GAAoB,CAApB;AACML,8B,GAAa,KAAKD,UAAL,CAAgBv3B,KAAhB,CAAsBw3B,U;;AAEZ,2BAAM,KAAKvlC,GAAL,CAAS6mC,kBAAT,CAA4BtB,UAA5B,CAAN;;;AAAvBuB,wC;;AAEN,wBAAIA,oBAAoB,CAACxlC,MAAzB,EAAiC;AAC/B,0BAAIwlC,oBAAoB,CAACxlC,MAArB,CAA4BylC,cAA5B,IAA8C,IAAlD,EAAwD;AACtD;AACA,6BAAKtB,aAAL,GAAqB,CAArB;AACA,6BAAKW,YAAL,GAAoBU,oBAAoB,CAACxlC,MAAzC;AACA,6BAAKokC,iBAAL,GAAyBoB,oBAAoB,CAACxlC,MAArB,CAA4BokC,iBAArD;AACD,uBALD,MAKO;AACL,6BAAKD,aAAL,GAAqB,CAArB;AACA,6BAAKE,oBAAL,GAA4B,CAA5B;AACD;AACF;;AAED,yBAAKE,qBAAL,GAA6B,CAA7B;;;;;;;;;AAED;;;oCAEiB;;;;;;;;;yBACZ,KAAKrmC,aAAL,CAAmByS,cAAnB,E;;;;;wDACE,KAAKtS,aAAL,CAAmBuO,WAAnB,CAA+B,qBAA/B,C;;;AAEN,yBAAKu3B,aAAL,GAAqB,CAArB;AACA,yBAAKI,qBAAL,GAA6B,CAA7B;AACMN,8B,GAAa,KAAKD,UAAL,CAAgBv3B,KAAhB,CAAsBw3B,U;;AACZ,2BAAM,KAAKvlC,GAAL,CAAS6mC,kBAAT,CAA4BtB,UAA5B,CAAN;;;AAAvBuB,wC;AAEN,yBAAKd,kBAAL,GAA0B,CAA1B;;yBACIc,oBAAoB,CAACxlC,M;;;;;AACjB6lC,mC,GAAkBL,oBAAoB,CAACxlC,M;;0BACzC6lC,eAAe,CAACJ,cAAhB,IAAkC,I;;;;;;AAEZ,2BAAM,KAAK/mC,GAAL,CAASonC,kBAAT,CAA4B7B,UAA5B,EAAuCA,UAAvC,EAAkD4B,eAAe,CAACE,gBAAlE,EAAmFF,eAAe,CAACG,cAAnG,EAAkHH,eAAe,CAACI,iBAAlI,EAAoJJ,eAAe,CAACzB,iBAApK,CAAN;;;AAAlB8B,mC;;wBAEDA,eAAe,CAAClmC,M;;;;;AACnB,yBAAK0kC,kBAAL,GAA0B,CAA1B;AACA,yBAAKF,SAAL,GAAiB,CAAjB;AACA,yBAAKC,QAAL,GAAgB,qDAAhB;AACA,yBAAKF,qBAAL,GAA6B,CAA7B;;;;;AAGoB,2BAAM,KAAKrmC,aAAL,CAAmBu7B,gBAAnB,CAAoCwK,UAApC,CAAN;;;AAAhBvN,iC;AACN,yBAAKgO,kBAAL,GAA0B,CAA1B;AACA,yBAAKC,mBAAL,GAA2B,CAA3B;;AACyB,2BAAM,KAAK5M,YAAL,CAAkBoO,mBAAlB,CAAsCD,eAAe,CAAClmC,MAAtD,EAA6D02B,aAAa,CAACvjB,OAA3E,CAAN;;;AAAnBuzB,oC;;wBACDA,gBAAgB,CAAC1mC,M;;;;;AACpB,yBAAK2kC,mBAAL,GAA2B,CAA3B;AACA,yBAAKH,SAAL,GAAiB,CAAjB;AACA,yBAAKC,QAAL,GAAgB,qCAAqCiC,gBAAgB,CAACpjC,KAAjB,CAAuB8G,OAA5D,GAAsE,GAAtF;AACA,yBAAKm6B,qBAAL,GAA6B,CAA7B;;;;AAGF,yBAAKM,iBAAL,GAAyB6B,gBAAgB,CAAC1mC,MAA1C;AACA,yBAAK2kC,mBAAL,GAA2B,CAA3B;AACA,yBAAKC,kBAAL,GAA0B,CAA1B,C,CAEA;;;;;;AAEA,yBAAKJ,SAAL,GAAiB,CAAjB;AACA,yBAAKC,QAAL,GAAgB,qDAAhB;;;AAGJ,yBAAKF,qBAAL,GAA6B,CAA7B;;;;;;;;;AAMD;;;wCAEqB;;;;;;;;;AAEdL,4B,GAAW,KAAKF,UAAL,CAAgBv3B,KAAhB,CAAsBy3B,Q,EACvC;;;AAC6B,2BAAM,KAAKxlC,GAAL,CAAS2nC,4BAAT,CAAsCnC,QAAtC,CAAN;;;AAAvBoC,wC;AACN;AACMrC,8B,GAAa,KAAKD,UAAL,CAAgBv3B,KAAhB,CAAsBw3B,U;;AACnB,2BAAM,KAAK/lC,aAAL,CAAmBu7B,gBAAnB,CAAoCwK,UAApC,CAAN;;;AAAhBvN,iC;;AACmB,2BAAM,KAAKqB,YAAL,CAAkBoO,mBAAlB,CAAsCG,oBAAoB,CAACtmC,MAA3D,EAAkE02B,aAAa,CAACvjB,OAAhF,CAAN;;;AAAnBozB,oC;;;;;;;;;AAEP;;;0CAEiBpD,c,EAAgB;AAClC,cAAMC,OAAO,GAAG,IAAI,mDAAJ,CAAcD,cAAd,CAAhB;;AACA,cAAIC,OAAO,CAACp2B,SAAR,CAAkB,aAAlB,EAAiCgD,aAAjC,CAA+C,CAA/C,CAAJ,EAAwD;AACvD,mBAAOozB,OAAO,CAACp2B,SAAR,CAAkB,aAAlB,EAAiCq2B,QAAjC,CAA0C,CAA1C,IAA+C,IAAtD;AACA;;AACD,cAAID,OAAO,CAACp2B,SAAR,CAAkB,UAAlB,EAA8BgD,aAA9B,CAA4C,CAA5C,CAAJ,EAAqD;AACpD,mBAAOozB,OAAO,CAACp2B,SAAR,CAAkB,UAAlB,EAA8Bq2B,QAA9B,CAAuC,CAAvC,IAA4C,IAAnD;AACA;;AACD,cAAID,OAAO,CAACp2B,SAAR,CAAkB,OAAlB,EAA2BgD,aAA3B,CAAyC,CAAzC,CAAJ,EAAkD;AACjD,mBAAOozB,OAAO,CAACp2B,SAAR,CAAkB,OAAlB,EAA2Bq2B,QAA3B,CAAoC,CAApC,IAAyC,IAAhD;AACA;;AACD,cAAID,OAAO,CAACp2B,SAAR,CAAkB,IAAlB,EAAwBgD,aAAxB,CAAsC,CAAtC,CAAJ,EAA+C;AAC9C,mBAAOozB,OAAO,CAACp2B,SAAR,CAAkB,IAAlB,EAAwBq2B,QAAxB,CAAiC,CAAjC,IAAsC,IAA7C;AACA;;AACD,iBAAOD,OAAO,CAACC,QAAR,CAAiB,CAAjB,CAAP;AACA;;;;;;;uBArPWmD,e,EAAe,8I,EAAA,wI,EAAA,mJ,EAAA,0J,EAAA,+H;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,c;AAAA,syF;AAAA;AAAA;ADd5B;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAgB;;AAAa;;AAC/B;;AACF;;AACA;;AAKA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAiB;;AACvC;;AACA;;AACE;;AAAoB;;;;AAA+C;;AACrE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAgB;;AACtC;;AACA;;AACE;;AAAoB;;;;AAAwC;;AAC9D;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAU;;AAChC;;AACA;;AACE;;AAAkC;;AAAuD;;AAC3F;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAuB;;AAC7C;;AACA;;AACE;;AAAoB;;;;;;AAAsD;;AAC5E;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACI;;AACI;;AACE;;AAEI;;AAAgB;;AAAyC;;AAAmB;;AAAO;;AACnF;;AAEA;;AACE;;AAAI;;AAA8B;;AAClC;;AAAI;;AAA6B;;AACjC;;AAAI;;AAAyH;;AAC/H;;AAGJ;;AACF;;AACJ;;AACJ;;AACA;;AACE;;AACE;;AAGE;;AACE;;AAA4D;;AAAM;;AAClE;;AAAqE;;AAAa;;AAClF;;AAA0E;;AAAU;;AACpF;;AAA0E;;AAAM;;AAChF;;AAA+F;;AAAa;;AAC5G;;AAAyF;;AAAI;;AAC/F;;AAEA;;AAkDF;;AAGF;;AACF;;;;AArIgC;;AAAA;;AAaA;;AAAA;;AAac;;AAAA;;AAad;;AAAA;;AAwCmC;;AAAA;;;;;;;;;;sECpGtDA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTrmC,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACwBV;;;;;;AAAwD;;;;;;AACxD;;;;;;AAA0D;;;;;;AAI1D;;;;;;AACA;;;;;;;;AAQA;;AACE;;AACE;;;;AAAkD;;AAAG;AAAA;;AAAA;;AAAA,uCAAuB,CAAvB;AAAwB,SAAxB;;AAA0B;;;;AAAiD;;AAAI;;AACtI;;AACF;;;;AAFI;;AAAA;;AAA+E;;AAAA;;;;;;;;AAlBzF;;AACE;;AACI;;AACA;;AACA;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAiG;;AAAyB;;AACjI;;AACA;;AACI;;AACA;;AACA;;;;AAAsI;;;;AAA2C;;AACrL;;AACA;;AACI;;AAAgD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAA4G;;AAChK;;AACA;;AACI;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAqJ;;AACxJ;;;;AAKJ;;AACF;;;;;;;;AAtBgG;;AAEhE;;AAAA;;AACC;;AAAA;;AACa;;AAAA;;AAA4D;;AAAA;;AAG9F;;AAAA;;AACA;;AAAA;;AAC4D;;AAAA;;AAA/D;;AAAmI;;AAAA;;AAG5C;;AAAA;;AAA1E;;AAGqC;;AAAA;;AAChD;;AAAA;;;;;;;;AAajB;;AAEE;;AAEE;;AACE;;AACE;;AACI;;;;AAAkD;;AAAG;AAAA;;AAAA;;AAAA,uCAAuB,CAAvB;AAAwB,SAAxB;;AAA0B;;;;AAAiD;;AAAI;;AACxI;;AACF;;AACF;;AACF;;AACF;;;;AALY;;AAAA;;AAA+E;;AAAA;;;;;;;;AAvEjG;;AACI;;AAIE;;AAGE;;AACE;;AAAyE;AAAA;;AAAA;;AAAA,uCAAuB,CAAvB;AAAwB,SAAxB;;AACvE;;;;AACF;;AACA;;AACI;;AACJ;;AACA;;AACE;;AAAI;;;;AAAmE;;AACzE;;AACF;;AAEF;;AAIA;;AAEI;;AAEE;;AACE;;AAA4D;;;;AAA6C;;AACzG;;AAAqE;;;;AAAmD;;AACxH;;AACA;;AAAkE;;;;AAAgD;;AACpH;;AAEA;;;;AAwBF;;AAEJ;;AAGA;;;;AAeA;;AAEE;;AACI;;AACE;;AAAI;;;;AAAkE;;AACxE;;AACJ;;AACF;;AAIJ;;AACF;;;;;;AAjFY;;AAAA;;AAMI;;AAAA;;AAa0D;;AAAA;;AACS;;AAAA;;AAEH;;AAAA;;AAG7B;;AAAA;;AA6BpB;;AAAA;;AAmBb;;AAAA;;;;;;;;AAalB;;AACI;;AAII;;AAGE;;AACE;;AACE;;AAAI;;;;AAAkE;;AACxE;;AACF;;AAEA;;AACE;;AAEQ;;AACI;;AACE;;AAAsE;;;;AAAmD;;AACzH;;AACE;;AACE;;AAAsJ;AAAA;;AAAA;;AAAA;AAAA;;;;AAAtJ;;AACF;;AAAM;;AACR;;AACA;;AACE;;AAAsE;;;;AAA6C;;AACnH;;AACE;;AACI;;AAAiJ;AAAA;;AAAA;;AAAA;AAAA,WAAwB,aAAxB,EAAwB;AAAA;;AAAA;;AAAA;AAAA,SAAxB;;;;AAAjJ;;AACJ;;AAAM;;AACR;;AACA;;AACE;;AAAsE;;;;AAA6D;;AACnI;;AACE;;AACE;;AAA4E;AAAA;;AAAA;;AAAA;AAAA;;AAA5E;;AACA;;;;AACE;;;;AACF;;AACF;;AACA;;AACE;;AAA0E;AAAA;;AAAA;;AAAA;AAAA;;AAA1E;;AACA;;;;AACE;;;;AACF;;AACF;;AACF;;AACF;;AACA;;AACI;;AACA;;AACE;;AAAyD;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;;;AAA0B;;AAC9G;;AACA;;AACE;;AAA8C;AAAA;;AAAA;;AAAA;AAAA;;AAAkC;;;;AAAgE;;AAClJ;;AACJ;;AACF;;AACR;;AACN;;AAEH;;AAOL;;AACJ;;;;;;AA5DkB;;AAAA;;AAS8E;;AAAA;;AAGM;;AAAA;;AAA8E;;AAIlF;;AAAA;;AAGQ;;AAAA;;AAAyE;;AAI/E;;AAAA;;AAGU;;AAAA;;AACxB;;AAAA;;AAClD;;AAAA;;AAIwE;;AAAA;;AACxB;;AAAA;;AAChD;;AAAA;;AAQgF;;AAAA;;AAGF;;AAAA;;;;QCzIrGsmC,8B;;;AA4BX,8CACQjoC,GADR,EAEQuI,kBAFR,EAGQ/I,aAHR,EAIQ2W,mBAJR,EAKQghB,UALR,EAMQv4B,MANR,EAOQspC,OAPR,EAQUv/B,KARV,EAQiC;AAAA;;AAAA;;AAPzB,aAAA3I,GAAA,GAAAA,GAAA;AACA,aAAAuI,kBAAA,GAAAA,kBAAA;AACA,aAAA/I,aAAA,GAAAA,aAAA;AACA,aAAA2W,mBAAA,GAAAA,mBAAA;AACA,aAAAghB,UAAA,GAAAA,UAAA;AACA,aAAAv4B,MAAA,GAAAA,MAAA;AACA,aAAAspC,OAAA,GAAAA,OAAA;AACE,aAAAv/B,KAAA,GAAAA,KAAA;AAnCT,aAAAiQ,WAAA,GAAc,CAAd;AAEF,aAAAsG,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAlU,IAAA,GAAO,EAAP;AACA,aAAAmU,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACE,aAAAC,IAAA,GAAO,EAAP;AAEA,aAAA2oB,aAAA,GAAgB,EAAhB;AACF,aAAAC,UAAA,GAAa,EAAb;AACA,aAAAC,aAAA,GAAgB,KAAhB;AACA,aAAAC,UAAA,GAAa,KAAb;AAEA,aAAAjU,UAAA,GAAa,EAAb,CAmBkC,CAlBjC;;AACD,aAAAkU,gBAAA,GAAmB,KAAKpR,UAAL,CAAgBoR,gBAAhB,CAAiCC,IAAjC,CAClB,2DAAI,UAAAC,IAAI,EAAI;AACX,iBAAOA,IAAI,CAAC5qC,GAAL,CAAS,UAAA22B,GAAG,EAAI;AACtBA,eAAG,CAACQ,MAAJ,GAAa,OAAI,CAACX,UAAL,CAAgBqU,OAAhB,CAAwBlU,GAAG,CAAC52B,EAA5B,MAAoC,CAAC,CAAlD;AACA,mBAAO42B,GAAP;AACA,WAHM,CAAP;AAIA,SALD,CADkB,CAAnB;AAkBM;;;;mCAEY;;;;;;;;;;AACf,yBAAK2C,UAAL,CAAgBwR,sBAAhB;;AACgB,2BAAM,KAAKC,wBAAL,EAAN;;;AAAlB,yBAAKvU,U;AACL,yBAAK8C,UAAL,CAAgBoR,gBAAhB,CAAiC5a,IAAjC,CAAsC,KAAKwJ,UAAL,CAAgBhD,eAAtD,E,CAAwE;;AACxE,yBAAKxrB,KAAL,CAAW4X,YAAX,CAAwB3f,SAAxB,CAAkC,UAACC,KAAD,EAA4B;AAC7D,6BAAI,CAACyf,QAAL;AACA,qBAFD;AAGE,yBAAKA,QAAL;;;;;;;;;AACD;;;mCAEU;AAAA;;AACX,eAAK3X,KAAL,CAAWmF,GAAX,CAAe,2BAAf,EAA4ClN,SAA5C,CAAsD,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAAC4O,IAAL,GAAY5O,GAAZ;AAAkB,WAA3F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,2BAAf,EAA4ClN,SAA5C,CAAsD,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAAC6O,IAAL,GAAY7O,GAAZ;AAAkB,WAA3F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,2BAAf,EAA4ClN,SAA5C,CAAsD,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACrF,IAAL,GAAYqF,GAAZ;AAAkB,WAA3F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,2BAAf,EAA4ClN,SAA5C,CAAsD,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAAC8O,IAAL,GAAY9O,GAAZ;AAAkB,WAA3F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,2BAAf,EAA4ClN,SAA5C,CAAsD,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAAC+O,IAAL,GAAY/O,GAAZ;AAAkB,WAA3F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,2BAAf,EAA4ClN,SAA5C,CAAsD,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACgP,IAAL,GAAYhP,GAAZ;AAAkB,WAA3F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,2BAAf,EAA4ClN,SAA5C,CAAsD,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACiP,IAAL,GAAYjP,GAAZ;AAAkB,WAA3F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,2BAAf,EAA4ClN,SAA5C,CAAsD,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACkP,IAAL,GAAYlP,GAAZ;AAAkB,WAA3F;AACA;;;kCACUmkB,c,EAAgB;AAC1B,eAAK0T,aAAL,GAAqB1T,cAAc,CAAC72B,EAApC;AACA,eAAKwqC,UAAL,GAAkB3T,cAAc,CAAC5pB,IAAjC;AACA,eAAKw9B,aAAL,GAAqB,CAAC,CAAC5T,cAAc,CAACoU,OAAtC;AACA,eAAKP,UAAL,GAAkB,CAAC,CAAC7T,cAAc,CAACqU,IAAnC;AACA,eAAKlwB,WAAL,GAAmB,CAAnB;AACA0oB,oBAAU,CAAC,YAAM;AAChByH,oBAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4C1b,KAA5C;AACA,WAFS,EAEP,GAFO,CAAV;AAGA;;;gDAE6B;;;;;;;;;;0BACzB,CAAC,KAAK6a,aAAN,IAAuB,CAAC,KAAKC,U;;;;;AAC1Ba,qC,GAAoB,KAAK/pB,I;wDACxB,KAAK/I,mBAAL,CAAyB0B,SAAzB,CAAmCoxB,iBAAnC,C;;;AAGR,yBAAKd,aAAL,GAAqB,KAAKA,aAAL,CAAmBpxB,OAAnB,CAA2B,IAA3B,EAAiC,EAAjC,CAArB,C,CAA2D;AAE3D;;;AACc,2BAAM,KAAKmxB,OAAL,CAAagB,qBAAb,CAAmC,KAAKf,aAAxC,CAAN;;;AAAR/3B,yB;;wBACDA,KAAK,CAAC9O,M;;;;;AACJ2nC,sC,GAAoB,KAAK9pB,I;wDACxB,KAAKhJ,mBAAL,CAAyBjI,WAAzB,CAAqC+6B,kBAArC,C;;;;;AAIP,2BAAM,KAAK9R,UAAL,CAAgBgS,kBAAhB,CACL,KAAKhB,aADA,EAEL,KAAKC,UAFA,EAGL,KAAKC,aAHA,EAIL,KAAKC,UAJA,CAAN;;;AAMA,yBAAKnyB,mBAAL,CAAyBwB,WAAzB,CAAqC,KAAK1M,IAA1C;AAEA,yBAAKm+B,YAAL;;;;;;;AAEA,yBAAKjzB,mBAAL,CAAyB0B,SAAzB,CAAmC,KAAKuH,IAAL,cAAgB,eAAI1T,OAApB,CAAnC;;;;;;;;;AAED;;;uCAEc;AACd,eAAK08B,UAAL,GAAkB,EAAlB;AACA,eAAKD,aAAL,GAAqB,EAArB;AACA,eAAKE,aAAL,GAAqB,KAArB;AACA,eAAKC,UAAL,GAAkB,KAAlB;AACA,eAAK1vB,WAAL,GAAmB,CAAnB;AACA;;;+BAEMywB,S,EAAW;AACjB,eAAKlzB,mBAAL,CAAyBwB,WAAzB,CAAqC0xB,SAAS,GAAG,GAAZ,GAAkB,KAAKhqB,IAA5D;AACA;;;mDAEgC;;;;;;;;;;AAC1B8U,mC,GAAkB,E;;AACX,2BAAM,KAAKn0B,GAAL,CAASo0B,qBAAT,EAAN;;;AAAPqU,wB;;yBACFA,IAAI,CAACnnC,M;;;;;;;;;;AACR,uCAAkBmnC,IAAI,CAACnnC,MAAvB,+HAA+B;AAApBkzB,yBAAoB;AAC9BL,qCAAe,CAAC1uB,IAAhB,CAAqB+uB,GAArB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wDAGKL,e;;;;;;;;;AACP;;;6CAE0BkV,S,EAAW;;;;;;;;AACrC,wBAAI;AACH,2BAAKlS,UAAL,CAAgBmS,oBAAhB,CAAqCD,SAArC;AACA,2BAAKlzB,mBAAL,CAAyBwB,WAAzB,CAAqC,KAAK4H,IAA1C;AACA,qBAHD,CAGE,OAAO4C,GAAP,EAAY;AACb,2BAAKhM,mBAAL,CAAyB0B,SAAzB,CAAmC,KAAK2H,IAAL,cAAgB2C,GAAG,CAACzW,OAApB,CAAnC;AACA;;;;;;;;;AACD;;;;;;;uBAnIWu8B,8B,EAA8B,iI,EAAA,kJ,EAAA,uI,EAAA,mJ,EAAA,uJ,EAAA,uH,EAAA,iI,EAAA,qI;AAAA,K;;;YAA9BA,8B;AAA8B,iD;AAAA,c;AAAA,a;AAAA,w2H;AAAA;AAAA;ADf3C;;AACA;;AAgGA;;;;AAhGqG;;AAAA;;AAgGL;;AAAA;;;;;;;;;;sEClFnFA,8B,EAA8B;cAL1C,uDAK0C;eALhC;AACTxmC,kBAAQ,EAAE,4BADD;AAETC,qBAAW,EAAE,yCAFJ;AAGTC,mBAAS,EAAE,CAAC,yCAAD;AAHF,S;AAKgC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC8GlC;;AAAwB;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAExB;;AAAoD;;;;AAAgC;;;;;;AAAhC;;AAAA;;;;;;AACpD;;AAA8D;;;;AAAgC;;;;;;AAAhC;;AAAA;;;;;;AAC9D;;AAA8D;;;;AAA8B;;;;;;AAA9B;;AAAA;;;;;;AAC9D;;AAA8D;;;;AAAgC;;;;;;AAAhC;;AAAA;;;;;;AAC9D;;AAAoD;;;;AAA8B;;;;;;AAA9B;;AAAA;;;;;;AAErD;;;;;;AAAkD;;;;;;AAClD;;;;;;AAAoD;;;;;;AAcrD;;;;;;AAA6C;;;;;;AAC7C;;;;;;AAA+C;;;;;;AAE9C;;AAAwB;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAExB;;AAAoD;;;;AAAgC;;;;;;AAAhC;;AAAA;;;;;;AACpD;;AAA8D;;;;AAAgC;;;;;;AAAhC;;AAAA;;;;;;AAC9D;;AAA8D;;;;AAA8B;;;;;;AAA9B;;AAAA;;;;;;AAC9D;;AAA8D;;;;AAAgC;;;;;;AAAhC;;AAAA;;;;;;AAC9D;;AAAoD;;;;AAA8B;;;;;;AAA9B;;AAAA;;;;;;AAgBrD;;;;AACC;;AAAiC;;;;AAA0C;;AAAQ;;AACpF;;;;AAFqC;;AACH;;AAAA;;;;;;AAElC;;;;AACC;;AAAiC;;;;AAA0C;;AAAQ;;AACpF;;;;AAFoC;;AACF;;AAAA;;;;;;AAElC;;;;AACC;;AAAiC;;;;AAA2C;;AAAQ;;AACrF;;;;AAFuC;;AACL;;AAAA;;;;;;AAElC;;;;AACC;;AAAiC;;;;AAAyC;;AAAQ;;AACnF;;;;AAFqC;;AACH;;AAAA;;;;;;AAElC;;;;AACC;;AAAiC;;;;AAA2C;;AAAQ;;AACrF;;;;AAFoC;;AACF;;AAAA;;;;;;;;AA7FpC;;AACC;;AAEC;;AACC;;AAAuF;;AAAc;;AACtG;;AACA;;AACC;;AACC;;AAA+C;;;;AAAoC;;AACpF;;AACA;;AACC;;AAA+C;;;;AAAoC;;AACpF;;AACA;;AACC;;AAA+C;;;;AAAkC;;AAClF;;AACA;;AACC;;AAA+C;;;;AAAoC;;AACpF;;AACA;;AACC;;AAA+C;;;;AAAoC;;AACpF;;AACD;;AACA;;AACC;;AAAuF;;AAAa;;AAAO;;;;;;AAC5G;;AAEA;;AACC;;AAAuF;;AAAU;;AAClG;;AACA;;AAAiC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAChC;;;;AACC;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACD;;AACA;;AACA;;AACD;;AACA;;AACC;;AAAuF;;AAAY;;AAAO;;;;;;AAC3G;;AAGD;;AAEA;;AACC;;;;;;AACD;;AAEA;;AAAyE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxE;;AACA;;AACA;;;;AACC;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACC;;AAA6C;;AAAa;;AAAQ;;;;;;AACnE;;AACA;;AACC;;AAA6C;;AAAY;;AAAQ;;;;;;AAClE;;AACD;;AACD;;AAEA;;AACC;;;;;;AACD;;AAEA;;AACC;;AAGA;;AAGA;;AAGA;;AAGA;;AAGD;;AACF;;;;;;;;AAxFQ;;AAAA;;AAA4C;;AAAA;;AAG5C;;AAAA;;AAA4C;;AAAA;;AAG5C;;AAAA;;AAA4C;;AAAA;;AAG5C;;AAAA;;AAA4C;;AAAA;;AAG5C;;AAAA;;AAA4C;;AAAA;;AAI2D;;AAAA;;AAOrG;;AAAA;;AACC;;AAAA;;AAEA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEwB;;AAAA;;AACC;;AAAA;;AAG0E;;AAAA;;AAO3G;;AAAA;;AAI0B;;AAAA;;AACC;;AAAA;;AACrB;;AAAA;;AACC;;AAAA;;AAEA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAG6D;;AAAA;;AAGD;;AAAA;;AAMnE;;AAAA;;AAIM;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;AA7FT;;AACC;;AAkGF;;;;;;AAlGwC;;AAAA;;;;;;AAgHxC;;AACC;;AACC;;AAAyB;;;;AAAsD;;AAChF;;AACD;;;;AAF2B;;AAAA;;;;;;AAoCrB;;AACE;;;;;;;;AAGF;;;;;;AAJQ;;AACN;;AAAA;;;;;;AAFH;;AACC;;AAKD;;;;;;AAL8B;;AAAA;;;;;;AAahC;;AAAmD;;AAA8B;;;;;;AAA9B;;AAAA;;;;;;;;AAHrD;;AACC;;AACA;;AACC;;AACA;;AAAsB;;AAAgB;;AACvC;;AACA;;AACC;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6D;;AACjE;;AACD;;;;;;AANqB;;AAAA;;AACG;;AAAA;;;;;;AAYpB;;AACC;;AAA2B;;;;;;AADiC;;AAC5D;;AAAA;;;;;;;;AAqBH;;AAGA;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;;;AACD;;;;AADC;;AAAA;;;;;;AAED;;AACC;;;;AACD;;;;AADC;;AAAA;;;;QC1RO4nC,0B;;;AA+BX,0CACO/pC,aADP,EAEQQ,GAFR,EAGQL,aAHR,EAIQ6+B,QAJR,EAKQ91B,IALR,EAMQ8gC,qBANR,EAOO9pC,QAPP,EAQQiJ,KARR,EASU8gC,MATV,EAS2B;AAAA;;AARpB,aAAAjqC,aAAA,GAAAA,aAAA;AACC,aAAAQ,GAAA,GAAAA,GAAA;AACA,aAAAL,aAAA,GAAAA,aAAA;AACA,aAAA6+B,QAAA,GAAAA,QAAA;AACA,aAAA91B,IAAA,GAAAA,IAAA;AACA,aAAA8gC,qBAAA,GAAAA,qBAAA;AACD,aAAA9pC,QAAA,GAAAA,QAAA;AACC,aAAAiJ,KAAA,GAAAA,KAAA;AACE,aAAA8gC,MAAA,GAAAA,MAAA;AArCV,aAAA3iC,QAAA,GAAW,KAAKtH,aAAL,CAAmBb,MAAnB,CAA0BmI,QAArC;AACD,aAAAnI,MAAA,GAAS,KAAKa,aAAL,CAAmBb,MAA5B;AAEA,aAAA+qC,eAAA,GAAuB,IAAvB;AACA,aAAAC,kBAAA,GAAqB,EAArB;AACA,aAAAC,oBAAA,GAAuB,EAAvB;AAEA,aAAA1qB,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAlU,IAAA,GAAO,EAAP;AACA,aAAAmU,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACG,aAAAC,KAAA,GAAQ,EAAR;AAEF,aAAAmqB,sBAAA,GAAyB,IAAI,oDAAJ,CAAoB,EAApB,CAAzB;AACD,aAAAnS,mBAAA,GAAsB,KAAtB;AACA,aAAAC,uBAAA,GAA0B,EAA1B;AAEA,aAAAmS,sBAAA,GAAyB,EAAzB;AACA,aAAAC,uBAAA,GAA0B,KAA1B;AAEA,aAAAC,gBAAA,GAAmB,EAAnB;AACA,aAAAC,YAAA,GAAe,EAAf;AAYM;;;;mCAEY;;;;;;;;;;AACjB,yBAAKT,qBAAL,CAA2Bb,sBAA3B;;AACA,2BAAM,KAAKuB,0BAAL,EAAN;;;AACA,yBAAKvhC,KAAL,CAAW4X,YAAX,CAAwB3f,SAAxB,CAAkC,UAACC,KAAD,EAA4B;AAC7D,6BAAI,CAACyf,QAAL;AACE,qBAFH;AAGE,yBAAK6pB,qBAAL;AACF,yBAAK7pB,QAAL;;;;;;;;;AACC;;;mCAEU;AAAA;;AACX,eAAK3X,KAAL,CAAWmF,GAAX,CAAe,oBAAf,EAAqClN,SAArC,CAA+C,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAAC4O,IAAL,GAAY5O,GAAZ;AAAkB,WAApF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,oBAAf,EAAqClN,SAArC,CAA+C,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAAC6O,IAAL,GAAY7O,GAAZ;AAAkB,WAApF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,oBAAf,EAAqClN,SAArC,CAA+C,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACrF,IAAL,GAAYqF,GAAZ;AAAkB,WAApF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,oBAAf,EAAqClN,SAArC,CAA+C,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAAC8O,IAAL,GAAY9O,GAAZ;AAAkB,WAApF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,oBAAf,EAAqClN,SAArC,CAA+C,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAAC+O,IAAL,GAAY/O,GAAZ;AAAkB,WAApF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,oBAAf,EAAqClN,SAArC,CAA+C,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACgP,IAAL,GAAYhP,GAAZ;AAAkB,WAApF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,oBAAf,EAAqClN,SAArC,CAA+C,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACiP,IAAL,GAAYjP,GAAZ;AAAkB,WAApF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,oBAAf,EAAqClN,SAArC,CAA+C,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACkP,IAAL,GAAYlP,GAAZ;AAAkB,WAApF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,oBAAf,EAAqClN,SAArC,CAA+C,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACmP,IAAL,GAAYnP,GAAZ;AAAkB,WAApF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,qBAAf,EAAsClN,SAAtC,CAAgD,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACoP,KAAL,GAAapP,GAAb;AAAmB,WAAtF;AACA;;;qDACmC;;;;;;;;;;;AAChB,2BAAM,KAAKs4B,wBAAL,EAAN;;;AAAbvU,8B;;AAGqB,2BAAM,KAAK+V,uBAAL,EAAN;;;AAArBC,sC;AACN,yBAAKJ,YAAL,GAAoBI,kBAApB,C,CAEA;;AACMC,yC,GAAwB,KAAKC,yBAAL,CAA+BF,kBAA/B,C,EAE9B;;;AAC+B,2BAAM,KAAKG,yBAAL,CAA+BF,qBAA/B,CAAN;;;AAAzBG,0C;AAEN;AACMr2B,+B,GAAc,IAAI,mDAAJ,CAAc,iBAAd,C;AAChBs2B,2C,GAA0B,E;;;;;kCAEHD,sB;;;;;;;;AAAlBhW,kC;AACFkW,6B,GAAYtW,UAAU,CAACqU,OAAX,CAAmBjU,cAAc,CAAChwB,OAAlC,MAA+C,CAAC,C;AAC5DmmC,4B,GAAW,KAAKpB,qBAAL,CAA2BqB,iBAA3B,CAA6CpW,cAAc,CAAChwB,OAA5D,C;AAEXqmC,6B,GAAY,KAAKpiC,IAAL,CAAU+1B,GAAV,CAAcuC,QAAd,CAAuBvM,cAAc,CAACsW,MAAf,IAAyB,CAAhD,C;AACZC,2B,GAAUF,SAAS,CAACjK,GAAV,CAAczsB,WAAd,EAA2BusB,KAA3B,CAAiC,GAAjC,C,EAEhB;;AACIz8B,0B,GAAS,M;;AACb,wBAAI0mC,QAAQ,IAAIA,QAAQ,CAAC/B,OAAzB,EAAkC;AACjC3kC,4BAAM,GAAG,SAAT,CADiC,CACb;AACpB,qBAFD,MAEO,IAAI0mC,QAAQ,IAAIA,QAAQ,CAAC9B,IAAzB,EAA+B;AACrC5kC,4BAAM,GAAG,OAAT,CADqC,CACnB;AAClB,qBAFM,MAEA,IAAI8mC,OAAO,CAACC,GAAR,CAAY,EAAZ,CAAJ,EAAqB;AAC3B/mC,4BAAM,GAAG,OAAT,CAD2B,CACT;AAClB,qBAFM,MAEA,IAAI8mC,OAAO,CAACC,GAAR,CAAY,CAAZ,CAAJ,EAAoB;AAC1B/mC,4BAAM,GAAG,MAAT,CAD0B,CACT;AACjB,qBAFM,MAEA,IAAI0mC,QAAJ,EAAc;AACpB1mC,4BAAM,GAAG,OAAT,CADoB,CACF;AAClB;;;;;;kCAEmBuwB,cAAc,CAAC3tB,Q;;;;;;;;AAA1BrC,2B;;AAEY,2BAAM,KAAKzE,GAAL,CAAS2E,WAAT,CAAqBF,OAAO,CAAC7G,EAA7B,CAAN;;;AAAd+G,+B;AACFumC,+B,GAAc,IAAI,mDAAJ,CAAc,CAAd,C;;AAClB,wBAAIvmC,WAAW,CAACrD,MAAhB,EAAwB;AACvB4pC,iCAAW,GAAGA,WAAW,CAAC/kC,IAAZ,CAAiBxB,WAAW,CAACrD,MAAZ,CAAmB6pC,WAApC,CAAd;AACAD,iCAAW,GAAGA,WAAW,CAAC/kC,IAAZ,CAAiBxB,WAAW,CAACrD,MAAZ,CAAmBwnB,IAApC,CAAd;AACAoiB,iCAAW,GAAGA,WAAW,CAAC/kC,IAAZ,CAAiBxB,WAAW,CAACrD,MAAZ,CAAmB8pC,OAApC,CAAd;AACAF,iCAAW,GAAGA,WAAW,CAAC/kC,IAAZ,CAAiBxB,WAAW,CAACrD,MAAZ,CAAmBgiC,OAApC,CAAd;AACA4H,iCAAW,GAAGA,WAAW,CAAC/kC,IAAZ,CAAiBxB,WAAW,CAACrD,MAAZ,CAAmB+pC,MAApC,CAAd;AACA;;AACD5mC,2BAAO,CAAC6mC,YAAR,GAAuBJ,WAAW,CAACrW,OAAZ,EAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGK0W,+B,GAAc;AACnB3tC,wBAAE,EAAE62B,cAAc,CAAChwB,OADA;AAEnBsmC,4BAAM,EAAED,SAFW;AAGnBU,qCAAe,EAAE/W,cAAc,CAAC+W,eAHb;AAInBR,6BAAO,EAAEA,OAJU;AAKnB9mC,4BAAM,EAAEA,MALW;AAMnBmrB,2BAAK,EAAEub,QAAQ,GAAGA,QAAQ,CAAC//B,IAAZ,GAAmB,IANf;AAOnBmqB,4BAAM,EAAE2V,SAPW;AAQnB7jC,8BAAQ,EAAE2tB,cAAc,CAAC3tB;AARN,qB;AAWpB4jC,2CAAuB,CAACjlC,IAAxB,CAA6B8lC,WAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGD;AACAb,2CAAuB,GAAGA,uBAAuB,CAACruB,IAAxB,CAA6B,UAACnL,CAAD,EAAIoL,CAAJ;AAAA,6BAAUA,CAAC,CAACkvB,eAAF,GAAoBt6B,CAAC,CAACs6B,eAAhC;AAAA,qBAA7B,CAA1B;AAEA,yBAAK1B,sBAAL,GAA8BY,uBAA9B,C,CACA;;;;;;;;;AACA;;;kDAE4B;;;;;;;;;;;;AAED,2BAAMlsC,OAAO,CAACy2B,GAAR,CAChC,KAAKnuB,QAAL,CAAcjJ,GAAd,CAAkB,UAAA4G,OAAO;AAAA,6BACxB,OAAI,CAACzE,GAAL,CAAS2E,WAAT,CAAqBF,OAAO,CAAC7G,EAA7B,EAAiCa,IAAjC,CAAsC,UAAA6R,GAAG,EAAI;AAC5C,4BAAIA,GAAG,CAAChP,MAAR,EAAgB;AACf,8BAAMA,MAAM,GAAGgP,GAAG,CAAChP,MAAnB;AACAA,gCAAM,CAAC1D,EAAP,GAAY6G,OAAO,CAAC7G,EAApB;AACA0D,gCAAM,CAACqP,eAAP,GAAyBlM,OAAO,CAACkM,eAAjC;AACA,8BAAM86B,UAAU,GAAGnqC,MAAM,CAACwD,MAA1B;AACA,8BAAM4mC,YAAY,GAAGD,UAAU,CAACtvB,MAAX,CAAkB,UAAAwvB,EAAE;AAAA,mCAAIA,EAAE,CAACzmC,IAAH,KAAY,OAAI,CAAClF,GAAL,CAAS4rC,YAAzB;AAAA,2BAApB,EAA2D,CAA3D,CAArB;;AACA,8BAAIF,YAAY,KAAKrkC,SAArB,EAAgC;AAC/B/F,kCAAM,CAACmzB,cAAP,GAAwBiX,YAAY,CAAClX,GAAb,IAAoBkX,YAAY,CAACjX,cAAzD;AACAnzB,kCAAM,CAACwP,OAAP,GAAiB46B,YAAY,CAAC56B,OAA9B;;AACA,mCAAI,CAAC24B,MAAL,CAAYoC,KAAZ,WAAqBpnC,OAAO,CAAC7G,EAA7B,oBAAyC0D,MAAM,CAACmzB,cAAhD,uBAA2EnzB,MAAM,CAACwP,OAAlF;AACA,2BAJD,MAIO;AACN,mCAAI,CAAC24B,MAAL,CAAYoC,KAAZ,WAAqBpnC,OAAO,CAAC7G,EAA7B;AACA;;AACD,iCAAO0D,MAAP;AACA;AACD,uBAhBD,CADwB;AAAA,qBAAzB,CADgC,CAAN;;;AAArB+oC,sC;wDAsBCA,kB;;;;;;;;;AACP;;;kDAE+BlW,e,EAAe;;;;;;;;;;;;AAE7B,2BAAM31B,OAAO,CAACy2B,GAAR,CACtBd,eAAe,CAACt2B,GAAhB,CAAoB,UAAA22B,GAAG;AAAA,6BACtB,OAAI,CAACx0B,GAAL,CAAS2E,WAAT,CAAqB6vB,GAAG,CAAC52B,EAAzB,EAA6Ba,IAA7B,CAAkC,UAAM6R,GAAN;AAAA,+BAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACxChP,wCADwC,GAC/BgP,GAAG,CAAChP,MAD2B;AAE9CA,wCAAM,CAACmD,OAAP,GAAiB+vB,GAAG,CAAC52B,EAArB,CAF8C,CAG9C;;AAH8C;AAIzB,yCAAM,KAAKoC,GAAL,CAAS8rC,mBAAT,CAA6BtX,GAAG,CAAC52B,EAAjC,CAAN;;AAJyB;AAIxC0tC,8CAJwC;AAK9ChqC,wCAAM,CAACkqC,eAAP,GAAyBF,YAAY,CAAChqC,MAAtC;AACAA,wCAAM,CAACwF,QAAP,GAAkB0tB,GAAG,CAAC1tB,QAAtB;AAN8C,sEAQvCxF,MARuC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAb;AAAA,uBAAlC,CADsB;AAAA,qBAAvB,CADsB,CAAN;;;AAAXyqC,4B;wDAeCA,Q;;;;;;;;;AACP,S,CAED;;;;kDAC0B1B,kB,EAAoB;AAC7C,cAAMlW,eAAe,GAAG,EAAxB;AAD6C;AAAA;AAAA;;AAAA;AAAA;AAAA,kBAElCxvB,WAFkC;;AAG5C,kBAAI,CAACA,WAAD,IAAgB,CAACA,WAAW,CAAC8vB,cAAjC,EAAiD;AAChD;AACA,eAL2C,CAK1C;;;AAEF,kBAAMuX,WAAW,GAAG7X,eAAe,CAACrkB,IAAhB,CAAqB,UAAA0kB,GAAG;AAAA,uBAAIA,GAAG,CAAC52B,EAAJ,KAAW+G,WAAW,CAAC8vB,cAA3B;AAAA,eAAxB,CAApB;;AACA,kBAAIuX,WAAJ,EAAiB;AAChBA,2BAAW,CAACjB,MAAZ,GAAqBiB,WAAW,CAACjB,MAAZ,CAAmB5kC,IAAnB,CAAwB,IAAI,mDAAJ,CAAcxB,WAAW,CAACwmC,WAA1B,CAAxB,CAArB;AACAa,2BAAW,CAACllC,QAAZ,CAAqBrB,IAArB,CAA0Bd,WAA1B;AACA,eAHD,MAGO;AACN,oBAAMsnC,MAAM,GAAG;AACdruC,oBAAE,EAAE+G,WAAW,CAAC8vB,cADF;AAEdsW,wBAAM,EAAE,IAAI,mDAAJ,CAAcpmC,WAAW,CAACwmC,WAA1B,CAFM;AAGdrkC,0BAAQ,EAAE,CAACnC,WAAD;AAHI,iBAAf;AAKAwvB,+BAAe,CAAC1uB,IAAhB,CAAqBwmC,MAArB;AACA;AAlB2C;;AAE7C,mCAA0B5B,kBAA1B,wIAA8C;AAAA;;AAAA,uCAE5C;AAeD;AAnB4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqB7C,iBAAOlW,eAAP;AACA;;;mDAEgC;;;;;;;;;;AAC1BA,mC,GAAkB,E;;AACX,2BAAM,KAAKn0B,GAAL,CAASo0B,qBAAT,EAAN;;;AAAPqU,wB;;yBACFA,IAAI,CAACnnC,M;;;;;;;;;;AACR,uCAAkBmnC,IAAI,CAACnnC,MAAvB,+HAA+B;AAApBkzB,yBAAoB;AAC9BL,qCAAe,CAAC1uB,IAAhB,CAAqB+uB,GAArB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wDAGKL,e;;;;;;;;;AACP;;;4CAEmBrtB,Q,EAAU;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAC7B,mCAAsBA,QAAtB,wIAAgC;AAAA,kBAArBrC,OAAqB;AAC/B,mBAAKynC,YAAL,CAAkBznC,OAAO,CAAC7G,EAA1B;AACA,aAH4B,CAK7B;;AAL6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAM7B0jC,oBAAU,CAAC;AAAA,mBAAM,OAAI,CAAC6K,QAAL,CAAcC,aAAd,CAA4BC,cAA5B,CAA2C;AAAEC,sBAAQ,EAAE,QAAZ;AAAsB93B,mBAAK,EAAE;AAA7B,aAA3C,CAAN;AAAA,WAAD,EAA2F,EAA3F,CAAV;AACA;;;qCAEkB60B,S,EAAW;;;;;;;;;;;AACvBnwB,8B,GAAamwB,SAAS,IAAI,KAAKK,e;;wBAChCxwB,U;;;;;;;;AAICqzB,mC,GAAkB,KAAKvC,gBAAL,CAAsBl6B,IAAtB,CAA2B,UAAAoB,CAAC;AAAA,6BAAIA,CAAC,CAACtT,EAAF,KAASsb,UAAb;AAAA,qBAA5B,C;;yBACpBqzB,e;;;;;;;;AAGF;AAEMC,6B,GAAY,KAAKxC,gBAAL,CAAsBl6B,IAAtB,CAA2B,UAAAoB,CAAC;AAAA,6BAAIA,CAAC,CAACtT,EAAF,KAAS,cAAb;AAAA,qBAA5B,C,EAClB;AACA;;AACF,wBAAIsb,UAAU,KAAK,KAAnB,EAA0B;AACzB,2BAAK8wB,gBAAL,GAAwB,EAAxB,CADyB,CACG;AAC5B;;AACD,wBAAI9wB,UAAU,KAAK,KAAf,IAAwBszB,SAA5B,EAAuC;AACtC,2BAAKxC,gBAAL,CAAsBp4B,MAAtB,CAA6B,KAAKo4B,gBAAL,CAAsBtB,OAAtB,CAA8B8D,SAA9B,CAA7B,EAAuE,CAAvE,EADsC,CACqC;AAC3E;;0BAEGtzB,UAAU,KAAK,K;;;;;AAClB,yBAAK8wB,gBAAL,CAAsBvkC,IAAtB,CAA2B;AAAE7H,wBAAE,EAAE;AAAN,qBAA3B;;;;;;AAEsB,2BAAM,KAAK4B,aAAL,CAAmBu7B,gBAAnB,CAAoC7hB,UAApC,CAAN;;;AAAhB8e,iC;AACN,yBAAKgS,gBAAL,CAAsBvkC,IAAtB,CAA2BuyB,aAA3B;;;AAGDsJ,8BAAU,CAAC;AAAA,6BAAO,OAAI,CAACoI,eAAL,GAAuB,IAA9B;AAAA,qBAAD,EAAsC,EAAtC,CAAV;;;;;;;;;AACA;;;8CAEqBjlC,O,EAAS;AAC9B,eAAKulC,gBAAL,CAAsBp4B,MAAtB,CAA6B,KAAKo4B,gBAAL,CAAsBtB,OAAtB,CAA8BjkC,OAA9B,CAA7B,EAAqE,CAArE,EAD8B,CAC2C;AACzE;;;gDAEuB;AACvB,eAAKizB,mBAAL,GAA2B,IAA3B;AACA,cAAMvJ,MAAM,GAAG,KAAKwb,kBAAL,IAA2B,EAA1C;AACA,cAAMxV,eAAe,GAAG,KAAKqV,qBAAL,CAA2BiD,wBAA3B,EAAxB;AAEA,cAAMC,OAAO,GAAGvY,eAAe,CAAChY,MAAhB,CAAuB,UAAAjL,CAAC;AAAA,mBAAIA,CAAC,CAACrG,IAAF,CAAOmF,WAAP,GAAqB04B,OAArB,CAA6Bva,MAAM,CAACne,WAAP,EAA7B,MAAuD,CAAC,CAA5D;AAAA,WAAxB,CAAhB;AAEA,eAAK65B,sBAAL,CAA4Blc,IAA5B,CAAiC+e,OAAjC;AACA;;;oCAEW;AACX,eAAKC,oBAAL,CAA0B,KAAK/C,oBAA/B;AACA;;;6CAEoBpV,G,EAAK;AACzB,eAAKkD,mBAAL,GAA2B,KAA3B;AACA,eAAKiS,kBAAL,GAA0BnV,GAA1B;AACA,eAAK2V,qBAAL;AACA,eAAKyC,sBAAL;AACA;;;iDAEwB;AAAA;;AACxBtL,oBAAU,CAAC;AAAA,mBAAO,OAAI,CAAC5J,mBAAL,GAA2B,KAAlC;AAAA,WAAD,EAA2C,GAA3C,CAAV;AACA,eAAKiS,kBAAL,GAA0B,KAAKA,kBAAL,CAAwB5yB,OAAxB,CAAgC,IAAhC,EAAsC,EAAtC,CAA1B;AACA,cAAMyd,GAAG,GAAG,KAAKgV,qBAAL,CAA2BqB,iBAA3B,CAA6C,KAAKlB,kBAAlD,CAAZ;;AAEA,cAAInV,GAAJ,EAAS;AACR,iBAAKmD,uBAAL,GAA+BnD,GAAG,CAAC3pB,IAAnC;AACA,WAFD,MAEO;AACN,iBAAK8sB,uBAAL,GAA+B,EAA/B;AACA;AACD;;;gDAE6B;;;;;;;;;;;;AACvB7wB,4B,GAAW,KAAKkjC,gB;AAChBiC,0B,GAAS,KAAKtC,kB;;yBAEhB,KAAKI,uB;;;;;;;;yBAGL,KAAKvqC,aAAL,CAAmByS,cAAnB,E;;;;;wDACI,KAAKtS,aAAL,CAAmBuO,WAAnB,CAA+B,KAAKiR,IAApC,C;;;0BAEJ,CAACrY,QAAD,IAAa,CAACA,QAAQ,CAACkH,M;;;;;wDACnB,KAAKrO,aAAL,CAAmBuO,WAAnB,CAA+B,KAAKjD,IAApC,C;;;AAGR,yBAAK8+B,uBAAL,GAA+B,IAA/B;;AAEc,2BAAM,KAAK/pC,GAAL,CAASkpC,qBAAT,CAA+B+C,MAA/B,CAAN;;;AAAR77B,yB;;wBACDA,KAAK,CAAC9O,M;;;;;AACV,yBAAKyoC,uBAAL,GAA+B,KAA/B;wDACO,KAAKpqC,aAAL,CAAmBuO,WAAnB,CAA+B,KAAKkR,IAApC,C;;;;AAGa,2BAAM,KAAKpf,GAAL,CAAS6sC,kBAAT,CAA4BZ,MAA5B,CAAN;;;AAAfP,gC;;0BACFA,YAAY,KAAKrkC,SAAjB,IAA8BqkC,YAAY,IAAI,I;;;;;AACjD,yBAAK3B,uBAAL,GAA+B,KAA/B;wDACO,KAAKpqC,aAAL,CAAmBuO,WAAnB,CAA+B,KAAKmR,IAAL,cAAgB4sB,MAAhB,SAA4B,KAAK3sB,IAAhE,C;;;AAGFwtB,+B,GAAchmC,QAAQ,CAACgJ,IAAT,CAAc,UAAAoB,CAAC;AAAA,6BAAIA,CAAC,CAACtT,EAAF,KAAS,cAAb;AAAA,qBAAf,C;AACdmvC,oC,GAAmBD,WAAW,GAAG,KAAKhmC,QAAR,GAAmBA,Q,EAEvD;;AACMkmC,yC,GAAwBD,gBAAgB,CAAC5wB,MAAjB,CAAwB,UAAA1X,OAAO,EAAI;AAChE,0BAAME,WAAW,GAAG,OAAI,CAACslC,YAAL,CAAkBn6B,IAAlB,CAAuB,UAAAoB,CAAC;AAAA,+BAAIA,CAAC,CAACtT,EAAF,KAAS6G,OAAO,CAAC7G,EAArB;AAAA,uBAAxB,CAApB,CADgE,CAEhE;;;AACA,0BAAI+G,WAAW,IAAIA,WAAW,CAAC8vB,cAA/B,EAA+C;AAC9C,+BAAO9vB,WAAW,CAAC8vB,cAAZ,CAA2BzkB,WAA3B,OAA6Ci8B,MAAM,CAACj8B,WAAP,EAApD;AACA;;AACD,6BAAO,KAAP;AACA,qBAP6B,C;;wBASzBg9B,qBAAqB,CAACh/B,M;;;;;AAC1B,yBAAK+7B,uBAAL,GAA+B,KAA/B;wDACO,KAAKpqC,aAAL,CAAmB+V,QAAnB,CAA4B,KAAK6J,IAAjC,C;;;AAGR;;;;;kCACsBytB,qB;;;;;;;;AAAXvoC,2B;;AACY,2BAAM,KAAKjF,aAAL,CAAmBu7B,gBAAnB,CAAoCt2B,OAAO,CAAC7G,EAA5C,CAAN;;;AAAhBo6B,iC;;wBACDA,a;;;;;;;;;;AAKY,2BAAM,KAAKwG,QAAL,CAAcyO,cAAd,CAA6BjV,aAA7B,EAA4CiU,MAA5C,EAAoD,KAAKzsC,aAAL,CAAmBo5B,cAAnB,EAApD,CAAN;;;AAAVsU,2B;;AACN,wBAAI,CAACA,OAAL,EAAc;AACb,2BAAKvtC,aAAL,CAAmBkY,SAAnB,CAA6B,KAAK2H,IAAL,cAAgB/a,OAAO,CAAC7G,EAAxB,IAA+B,KAAK6hB,IAAjE;AACA;;;;;;;;AAED,yBAAK9f,aAAL,CAAmBkY,SAAnB,CAA6B,eAAInM,OAAjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIF;AACA,yBAAKs+B,gBAAL,GAAwB,EAAxB;AACA,yBAAKL,kBAAL,GAA0B,EAA1B;AACA,yBAAKhS,uBAAL,GAA+B,EAA/B;AACA,yBAAKoS,uBAAL,GAA+B,KAA/B;AAEA,yBAAKpqC,aAAL,CAAmBgY,WAAnB,CAA+B,KAAK+H,KAApC;AACA,yBAAKyqB,qBAAL;;AACA,2BAAM,KAAKD,0BAAL,EAAN;;;;;;;;;AACA;;;;;;;uBApXWX,0B,EAA0B,uI,EAAA,iI,EAAA,mJ,EAAA,6I,EAAA,mI,EAAA,uJ,EAAA,kJ,EAAA,sI,EAAA,sH;AAAA,K;;;YAA1BA,0B;AAA0B,4C;AAAA;AAAA;;;;;;;;;;;;;;;ADlBvC;;AAEA;;AACC;;AACC;;AACA;;AACC;;AAEA;;AACC;;AACA;;AAAgF;;AAAgB;;AAA6C;;AAAQ;;AAAO;;AAC5J;;AACD;;AACA;;AACC;;AACC;;AAAS;;AAAiC;;AAAe;;AAAQ;;AAClE;;AACD;;AACA;;AACC;;AACC;;AACD;;AACD;;AACA;;AACD;;AACA;;AACD;;AACD;;AAEA;;AACC;;AAKC;;AACC;;AAEE;;AAAgB;;AAAyC;;AAA6B;;AAAO;;AAC7F;;AAEA;;AACC;;AAAI;;AAAyH;;AAC7H;;AAAI;;AAAsG;;AAAoG;;AAAyE;;AAAI;;AAAE;;AAC7R;;AAAI;;AAAgL;;AACrL;;AAGF;;AACD;;AAEA;;AACC;;AACC;;AAAgB;;AAAyC;;AAA+B;;AAAO;;AAE/F;;AACC;;AAAI;;AAAK;;AAAQ;;AAAO;;AAAS;;AACjC;;AAAI;;AAAQ;;AAAQ;;AAAE;;AAAS;;AAC/B;;AAAI;;AAAS;;AAAQ;;AAAO;;AAAS;;AACrC;;AAAI;;AAAS;;AAAQ;;AAA6B;;AAAU;;AAC7D;;AACD;;AACD;;AAGA;;AAEC;;AACC;;AACC;;AAAgB;;AAAgB;;AACjC;;AACD;;AACA;;AACC;;AACC;;AAAI;;;;AAAwD;;AAC7D;;AACD;;AACD;;AAGA;;AAEC;;AAEC;;AACC;;AAA4D;;AAAa;;AAAiC;;AAAU;;AAAO;;AAC3H;;AAAyE;;AAAW;;AACpF;;AAAuF;;AAAmB;;AAC1G;;AAAyE;;;;AAA8C;;AACvH;;AAAuE;;;;AAA0C;;AAClH;;AAEA;;AAqGF;;AAED;;AAMA;;AAEC;;AAEC;;AAMA;;AACC;;AAAmC;;;;AAA2D;;AAC/F;;AACD;;AACD;;AAQA;;AACC;;AACC;;AAAI;;;;AAA+C;;AACpD;;AACD;;AAEA;;AACC;;AAEC;;AACC;;AACC;;AACC;;;;AACD;;AACA;;AACC;;AACC;;AAA8B;AAAA;AAAA,aAA6B,QAA7B,EAA6B;AAAA,mBAAW,IAAA2C,YAAA,qBAAX;AAAwC,WAArE;;AAC7B;;AAAuB;;;;AAA6D;;AACpF;;AAAwB;;;;AAAgD;;AACxE;;AAOD;;AACD;;AACD;;AACD;;AACA;;AAWA;;AACC;;AAAoH;;;;AAA2C;;AAC/J;;AACC;;AACC;;AAAuC;AAAA;AAAA,aAAkC,QAAlC,EAAkC;AAAA,mBAAW,IAAAiB,SAAA,EAAX;AAAsB,WAAxD;;AACtC;;;;AAGD;;AACA;;AAKA;AAAA,mBAAQ,IAAAP,sBAAA,EAAR;AAAgC,WAAhC,EAAiC,OAAjC,EAAiC;AAAA,mBACxB,IAAAzC,qBAAA,EADwB;AACD,WADhC,EAAiC,OAAjC,EAAiC;AAAA,mBAExB,IAAAA,qBAAA,EAFwB;AAED,WAFhC,EAAiC,eAAjC,EAAiC;AAAA;AAAA,WAAjC;;;;AALA;;AAWD;;AACD;;AACD;;AAEA;;AACC;;AACA;;AACC;;AAQD;;AAGD;;AACD;;AACD;;AAID;;AACD;;AAEA;;AAUA;;;;AAvPS;;AAAA;;AAcqE;;AAAA;;AACF;;AAAA;;AAGnE;;AAAA;;AAiHgC;;AAAA;;AAOF;;AAAA;;AAahC;;AAAA;;AAUD;;AAAA;;AAI+B;;AAAA;;AACrB;;AAAA;;AAAe;;AAAA;;AACf;;AAAA;;AAAgB;;AAAA;;AACV;;AAAA;;AAWe;;AAAA;;AAYoF;;AAAA;;AAG3E;;AAAA;;AAC9B;;AAAA;;AAOT;;AAAA;;AAKA;;AAcD;;AAAA;;AAI6C;;AAAA;;;;;;;;;;sECzRtCZ,0B,EAA0B;cALtC,uDAKsC;eAL5B;AACT9nC,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK4B,Q;;;;;;;;;;;;;;;;;;;;;;gBACpC,uD;iBAAU,U,EAAY;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC4Bf;;AACE;;AACE;;AAAiC;;AAAyC;;AAAU;;AAAO;;AACzF;;AAAyC;;AAC7C;;AACF;;;;;;AAyBI;;AAAoE;;AAAqC;;;;;;AAArC;;AAAA;;;;;;AACpE;;AAA8F;;AAAG;;;;;;AAGjG;;AAAwE;;;;;;AAA+E;;;;;;AAA/E;;AAAA;;;;;;AACxE;;AAAkG;;AAAG;;;;;;AAGrG;;;;;;AACA;;;;;;AAGA;;AACE;;AAAiC;;AAAyC;;AAAqB;;AAAO;;AACpG;;AAA4E;;AAC5E;;AAAoG;;AAAyE;;AAC/K;;AAAI;;AACJ;;AAAoE;;AACtE;;;;;;AACA;;AACE;;AAAiC;;AAAyC;;AAAwB;;AAAO;;AACvG;;AAAmD;;AACvD;;;;;;AA7CJ;;AACE;;AACE;;AAAoD;;;;AAA6C;;AACnG;;AACA;;AACE;;AAAoD;;;;AAA6C;;AACnG;;AACA;;AACE;;AAAoD;;;;AAA6C;;AACnG;;AACA;;AACE;;AAAoD;;;;AAA2C;;AACjG;;AACA;;AACE;;AAAoD;;;;AAA2C;;AACjG;;AACA;;AACE;;AAA0D;;;;;;AAAwD;;AACpH;;AACA;;AACE;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AAOA;;AAIF;;AAEF;;;;;;AA9CO;;AAAA;;AAAiD;;AAAA;;AAGjD;;AAAA;;AAAiD;;AAAA;;AAGjD;;AAAA;;AAAiD;;AAAA;;AAGjD;;AAAA;;AAAiD;;AAAA;;AAGjD;;AAAA;;AAAiD;;AAAA;;AAGM;;AAAA;;AAG1D;;AAAA;;AAGM;;AAAA;;AACA;;AAAA;;AAGA;;AAAA;;AACA;;AAAA;;AAGqH;;AAAA;;AACE;;AAAA;;AAGvH;;AAAA;;AAOA;;AAAA;;;;;;AAiBpB;;AACE;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAgB;;AAAM;;AAAY;;AAAO;;AAC3C;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAEE;;AACE;;AACE;;AACE;;AACE;;AAAqE;;AAAO;;AAC5E;;AAA4D;;AAAM;;AAClE;;AAA+E;;AAAI;;AACnF;;AAAyF;;AAAa;;AACxG;;AACA;;AACE;;AACI;;AAAiC;;AAAyC;;AAAU;;AAAO;;AACzF;;AAAyC;;AAC/C;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAgB;;AAAM;;AAAc;;AAAO;;AAC7C;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAa;;AACnC;;AACA;;AACE;;AAAkD;;AAAS;;AAC7D;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAa;;AACnC;;AACA;;AACE;;AAAkD;;AAAC;;AACrD;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAe;;AACrC;;AACA;;AACE;;AAAkD;;AAAC;;AACrD;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAgB;;AACtC;;AACA;;AACE;;AAAkD;;AAAC;;AACrD;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AAgBkC;;AAAyC;;AAAuB;;;;;;AAChE;;AAA0C;;AAAY;;;;;;AACtD;;AAAyC;;AAAY;;;;;;AAyBzE;;AACE;;AACE;;AAAoD;;;;AAA6C;;AAAI;;AACrG;;AAA6C;;AAA4B;;AAAQ;;AACnF;;AACA;;AACE;;AAAoD;;;;AAA6C;;AAAI;;AACrG;;AAA6C;;AAA4B;;AAAQ;;AACnF;;AACA;;AACE;;AAAoD;;;;AAA6C;;AAAI;;AACrG;;AAA6C;;AAA4B;;AAAQ;;AACnF;;AACA;;AACE;;AAAoD;;;;AAA2C;;AAAI;;AACnG;;AAA6C;;AAA4B;;AAAQ;;AACnF;;AACA;;AACE;;AAAoD;;;;AAA2C;;AAAI;;AACnG;;AAA6C;;AAA4B;;AAAQ;;AACnF;;AACA;;AACE;;AAAsD;;AAA+B;;;;AAAsD;;AAAQ;;AAAI;;AACvJ;;AAA6C;;AAAc;;AAAQ;;AAA2C;;AAChH;;AACA;;AACE;;AAA6C;;AAAmB;;AAAQ;;AAA0C;;AAClH;;AAA6C;;AAAiB;;AAAQ;;AACxE;;AACA;;AACE;;AAA6C;;AAAoB;;AAAQ;;AAA4C;;AACrH;;AAA6C;;AAA0B;;AAAQ;;AACjF;;AAEF;;;;;;AAhCO;;AAAA;;AAAiD;;AAAA;;AAC6B;;AAAA;;AAG9E;;AAAA;;AAAiD;;AAAA;;AAC6B;;AAAA;;AAG9E;;AAAA;;AAAiD;;AAAA;;AAC6B;;AAAA;;AAG9E;;AAAA;;AAAiD;;AAAA;;AAC6B;;AAAA;;AAG9E;;AAAA;;AAAiD;;AAAA;;AAC6B;;AAAA;;AAGI;;AAAA;;AAClB;;AAAA;;AAGK;;AAAA;;AACF;;AAAA;;AAGG;;AAAA;;AACM;;AAAA;;;;;;AAInF;;AACE;;AACE;;AAAiC;;AAAyC;;AAA6B;;AAAO;;AAC5G;;AAAuD;;AAC3D;;AACF;;;;;;AAYY;;AACC;;AAAqF;;;;;;AAD7C;;AACxC;;AAAA;;;;;;;;AAVb;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AAEF;;AACA;;AACF;;AACF;;AAEA;;AAAsB;;AAAM;;AAC5B;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AAlBsC;;AAAA;;AAGlB;;AAAA;;;;;;AAgBpB;;AAEE;;AAA4B;;AAAyC;;AAAW;;AAAO;;AACrF;;AAAyB;;AAEzB;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAyC;;AAAyC;;AAAyC;;AAAyC;;AACpK;;AAAyC;;AAAyC;;AAAyC;;AAAyC;;AACtK;;AACF;;AAEF;;AACF;;AACF;;AACJ;;;;;;AACA;;AACE;;AACE;;AACF;;AACF;;;;;;AAFI;;AAAA;;;;;;;;AAGJ;;AACE;;AACI;;AAA4B;;AAAyC;;AAAsB;;AAAO;;AAChG;;AAAkD;;AAAiB;;AAAO;;AAC1E;;AAAoE;;AAAsC;;AAAI;;AAEhH;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACA;;AACE;;AACF;;AACJ;;AACF;;;;;;AATW;;AAAA;;AAAiE;;AAAA;;AAK9D;;AAAA;;;;;;AA0BM;;AAAyC;;AAA8B;;;;;;AACvE;;AAA0C;;AAAc;;;;;;AACxD;;AAAyC;;AAAc;;;;;;AAiBzE;;AAAqF;;;;;;AAAuE;;;;;;AAAvE;;AAAA;;;;;;AACrF;;AAAsF;;AAAS;;;;;;AAa/F;;AAAqF;;AAAsC;;;;;;AAAtC;;AAAA;;;;;;AACrF;;AAAsF;;AAAC;;;;;;AAavF;;AAAqF;;AAAuC;;;;;;AAAvC;;AAAA;;;;;;AACrF;;AAAsF;;AAAC;;;;;;AAavF;;AAAqF;;;;AAA+D;;;;;;AAA/D;;AAAA;;;;;;AACrF;;AAAsF;;AAAC;;;;;;AAnOvG;;AAEI;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAgB;;AAAuE;;AACvF;;AAAgB;;AAA6D;;AAC7E;;AAAgB;;AAA4D;;AAC9E;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAGE;;AACE;;AAGE;;AAEE;;AACE;;AAAqE;;AAAO;;AAC5E;;AAA4D;;AAAM;;AAClE;;AAA+E;;AAAI;;AACnF;;AAAyF;;AAAa;;AACxG;;AAEA;;AAmCA;;AAQA;;AAyBA;;AAoBA;;AAKA;;AAgBF;;AAEF;;AACF;;AAEF;;AACF;;AAKA;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAgB;;AAA8E;;AAC9F;;AAAgB;;AAA+D;;AAC/E;;AAAgB;;AAA8D;;AAChF;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AAEE;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAa;;AACnC;;AACA;;AACE;;AACA;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAa;;AACnC;;AACA;;AACE;;AACA;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAe;;AACrC;;AACA;;AACE;;AACA;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAgB;;AACtC;;AACA;;AACE;;AACA;;AACF;;AACF;;AACF;;AACF;;AAEF;;AACF;;AAQJ;;;;;;AAxOwC;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAyBmC;;AAAA;;AAmCA;;AAAA;;AAQ4B;;AAAA;;AAyBpF;;AAAA;;AAoBY;;AAAA;;AAKA;;AAAA;;AAmCS;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAiB0B;;AAAA;;AACA;;AAAA;;AAaA;;AAAA;;AACA;;AAAA;;AAaA;;AAAA;;AACA;;AAAA;;AAaA;;AAAA;;AACA;;AAAA;;;;QCvbrDyrC,6B;;;AA0CX,6CACUzuC,MADV,EAEUqB,GAFV,EAGUq5B,YAHV,EAIU15B,aAJV,EAI4C;AAAA;;AAHlC,aAAAhB,MAAA,GAAAA,MAAA;AACA,aAAAqB,GAAA,GAAAA,GAAA;AACA,aAAAq5B,YAAA,GAAAA,YAAA;AACA,aAAA15B,aAAA,GAAAA,aAAA;AA7CV,aAAAmH,QAAA,GAAW,KAAKnI,MAAL,CAAYA,MAAZ,CAAmBmI,QAA9B;AAEA,aAAA2b,UAAA,GAAa,EAAb;AAEA,aAAA4qB,aAAA,GAAgB,IAAI,wDAAJ,CAAc;AAC5B9H,oBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAmB,0DAAWl6B,QAA9B,CADgB;AAE5BwI,oBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAmB,0DAAWxI,QAA9B,CAFgB;AAG5Bm6B,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAmB,0DAAWn6B,QAA9B;AAHkB,SAAd,CAAhB;AAMA,aAAA08B,UAAA,GAAa,QAAb;AAEA,aAAAtC,aAAA,GAAgB,CAAhB;AACA,aAAAC,iBAAA,GAAoB,CAApB;AACA,aAAAC,oBAAA,GAAuB,CAAvB;AACA,aAAAC,YAAA,GAAe,CAAf;AACA,aAAAC,qBAAA,GAAwB,CAAxB;AACA,aAAAC,SAAA,GAAY,CAAZ;AACA,aAAAC,QAAA,GAAW,EAAX;AACA,aAAAC,kBAAA,GAAqB,CAArB;AACA,aAAAC,mBAAA,GAAsB,CAAtB;AACA,aAAAC,kBAAA,GAAqB,CAArB;AACA,aAAAC,iBAAA,GAAoB,EAApB;AAEA,aAAAC,YAAA,GAAe,EAAf;AAEA,aAAAjS,eAAA,GAAkB,EAAlB;AAEA,aAAAmZ,WAAA,GAAc,EAAd;AACA,aAAAC,cAAA,GAAiB,EAAjB;AAEA,aAAAC,QAAA,GAAW;AACX,sBAAY,CADD;AAEX,sBAAY,EAFD;AAIX,2BAAiB,CAJN;AAKX,yBAAe,CALJ;AAMX,+BAAqB,EANV;AAOX,+BAAqB;AAPV,SAAX;AAeK;;;;mCAEY;;;;;;;;;;;;AACf,yBAAKH,aAAL,CAAmBv/B,GAAnB,CAAuB,YAAvB,EAAqC1F,QAArC,CAA8C,KAAKtB,QAAL,CAAc,CAAd,EAAiBlJ,EAA/D;AACA,yBAAKyvC,aAAL,CAAmBv/B,GAAnB,CAAuB,YAAvB,EAAqC1F,QAArC,CAA8C,KAAKtB,QAAL,CAAc,CAAd,EAAiBlJ,EAA/D;;AAEA,2BAAM,KAAK6vC,YAAL,EAAN;;;;;;;;;0BAEWhpC,O;;AAA4B;AACrC,0BAAMipC,KAAK,GAAG,OAAI,CAACvZ,eAAL,CAAqBrkB,IAArB,CAA0B,UAAA7R,CAAC;AAAA,+BAAIA,CAAC,CAAC8U,OAAF,KAActO,OAAO,CAAC7G,EAA1B;AAAA,uBAA3B,CAAd;;AACA,0BAAI8vC,KAAJ,EAAW;AACT,+BAAI,CAACJ,WAAL,CAAiB7nC,IAAjB,CAAsB;AACpBhB,iCAAO,EAAPA,OADoB;AAEpBkpC,iCAAO,EAAGD,KAFU;AAGpBE,oCAAU,EAAE;AACV1pC,kCAAM,EAAE;AADE,2BAHQ;AAMpB2pC,oCAAU,EAAE;AACV3pC,kCAAM,EAAE,CADE;AAEVuhC,yCAAa,EAAE,CAFL;AAGVgB,gDAAoB,EAAE,CAHZ;AAIVX,qCAAS,EAAE,CAJD;AAKVY,oCAAQ,EAAE,EALA;AAMVP,6CAAiB,EAAE,EANT;AAOVD,8CAAkB,EAAE;AAPV;AANQ,yBAAtB;AAgBD,uBAjBD,MAiBO;AACL,+BAAI,CAACqH,cAAL,CAAoB9nC,IAApB,CAAyBhB,OAAzB;AACD;;;AArBH,uCAAsB,KAAKqC,QAA3B,+HAAqC;AAAA;AAsBpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACD,yBAAKgnC,SAAL;;;;;;;;;AAED;;;oCAEiB;;;;;;;;;;;;;;kCACA,KAAKR,W;;;;;;;;AAAZ9Y,uB;AACPA,uBAAG,CAACqZ,UAAJ,CAAe3pC,MAAf,GAAwB,CAAxB;AACAswB,uBAAG,CAACqZ,UAAJ,CAAe7gC,IAAf,GAAsB,EAAtB;AACAwnB,uBAAG,CAACqZ,UAAJ,CAAepI,aAAf,GAA+B,CAA/B;AACAjR,uBAAG,CAACqZ,UAAJ,CAAepH,oBAAf,GAAsC,CAAtC;AACAjS,uBAAG,CAACqZ,UAAJ,CAAe/H,SAAf,GAA2B,CAA3B;AACAtR,uBAAG,CAACqZ,UAAJ,CAAenH,QAAf,GAA0B,EAA1B;AACAlS,uBAAG,CAACqZ,UAAJ,CAAe1H,iBAAf,GAAmC,EAAnC;AACA3R,uBAAG,CAACqZ,UAAJ,CAAe3H,kBAAf,GAAoC,CAApC;AACA1R,uBAAG,CAACoZ,UAAJ,CAAe1pC,MAAf,GAAwB,CAAxB;;AAE6B,2BAAM,KAAKlE,GAAL,CAAS+tC,sBAAT,CAAgCvZ,GAAG,CAAC/vB,OAAJ,CAAY7G,EAA5C,CAAN;;;AAAvBkpC,wC;;AACN,wBAAIA,oBAAoB,CAACxlC,MAAzB,EAAiC;AAC/B,0BAAIwlC,oBAAoB,CAACxlC,MAArB,CAA4BylC,cAA5B,IAA8C,IAAlD,EAAwD;AACtD;AACAvS,2BAAG,CAACqZ,UAAJ,CAAe3pC,MAAf,GAAwB,CAAxB;AACAswB,2BAAG,CAACqZ,UAAJ,CAAe7gC,IAAf,GAAsB85B,oBAAoB,CAACxlC,MAA3C;AACAkzB,2BAAG,CAACqZ,UAAJ,CAAepI,aAAf,GAA+B,CAA/B;AACD,uBALD,MAKO;AACL;AACAjR,2BAAG,CAACqZ,UAAJ,CAAe3pC,MAAf,GAAwB,CAAC,CAAzB;AAED;AACF;;;AACmC,2BAAM,KAAKlE,GAAL,CAASguC,oBAAT,CAA8BxZ,GAAG,CAAC/vB,OAAJ,CAAY7G,EAA1C,CAAN;;;AAA9BqpC,+C;;AACN,wBAAIA,2BAA2B,CAAC3lC,MAAhC,EAAwC;AACtC;AACAkzB,yBAAG,CAACoZ,UAAJ,CAAe1pC,MAAf,GAAwB,CAAxB;AACAswB,yBAAG,CAACoZ,UAAJ,CAAe5gC,IAAf,GAAsBi6B,2BAA2B,CAAC3lC,MAAlD,CAHsC,CAItC;AACD,qBALD,MAKO;AACL;AACAkzB,yBAAG,CAACoZ,UAAJ,CAAe1pC,MAAf,GAAwB,CAAC,CAAzB;AAED,qB,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH;;;uCAEoB;;;;;;;;;;;;AACG,2BAAM,KAAKlE,GAAL,CAASiuC,eAAT,EAAN;;;AAAhBC,iC;AACFC,+B,GAAc,E;AACdC,kC,GAAiB,E;AACjBC,mC,GAAkB,E;AAClBC,sC,GAAqB,E;;AACzB,wBAAIJ,aAAa,CAAC5sC,MAAlB,EAA0B;AACxB,2BAAKksC,QAAL,GAAgBU,aAAa,CAAC5sC,MAA9B;AACMksC,8BAFkB,GAEP,KAAKA,QAAL,CAAcA,QAFP;;AAGxB,2BAAS1hB,GAAT,IAAgB0hB,QAAhB,EAA0B;AACxB;AACMe,+BAFkB,GAER;AACd,qCAAYziB,GADE;AAEd,0CAAgB0hB,QAAQ,CAAC1hB,GAAD,CAAR,CAAcC,YAFhB;AAGd,8CAAoByhB,QAAQ,CAAC1hB,GAAD,CAAR,CAAcE,gBAHpB;AAId,8CAAoBwhB,QAAQ,CAAC1hB,GAAD,CAAR,CAAc0iB,gBAJpB;AAKd,4CAAkBhB,QAAQ,CAAC1hB,GAAD,CAAR,CAAc2iB,cALlB;AAMd,gDAAsBjB,QAAQ,CAAC1hB,GAAD,CAAR,CAAc4iB,kBANtB;AAOd,gDAAsBlB,QAAQ,CAAC1hB,GAAD,CAAR,CAAc6iB,kBAPtB;AAQd,4CAAkBnB,QAAQ,CAAC1hB,GAAD,CAAR,CAAc8iB,cARlB;AASd,8CAAoBpB,QAAQ,CAAC1hB,GAAD,CAAR,CAAc+iB,gBATpB;AAUd,sCAAYrB,QAAQ,CAAC1hB,GAAD,CAAR,CAAcgjB;AAVZ,yBAFQ;AAcxBX,mCAAW,CAAC1oC,IAAZ,CAAiB8oC,OAAjB;AACD;AACF;;;AACuB,2BAAM,KAAKvuC,GAAL,CAASm0B,eAAT,EAAN;;;AAAlBA,mC;;yBACFA,eAAe,CAAC7yB,M;;;;;;AACY,2BAAM,KAAKtB,GAAL,CAASo0B,qBAAT,EAAN;;;AAAxBA,yC;AACAC,8B,GAAaD,qBAAqB,CAAC9yB,M;;AAC1B,2BAAM,KAAKtB,GAAL,CAASs0B,eAAT,CAAyB,KAAzB,CAAN;;;AAATxvB,0B;AACFiqC,+B,GAAc,E;AAClB5a,mCAAe,CAAC7yB,MAAhB,CAAuBiE,OAAvB,CAA+B,UAAMivB,GAAN;AAAA,6BAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACpCmW,yCADoC,GACxBtW,UAAU,CAACqU,OAAX,CAAmBlU,GAAG,CAACzhB,OAAvB,MAAoC,CAAC,CADb;AAE1CyhB,mCAAG,CAACQ,MAAJ,GAAa2V,SAAb;AACAnW,mCAAG,CAAC9F,WAAJ,GAAkB,CAAC8F,GAAG,CAACI,KAAJ,GAAY9vB,MAAM,CAACxD,MAAP,CAAc8S,WAA1B,GAAsC,GAAvC,EAA4CygB,OAA5C,CAAoD,CAApD,CAAlB;AACMma,yCAJoC,GAIxBb,WAAW,CAAChyB,MAAZ,CAAoB,UAAC8yB,SAAD,EAAe;AACnD,yCAAOA,SAAS,CAACl8B,OAAV,KAAsByhB,GAAG,CAACzhB,OAAjC;AACD,iCAFiB,CAJwB;;AAO1C,oCAAIyhB,GAAG,CAACI,KAAJ,IAAa,eAAjB,EAAkC;AAChCJ,qCAAG,CAAC0a,QAAJ,GAAe,IAAf;AACD,iCAFD,MAEO;AACL1a,qCAAG,CAAC0a,QAAJ,GAAe,KAAf;AACD;;AACD,oCAAIF,SAAS,CAAChhC,MAAV,KAAqB,CAAzB,EAA4B;AAC1BwmB,qCAAG,CAACmG,MAAJ,GAAaqU,SAAS,CAAC,CAAD,CAAtB;;AACA,sCAAIxa,GAAG,CAACmG,MAAJ,CAAWmU,QAAf,EAAyB;AACvBta,uCAAG,CAACQ,MAAJ,GAAa,IAAb;AACA+Z,+CAAW,CAACtpC,IAAZ,CAAiB+uB,GAAjB;AACD,mCAHD,MAGO;AACLA,uCAAG,CAACQ,MAAJ,GAAa,KAAb;AACA+Z,+CAAW,CAACtpC,IAAZ,CAAiB+uB,GAAjB;AACD;AACF,iCATD,MASO;AACLua,6CAAW,CAACtpC,IAAZ,CAAiB+uB,GAAjB;AACD;;AAvByC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAb;AAAA,qBAA/B;AAyBA,yBAAKL,eAAL,GAAuB4a,WAAvB;wDAEO,I;;;wDAEF,K;;;;;;;;;AACR;;;oCAEW;AACV,eAAKnJ,YAAL,GAAoB,CAApB;AACA,eAAKH,aAAL,GAAqB,CAArB;AACA,eAAKE,oBAAL,GAA4B,CAA5B;AACA,eAAKE,qBAAL,GAA6B,CAA7B;AACA,eAAKC,SAAL,GAAiB,CAAjB;AACA,eAAKC,QAAL,GAAgB,EAAhB;AACA,eAAKC,kBAAL,GAA0B,CAA1B;AACA,eAAKC,mBAAL,GAA2B,CAA3B;AACA,eAAKC,kBAAL,GAA0B,CAA1B;AACA,eAAKC,iBAAL,GAAyB,EAAzB;AACD;;;oCAEiB;;;;;;;;;yBACZ,KAAKxnC,MAAL,CAAYsT,cAAZ,E;;;;;wDACE,KAAKtS,aAAL,CAAmBuO,WAAnB,CAA+B,qBAA/B,C;;;AAEN,yBAAK03B,YAAL,GAAoB,CAApB;AACML,8B,GAAa,KAAK8H,aAAL,CAAmBt/B,KAAnB,CAAyBw3B,U;;AAEf,2BAAM,KAAKvlC,GAAL,CAAS+tC,sBAAT,CAAgCxI,UAAhC,CAAN;;;AAAvBuB,wC;;AAEN,wBAAIA,oBAAoB,CAACxlC,MAAzB,EAAiC;AAC/B,0BAAIwlC,oBAAoB,CAACxlC,MAArB,CAA4BylC,cAA5B,IAA8C,IAAlD,EAAwD;AACtD;AACA,6BAAKtB,aAAL,GAAqB,CAArB;AACA,6BAAKW,YAAL,GAAoBU,oBAAoB,CAACxlC,MAAzC;AACA,6BAAKokC,iBAAL,GAAyBoB,oBAAoB,CAACxlC,MAArB,CAA4BokC,iBAArD;AACD,uBALD,MAKO;AACL,6BAAKD,aAAL,GAAqB,CAArB;AACA,6BAAKE,oBAAL,GAA4B,CAA5B;AACD;AACF;;AAED,yBAAKE,qBAAL,GAA6B,CAA7B;;;;;;;;;AACD;;;kCAEeN,U,EAAY;;;;;;;;;yBACtB,KAAK5mC,MAAL,CAAYsT,cAAZ,E;;;;;wDACE,KAAKtS,aAAL,CAAmBuO,WAAnB,CAA+B,qBAA/B,C;;;AAEFsmB,uB,GAAM,KAAK8Y,WAAL,CAAiBx9B,IAAjB,CAAsB,UAAA7R,CAAC;AAAA,6BAAIA,CAAC,CAACwG,OAAF,CAAU7G,EAAV,KAAiB2nC,UAArB;AAAA,qBAAvB,C;AACV/Q,uBAAG,CAACqZ,UAAJ,CAAe/H,SAAf,GAA2B,CAA3B;AACAtR,uBAAG,CAACqZ,UAAJ,CAAenH,QAAf,GAA0B,EAA1B;AACAlS,uBAAG,CAACqZ,UAAJ,CAAepI,aAAf,GAA+B,CAA/B;AACAjR,uBAAG,CAACqZ,UAAJ,CAAepH,oBAAf,GAAsC,CAAtC;AAEM5yB,8B,GAAa,KAAKw5B,aAAL,CAAmBt/B,KAAnB,CAAyB8F,U,EAC5C;AACA;;;AAC6B,2BAAM,KAAK7T,GAAL,CAAS+tC,sBAAT,CAAgCxI,UAAhC,CAAN;;;AAAvBuB,wC;;yBAEFA,oBAAoB,CAACxlC,M;;;;;AACjB6lC,mC,GAAkBL,oBAAoB,CAACxlC,M;;0BACzC6lC,eAAe,CAACJ,cAAhB,IAAkC,I;;;;;;AACZ,2BAAM,KAAK/mC,GAAL,CAASmvC,sBAAT,CAAgC5J,UAAhC,EAA2C1xB,UAA3C,EAAsDszB,eAAe,CAACE,gBAAtE,EAAuFF,eAAe,CAACG,cAAvG,EAAsHH,eAAe,CAACI,iBAAtI,EAAwJJ,eAAe,CAACzB,iBAAxK,CAAN;;;AAAlB8B,mC;;wBAGDA,eAAe,CAAClmC,M;;;;;AACnBkzB,uBAAG,CAACqZ,UAAJ,CAAepH,oBAAf,GAAsC,CAAtC;AACAjS,uBAAG,CAACqZ,UAAJ,CAAe/H,SAAf,GAA2B,CAA3B;AACAtR,uBAAG,CAACqZ,UAAJ,CAAenH,QAAf,GAA0B,qDAA1B;AACAlS,uBAAG,CAACqZ,UAAJ,CAAepI,aAAf,GAA+B,CAA/B;;;;;AAGoB,2BAAM,KAAK9mC,MAAL,CAAYo8B,gBAAZ,CAA6BwK,UAA7B,CAAN;;;AAAhBvN,iC;;AAGoB,2BAAM,KAAKqB,YAAL,CAAkBoO,mBAAlB,CAAsCD,eAAe,CAAClmC,MAAtD,EAA6D02B,aAAa,CAACvjB,OAA3E,CAAN;;;AAApBizB,qC;;wBACDA,iBAAiB,CAACpmC,M;;;;;AACrBkzB,uBAAG,CAACqZ,UAAJ,CAAepH,oBAAf,GAAsC,CAAtC;AACAjS,uBAAG,CAACqZ,UAAJ,CAAe/H,SAAf,GAA2B,CAA3B;AACAtR,uBAAG,CAACqZ,UAAJ,CAAenH,QAAf,GAA0B,qCAAqCgB,iBAAiB,CAAC9iC,KAAlB,CAAwB8G,OAA7D,GAAuE,GAAjG;AACA8oB,uBAAG,CAACqZ,UAAJ,CAAepI,aAAf,GAA+B,CAA/B;;;;AAGFjR,uBAAG,CAACqZ,UAAJ,CAAe1H,iBAAf,GAAmCuB,iBAAiB,CAACpmC,MAArD;AACAkzB,uBAAG,CAACqZ,UAAJ,CAAepH,oBAAf,GAAsC,CAAtC;AACAjS,uBAAG,CAACqZ,UAAJ,CAAe3H,kBAAf,GAAoC,CAApC,C,CAEA;;;;;;AAEA1R,uBAAG,CAACqZ,UAAJ,CAAepH,oBAAf,GAAsC,CAAtC;AACAjS,uBAAG,CAACqZ,UAAJ,CAAe/H,SAAf,GAA2B,CAA3B;AACAtR,uBAAG,CAACqZ,UAAJ,CAAenH,QAAf,GAA0B,qDAA1B;;;;;;;;;;;;AAKL;;;wCAEqB;;;;;;;;;AAEdlB,4B,GAAW,KAAK6H,aAAL,CAAmBt/B,KAAnB,CAAyBy3B,Q,EAC1C;;;AAC6B,2BAAM,KAAKxlC,GAAL,CAAS2nC,4BAAT,CAAsCnC,QAAtC,CAAN;;;AAAvBoC,wC;AACN;AACMrC,8B,GAAa,KAAK8H,aAAL,CAAmBt/B,KAAnB,CAAyBw3B,U;;AACtB,2BAAM,KAAK5mC,MAAL,CAAYo8B,gBAAZ,CAA6BwK,UAA7B,CAAN;;;AAAhBvN,iC;;AACmB,2BAAM,KAAKqB,YAAL,CAAkBoO,mBAAlB,CAAsCG,oBAAoB,CAACtmC,MAA3D,EAAkE02B,aAAa,CAACvjB,OAAhF,CAAN;;;AAAnBozB,oC;;;;;;;;;AAEP;;;;;;;uBA/RUuF,6B,EAA6B,8I,EAAA,wI,EAAA,mJ,EAAA,0J;AAAA,K;;;YAA7BA,6B;AAA6B,gD;AAAA,e;AAAA,a;AAAA,ijK;AAAA;AAAA;ADb1C;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAgB;;AAAkB;;AACpC;;AACF;;AACA;;AACE;;AAA0F;AAAA,mBAAS,IAAAU,SAAA,EAAT;AAAoB,WAApB;;AACxF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAGE;;AACE;;AAGE;;AAEE;;AACE;;AAAqE;;AAAO;;AAC1E;;AAA4D;;AAAO;;AACnE;;AAA+E;;AAAY;;AAC3F;;AAA4D;;AAAU;;AACtE;;AAA4D;;AAAM;;AAClE;;AAAkE;;AAAM;;AAC5E;;AAEA;;AAOA;;AAkDF;;AAEF;;AACF;;AAEF;;AACF;;AAGA;;AAgHA;;;;AAlLuE;;AAAA;;AAOA;;AAAA;;AA2DlE;;AAAA;;AAgHA;;AAAA;;;;;;;;;;sECpNQV,6B,EAA6B;cALzC,uDAKyC;eAL/B;AACT3rC,kBAAQ,EAAE,2BADD;AAETC,qBAAW,EAAE,wCAFJ;AAGTC,mBAAS,EAAE,CAAC,wCAAD;AAHF,S;AAK+B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACb1C;;;;;;AAaU;;AACE;;AACE;;AACF;;AACF;;;;;;AACA;;AACE;;AACE;;AACF;;AACF;;;;;;AAiGI;;AACE;;AACE;;AAA4C;;;;AAAqC;;AACnF;;AACA;;AACE;;AAA4C;;;;AAAqC;;AACnF;;AACA;;AACE;;AAA4C;;;;AAAqC;;AACnF;;AACA;;AACE;;AAA4C;;;;AAAqC;;AACnF;;AACA;;AACE;;AAA4C;;;;AAAmC;;AACjF;;AACA;;AACE;;AAA0D;;;;;;AAAgD;;AAC5G;;AACA;;AACE;;AACF;;AACA;;AACE;;AAAsE;;AAAkB;;AAAO;;AACjG;;AACA;;AACE;;AAAsE;;AAAc;;AAAO;;;;;;AAC7F;;AACA;;AACE;;AAAmI;;AAAsE;;AAAM;;AACjN;;AACF;;;;;;AA7BO;;AAAA;;AAAyC;;AAAA;;AAGzC;;AAAA;;AAAyC;;AAAA;;AAGzC;;AAAA;;AAAyC;;AAAA;;AAGzC;;AAAA;;AAAyC;;AAAA;;AAGzC;;AAAA;;AAAyC;;AAAA;;AAGc;;AAAA;;AAG1D;;AAAA;;AAG+F;;AAAA;;AAGJ;;AAAA;;;;;;AAM/F;;AACE;;AACE;;AAA4C;;;;AAAqC;;AACnF;;AACA;;AACE;;AAA4C;;;;AAAqC;;AACnF;;AACA;;AACE;;AAA4C;;;;AAAqC;;AACnF;;AACA;;AACE;;AAA4C;;;;AAAqC;;AACnF;;AACA;;AACE;;AAA4C;;;;AAAmC;;AACjF;;AACA;;AACE;;AAA0D;;;;;;AAAgD;;AAC5G;;AACA;;AACE;;AACF;;AACA;;AACE;;AAAsE;;AAAkB;;AAAO;;AACjG;;AACA;;AACE;;AAAsE;;AAAc;;AAAO;;;;;;AAC7F;;AACA;;AACE;;AAAqI;;AAAsE;;AAAO;;AACpN;;AACF;;;;;;AA7BO;;AAAA;;AAAyC;;AAAA;;AAGzC;;AAAA;;AAAyC;;AAAA;;AAGzC;;AAAA;;AAAyC;;AAAA;;AAGzC;;AAAA;;AAAyC;;AAAA;;AAGzC;;AAAA;;AAAyC;;AAAA;;AAGc;;AAAA;;AAG1D;;AAAA;;AAG+F;;AAAA;;AAGJ;;AAAA;;;;;;AA9F7G;;AACE;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAI;;AAAM;;AAAwB;;AAAO;;AAC3C;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACI;;AAGE;;AACE;;AAGE;;AAEE;;AACE;;AAAqE;;AAAO;;AAC5E;;AAAuE;;AAAM;;AAC7E;;AAA+F;;AAAY;;AAC3G;;AAAyH;;AAAU;;AACnI;;AAAiI;;AAAM;;AACvI;;AAAoH;;AAAM;;AAC5H;;AAEA;;AAgCA;;AAgCF;;AAEF;;AACF;;AAEF;;AACF;;AACJ;;;;;;AAvE2E;;AAAA;;AAgCA;;AAAA;;;;;;AA8GzD;;;;;;AAAsJ;;AAAyF;;AAAM;;;;;;AACrP;;;;;;AAAyJ;;AAA0F;;AAAO;;;;;;AA9B9P;;AACE;;AACE;;AAA4C;;;;AAAqC;;AACnF;;AACA;;AACE;;AAA4C;;;;AAAqC;;AACnF;;AACA;;AACE;;AAA4C;;;;AAAqC;;AACnF;;AACA;;AACE;;AAA4C;;;;AAAqC;;AACnF;;AACA;;AACE;;AAA4C;;;;AAAmC;;AACjF;;AACA;;AACE;;AAA0D;;;;;;AAAgD;;AAC5G;;AACA;;AACE;;AACF;;AACA;;AACE;;AAAsE;;AAAkB;;AAAO;;AACjG;;AACA;;AACE;;AAAsE;;AAAc;;AAAO;;AAC7F;;AACA;;AACE;;AAAsJ;;AACtJ;;AAAyJ;;AAC3J;;AACA;;AACF;;;;;;AA/BO;;AAAA;;AAAyC;;AAAA;;AAGzC;;AAAA;;AAAyC;;AAAA;;AAGzC;;AAAA;;AAAyC;;AAAA;;AAGzC;;AAAA;;AAAyC;;AAAA;;AAGzC;;AAAA;;AAAyC;;AAAA;;AAGc;;AAAA;;AAG1D;;AAAA;;AAS2H;;AAAA;;AAAiG;;AAAA;;AAC/F;;AAAA;;AAAkG;;AAAA;;;;;;;;AAevO;;AAAoE;AAAA;;AAAA;;AAAA,mDAAyB,CAAzB;AAA0B,SAA1B;;AAA6B;;AAAI;;;;;;;;;;;;;;AACrG;;AAAoH;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;AAAU;;;;;;;;AAA3E;;AAAiE;;AAAA;;;;;;;;AACzI;;AAA2E;AAAA;;AAAA;;AAAA,mDAAyB,CAAzB;AAA0B,SAA1B;;AAA6B;;AAAI;;;;;;AAH9G;;AACE;;AACA;;AACA;;AACF;;;;;;AAH8C;;AAAA;;AACC;;AAAA;;AACD;;AAAA;;;;;;AAtFtD;;AACE;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAI;;AAAM;;AAAmC;;AAAO;;AACtD;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAEE;;AAIE;;AACE;;AAGE;;AAEE;;AACE;;AAAqE;;AAAO;;AAC5E;;AAAuE;;AAAM;;AAC7E;;AAA+F;;AAAY;;AAC3G;;AAAyH;;AAAU;;AACnI;;AAAiI;;AAAM;;AACvI;;AAAoH;;AAAM;;AAC5H;;AAEA;;AAqCF;;AAGF;;AACF;;AAGA;;AAMF;;AAEF;;AACF;;AACF;;;;;;AAtD2E;;AAAA;;AA4CN;;AAAA;;;;;;AAgFnD;;;;;;AAAsJ;;AAAyF;;AAAM;;;;;;AACrP;;;;;;AAAyJ;;AAA0F;;AAAO;;;;;;AA9B9P;;AACE;;AACE;;AAA4C;;;;AAAqC;;AACnF;;AACA;;AACE;;AAA4C;;;;AAAqC;;AACnF;;AACA;;AACE;;AAA4C;;;;AAAqC;;AACnF;;AACA;;AACE;;AAA4C;;;;AAAqC;;AACnF;;AACA;;AACE;;AAA4C;;;;AAAmC;;AACjF;;AACA;;AACE;;AAA0D;;;;;;AAAgD;;AAC5G;;AACA;;AACE;;AACF;;AACA;;AACE;;AAAsE;;AAAkB;;AAAO;;AACjG;;AACA;;AACE;;AAAsE;;AAAc;;AAAO;;AAC7F;;AACA;;AACE;;AAAsJ;;AACtJ;;AAAyJ;;AAC3J;;AACA;;AACF;;;;;;AA/BO;;AAAA;;AAAyC;;AAAA;;AAGzC;;AAAA;;AAAyC;;AAAA;;AAGzC;;AAAA;;AAAyC;;AAAA;;AAGzC;;AAAA;;AAAyC;;AAAA;;AAGzC;;AAAA;;AAAyC;;AAAA;;AAGc;;AAAA;;AAG1D;;AAAA;;AAS2H;;AAAA;;AAAiG;;AAAA;;AAC/F;;AAAA;;AAAkG;;AAAA;;;;;;;;AAevO;;AAAoE;AAAA;;AAAA;;AAAA,mDAAyB,CAAzB;AAA0B,SAA1B;;AAA6B;;AAAI;;;;;;;;AACrG;;AAAoH;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;AAAU;;;;;;;;AAA3E;;AAAiE;;AAAA;;;;;;;;AACzI;;AAA2E;AAAA;;AAAA;;AAAA,mDAAyB,CAAzB;AAA0B,SAA1B;;AAA6B;;AAAI;;;;;;AAH9G;;AACE;;AACA;;AACA;;AACF;;;;;;AAH8C;;AAAA;;AACC;;AAAA;;AACD;;AAAA;;;;;;AAtFtD;;AACE;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAI;;AAAM;;AAAqB;;AAAO;;AACxC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAEE;;AAIE;;AACE;;AAGE;;AAEE;;AACE;;AAAqE;;AAAO;;AAC5E;;AAAuE;;AAAM;;AAC7E;;AAA+F;;AAAY;;AAC3G;;AAAyH;;AAAU;;AACnI;;AAAiI;;AAAM;;AACvI;;AAAoH;;AAAM;;AAC5H;;AAEA;;AAqCF;;AAGF;;AACF;;AAGA;;AAMF;;AAEF;;AACF;;AACF;;;;;;AAtDoD;;AAAA;;AA4CiB;;AAAA;;;;;;AAlSrE;;AAEA;;AA8GA;;AA+FA;;AA8FA;;;;;;AA3SK;;AAAA;;AA8GA;;AAAA;;AA+FA;;AAAA;;;;;;;;;;QCpRQytC,wB;;;AA6BX,wCACUnsC,KADV,EAEQrE,MAFR,EAGQoB,GAHR,EAIQJ,IAJR,EAKOjB,MALP,EAK4B;AAAA;;AAJlB,aAAAsE,KAAA,GAAAA,KAAA;AACF,aAAArE,MAAA,GAAAA,MAAA;AACA,aAAAoB,GAAA,GAAAA,GAAA;AACA,aAAAJ,IAAA,GAAAA,IAAA;AACD,aAAAjB,MAAA,GAAAA,MAAA;AA/BR,aAAA4vB,oBAAA,GAAuB,CAAvB;AAEA,aAAAif,QAAA,GAAW;AACV,sBAAY,CADF;AAEV,sBAAY,EAFF;AAIV,2BAAiB,CAJP;AAKV,yBAAe,CALL;AAMV,+BAAqB,EANX;AAOV,+BAAqB;AAPX,SAAX;AAUA,aAAA6B,qBAAA,GAAwB,EAAxB;AACA,aAAAC,sBAAA,GAAyB,EAAzB;AACA,aAAAhB,kBAAA,GAAqB,EAArB;AAEA,aAAAiB,MAAA,GAAS,KAAT;AAEC,aAAA7rC,SAAA,GAAY,IAAZ;AAEA,aAAAJ,QAAA,GAAW,EAAX;AACD,aAAA0D,KAAA,GAAQ,EAAR;AACA,aAAAC,QAAA,GAAW,CAAX;AACC,aAAAC,UAAA,GAAa,CAAb;AACA,aAAAC,MAAA,GAAS,CAAT;AAQK;;;;mCAEY;;;;;;;;;;AACf,yBAAKzD,SAAL,GAAiB,KAAK9E,MAAL,CAAY+B,MAAZ,CAAmBC,SAAnB,CAA6B,UAAAC,KAAK,EAAI;AACxD,0BAAIA,KAAK,YAAY,kEAArB,EAAyC;AACxC,+BAAI,CAACmD,IAAL,GADwC,CAC3B;;AACb;AACC,qBAJgB,CAAjB;AAKA,yBAAKA,IAAL;;;;;;;;;AACF;;;sCAEa;AACb,cAAI,KAAKN,SAAT,EAAoB;AACnB,iBAAKA,SAAL,CAAeO,WAAf;AACA;AACD;;;+BAEM;AACN,cAAI,KAAKrE,IAAL,CAAUsE,MAAV,KAAqB,IAAzB,EAA+B;AAC3B,gBAAIkD,IAAI,GAAG,KAAKnE,KAAL,CAAWsB,QAAX,CAAoBC,MAApB,CAA2B4C,IAAtC;AACA,gBAAIA,IAAI,IAAIC,SAAR,IAAqBD,IAAI,IAAI,CAAjC,EACEA,IAAI,GAAG,CAAP;AAEL,iBAAKE,OAAL,CAAaF,IAAb;AACA,WAND,MAMO;AACN,iBAAKjD,MAAL;AACA;AACD;;;iCAEc;;;;;;;;;;;AACRC,0B,GAAS,mDAAM,GAAN,C;AACTC,uB,GAAOD,MAAM,CAACxD,SAAP,CAAiB,UAAM0D,GAAN;AAAA,6BAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACzC,qCAAKN,IAAL;;AADyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAb;AAAA,qBAAjB,C;;;;;;;;;AAGb;;;6BAEIoD,I,EAAM;AACR,eAAKxI,MAAL,CAAYE,QAAZ,CAAqB,CAAC,sBAAoBsI,IAArB,CAArB,EAAiD;AAAEi9B,sBAAU,EAAE,KAAKphC;AAAnB,WAAjD;AACD;;;gCAEMmE,I,EAAM;AACX,eAAKF,UAAL,GAAkBE,IAAlB;AACA,eAAKD,MAAL,GAAcC,IAAI,GAAC,KAAK9D,QAAV,GAAmB,KAAKA,QAAtC;AACA,eAAKksC,QAAL;AACF;;;mCAEU;AACV,eAAKtoC,UAAL,GAAkBK,IAAI,CAACC,KAAL,CAAW,CAAC,KAAKL,MAAL,GAAc,KAAK7D,QAApB,IAA8B,KAAKA,QAA9C,CAAlB;AACA,cAAImE,YAAY,GAAG,CAAnB;AAEA,cAAIT,KAAK,GAAG,KAAKunB,oBAAL,GAA0B,KAAKjrB,QAA3C;;AACE,cAAI,KAAKirB,oBAAL,GAA0B,KAAKjrB,QAA/B,IAA2C,CAA/C,EAAkD;AAChD0D,iBAAK,GAAGO,IAAI,CAACC,KAAL,CAAW,KAAK+mB,oBAAL,GAA0B,KAAKjrB,QAA1C,IAAoD,CAA5D;AACD;;AACH,eAAK2D,QAAL,GAAgBD,KAAhB;AACA,cAAIA,KAAK,GAAG,CAAZ,EACCS,YAAY,GAAGT,KAAf;AAED,eAAKA,KAAL,GAAaU,KAAK,CAACD,YAAD,CAAL,CAAoBE,IAApB,CAAyB,CAAzB,EAA4B9J,GAA5B,CAAgC,UAACmJ,KAAD,EAAOY,CAAP;AAAA,mBAAWA,CAAC,GAAC,CAAb;AAAA,WAAhC,CAAb;;AAEA,cAAI,KAAKV,UAAL,GAAkB,CAAlB,IAAuB,KAAKA,UAAL,GAAkBF,KAAK,GAAE,CAApD,EAAuD;AACtD,iBAAKA,KAAL,CAAW,CAAX,IAAgB,KAAKE,UAAL,GAAiB,CAAjC;AACA,iBAAKF,KAAL,CAAW,CAAX,IAAgB,KAAKE,UAAL,GAAiB,CAAjC;AACA,iBAAKF,KAAL,CAAW,CAAX,IAAgB,KAAKE,UAArB;AACA,iBAAKF,KAAL,CAAW,CAAX,IAAgB,KAAKE,UAAL,GAAiB,CAAjC;AACA,iBAAKF,KAAL,CAAW,CAAX,IAAgB,KAAKE,UAAL,GAAiB,CAAjC;AACA,WAND,MAMO,IAAI,KAAKA,UAAL,GAAkB,CAAlB,IAAuB,KAAKA,UAAL,IAAmBF,KAAK,GAAE,CAArD,EAAwD;AAC9D,iBAAKA,KAAL,CAAW,CAAX,IAAgBA,KAAK,GAAE,CAAvB;AACA,iBAAKA,KAAL,CAAW,CAAX,IAAgBA,KAAK,GAAE,CAAvB;AACA,iBAAKA,KAAL,CAAW,CAAX,IAAgBA,KAAK,GAAE,CAAvB;AACA,iBAAKA,KAAL,CAAW,CAAX,IAAgBA,KAAK,GAAE,CAAvB;AACA,iBAAKA,KAAL,CAAW,CAAX,IAAgBA,KAAK,GAAE,CAAvB;AACA;;AAED,eAAKA,KAAL,CAAWS,YAAY,GAAC,CAAxB,IAA6BT,KAA7B;AACA,eAAKA,KAAL,CAAW,CAAX,IAAgB,CAAhB;;AACA,cAAI,KAAKA,KAAL,CAAWS,YAAY,GAAC,CAAxB,KAA8BT,KAAK,GAAE,CAAzC,EAA4C;AAC3C,iBAAKA,KAAL,CAAWS,YAAY,GAAC,CAAxB,IAA6B,KAA7B;AACA;;AAED,cAAI,KAAKT,KAAL,CAAW,CAAX,KAAiB,KAAKA,KAAL,CAAW,CAAX,KAAiB,CAAtC,EAAyC;AACxC,iBAAKA,KAAL,CAAW,CAAX,IAAgB,KAAhB;AACA;AACA;;;mCAEgB;;;;;;;;;;;;AACI,2BAAM,KAAKhH,GAAL,CAASiuC,eAAT,EAAN;;;AAAhBC,iC;AACFC,+B,GAAc,E;AACdC,kC,GAAiB,E;AACjBC,mC,GAAkB,E;AAClBC,sC,GAAqB,E;;AACzB,wBAAIJ,aAAa,CAAC5sC,MAAlB,EAA0B;AACzB,2BAAKksC,QAAL,GAAgBU,aAAa,CAAC5sC,MAA9B;AACMksC,8BAFmB,GAER,KAAKA,QAAL,CAAcA,QAFN;;AAGzB,2BAAS1hB,GAAT,IAAgB0hB,QAAhB,EAA0B;AACzB;AACMe,+BAFmB,GAET;AACf,qCAAYziB,GADG;AAEf,0CAAgB0hB,QAAQ,CAAC1hB,GAAD,CAAR,CAAcC,YAFf;AAGf,8CAAoByhB,QAAQ,CAAC1hB,GAAD,CAAR,CAAcE,gBAHnB;AAIf,8CAAoBwhB,QAAQ,CAAC1hB,GAAD,CAAR,CAAc0iB,gBAJnB;AAKf,4CAAkBhB,QAAQ,CAAC1hB,GAAD,CAAR,CAAc2iB,cALjB;AAMf,gDAAsBjB,QAAQ,CAAC1hB,GAAD,CAAR,CAAc4iB,kBANrB;AAOf,gDAAsBlB,QAAQ,CAAC1hB,GAAD,CAAR,CAAc6iB,kBAPrB;AAQf,4CAAkBnB,QAAQ,CAAC1hB,GAAD,CAAR,CAAc8iB,cARjB;AASf,8CAAoBpB,QAAQ,CAAC1hB,GAAD,CAAR,CAAc+iB,gBATnB;AAUf,sCAAYrB,QAAQ,CAAC1hB,GAAD,CAAR,CAAcgjB;AAVX,yBAFS;AAczBX,mCAAW,CAAC1oC,IAAZ,CAAiB8oC,OAAjB;AACA;AACD;;;AAE0B,2BAAM,KAAKvuC,GAAL,CAASm0B,eAAT,EAAN;;;AAAlBA,mC;;yBACLA,eAAe,CAAC7yB,M;;;;;;AACW,2BAAM,KAAKtB,GAAL,CAASo0B,qBAAT,EAAN;;;AAAxBA,yC;AACAC,8B,GAAaD,qBAAqB,CAAC9yB,M;;AAC1B,2BAAM,KAAKtB,GAAL,CAASs0B,eAAT,CAAyB,KAAzB,CAAN;;;AAATxvB,0B;AACFiqC,+B,GAAc,E;AACb5a,mCAAe,CAAC7yB,MAAhB,CAAuBiE,OAAvB,CAA+B,UAAMivB,GAAN;AAAA,6BAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1CmW,yCAD0C,GAC9BtW,UAAU,CAACqU,OAAX,CAAmBlU,GAAG,CAACzhB,OAAvB,MAAoC,CAAC,CADP;AAEhDyhB,mCAAG,CAACQ,MAAJ,GAAa2V,SAAb;AACAnW,mCAAG,CAAC9F,WAAJ,GAAkB,CAAC8F,GAAG,CAACI,KAAJ,GAAY9vB,MAAM,CAACxD,MAAP,CAAc8S,WAA1B,GAAsC,GAAvC,EAA4CygB,OAA5C,CAAoD,CAApD,CAAlB;AACMma,yCAJ0C,GAI9Bb,WAAW,CAAChyB,MAAZ,CAAoB,UAAC8yB,SAAD,EAAe;AACpD,yCAAOA,SAAS,CAACl8B,OAAV,KAAsByhB,GAAG,CAACzhB,OAAjC;AACA,iCAFiB,CAJ8B,EAOhD;;AACA,oCAAIi8B,SAAS,CAAChhC,MAAV,KAAqB,CAAzB,EAA4B;AAC3BwmB,qCAAG,CAACmG,MAAJ,GAAaqU,SAAS,CAAC,CAAD,CAAtB;;AACA,sCAAIxa,GAAG,CAACmG,MAAJ,CAAWmU,QAAf,EAAyB;AACxBV,kDAAc,CAAC3oC,IAAf,CAAoB+uB,GAApB;AACA,mCAFD,MAEO;AACN6Z,mDAAe,CAAC5oC,IAAhB,CAAqB+uB,GAArB;AACA;AACD,iCAPD,MAOO;AACN,sCAAIA,GAAG,CAACI,KAAJ,IAAa,eAAjB,EAAkC;AACjC0Z,sDAAkB,CAAC7oC,IAAnB,CAAwB+uB,GAAxB;AACA,mCAFD,MAEO;AACNua,+CAAW,CAACtpC,IAAZ,CAAiB+uB,GAAjB;AACA;AACD;;AArB+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAb;AAAA,qBAA/B;AA0BL,yBAAK6a,qBAAL,GAA6BjB,cAA7B;AACA,yBAAKkB,sBAAL,GAA8BjB,eAA9B;AACA,yBAAKC,kBAAL,GAA0BA,kBAA1B;AACA,yBAAKna,eAAL,GAAuB4a,WAAvB;AACA,yBAAKxgB,oBAAL,GAA4BwgB,WAAW,CAAC/gC,MAAxC;AACA,yBAAKuhC,MAAL,GAAc,IAAd;;;;;;;;;AAEC;;;;;;;uBA1LUH,wB,EAAwB,+H,EAAA,uH,EAAA,wI,EAAA,0I,EAAA,8I;AAAA,K;;;YAAxBA,wB;AAAwB,0C;AAAA,e;AAAA,c;AAAA,wpJ;AAAA;AAAA;ADZrC;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AACE;;AAAI;;AAAe;;AACrB;;AACF;;AACA;;AAKA;;AAKF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAiB;;AACvC;;AACA;;AACE;;AAAoB;;;;AAA0D;;AAChF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAiB;;AACvC;;AACA;;AACE;;AAAoB;;;;AAAgD;;AACtE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAY;;AAClC;;AACA;;AACE;;AAAkC;;AAA0B;;AAC9D;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AAAoB;;AAAwB;;AAC9C;;AACA;;AACE;;AAAoB;;;;;;AAAkE;;AACxF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AA8SA;;AACE;;AAEF;;;;AAlYkB;;AAE6C;;AAAA;;AAWD;;AAAA;;AAKA;;AAAA;;AAiB9B;;AAAA;;AAaA;;AAAA;;AAac;;AAAA;;AAad;;AAAA;;AAO3B;;AAAA;;;;;;;;;;sECrEQA,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACT3tC,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQrB;;AACE;;AACI;;AAA6B;;AAAI;;AAAe;;AAAK;;AACzD;;AACF;;;;;;AAOA;;AACE;;AAAqE;;AAAwB;;AAC7F;;AAA+E;;AAAM;;AACrF;;AAAyF;;AAAI;;AAC/F;;;;;;AAEA;;AAEE;;AACE;;AAAmC;;AAAgD;;AACnF;;AAAqF;;AAAwD;;AAC7I;;AAAqD;;AACnD;;AAAwB;;AAAsB;;AAChD;;AAAI;;AAAI;;AACR;;AAAwB;;AAA0B;;AAAsC;;AAAU;;AAAuD;;AAC3J;;AACA;;AAGA;;AAA0D;;;;;;AAAkG;;AAC5J;;AAAI;;AAA8B;;AAA2B;;AAC/D;;AACA;;AACE;;;;AACF;;AACA;;AAGF;;;;;;AAnByC;;AAAA;;AAChC;;AAAA;;AAAkF;;AAAA;;AAClF;;AAAA;;AACuB;;AAAA;;AAEwB;;AAAA;;AAAgD;;AAAA;;AAE/F;;AAAA;;AAGqD;;AAAA;;AACxB;;AAAA;;AAGlC;;AAAA;;;;;;AAWJ;;AACE;;AAAqE;;AAAwB;;AAC7F;;AAA+E;;AAAM;;AACrF;;AAAyF;;AAAI;;AAC/F;;;;;;AACA;;AAEI;;AACE;;AAAmC;;AAAgD;;AACnF;;AAAqF;;AAAwD;;AAC7I;;AAAqD;;AACnD;;AAAwB;;AAAsB;;AAChD;;AAAI;;AAAI;;AACR;;AAAwB;;AAAoD;;AAA0B;;AAA0C;;AAAS;;AAC3J;;AACA;;AAGA;;AAA0D;;;;;;AAAkG;;AAC5J;;AAAI;;AAA8B;;AAA2B;;AAC/D;;AACA;;AACE;;;;AACF;;AACA;;AAGF;;;;;;AAnByC;;AAAA;;AAChC;;AAAA;;AAAkF;;AAAA;;AAClF;;AAAA;;AACuB;;AAAA;;AAEF;;AAAA;;AAA8E;;AAAA;;AAEnG;;AAAA;;AAGqD;;AAAA;;AACxB;;AAAA;;AAGlC;;AAAA;;;;;;AAOJ;;AACE;;AAAqE;;AAAwB;;AAC7F;;AAA+E;;AAAM;;AACrF;;AAAyF;;AAAI;;AAC/F;;;;;;AACA;;AAEI;;AACE;;AAAmC;;AAAgD;;AACnF;;AAAqF;;AAAwD;;AAC7I;;AAAqD;;AACnD;;AAAwB;;AAAsB;;AAChD;;AAAI;;AAAI;;AACR;;AAAwB;;AAAoD;;AAA0B;;AAA0C;;AAAS;;AAC3J;;AACA;;AAGA;;AAAiE;;;;;;AAAkG;;AACnK;;AAAI;;AAA8B;;AAA2B;;AAC/D;;AACA;;AACE;;;;AACF;;AACA;;AAGF;;;;;;AAnByC;;AAAA;;AAChC;;AAAA;;AAAkF;;AAAA;;AAClF;;AAAA;;AACuB;;AAAA;;AAEF;;AAAA;;AAA8E;;AAAA;;AAEnG;;AAAA;;AAG4D;;AAAA;;AAC/B;;AAAA;;AAGlC;;AAAA;;;;QCxGL8tC,e;;;AAgBX,+BACUxsC,KADV,EAEQrE,MAFR,EAGQoB,GAHR,EAIUJ,IAJV,EAI2B;AAAA;;AAHjB,aAAAqD,KAAA,GAAAA,KAAA;AACF,aAAArE,MAAA,GAAAA,MAAA;AACA,aAAAoB,GAAA,GAAAA,GAAA;AACE,aAAAJ,IAAA,GAAAA,IAAA;AAlBV,aAAAg9B,WAAA,GAAc,IAAd;AACA,aAAAl5B,SAAA,GAAY,IAAZ;AAEA,aAAAopB,WAAA,GAAc,EAAd;AAEA,aAAA4iB,WAAA,GAAc;AACZC,iBAAO,EAAE,EADG;AAEZ5mB,cAAI,EAAE;AAFM,SAAd;AAKA,aAAA6mB,aAAA,GAAgB,EAAhB;AASK;;;;mCAEM;AAAA;;AAET,eAAKlsC,SAAL,GAAiB,KAAK9E,MAAL,CAAY+B,MAAZ,CAAmBC,SAAnB,CAA6B,UAAAC,KAAK,EAAI;AACxD,gBAAIA,KAAK,YAAY,kEAArB,EAAyC;AACxC,qBAAI,CAACmD,IAAL,GADwC,CAC3B;;AACb;AACC,WAJgB,CAAjB;AAKA,eAAKA,IAAL;AAED;;;sCAEa;AACd,cAAI,KAAK44B,WAAT,EAAsB;AACrB,iBAAKA,WAAL,CAAiB34B,WAAjB;AACE;;AACD,cAAI,KAAKP,SAAT,EAAoB;AACrB,iBAAKA,SAAL,CAAeO,WAAf;AACA;AACD;;;+BAEO;AACP,cAAI,KAAKrE,IAAL,CAAUsE,MAAV,KAAqB,IAAzB,EAA+B;AAC3B,iBAAKiqB,MAAL;AACH,WAFD,MAEO;AACN,iBAAKhqB,MAAL;AACA;AACA;;;iCAEc;;;;;;;;;;;AACTC,0B,GAAS,mDAAM,GAAN,C;AACf,yBAAKw4B,WAAL,GAAoBx4B,MAAM,CAACxD,SAAP,CAAiB,UAAM0D,GAAN;AAAA,6BAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAChD,qCAAKN,IAAL;;AADgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAb;AAAA,qBAAjB,CAApB;;;;;;;;;AAGC;;;iCAEc;;;;;;;;;AACP6rC,+B,GAAc,iDAAOC,MAAP,CAAc,KAAK7sC,KAAL,CAAWsB,QAAX,CAAoBC,MAApB,CAA2BqB,IAAzC,C;AACpB,yBAAKinB,WAAL,GAAmB+iB,WAAnB;AACA,yBAAKH,WAAL,GAAmB;AACjBC,6BAAO,EAAE,EADQ;AAEjB5mB,0BAAI,EAAE;AAFW,qBAAnB;AAIA,yBAAK6mB,aAAL,GAAqB,EAArB;;AACoB,2BAAM,KAAK5vC,GAAL,CAAS0vC,WAAT,CAAqB,KAAK5iB,WAA1B,CAAN;;;AAAd4iB,+B;;AACN,wBAAI,CAACA,WAAW,CAAC9qC,KAAjB,EAAwB;AACtB,2BAAK8qC,WAAL,GAAmBA,WAAW,CAACpuC,MAA/B;AACD;;AACD,yBAAKouC,WAAL,CAAiB3mB,IAAjB,CAAsBxjB,OAAtB,CAA8B,UAAA40B,OAAO,EAAI;AACvCA,6BAAO,CAAC4V,YAAR,GAAuB,iDAAOD,MAAP,CAAc3V,OAAO,CAACvf,MAAtB,CAAvB;AACAuf,6BAAO,CAAC6V,cAAR,GAAyB,iDAAOF,MAAP,CAAc3V,OAAO,CAAC8V,QAAtB,CAAzB;AACD,qBAHD;AAIA,yBAAKP,WAAL,CAAiBC,OAAjB,CAAyBpqC,OAAzB,CAAiC,UAAA40B,OAAO,EAAI;AAC1CA,6BAAO,CAAC4V,YAAR,GAAuB,iDAAOD,MAAP,CAAc3V,OAAO,CAACvf,MAAtB,CAAvB;AACAuf,6BAAO,CAAC6V,cAAR,GAAyB,iDAAOF,MAAP,CAAc3V,OAAO,CAAC8V,QAAtB,CAAzB;AACD,qBAHD;;AAK2B,2BAAM,KAAKjwC,GAAL,CAASkwC,WAAT,CAAqB,KAAKpjB,WAA1B,CAAN;;;AAArBqjB,sC;;wBACDA,kBAAkB,CAACvrC,K;;;;;AAChBsrC,+B,GAAcC,kBAAkB,CAAC7uC,M;;AACjB,2BAAM,KAAKtB,GAAL,CAAS4vC,aAAT,CAAuBM,WAAvB,CAAN;;;AAAhBN,iC;;AACN,wBAAI,CAACA,aAAa,CAAChrC,KAAnB,EAA0B;AACxB,2BAAKgrC,aAAL,GAAqBA,aAAa,CAACtuC,MAAnC;AACA,2BAAKsuC,aAAL,CAAmBrqC,OAAnB,CAA2B,UAAA40B,OAAO,EAAI;AACpCA,+BAAO,CAAC4V,YAAR,GAAuB,iDAAOD,MAAP,CAAc3V,OAAO,CAACvf,MAAtB,CAAvB;AACAuf,+BAAO,CAAC6V,cAAR,GAAyB,iDAAOF,MAAP,CAAc3V,OAAO,CAAC8V,QAAtB,CAAzB;AACD,uBAHD;AAID;;;;;;;;;AAEJ;;;;;;;uBA3FUR,e,EAAe,+H,EAAA,uH,EAAA,wI,EAAA,0I;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,80C;AAAA;AAAA;ADX5B;;AACI;;AAEE;;AAGE;;AACE;;AACE;;AAAI;;AAAM;;AACV;;AAAI;;AAAiB;;AACvB;;AACF;;AAGA;;AACI;;AAGE;;AACE;;AAWA;;AAMA;;AA4BF;;AAKA;;AAwBA;;AAKA;;AAuBF;;AAGF;;AACF;;AAIF;;AAEF;;AACF;;AAEA;;AACE;;AAEF;;;;AAhIc;;AAAA;;AAUiB;;AAAA;;AAWiB;;AAAA;;AAM2B;;AAAA;;AA4B7B;;AAAA;;AAK2B;;AAAA;;AAwB3B;;AAAA;;AAK2B;;AAAA;;;;;;;;;;sECvF9DA,e,EAAe;cAL3B,uDAK2B;eALjB;AACThuC,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgHhB;;AACC;;AAA0C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACzC;;AACC;;AACD;;AACA;;AACC;;AACC;;AAA8B;;AAA2G;;AAAmE;;AAAO;;AACnN;;AAAwI;;;;;;AAA2E;;AACpN;;AACD;;AACD;;AACD;;;;;;;;AAXkG;;AAAA;;AAM2C;;AAAA;;AACD;;AAAA;;;;;;AAmB/I;;AACC;;AACC;;;;AACE;;AAA8B;;;;AAA8C;;AAC/E;;AACD;;;;AAHE;;AAAA;;AACgC;;AAAA;;;;;;AAkDxB;;AAAkF;;AAEhF;;;;;;AAF0C;;AAAsC;;AAAA;;;;;;AAWtF;;AACC;;AAAiC;;AAA8B;;AAAK;;AAAM;;AAC1E;;;;AAKD;;;;AAFE;;AAAA;;;;;;AAMA;;AACA;;AACA;;;;;;AADA;;AAAA;;;;;;AAUC;;AACC;;;;;;AACD;;;;;;AADC;;AAAA;;;;;;AAmBJ;;AACE;;AAAqF;;;;;;AAD9C;;AACvC;;AAAA;;;;;;AAoBF;;AACE;;AAAkC;;;;;;AADuB;;AACzD;;AAAA;;;;;;;;;;;;;;;;;;;;;;AA1HR;;AACC;;AAEC;;AACC;;AAAgE;;;;AAA0C;;AAC1G;;AACC;;AACC;;AACC;;AACC;;AACC;;AACC;;AACD;;AACD;;AACA;;AAGC;AAAA;;AAAA;;AAAA;AAAA;;;;AAHD;;AAQA;;AACC;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AACF;;AAAsC;;;;AAAuC;;AAC9E;;AACD;;AACD;;AACD;;AACA;;AACC;;AACC;;AAAiC;;AAA8B;;AAAK;;AAAM;;AAC1E;;AAGC;AAAA;;AAAA;;AAAA;AAAA;;;;AAHD;;AAOD;;AACD;;AACA;;AACC;;AACC;;AAAgE;;;;AAAyB;;AACzF;;AACC;;AACC;;AAA8B;AAAA;;AAAA;;AAAA;AAAA,WAAiC,QAAjC,EAAiC;AAAA;;AAAA;;AAAA;AAAA,SAAjC;;AAC7B;;AAGD;;AACD;;AACD;;AACD;;AACD;;AACD;;AACA;;AACC;;AACC;;AAQA;;AACC;;AAAgE;;AAAa;;AAC7E;;AACC;;AAGD;;AACD;;AACD;;AACA;;AACC;;AACC;;AAAgE;;;;AAA2B;;AAC3F;;AACC;;AACC;;AAGA;;AAAwC;;AAAG;;AAC5C;;AACD;;AACD;;AACD;;AACD;;AACD;;AACD;;AAGA;;AACC;;AACC;;;;AACD;;AACA;;AACC;;AACC;;AAA8B;AAAA;;AAAA;;AAAA;AAAA,WAA2B,QAA3B,EAA2B;AAAA;;AAAA;;AAAA;AAAA,SAA3B;;AAC7B;;AAGD;;AACD;;AACD;;AACD;;AAGA;;AACC;;AACC;;;;AACD;;AACA;;AACC;;AACC;;AAEC;AAAA;;AAAA;;AAAA;AAAA,WAAyB,QAAzB,EAAyB;AAAA;;AAAA;;AAAA;AAAA,SAAzB;;AAIA;;;;AAGD;;AACA;;AAKC;AAAA;;AAAA;;AAAA;AAAA,WAA8B,eAA9B,EAA8B;AAAA;;AAAA;;AAAA;AAAA,SAA9B;;;;AALD;;AASD;;AACD;;AACD;;AAGA;;AACC;;AACA;;AACC;;AAA8C;AAAA;;AAAA;;AAAA;AAAA;;AAC7C;;;;AACD;;AACD;;AACD;;AACD;;AACD;;;;;;AAhJmE;;AAAA;;AAO1D;;AAAA;;AAOD;;AAAA;;AADA;;AAOuC;;AAAA;;AAYvC;;AAAA;;AADA;;AAQ+D;;AAAA;;AAGhC;;AAAA;;AACrB;;AAAA;;AAWa;;AAAA;;AAWF;;AAAA;;AAQ0C;;AAAA;;AAG9B;;AAAA;;AAerC;;AAAA;;AAI+B;;AAAA;;AACrB;;AAAA;;AAWV;;AAAA;;AAME;;AAAA,gGAAyB,SAAzB,EAAyB,kIAAzB;;AAIQ;;AAAA;;AAOR;;AAAA;;AAGA,gGAAyB,SAAzB,EAAyB,kIAAzB;;AAYD;;AAAA;;;;;;;;AA3Sd;;AAKC;;AACC;;AACC;;AAEC;;AACE;;AAEC;;AACC;;AACC;;AAAI;;AAAW;;AAChB;;AACD;;AACA;;AACE;;AACC;;AACD;;AACF;;AACD;;AACD;;AACF;;AACD;;AACD;;AAEA;;AACC;;AAGC;;AACC;;AACC;;AAEA;;AACC;;AAAoB;;AAAO;;AAC5B;;AACA;;AACC;;AAAoC;;AAAmB;;AACxD;;AAEA;;AACD;;AACD;;AAIA;;AACE;;AACC;;AAGA;;AACC;;AAA8G;AAAA;;AAAA;;AAAA,yCAAyB,KAAzB;AAA8B,SAA9B;;AAE7G;;AACC;;AACC;;AAAoB;;AAAW;;AAChC;;AACD;;AACA;;AACC;;AACC;;AACC;;AACD;;AACA;;AACC;;AACC;;AAAyB;;;;;;AAA2D;;AACrF;;AACA;;AACC;;AAAmC;;AAAwB;;AAAC;;AAAO;;AACpE;;AACD;;AACD;;AACD;;AAED;;AACD;;AAGA;;AACC;;AAA+G;AAAA;;AAAA;;AAAA,yCAAyB,MAAzB;AAA+B,SAA/B;;AAE9G;;AACC;;AACC;;AAAoB;;AAAY;;AACjC;;AACD;;AACA;;AACC;;AACC;;AACC;;AACD;;AACA;;AACC;;AACC;;AAAyB;;;;;;AAA4D;;AACtF;;AACA;;AACC;;AAAmC;;AAAwB;;AAAC;;AAAO;;AACpE;;AACD;;AACD;;AACD;;AAED;;AACD;;AAGA;;AACC;;AACC;;AACC;;AACC;;AAAoB;;AAAqB;;AAC1C;;AACD;;AAEA;;AACC;;AAEE;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AAEpC;;AAcD;;AAEF;;AACD;;AACD;;AACD;;AAGA;;AACC;;AAEC;;AAEC;;AAMA;;AAqJD;;AAED;;AACD;;AAED;;AACD;;AACD;;AAGD;;AACD;;AAED;;;;;;AAtR0C;;AAAA;;AAeyB;;AAAA;;AAc9B;;AAAA;;AAc8B;;AAAA;;AAc9B;;AAAA;;AAc8B;;AAAA;;AAU9C;;AAAA,mGAA0B,aAA1B,EAA0B,uBAA1B;;AAEiB;;AAAA;;AA2BxB;;AAAA;;AAMA;;AAAA;;;;;;AA+MJ;;AACC;;AAAsB;;;;AAA0D;;AAChF;;AACG;;;;AAAmG;;AAEvG;;;;;;AAJuB;;AAAA;;AAEnB;;AAAA;;;;;;AASD;;AAA8B;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAC9B;;AACC;;;;AACD;;;;;;AADC;;AAAA;;;;;;AAED;;AACC;;;;AACD;;;;;;AADC;;AAAA;;;;;;AAED;;AACC;;;;AACD;;;;;;AADC;;AAAA;;;;;;AAED;;AACC;;;;AACD;;;;;;AADC;;AAAA;;;;;;AAED;;AACC;;;;AACD;;;;;;AADC;;AAAA;;;;;;AAcD;;AAA4B;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAC5B;;AACC;;;;AACD;;;;;;AADC;;AAAA;;;;;;AAED;;AACC;;;;AACD;;;;;;AADC;;AAAA;;;;;;AAED;;AACC;;;;AACD;;;;;;AADC;;AAAA;;;;;;AAED;;AACC;;;;AACD;;;;;;AADC;;AAAA;;;;;;AAED;;AACC;;;;AACD;;;;;;AADC;;AAAA;;;;;;;;AAmBH;;AAAyJ;AAAA;;AAAA;;AAAA;AAAA;;AACxJ;;;;AACD;;;;AADC;;AAAA;;;;;;AAED;;AACC;;;;AACD;;;;AADC;;AAAA;;;;;;;;AAjHZ;;AAEE;;AACC;;AACC;;AAGC;;AACC;;AACC;;AAAI;;;;AAAuD;;AAC5D;;AACD;;AAED;;AACD;;AACD;;AAGA;;AACC;;AAGC;;AACC;;AACC;;AAGG;;AACC;;AAA+B;;;;AAAyD;;AACzF;;AACA;;AACC;;AACC;;AAAM;;;;;;AAA0I;;AACjJ;;AACD;;AACA;;AACC;;AAMD;;AACA;;AACC;;AACC;;AAA6B;;;;AAAgD;;AAC7E;;AACC;;AACC;;AACA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGD;;AACD;;AACA;;AACC;;AAA8D;;AAAmB;;AAClF;;AACA;;AAA4C;;;;;;AAA2I;;AACvL;;AAA6B;;;;AAAkD;;AAChF;;AACA;;AACC;;AAA6B;;;;AAA8C;;AAC3E;;AACC;;AACC;;AACA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGD;;AACD;;AACA;;AACC;;AAA4D;;AAAiB;;AAC9E;;AACA;;AAA4C;;;;;;AAA2I;;AACvL;;AAA6B;;;;AAAqD;;AACnF;;AACD;;AAEA;;AACC;;AACC;;AAAgI;AAAA;;AAAA;;AAAA,uCAAuB,MAAvB;AAA6B,SAA7B;;AAC/H;;;;AACD;;AACD;;AACA;;AACC;;AAGA;;AAGD;;AACD;;AAOH;;AACD;;AACD;;AACD;;AACD;;AAEF;;;;;;AAxHW;;AAAA;;AAmB8B;;AAAA;;AAIxB;;AAAA;;AAIc;;AAAA;;AASS;;AAAA;;AAEzB;;AAAA;;AACI;;AAAA;;AAC0B;;AAAA;;AAGU;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGV;;AAAA;;AAM9B;;AAAA;;AAA2D;;AAAA;;AAEnB;;AAAA;;AACf;;AAAA;;AAGA;;AAAA;;AAEzB;;AAAA;;AACI;;AAAA;;AAC0B;;AAAA;;AAGU;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGV;;AAAA;;AAM9B;;AAAA;;AAAyD;;AAAA;;AAEjB;;AAAA;;AACf;;AAAA;;AAO5B;;AAAA;;AAIyH;;AAAA;;AAGA;;AAAA;;;;QCnaxHyuC,a;;;AAwDZ,6BACSxxC,MADT,EAESY,aAFT,EAGS+I,kBAHT,EAIS4N,mBAJT,EAKSnW,GALT,EAMSw+B,QANT,EAOQ1+B,KAPR,EAQSD,QART,EASQH,QATR,EAUSgJ,IAVT,EAWSC,KAXT,EAYS/I,IAZT,EAY0B;AAAA;;AAXjB,aAAAhB,MAAA,GAAAA,MAAA;AACA,aAAAY,aAAA,GAAAA,aAAA;AACA,aAAA+I,kBAAA,GAAAA,kBAAA;AACA,aAAA4N,mBAAA,GAAAA,mBAAA;AACA,aAAAnW,GAAA,GAAAA,GAAA;AACA,aAAAw+B,QAAA,GAAAA,QAAA;AACD,aAAA1+B,KAAA,GAAAA,KAAA;AACC,aAAAD,QAAA,GAAAA,QAAA;AACD,aAAAH,QAAA,GAAAA,QAAA;AACC,aAAAgJ,IAAA,GAAAA,IAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAA/I,IAAA,GAAAA,IAAA;AAnET,aAAA6+B,GAAA,GAAM,SAAN;AAEA,aAAA7lB,WAAA,GAAc,MAAd;AAEA,aAAA9R,QAAA,GAAW,KAAKtH,aAAL,CAAmBb,MAAnB,CAA0BmI,QAArC;AACA,aAAA63B,aAAA,GAAqB,EAArB;AACA,aAAAC,aAAA,GAAqB,EAArB;AACA,aAAAyR,mBAAA,GAAsB,EAAtB;AACA,aAAAtR,mBAAA,GAAsB,IAAI,oDAAJ,CAAoB,EAApB,CAAtB;AACA,aAAAC,eAAA,GAAkB,KAAlB;AACA,aAAAC,gBAAA,GAAmB,EAAnB;AACA,aAAAqR,QAAA,GAAW,CAAX;AAEA,aAAApY,WAAA,GAAmB,EAAnB;AACA,aAAAqY,aAAA,GAAgB,IAAhB;AACA,aAAA1X,gBAAA,GAAmB,CAAnB;AAEA,aAAA3Z,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAlU,IAAA,GAAO,EAAP;AACA,aAAAmU,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AAEA,aAAAsf,OAAA,GAAU,CACT;AAAEt0B,cAAI,EAAE,KAAR;AAAeu0B,mBAAS,EAAE,KAA1B;AAAiCrxB,eAAK,EAAE;AAAxC,SADS,EAET;AAAElD,cAAI,EAAE,kBAAR;AAA4Bu0B,mBAAS,EAAE,MAAvC;AAA+CrxB,eAAK,EAAE;AAAtD,SAFS,EAGT;AAAElD,cAAI,EAAE,oBAAR;AAA8Bu0B,mBAAS,EAAE,KAAzC;AAAgDrxB,eAAK,EAAE;AAAvD,SAHS,CAAV;AAMA,aAAAsxB,cAAA,GAAiB,KAAKF,OAAL,CAAa,CAAb,CAAjB;AAEA,aAAAz5B,MAAA,GAAS,IAAT;AACA,aAAA45B,SAAA,GAAY,IAAI,sDAAJ,CAAc,CAAd,CAAZ;AACA,aAAArkB,UAAA,GAA4B,IAA5B;AACA,aAAAskB,SAAA,GAAuB,IAAI,sDAAJ,CAAc,CAAd,CAAvB;AACA,aAAAC,WAAA,GAAmB,EAAnB;AACA,aAAAC,aAAA,GAAqB,EAArB;AACA,aAAAC,eAAA,GAAkB,EAAlB,CAsB0B,CArB1B;;AACA,aAAAC,WAAA,GAAc,EAAd;AACA,aAAAC,WAAA,GAAc,EAAd;AACA,aAAAC,aAAA,GAAgB,EAAhB;AACA,aAAAC,eAAA,GAAkB,IAAlB;AACC,aAAA1lB,qBAAA,GAAwB,KAAxB;AAEA,aAAAwiB,WAAA,GAAc,IAAd;AAgBA,aAAKtc,QAAL;AACA,aAAKtc,IAAL;AACC;;;;sCACa;AACd,cAAI,KAAK44B,WAAT,EAAsB;AACrB,iBAAKA,WAAL,CAAiB34B,WAAjB;AACA;AACD;;;+BACM;AACN,cAAI,KAAKrE,IAAL,CAAUsE,MAAV,KAAqB,IAAzB,EAA+B;AAC9B,gBAAI,KAAK4C,QAAL,KAAkBO,SAAlB,IAA+B,KAAKP,QAAL,CAAckH,MAAd,GAAuB,CAA1D,EAA6D;AAC5D,mBAAK+xB,iBAAL;AACA;AACD,WAJD,MAIO;AACN,iBAAK57B,MAAL;AACA;AACD;;;iCAEc;;;;;;;;;;;AACRC,0B,GAAS,mDAAM,GAAN,C;AACf,yBAAKw4B,WAAL,GAAmBx4B,MAAM,CAACxD,SAAP,CAAiB,UAAM0D,GAAN;AAAA,6BAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAChD,qCAAKN,IAAL;;AADgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAb;AAAA,qBAAjB,CAAnB;;;;;;;;;AAGA;;;mCACU;AAAA;;AACV,eAAK2E,KAAL,CAAWmF,GAAX,CAAe,oBAAf,EAAqClN,SAArC,CAA+C,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAAC4O,IAAL,GAAY5O,GAAZ;AAAkB,WAApF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,oBAAf,EAAqClN,SAArC,CAA+C,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAAC6O,IAAL,GAAY7O,GAAZ;AAAkB,WAApF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,oBAAf,EAAqClN,SAArC,CAA+C,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACrF,IAAL,GAAYqF,GAAZ;AAAkB,WAApF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,oBAAf,EAAqClN,SAArC,CAA+C,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAAC8O,IAAL,GAAY9O,GAAZ;AAAkB,WAApF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,oBAAf,EAAqClN,SAArC,CAA+C,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAAC+O,IAAL,GAAY/O,GAAZ;AAAkB,WAApF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,oBAAf,EAAqClN,SAArC,CAA+C,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACgP,IAAL,GAAYhP,GAAZ;AAAkB,WAApF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,oBAAf,EAAqClN,SAArC,CAA+C,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACiP,IAAL,GAAYjP,GAAZ;AAAkB,WAApF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,oBAAf,EAAqClN,SAArC,CAA+C,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACkP,IAAL,GAAYlP,GAAZ;AAAkB,WAApF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,oBAAf,EAAqClN,SAArC,CAA+C,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACmP,IAAL,GAAYnP,GAAZ;AAAkB,WAApF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,qBAAf,EAAsClN,SAAtC,CAAgD,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACoP,KAAL,GAAapP,GAAb;AAAmB,WAAtF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,qBAAf,EAAsClN,SAAtC,CAAgD,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACqP,KAAL,GAAarP,GAAb;AAAmB,WAAtF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,qBAAf,EAAsClN,SAAtC,CAAgD,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACsP,KAAL,GAAatP,GAAb;AAAmB,WAAtF;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,qBAAf,EAAsClN,SAAtC,CAAgD,UAAC0P,GAAD,EAAiB;AAAE,mBAAI,CAACuP,KAAL,GAAavP,GAAb;AAAmB,WAAtF;AACA;;;uCACoB;;;;;;;;;;AACdtL,4B,GAAW,E;;AACF,2BAAM,KAAKhF,GAAL,CAAS8E,MAAT,EAAN;;;AAATA,0B;;AACN,wBAAI,CAACA,MAAM,CAACF,KAAZ,EAAmB;AAClBE,4BAAM,CAACxD,MAAP,CAAciE,OAAd,CAAsB,UAAAR,KAAK,EAAI;AAC9BC,gCAAQ,CAACD,KAAK,CAACmD,OAAP,CAAR,GAA0BnD,KAA1B;AACA,uBAFD;AAGA,qB,CAED;;;;;;;kCACoB,KAAK+B,Q;;;;;;;;AAAhBrC,2B;;AACY,2BAAM,KAAKzE,GAAL,CAAS2E,WAAT,CAAqBF,OAAO,CAAC7G,EAA7B,CAAN;;;AAAd+G,+B;;wBACDA,WAAW,CAACC,K;;;;;AACZC,sB,GAAKF,WAAW,CAACrD,M;AACrBmD,2BAAO,CAACyzB,WAAR,GAAsB,EAAtB;;;;;;AACA,uCAAkBrzB,EAAE,CAACC,MAArB,+HAA6B;AAApBC,2BAAoB;;AAC5B,0BAAIC,QAAQ,CAACC,cAAT,CAAwBF,KAAK,CAACG,IAA9B,CAAJ,EAAyC;AACxCH,6BAAK,CAACI,SAAN,GAAkBH,QAAQ,CAACD,KAAK,CAACG,IAAP,CAA1B;;AACA,4BAAIH,KAAK,CAACI,SAAN,CAAgB6C,WAAhB,IAA+B,KAA/B,IAAwCjD,KAAK,CAACI,SAAN,CAAgB6C,WAAhB,IAA+B,MAA3E,EAAmF;AAClFvD,iCAAO,CAACyzB,WAAR,CAAoBzyB,IAApB,CAAyBV,KAAzB;AACA;AACD;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACDN,2BAAO,CAACjB,WAAR,GAAsBqB,EAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGF,yBAAKoI,aAAL;;;;;;;;;AACA;;;mCAEgB;;;;;;;;;;;AACVzI,0B,GAAS,KAAK5F,MAAL,CAAY2F,QAAZ,CAAqBy7B,W;AAC9Bv7B,2B,GAAU,KAAK7F,MAAL,CAAY2F,QAAZ,CAAqBC,MAArB,CAA4BC,O;;AAC5C,wBAAID,MAAM,IAAIA,MAAM,CAACkB,MAArB,EAA6B;AAC5B,2BAAKA,MAAL,GAAclB,MAAM,CAACkB,MAArB;AACA;;AACD,wBAAIlB,MAAM,IAAIA,MAAM,CAACy7B,EAArB,EAAyB;AACxB,2BAAKN,WAAL,GAAmBn7B,MAAM,CAACy7B,EAA1B;AACA,2BAAKC,mBAAL;AACA;;AAED,yBAAK33B,kBAAL,CAAwBvH,eAAxB,G,CACA;;AACMm/B,wC,GAAuB,KAAKr5B,QAAL,CAAcd,MAAd,CAAqB,UAACuP,QAAD,EAAWrP,OAAX,EAAuB;AACxE,0BAAIqP,QAAJ,EAAc;AACb,+BAAOA,QAAP;AACA;;AACD,0BAAMzQ,MAAM,GAAGoB,OAAO,CAAC1C,WAAR,CAAoBsB,MAAnC;;AACA,0BAAIA,MAAJ,EAAY;AACX,4BAAMqX,MAAM,GAAGrX,MAAM,CAACqX,MAAP,CAAc,UAAAikB,SAAS,EAAI;AACzC,iCAAOA,SAAS,CAACtvB,OAAV,GAAoB,CAA3B;AACA,yBAFc,CAAf;;AAIA,4BAAIqL,MAAM,IAAIA,MAAM,CAACnO,MAAP,GAAgB,CAA9B,EAAiC;AAChC,iCAAO9H,OAAO,CAACtI,EAAf;AACA,yBAFD,MAEO;AACN,iCAAO,IAAP;AACA;AACD,uBAVD,MAUO;AACN,+BAAO,IAAP;AACA;AACD,qBAlB4B,EAkB1B,IAlB0B,C;;AAmB7B,wBAAI6G,OAAO,KAAK4C,SAAhB,EAA2B;AAC1B,2BAAKo4B,aAAL,GAAqBh7B,OAArB;AACA,qBAFD,MAEO,IAAI07B,oBAAJ,EAA0B;AAChC,2BAAKV,aAAL,GAAqBU,oBAArB;AACA,qBAFM,MAEA;AACN,2BAAKV,aAAL,GAAqB,KAAK34B,QAAL,CAAckH,MAAd,GAAuB,KAAKlH,QAAL,CAAc,CAAd,EAAiBlJ,EAAxC,GAA6C,EAAlE;AACA;;AACD,yBAAK+K,KAAL,CAAW4X,YAAX,CAAwB3f,SAAxB,CAAkC,UAACC,KAAD,EAA4B;AAC7D,6BAAI,CAACyf,QAAL;AACA,qBAFD;AAGA,yBAAKnT,YAAL;;;;;;;;;AACA,S,CAED;;;;wCACgB;AACf,cAAMoyB,SAAS,GAAG,KAAKc,kBAAL,CAAwB,KAAK36B,MAAL,IAAe,CAAvC,EAA0CS,IAA1C,CAA+C,KAAKm5B,SAApD,CAAlB;;AACA,cAAIC,SAAS,CAACe,GAAV,CAAc,CAAd,CAAJ,EAAsB;AACrB,iBAAKrlB,UAAL,GAAkB,CAAlB;AACA;AACA,WALc,CAOf;;;AACA,cAAMslB,SAAS,GAAG,KAAK7gC,QAAL,CAAcA,QAAd,CAAuB8gC,eAAvB,KAA2C,KAA3C,GAAmD,OAAnD,GAA6D,GAA/E,CARe,CAUf;;AACA,cAAMC,UAAU,GAAG,KAAK/3B,IAAL,CAAU+1B,GAAV,CACjBiC,SADiB,CACPnB,SADO,EAEjBoB,KAFiB,CAEX,KAAK7gC,KAAL,CAAWA,KAAX,CAAiB8gC,SAFN,EAGjBD,KAHiB,CAGXJ,SAHW,EAIjBM,GAJiB,CAIbN,SAJa,EAKjB/xB,QALiB,EAAnB;AAMA,eAAKyM,UAAL,GAAkBwlB,UAAlB;AACA,S,CAED;;;;uCACe;AACd,cAAMA,UAAU,GAAG,KAAKxlB,UAAL,IAAmB,CAAtC;AACA,cAAMskB,SAAS,GAAG,KAAK72B,IAAL,CAAU+1B,GAAV,CAAcqC,SAAd,CAAwB,IAAI,sDAAJ,CAAcL,UAAd,EAA0BI,GAA1B,CAA8B,KAAK/gC,KAAL,CAAWA,KAAX,CAAiB8gC,SAA/C,CAAxB,CAAlB;AACA,cAAMG,MAAM,GAAG,KAAKr4B,IAAL,CAAU+1B,GAAV,CAAcuC,QAAd,CAAuBzB,SAAvB,CAAf;AACA,cAAM0B,SAAS,GAAG,KAAKC,sBAAL,CAA4B,KAAKx4B,IAAL,CAAU+1B,GAAV,CAAc0C,QAAd,CAAuBJ,MAAvB,CAA5B,CAAlB;AAEA,eAAKr7B,MAAL,GAAcu7B,SAAS,CAACzyB,QAAV,EAAd;AACA;;;4CAEmB;AAAA;;AACnB,cAAM4yB,iBAAiB,GAAG,KAAKt6B,QAAL,CAAcqV,MAAd,CAAqB,UAAAjL,CAAC;AAAA,mBAAIA,CAAC,CAACtT,EAAF,KAAS,QAAI,CAAC6hC,aAAlB;AAAA,WAAtB,CAA1B;AAEA,cAAI4B,SAAS,GAAG,EAAhB;AAHmB;AAAA;AAAA;;AAAA;AAInB,mCAAsBD,iBAAtB,wIAAyC;AAAA,kBAA9B38B,OAA8B;AACxC48B,uBAAS,CAAC57B,IAAV,CAAe;AACdoF,oBAAI,EAAEpG,OAAO,CAACkM,eAAR,GAA0BlM,OAAO,CAACkM,eAAR,GAA0B,KAApD,GAA4D,EADpD;AAEdlM,uBAAO,EAAEA,OAAO,CAAC7G;AAFH,eAAf;AAIA;AATkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUnB,eAAKmhC,mBAAL,CAAyBpR,IAAzB,CAA8B0T,SAA9B;AACA;;;;;;AAUA;;;wCAEe58B,O,EAAS;AACxB,eAAKu6B,eAAL,GAAuB,KAAvB;AACA,eAAKW,WAAL,GAAmBl7B,OAAnB;AACA,eAAKs7B,iBAAL;AACA,eAAKG,mBAAL;AACA;;;8CAE2B;;;;;;;;;;;AAC3B;AACAoB,8BAAU,CAAC;AAAA,6BAAO,QAAI,CAACtC,eAAL,GAAuB,KAA9B;AAAA,qBAAD,EAAuC,GAAvC,CAAV,C,CAEA;;AACA,yBAAKW,WAAL,GAAmB,KAAKA,WAAL,CAAiB5oB,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,CAAnB;AAEA,yBAAKkoB,gBAAL,GAAwB,KAAK12B,kBAAL,CAAwBqI,cAAxB,CAAuC,KAAK+uB,WAA5C,CAAxB,C,CAEA;;;AACoB,2BAAM,KAAK3/B,GAAL,CAAS2E,WAAT,CAAqB,KAAKg7B,WAA1B,CAAN;;;AAAdh7B,+B;;AACN,wBAAIA,WAAW,CAACC,KAAhB,EAAuB;AACtB,0BAAID,WAAW,CAACC,KAAZ,KAAsB,KAAKsa,IAA/B,EAAqC;AACpC,6BAAK4gB,eAAL,GAAuB,CAAvB;AACA,uBAFD,MAEO;AACN,6BAAKA,eAAL,GAAuB,CAAvB;AACA;AACD,qBAND,MAMO,IAAIn7B,WAAW,CAACrD,MAAZ,IAAsBqD,WAAW,CAACrD,MAAZ,CAAmBwD,MAA7C,EAAqD;AAC3D,2BAAKg7B,eAAL,GAAuB,CAAvB;AACA;;;;;;;;;AACD;;;0CAEuB;;;;;;;;;0BACnB,KAAKp6B,MAAL,IAAe2B,SAAf,IAA4B,KAAK3B,MAAL,IAAe,C;;;;;wDACvC,KAAKyQ,mBAAL,CAAyBjI,WAAzB,CAAqC,kCAArC,C;;;AAER,yBAAKqxB,SAAL,GAAiB,IAAI,sDAAJ,CAAc,CAAd,CAAjB;AACA,yBAAKD,SAAL,GAAiB,IAAI,sDAAJ,CAAc,CAAd,CAAjB;;AACgB,2BAAM,KAAKt/B,GAAL,CAASkpC,qBAAT,CAA+B,KAAKvJ,WAApC,CAAN;;;AAAV6Q,2B;;wBACDA,OAAO,CAAClvC,M;;;;;wDACL,KAAK6U,mBAAL,CAAyBjI,WAAzB,CAAqC,KAAKiR,IAA1C,C;;;0BAEJ,CAAC,KAAKsgB,aAAN,IAAuB,CAAC,KAAKE,W;;;;;wDACzB,KAAKxpB,mBAAL,CAAyBjI,WAAzB,CAAqC,KAAKjD,IAA1C,C;;;;AAGK,2BAAM,KAAKjL,GAAL,CAAS6sC,kBAAT,CAA4B,KAAKpN,aAAjC,EAAgD,KAAKb,aAAL,CAAmB15B,IAAnE,CAAN;;;AAAPurC,wB;;wBAGDA,I;;;;;wDACG,KAAKt6B,mBAAL,CAAyB0B,SAAzB,CAAmC,KAAKuH,IAAxC,C;;;0BAEJ,KAAKqgB,aAAL,KAAuB,KAAKE,W;;;;;wDACxB,KAAKxpB,mBAAL,CAAyBjI,WAAzB,CAAqC,KAAKmR,IAA1C,C;;;AAGRoxB,wBAAI,CAACC,SAAL,GAAiB,IAAI,sDAAJ,CAAcD,IAAI,CAAC3/B,OAAL,IAAgB,CAA9B,CAAjB,C,CACA;;AACA,yBAAK0uB,WAAL,GAAmBiR,IAAnB,C,CACA;;AACMzrC,4B,GAAW,E;;AACF,2BAAM,KAAKhF,GAAL,CAAS8E,MAAT,EAAN;;;AAATA,0B;;AACN,wBAAI,CAACA,MAAM,CAACF,KAAZ,EAAmB;AAClBE,4BAAM,CAACxD,MAAP,CAAciE,OAAd,CAAsB,UAAAR,KAAK,EAAI;AAC9BC,gCAAQ,CAACD,KAAK,CAACmD,OAAP,CAAR,GAA0BnD,KAA1B;AACA,uBAFD;AAGA;;AACD,wBAAIC,QAAQ,CAACC,cAAT,CAAwBwrC,IAAI,CAACvrC,IAA7B,CAAJ,EAAwC;AACvCurC,0BAAI,CAACtrC,SAAL,GAAiBH,QAAQ,CAACyrC,IAAI,CAACvrC,IAAN,CAAzB;AACA;;AAEKyrC,2B,GAAU,IAAI,sDAAJ,CAAc,KAAKjrC,MAAnB,EAA2BkrC,EAA3B,E;;0BACZD,OAAO,GAAGF,IAAI,CAACtrC,SAAL,CAAekP,Q;;;;;AACtBw8B,+B,GAAc,8BAA8BJ,IAAI,CAACtrC,SAAL,CAAe6C,WAA7C,GAA2D,yBAA3D,GAAuFyoC,IAAI,CAACtrC,SAAL,CAAekP,QAAtG,GAAiH,kB;wDAC9H,KAAK8B,mBAAL,CAAyBjI,WAAzB,CAAqC2iC,WAArC,C;;;AAGR;AACMtR,6B,GAAY,IAAI,sDAAJ,CAAc,KAAK75B,MAAnB,EAA2B+N,YAA3B,CAAwClM,IAAI,CAACgH,GAAL,CAAS,EAAT,EAAYkiC,IAAI,CAACtrC,SAAL,CAAekP,QAA3B,CAAxC,C;AAClB,yBAAKkrB,SAAL,GAAiBA,SAAS,CAACp5B,IAAV,CAAe,KAAKm5B,SAApB,CAAjB;AACM2B,6B,GAAY,KAAK1B,SAAL,CAAesB,GAAf,CAAmBt5B,IAAI,CAACgH,GAAL,CAAS,EAAT,EAAYkiC,IAAI,CAACtrC,SAAL,CAAekP,QAA3B,CAAnB,C;;0BAEd,KAAK3O,MAAL,GAAc,CAAd,IAAmB65B,SAAS,CAACuR,UAAV,CAAqB,CAArB,C;;;;;wDACf,KAAK36B,mBAAL,CAAyBjI,WAAzB,CAAqC,KAAKoR,IAA1C,C;;;yBAOJmxB,IAAI,CAACC,SAAL,CAAeK,KAAf,CAAqBxR,SAArB,EAAgCuR,UAAhC,CAA2C,CAA3C,C;;;;;wDACI,KAAK36B,mBAAL,CAAyB0B,SAAzB,CAAmC,KAAK2H,IAAL,cAAgB,KAAKof,aAAL,CAAmBz5B,SAAnB,CAA6BQ,SAA7C,CAAnC,C;;;AAGR;AACA,yBAAK25B,SAAL,GAAiB,KAAKC,SAAL,CAAeyR,GAAf,CAAmBzpC,IAAI,CAACgH,GAAL,CAAS,EAAT,EAAYkiC,IAAI,CAACtrC,SAAL,CAAekP,QAA3B,CAAnB,CAAjB,C,CAEA;;AACA;;;;AAKA;;AACA,yBAAKqrB,eAAL,GAAuB,KAAKn3B,kBAAL,CAAwBqI,cAAxB,CAAuC,KAAK6uB,aAA5C,CAAvB;AACA,yBAAKI,aAAL,GAAqB,KAAKt3B,kBAAL,CAAwBqI,cAAxB,CAAuC,KAAK+uB,WAA5C,CAArB,C,CACA;;AACA,yBAAK/mB,WAAL,GAAmB,SAAnB;;;;;;;;;AACA;;;6CAE0B;;;;;;;;;;;AACJ,2BAAM,KAAKpZ,aAAL,CAAmBu7B,gBAAnB,CAAoC,KAAK0E,aAAzC,CAAN;;;AAAhBzH,iC;;wBACDA,a;;;;;0BACE,IAAI16B,KAAJ,CAAU,KAAKmiB,IAAf,C;;;yBAEH,KAAKjgB,aAAL,CAAmByS,cAAnB,E;;;;;wDACI,KAAKkE,mBAAL,CAAyBjI,WAAzB,CAAqC,KAAKwR,KAA1C,C;;;AAGR,yBAAKtF,qBAAL,GAA6B,IAA7B;;;AAGiB,2BAAM,KAAKokB,QAAL,CAAcyS,YAAd,CACrBjZ,aADqB,EAErB,KAAK2H,WAFgB,EAGrB,KAAKf,aAAL,CAAmBj5B,SAHE,EAIrB,KAAK45B,SAJgB,EAKrB,KAAK//B,aAAL,CAAmBo5B,cAAnB,EALqB,CAAN;;;AAAV2I,2B;;AAON;AACA,wBAAIA,OAAJ,EAAa;AACZ,2BAAKprB,mBAAL,CAAyBwB,WAAzB,CAAqC,KAAKgI,KAAL,cAAiB,KAAKja,MAAtB,cAAgC,KAAKk5B,aAAL,CAAmBz5B,SAAnB,CAA6BQ,SAA7D,MAArC;AACA,2BAAKiT,WAAL,GAAmB,MAAnB;AACA,2BAAKlT,MAAL,GAAc,IAAd;AACA,2BAAKuV,UAAL,GAAkB,IAAlB;AACA,2BAAKwmB,QAAL;AACA,2BAAK9B,WAAL,GAAmB,EAAnB;AACA,2BAAKG,eAAL,GAAuB,IAAvB;AACA,2BAAKJ,eAAL,GAAuB,EAAvB;AACA,2BAAKG,aAAL,GAAqB,EAArB;AACA,2BAAKZ,gBAAL,GAAwB,EAAxB;AACA,2BAAK9xB,YAAL;AACA,qBAZD,MAYO;AACN,0BAAI,CAAC,KAAK3N,aAAL,CAAmBo5B,cAAnB,EAAL,EAA0C;AACnC4I,kCADmC,GACtB,KAAK5hB,KADiB;AAEzC,6BAAKzJ,mBAAL,CAAyB0B,SAAzB,CAAmC2pB,UAAnC;AACA;AACD;;;;;;;;AAEKA,gC,GAAa,KAAK3hB,KAAL,cAAiB,eAAInU,OAArB,C;AACnB,yBAAKyK,mBAAL,CAAyB0B,SAAzB,CAAmC2pB,YAAnC;;;AAGD,yBAAKpnB,qBAAL,GAA6B,KAA7B;;AAEA,2BAAM,KAAK5a,aAAL,CAAmBkiC,cAAnB,EAAN;;;;;;;;;AACA;;;uCAEc;AAAA;;AACd,cAAM1J,aAAa,GAAG,KAAKx4B,aAAL,CAAmBb,MAAnB,CAA0BmI,QAA1B,CAAmCgJ,IAAnC,CAAwC,UAAAoB,CAAC;AAAA,mBAAIA,CAAC,CAACtT,EAAF,KAAS,QAAI,CAAC6hC,aAAlB;AAAA,WAAzC,CAAtB;;AACA,cAAI,CAACzH,aAAL,EAAoB;AACnB;AACA;;AAED,cAAMsH,SAAS,GAAG,KAAKV,aAAL,CAAmB9tB,OAArC;AAEA,cAAMogC,QAAQ,GAAG,IAAI,sDAAJ,CAAc5R,SAAd,EAAyBhxB,SAAzB,CAAmC/G,IAAI,CAACgH,GAAL,CAAS,EAAT,EAAY,KAAKqwB,aAAL,CAAmBz5B,SAAnB,CAA6BkP,QAAzC,CAAnC,EAAuF7F,QAAvF,EAAjB;AAEA,eAAK9I,MAAL,GAAcwrC,QAAd,CAVc,CAWd;AACA;;;mCAEU;AACV,eAAK5R,SAAL,GAAiB,IAAI,sDAAJ,CAAc,CAAd,CAAjB;AACA,eAAK55B,MAAL,GAAc,EAAd;AACA;;;sCAEa;AAAA;;AACb,cAAI,KAAKi5B,aAAL,KAAuBt3B,SAAvB,IAAoC,KAAKs3B,aAAL,CAAmB3wB,MAAnB,GAA4B,CAApE,EAAuE;AACtE,iBAAK4wB,aAAL,GAAqB,KAAKD,aAAL,CAAmB7uB,IAAnB,CAAwB,UAAAoB,CAAC;AAAA,qBAAIA,CAAC,CAAC/L,SAAF,CAAY6C,WAAZ,KAA4B,QAAI,CAACqoC,mBAArC;AAAA,aAAzB,CAArB;;AACA,gBAAI,KAAKA,mBAAL,IAA4B,KAA5B,IAAqC,KAAKA,mBAAL,IAA4B,MAArE,EAA6E;AAC5E,kBAAMc,aAAa,GAAG,KAAKjZ,WAAL,CAAiBxmB,SAAjB,CAA2B,UAAAR,CAAC;AAAA,uBAAIA,CAAC,CAAC/L,SAAF,CAAY6C,WAAZ,KAA4B,QAAI,CAACqoC,mBAArC;AAAA,eAA5B,CAAtB;AACA,mBAAKxX,gBAAL,GAAwBsY,aAAxB;AACA,mBAAKZ,aAAL,GAAqB,CAArB;AACA,aAJD,MAIO;AACN,mBAAKA,aAAL,GAAqB,IAArB;AACA;AACD,WATD,MASO;AACN,iBAAK3R,aAAL,GAAqB,EAArB;AACA;;AACD,eAAK6C,QAAL;AACC;;;qCACY18B,K,EAAO;AAClB,cAAI,KAAK45B,aAAL,KAAuBt3B,SAAvB,IAAoC,KAAKs3B,aAAL,CAAmB3wB,MAAnB,GAA4B,CAApE,EAAuE;AACxE,gBAAMojC,SAAS,GAAG,KAAKzS,aAAL,CAAmB7uB,IAAnB,CAAwB,UAAAoB,CAAC;AAAA,qBAAIA,CAAC,CAAC/L,SAAF,CAAY6C,WAAZ,KAA4BjD,KAAhC;AAAA,aAAzB,CAAlB;AACA,gBAAIqsC,SAAS,IAAI/pC,SAAb,IAA0B+pC,SAAS,CAACtgC,OAAV,IAAqBzJ,SAAnD,EACC,OAAO+pC,SAAS,CAACtgC,OAAjB,CADD,KAGC,OAAO,IAAP;AACD,WANC,MAMK;AACN,mBAAO,IAAP;AACA;AACA;;;wCACe/L,K,EAAO;AACvB,cAAI,KAAK45B,aAAL,KAAuBt3B,SAAvB,IAAoC,KAAKs3B,aAAL,CAAmB3wB,MAAnB,GAA4B,CAApE,EAAuE;AACtE,iBAAKqiC,mBAAL,GAA2BtrC,KAA3B;;AACA,gBAAI,KAAKsrC,mBAAL,IAA4B,KAA5B,IAAqC,KAAKA,mBAAL,IAA4B,MAArE,EAA6E;AAC5E,mBAAKE,aAAL,GAAqB,CAArB;AACA,aAFD,MAEO;AACN,mBAAKA,aAAL,GAAqB,IAArB;AACA;;AACD,iBAAK3R,aAAL,GAAqB,KAAKD,aAAL,CAAmB7uB,IAAnB,CAAwB,UAAAoB,CAAC;AAAA,qBAAIA,CAAC,CAAC/L,SAAF,CAAY6C,WAAZ,KAA4BjD,KAAhC;AAAA,aAAzB,CAArB;AACA,WARD,MAQO;AACN,iBAAK65B,aAAL,GAAqB,EAArB;AACA;;AACD,eAAK6C,QAAL;AACA;;;wCAEe;AAAA;;AACf,cAAM4P,eAAe,GAAG,KAAKvqC,QAAL,CAAcgJ,IAAd,CAAmB,UAAAoB,CAAC;AAAA,mBAAIA,CAAC,CAACtT,EAAF,KAAS,QAAI,CAAC6hC,aAAlB;AAAA,WAApB,CAAxB;AACA,eAAKd,aAAL,GACC0S,eAAe,KAAKhqC,SAApB,IACAgqC,eAAe,CAAC7tC,WAAhB,CAA4BsB,MAA5B,KAAuCuC,SADvC,IAEAgqC,eAAe,CAAC7tC,WAAhB,CAA4BsB,MAA5B,CAAmCkJ,MAAnC,GAA4C,CAF5C,GAGGqjC,eAAe,CAAC7tC,WAAhB,CAA4BsB,MAH/B,GAIG,EALJ;AAMA,eAAKozB,WAAL,GAAmB,EAAnB;AACA,eAAKA,WAAL,GACAmZ,eAAe,KAAKhqC,SAApB,IACAgqC,eAAe,CAACnZ,WAAhB,KAAgC7wB,SADhC,IAEAgqC,eAAe,CAACnZ,WAAhB,CAA4BlqB,MAA5B,GAAqC,CAFrC,GAGGqjC,eAAe,CAACnZ,WAHnB,GAIG,EALH;AAOA,eAAK0G,aAAL,GAAqB,KAAKD,aAAL,KAAuBt3B,SAAvB,IAAoC,KAAKs3B,aAAL,CAAmB3wB,MAAnB,GAA4B,CAAhE,GAAoE,KAAK2wB,aAAL,CAAmB,CAAnB,CAApE,GAA4F,EAAjH;AACA,eAAK0R,mBAAL,GACC,KAAKzR,aAAL,KAAuBv3B,SAAvB,IAAoC,KAAKu3B,aAAL,CAAmBz5B,SAAnB,KAAiCkC,SAArE,GACG,KAAKu3B,aAAL,CAAmBz5B,SAAnB,CAA6B6C,WADhC,GAEG,EAHJ;AAKA,eAAKy5B,QAAL;AACA,eAAK1B,iBAAL;AACA;;;yCAEgB;AAChB,eAAKJ,WAAL,GAAmB,KAAKC,WAAxB;AACA;;;2CAEkB7xB,K,EAAO;AACzB,kBAAQ,KAAKsxB,cAAL,CAAoBtxB,KAA5B;AACC;AACA,iBAAK,KAAL;AACC,qBAAO,KAAKrF,IAAL,CAAU+1B,GAAV,CAAc0C,QAAd,CAAuBpzB,KAAvB,CAAP;;AACD,iBAAK,MAAL;AACC,qBAAO,KAAKrF,IAAL,CAAU+1B,GAAV,CAAcmD,SAAd,CAAwB7zB,KAAxB,CAAP;;AACD,iBAAK,MAAL;AACC,qBAAO,KAAKrF,IAAL,CAAU+1B,GAAV,CAAcqC,SAAd,CAAwB/yB,KAAxB,CAAP;AAPF;AASA;;;+CAEsBA,K,EAAO;AAC7B,kBAAQ,KAAKsxB,cAAL,CAAoBtxB,KAA5B;AACC;AACA,iBAAK,KAAL;AACC,qBAAO,KAAKrF,IAAL,CAAU+1B,GAAV,CAAcuC,QAAd,CAAuBjzB,KAAvB,CAAP;;AACD,iBAAK,MAAL;AACC,qBAAO,KAAKrF,IAAL,CAAU+1B,GAAV,CAAcoD,SAAd,CAAwB9zB,KAAxB,CAAP;;AACD,iBAAK,MAAL;AACC,qBAAO,KAAKrF,IAAL,CAAU+1B,GAAV,CAAciC,SAAd,CAAwB3yB,KAAxB,CAAP;AAPF;AASA;;;;;;;uBAxfWqiC,a,EAAa,+H,EAAA,wI,EAAA,kJ,EAAA,mJ,EAAA,iI,EAAA,6I,EAAA,sI,EAAA,6I,EAAA,kJ,EAAA,oI,EAAA,qI,EAAA,oI;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,0kP;AAAA;AAAA;ADrB1B;;AACA;;AAuUA;;;;AAvU8D;;AAAA;;AAuUA;;AAAA;;;;;;;;;;sECnTjDA,a,EAAa;cALzB,uDAKyB;eALf;AACV3uC,kBAAQ,EAAE,UADA;AAEVC,qBAAW,EAAE,uBAFH;AAGVC,mBAAS,EAAE,CAAC,uBAAD;AAHD,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIM;;AAA4D;;AAAe;;;;;;AAApC;;AAAqB;;AAAA;;;;;;AAS1D;;AAAqE;;AAAmB;;;;;;AAA5C;;AAAyB;;AAAA;;;;;;AASnE;;AAAkE;;AAAiB;;;;;;AAAxC;;AAAuB;;AAAA;;;;;;AAUlE;;AAAwE;;AAAiB;;;;;;AAAxC;;AAAuB;;AAAA;;;;;;AAUxE;;AAAuE;;AAAkB;;;;;;AAA1C;;AAAwB;;AAAA;;;;;;AAUvE;;AAAuE;;AAAkB;;;;;;AAA1C;;AAAwB;;AAAA;;;;;;;;AA4DjG;;;;AAEA;;AACE;;AAA6D;AAAA;;AAAA;;AAAA,iBAAS,QAAAoB,QAAA,OAAT;AAAwB,SAAxB;;AAA0B;;;;AAA0B;;AACjH;;AAAwE;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;;;AAAsB;;AAC3H;;;;AALyC;;AAGgD;;AAAA;;AACY;;AAAA;;;;;;;;AAKrG;;;;AAEA;;AACE;;AAA8D;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,OAAT;AAAwB,SAAxB;;AAA0B;;;;AAA0B;;AAClH;;AAAyE;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;;;AAAsB;;AAChI;;;;AALyC;;AAGiD;;AAAA;;AACgB;;AAAA;;;;;;;;AAK1G;;;;AAEA;;AACE;;AAA8D;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,OAAT;AAAwB,SAAxB;;AAA0B;;;;AAA0B;;AAClH;;AAAyE;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;;;AAAsB;;AACtH;;;;AALyC;;AAGiD;;AAAA;;AACM;;AAAA;;;;;;;;AAKhG;;AAEA;;AACE;;AAA8D;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,OAAT;AAAwB,SAAxB;;AAA0B;;;;AAA0B;;AAClH;;AAAyE;AAAA;;AAAA;;AAAA;AAAA;;AAAsB;;;;AAAsB;;AACvH;;;;AALyC;;AAGiD;;AAAA;;AACO;;AAAA;;;;;;AASnG;;AAGE;;AACI;;AACE;;AAAI;;;;AAAwC;;AAC9C;;AACF;;AAEA;;AACE;;AAEI;;AACI;;AACI;;AAA8B;;AAA8B;;;;AAA8C;;AAAI;;AAClH;;AACJ;;AAEJ;;AACF;;AACJ;;;;AAfY;;AAAA;;AASkE;;AAAA;;;;;;;;AAmIhD;;AACI;;AACI;;AACE;;AAAoB;;AAApB;;AACF;;AACF;;AACA;;AACE;;;;AAEF;;AACA;;AACE;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA0C;AAAA;;AAAA;;AAAA,iBAAe,QAAApD,aAAA,aAA0B,oCAA1B,CAAf;AAA8E,SAA9E;;AAAuG;;AAAgC;;;;AAAqC;;AACxN;;AACF;;AACN;;;;;;AApBmC;;AAAA;;AAIF;;AAAA;;AAMyB;;AAAA;;AAOhC;;AAAA;;AAAiK;;AAAA;;;;;;;;AA3IzN;;AAGE;;AACE;;AACE;;AAAI;;AAAe;;AACrB;;AACF;;AAEA;;AACE;;AAEE;;AACI;;AAEI;;AACI;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAkF;;AAAW;;AAC/F;;AACF;;AACF;;AAEF;;AACF;;AACF;;AAER;;AACF;;AAEA;;AACF;;AAIF;;AACE;;AACE;;AAAI;;;;AAAwD;;AAC9D;;AACF;;AAEA;;AACE;;AAEE;;AACI;;AAEI;;AACI;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;;;AAA5C;;AACF;;AACF;;AAEF;;AACA;;AACE;;AACE;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;;;AAA5C;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAA6F;;AAA0B;;AAC/I;;AACF;;AACF;;AAEF;;AACF;;AACF;;AAER;;AACF;;AAEA;;AACF;;AAMI;;AACI;;AACE;;AAAI;;;;AAA+C;;AACrD;;AACF;;AAEA;;AACE;;AAEE;;AACI;;AAEI;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;;;AAEF;;AACA;;AAwBA;;AACE;;AACE;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAAiE;;;;AAAgD;;AACzI;;AACA;;AACE;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAAiE;;;;AAAgD;;AACzI;;AACF;;AACF;;AAEF;;AACF;;AACF;;AAEN;;AACF;;AAEA;;AACF;;AAKZ;;;;;;AA9HU;;AAAA;;AAoB0F;;AAAA;;AAA1B;;AAQ8B;;AAAA;;AAA9B;;AAM2B;;AAAA;;AAA0C;;AAAA;;AAqB7H;;AAAA;;AAqBuC;;AAAA;;AAGtB;;AAAA;;AA0BsF;;AAAA;;AAGA;;AAAA;;;;;;AA+CnG;;AACE;;AACE;;AAAQ;;AAA4D;;AAAS;;AAC7E;;AACF;;AACF;;;;;;;;AAEA;;AACE;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiF;;AAA8B;;AACzH;;AAEF;;;;;;AAEA;;AACE;;AACE;;AAAsC;;AAAI;;AAAe;;AAAQ;;AAAM;;AAAU;;AACnF;;AACF;;;;;;AAmCI;;AACE;;AACI;;;;AACJ;;AACF;;;;AAFM;;AAAA;;;;;;;;AAGN;;AACE;;AACI;;;;AAAqD;;AACvD;;AAA6C;AAAA;;AAAA;;AAAA,iBAAe,QAAAA,aAAA,aAA0B,sCAA1B,CAAf;AAAgF,SAAhF;;AAAyI;;;;AAA4C;;AAAK;;;;AAGzO;;AAEF;;;;;;AANM;;AAAA;;AACc;;AAAA;;AAAsK;;AAAA;;AAAiD;;AAAA;;;;;;;;AAM3O;;AACE;;AACI;;;;AAAqD;;AACvD;;AAA0C;AAAA;;AAAA;;AAAA,iBAAe,QAAAA,aAAA,aAA0B,kCAA1B,CAAf;AAA4E,SAA5E;;AAAqI;;;;AAA4C;;AAAK;;;;AAClO;;AACF;;;;;;AAHM;;AAAA;;AACc;;AAAA;;AAA+J;;AAAA;;AAAiD;;AAAA;;;;;;;;AAwFtO;;AACA;;AAEE;;AAEE;;AAAoB;;AAApB;;AACF;;AAGF;;AAEA;;AAEE;;;;AAIF;;AACA;;AACE;;AACE;;AACE;;AAEF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAqD;AAAA;;AAAA;;AAAA,iBAAe,QAAAA,aAAA,aAA0B,0CAA1B,CAAf;AAAoF,SAApF;;AAA6G;;AAAgC;;;;AAAqC;;AACzO;;AACF;;AACF;;;;;;AA1B+B;;AAAA;;AAQF;;AAAA;;AAQoB;;AAAA;;AAO3B;;AAAA;;AAAkL;;AAAA;;;;;;;;AAhN9N;;AAIE;;AACE;;AACE;;AAAI;;AAAe;;AACrB;;AACF;;AAEA;;AACE;;AAEE;;AACI;;AAGI;;AACE;;AACE;;AACE;;AAEE;;AAOA;;AAOA;;AAMF;;AAEF;;AACF;;AACF;;AAGN;;AACF;;AAEA;;AACF;;AAKA;;AACI;;AACE;;AAAI;;;;AAA+C;;AACrD;;AACF;;AAEA;;AACE;;AAEE;;AACI;;AAGI;;AACE;;AACE;;AACE;;AACE;;AAKA;;AASA;;AAMF;;AAEF;;AACF;;AACF;;AAGN;;AACF;;AAEA;;AACF;;AAON;;AACE;;AACE;;AAAI;;;;AAAqD;;AAC3D;;AACF;;AAEA;;AACE;;AAEE;;AACI;;AAEM;;AACE;;AACE;;AACE;;AACE;;AACI;;;;AACJ;;AAEF;;AACA;;AACE;;AACE;;AAA8D;;;;AAA6C;;AAC3G;;AAAyC;AAAA;;AAAA;;AAAA;AAAA;;AAAzC;;AAEF;;AACF;;AACF;;AAEF;;AACF;;AAGR;;AACF;;AAEA;;AACF;;AAKA;;AACE;;AACE;;AAAI;;;;AAAqD;;AAC3D;;AACF;;AAEA;;AACE;;AAEE;;AACI;;AAGI;;AAEE;;AACE;;AACE;;AACE;;AACE;;;;AAIF;;AACA;;AAoCA;;AACE;;AACE;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAA4E;;;;AAAgD;;AACpJ;;AACA;;AACE;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAAsE;;;;AAAgD;;AAC9I;;AACF;;AACF;;AAEF;;AACF;;AACF;;AAGN;;AACF;;AAEA;;AACF;;AAIN;;;;;;AAzN4E;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAwB9D;;AAAA;;AAemE;;AAAA;;AAKD;;AAAA;;AASA;;AAAA;;AA0BtE;;AAAA;;AAekB;;AAAA;;AAM4D;;AAAA;;AAsB5E;;AAAA;;AAiBuC;;AAAA;;AAKtB;;AAAA;;AAsCiG;;AAAA;;AAGN;;AAAA;;;;QCvjBnH2xC,iB;;;AAkHV,iCACO9xC,aADP,EAEOgJ,UAFP,EAGO7I,aAHP,EAIO4xC,WAJP,EAKO9xC,WALP,EAMO8O,GANP,EAOOvO,GAPP,EAQD;AACQH,cATP,EAUOC,KAVP,EAWOC,IAXP,EAYO4I,KAZP,EAaUzF,YAbV,EAcUtE,MAdV,EAcwB;AAAA;;AAbjB,aAAAY,aAAA,GAAAA,aAAA;AACA,aAAAgJ,UAAA,GAAAA,UAAA;AACA,aAAA7I,aAAA,GAAAA,aAAA;AACA,aAAA4xC,WAAA,GAAAA,WAAA;AACA,aAAA9xC,WAAA,GAAAA,WAAA;AACA,aAAA8O,GAAA,GAAAA,GAAA;AACA,aAAAvO,GAAA,GAAAA,GAAA;AAEA,aAAAH,QAAA,GAAAA,QAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAC,IAAA,GAAAA,IAAA;AACA,aAAA4I,KAAA,GAAAA,KAAA;AACG,aAAAzF,YAAA,GAAAA,YAAA;AACA,aAAAtE,MAAA,GAAAA,MAAA;AA/HZ,aAAAD,MAAA,GAAS,KAAKa,aAAL,CAAmBb,MAA5B;AACA,aAAAmI,QAAA,GAAW,KAAKtH,aAAL,CAAmBb,MAAnB,CAA0BmI,QAArC;AAEA,aAAAoY,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAlU,IAAA,GAAO,EAAP;AACA,aAAAmU,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAmxB,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AAEA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,KAAA,GAAQ,EAAR;AAEA,aAAAhyB,WAAA,GAAc,EAAd;AACA,aAAAiyB,eAAA,GAAkB,EAAlB;AAEA,aAAAC,oBAAA,GAAuB,EAAvB;AACA,aAAAC,4BAAA,GAA+B,KAA/B;AAEA,aAAAC,YAAA,GAAe,KAAf;AACA,aAAAC,WAAA,GAAc,EAAd;AACA,aAAAC,WAAA,GAAc,EAAd;AACA,aAAAC,uBAAA,GAA0B,KAA1B;AACA,aAAAC,sBAAA,GAAyB,EAAzB;AACA,aAAAC,sBAAA,GAAyB,EAAzB;AAGA,aAAAC,aAAA,GAAgB,CACf;AAAExoC,cAAI,EAAE,KAAKqU,IAAb;AAAmBnR,eAAK,EAAE;AAA1B,SADe,EAEf;AAAElD,cAAI,EAAE,KAAKsU,IAAb;AAAmBpR,eAAK,EAAE;AAA1B,SAFe,EAGf;AAAElD,cAAI,EAAE,KAAKI,IAAb;AAAmB8C,eAAK,EAAE;AAA1B,SAHe,CAAhB;AAKA,aAAAulC,oBAAA,GAAuB,KAAKD,aAAL,CAAmB,CAAnB,EAAsBtlC,KAA7C;AAEA,aAAAwlC,SAAA,GAAY,CAAC;AAAE1oC,cAAI,EAAE,KAAKuU,IAAb;AAAmBrR,eAAK,EAAE;AAA1B,SAAD,EAAmC;AAAElD,cAAI,EAAE,KAAKwU,IAAb;AAAmBtR,eAAK,EAAE;AAA1B,SAAnC,CAAZ;AACA,aAAAylC,YAAA,GAAe,KAAKD,SAAL,CAAe,CAAf,EAAkBxlC,KAAjC;AAEA,aAAA0lC,cAAA,GAAiB,CAAC;AAAE5oC,cAAI,EAAE,KAAKyU,IAAb;AAAmBvR,eAAK,EAAE;AAA1B,SAAD,EAA6C;AAAElD,cAAI,EAAE,KAAK0U,IAAb;AAAmBxR,eAAK,EAAE;AAA1B,SAA7C,CAAjB;AACA,aAAA2lC,eAAA,GAAkB,KAAKD,cAAL,CAAoB,CAApB,EAAuB1lC,KAAzC;AAEA,aAAA4lC,UAAA,GAAa,CACZ;AAAE9oC,cAAI,EAAE,KAAK2U,IAAb;AAAmBzR,eAAK,EAAE;AAA1B,SADY,EAEZ;AAAElD,cAAI,EAAE,KAAK4U,IAAb;AAAmB1R,eAAK,EAAE;AAA1B,SAFY,EAGZ;AAAElD,cAAI,EAAE,KAAK6U,KAAb;AAAoB3R,eAAK,EAAE;AAA3B,SAHY,EAIZ;AAAElD,cAAI,EAAE,KAAK8U,KAAb;AAAoB5R,eAAK,EAAE;AAA3B,SAJY,CAAb;AAMA,aAAA6lC,gBAAA,GAAmB,KAAKD,UAAL,CAAgB,CAAhB,EAAmB5lC,KAAtC;AAEA,aAAA8lC,iBAAA,GAAoB,CACnB;AAAEhpC,cAAI,EAAE,KAAK+U,KAAb;AAAoB7R,eAAK,EAAE;AAA3B,SADmB,EAEnB;AAAElD,cAAI,EAAE,KAAKgV,KAAb;AAAoB9R,eAAK,EAAE;AAA3B,SAFmB,EAGnB;AAAElD,cAAI,EAAE,KAAKiV,KAAb;AAAoB/R,eAAK,EAAE;AAA3B,SAHmB,EAInB;AAAElD,cAAI,EAAE,KAAKkV,KAAb;AAAoBhS,eAAK,EAAE;AAA3B,SAJmB,EAKnB;AAAElD,cAAI,EAAE,KAAKmV,KAAb;AAAoBjS,eAAK,EAAE;AAA3B,SALmB,EAMnB;AAAElD,cAAI,EAAE,KAAKoV,KAAb;AAAoBlS,eAAK,EAAE;AAA3B,SANmB,EAOnB;AAAElD,cAAI,EAAE,KAAKqV,KAAb;AAAoBnS,eAAK,EAAE;AAA3B,SAPmB,CAApB;AASA,aAAA+lC,yBAAA,GAA4B,KAAKD,iBAAL,CAAuB,CAAvB,EAA0B9lC,KAAtD;AAEA,aAAAgmC,WAAA,GAAc,CAAC;AAAElpC,cAAI,EAAE,KAAKsV,KAAb;AAAoBpS,eAAK,EAAE;AAA3B,SAAD,EAAiC;AAAElD,cAAI,EAAE,KAAKuV,KAAb;AAAoBrS,eAAK,EAAE;AAA3B,SAAjC,CAAd;AACA,aAAAimC,kBAAA,GAAqB,CAArB;AAEA,aAAAC,UAAA,GAAa,CACZ;AAAEppC,cAAI,EAAE,uBAAR;AAAiCkD,eAAK,EAAE;AAAxC,SADY,EAEZ;AAAElD,cAAI,EAAE,sCAAR;AAAgDkD,eAAK,EAAE;AAAvD,SAFY,EAGZ;AAAElD,cAAI,EAAE,mBAAR;AAA6BkD,eAAK,EAAE;AAApC,SAHY,CAAb;AAKA,aAAAmmC,iBAAA,GAAoB,KAAKD,UAAL,CAAgB,CAAhB,EAAmBlmC,KAAvC;AAEA,aAAAomC,cAAA,GAAiB,CAChB;AAAEtpC,cAAI,EAAE,QAAR;AAAkBkD,eAAK,EAAE;AAAzB,SADgB,EAEhB;AAAElD,cAAI,EAAE,MAAR;AAAgBkD,eAAK,EAAE;AAAvB,SAFgB,CAAjB;AAIA,aAAAqmC,qBAAA,GAAwB,KAAKD,cAAL,CAAoB,CAApB,EAAuBpmC,KAA/C;AAEA,aAAAsmC,YAAA,GAAe,CAAC;AAAExpC,cAAI,EAAE,KAAKwV,KAAb;AAAoBtS,eAAK,EAAE;AAA3B,SAAD,EAAqC;AAAElD,cAAI,EAAE,KAAK2mC,KAAb;AAAoBzjC,eAAK,EAAE;AAA3B,SAArC,CAAf;AACA,aAAAumC,mBAAA,GAAsB,KAAKD,YAAL,CAAkB,CAAlB,EAAqBtmC,KAA3C;AAoBC,aAAKwmC,WAAL,GAAmBx0C,IAAnB;AACA,aAAKugB,QAAL;AACA;;;;mCAEgB;;;;;;;;;;AAChB,yBAAKk0B,gBAAL;AACA,yBAAK7rC,KAAL,CAAW4X,YAAX,CAAwB3f,SAAxB,CAAkC,UAACC,KAAD,EAA4B;AAC7D,8BAAI,CAACyf,QAAL;AACA,qBAFD;;;;;;;;;AAGC;;;mCAEU;AAAA;;AACX,eAAK3X,KAAL,CAAWmF,GAAX,CAAe,6CAAf,EAA8DlN,SAA9D,CAAwE,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACuiC,oBAAL,GAA4BviC,GAA5B;AAAkC,WAA7H;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,6BAAf,EAA8ClN,SAA9C,CAAwD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAAC4O,IAAL,GAAY5O,GAAZ;AAAkB,WAA7F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,6BAAf,EAA8ClN,SAA9C,CAAwD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAAC6O,IAAL,GAAY7O,GAAZ;AAAkB,WAA7F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,6BAAf,EAA8ClN,SAA9C,CAAwD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACrF,IAAL,GAAYqF,GAAZ;AAAkB,WAA7F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,6BAAf,EAA8ClN,SAA9C,CAAwD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAAC8O,IAAL,GAAY9O,GAAZ;AAAkB,WAA7F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,6BAAf,EAA8ClN,SAA9C,CAAwD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAAC+O,IAAL,GAAY/O,GAAZ;AAAkB,WAA7F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,6BAAf,EAA8ClN,SAA9C,CAAwD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACgP,IAAL,GAAYhP,GAAZ;AAAkB,WAA7F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,6BAAf,EAA8ClN,SAA9C,CAAwD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACiP,IAAL,GAAYjP,GAAZ;AAAkB,WAA7F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,6BAAf,EAA8ClN,SAA9C,CAAwD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACkP,IAAL,GAAYlP,GAAZ;AAAkB,WAA7F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,6BAAf,EAA8ClN,SAA9C,CAAwD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACmP,IAAL,GAAYnP,GAAZ;AAAkB,WAA7F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACoP,KAAL,GAAapP,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACqP,KAAL,GAAarP,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACsP,KAAL,GAAatP,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACuP,KAAL,GAAavP,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACwP,KAAL,GAAaxP,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACyP,KAAL,GAAazP,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAAC0P,KAAL,GAAa1P,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAAC2P,KAAL,GAAa3P,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAAC4P,KAAL,GAAa5P,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAAC6P,KAAL,GAAa7P,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAAC8P,KAAL,GAAa9P,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAAC+P,KAAL,GAAa/P,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACkhC,KAAL,GAAalhC,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACmhC,KAAL,GAAanhC,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACohC,KAAL,GAAaphC,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACqhC,KAAL,GAAarhC,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACshC,KAAL,GAAathC,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACuhC,KAAL,GAAavhC,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACwhC,KAAL,GAAaxhC,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACyhC,KAAL,GAAazhC,GAAb;AAAmB,WAA/F;AAEA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,6BAAf,EAA8ClN,SAA9C,CAAwD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAAC0hC,KAAL,GAAa1hC,GAAb;AAAmB,WAA9F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,6BAAf,EAA8ClN,SAA9C,CAAwD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAAC2hC,KAAL,GAAa3hC,GAAb;AAAmB,WAA9F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,6BAAf,EAA8ClN,SAA9C,CAAwD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAAC4hC,KAAL,GAAa5hC,GAAb;AAAmB,WAA9F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,6BAAf,EAA8ClN,SAA9C,CAAwD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAAC6hC,KAAL,GAAa7hC,GAAb;AAAmB,WAA9F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,6BAAf,EAA8ClN,SAA9C,CAAwD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAAC8hC,KAAL,GAAa9hC,GAAb;AAAmB,WAA9F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,6BAAf,EAA8ClN,SAA9C,CAAwD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAAC+hC,KAAL,GAAa/hC,GAAb;AAAmB,WAA9F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,6BAAf,EAA8ClN,SAA9C,CAAwD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACgiC,KAAL,GAAahiC,GAAb;AAAmB,WAA9F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,6BAAf,EAA8ClN,SAA9C,CAAwD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACiiC,KAAL,GAAajiC,GAAb;AAAmB,WAA9F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,6BAAf,EAA8ClN,SAA9C,CAAwD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACkiC,KAAL,GAAaliC,GAAb;AAAmB,WAA9F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACmiC,KAAL,GAAaniC,GAAb;AAAmB,WAA/F;AACA,eAAK3H,KAAL,CAAWmF,GAAX,CAAe,8BAAf,EAA+ClN,SAA/C,CAAyD,UAAC0P,GAAD,EAAiB;AAAE,oBAAI,CAACoiC,KAAL,GAAapiC,GAAb;AAAmB,WAA/F;AAEA,eAAK+iC,aAAL,GAAqB,CACpB;AAAExoC,gBAAI,EAAE,KAAKqU,IAAb;AAAmBnR,iBAAK,EAAE;AAA1B,WADoB,EAEpB;AAAElD,gBAAI,EAAE,KAAKsU,IAAb;AAAmBpR,iBAAK,EAAE;AAA1B,WAFoB,EAGpB;AAAElD,gBAAI,EAAE,KAAKI,IAAb;AAAmB8C,iBAAK,EAAE;AAA1B,WAHoB,CAArB;AAMA,eAAKwlC,SAAL,GAAiB,CAAC;AAAE1oC,gBAAI,EAAE,KAAKuU,IAAb;AAAmBrR,iBAAK,EAAE;AAA1B,WAAD,EAAmC;AAAElD,gBAAI,EAAE,KAAKwU,IAAb;AAAmBtR,iBAAK,EAAE;AAA1B,WAAnC,CAAjB;AAEA,eAAK0lC,cAAL,GAAsB,CAAC;AAAE5oC,gBAAI,EAAE,KAAKyU,IAAb;AAAmBvR,iBAAK,EAAE;AAA1B,WAAD,EAA6C;AAAElD,gBAAI,EAAE,KAAK0U,IAAb;AAAmBxR,iBAAK,EAAE;AAA1B,WAA7C,CAAtB;AAEA,eAAK4lC,UAAL,GAAkB,CACjB;AAAE9oC,gBAAI,EAAE,KAAK2U,IAAb;AAAmBzR,iBAAK,EAAE;AAA1B,WADiB,EAEjB;AAAElD,gBAAI,EAAE,KAAK4U,IAAb;AAAmB1R,iBAAK,EAAE;AAA1B,WAFiB,EAGjB;AAAElD,gBAAI,EAAE,KAAK6U,KAAb;AAAoB3R,iBAAK,EAAE;AAA3B,WAHiB,EAIjB;AAAElD,gBAAI,EAAE,KAAK8U,KAAb;AAAoB5R,iBAAK,EAAE;AAA3B,WAJiB,CAAlB;AAOA,eAAK8lC,iBAAL,GAAyB,CACxB;AAAEhpC,gBAAI,EAAE,KAAK+U,KAAb;AAAoB7R,iBAAK,EAAE;AAA3B,WADwB,EAExB;AAAElD,gBAAI,EAAE,KAAKgV,KAAb;AAAoB9R,iBAAK,EAAE;AAA3B,WAFwB,EAGxB;AAAElD,gBAAI,EAAE,KAAKiV,KAAb;AAAoB/R,iBAAK,EAAE;AAA3B,WAHwB,EAIxB;AAAElD,gBAAI,EAAE,KAAKkV,KAAb;AAAoBhS,iBAAK,EAAE;AAA3B,WAJwB,EAKxB;AAAElD,gBAAI,EAAE,KAAKmV,KAAb;AAAoBjS,iBAAK,EAAE;AAA3B,WALwB,EAMxB;AAAElD,gBAAI,EAAE,KAAKoV,KAAb;AAAoBlS,iBAAK,EAAE;AAA3B,WANwB,EAOxB;AAAElD,gBAAI,EAAE,KAAKqV,KAAb;AAAoBnS,iBAAK,EAAE;AAA3B,WAPwB,CAAzB;AAUA,eAAKgmC,WAAL,GAAmB,CAAC;AAAElpC,gBAAI,EAAE,KAAKsV,KAAb;AAAoBpS,iBAAK,EAAE;AAA3B,WAAD,EAAiC;AAAElD,gBAAI,EAAE,KAAKuV,KAAb;AAAoBrS,iBAAK,EAAE;AAA3B,WAAjC,CAAnB;AAEA,eAAKkmC,UAAL,GAAkB,CACjB;AAAEppC,gBAAI,EAAE,uBAAR;AAAiCkD,iBAAK,EAAE;AAAxC,WADiB,EAEjB;AAAElD,gBAAI,EAAE,sCAAR;AAAgDkD,iBAAK,EAAE;AAAvD,WAFiB,EAGjB;AAAElD,gBAAI,EAAE,mBAAR;AAA6BkD,iBAAK,EAAE;AAApC,WAHiB,CAAlB;AAMA,eAAKsmC,YAAL,GAAoB,CAAC;AAAExpC,gBAAI,EAAE,KAAKwV,KAAb;AAAoBtS,iBAAK,EAAE;AAA3B,WAAD,EAAqC;AAAElD,gBAAI,EAAE,KAAK2mC,KAAb;AAAoBzjC,iBAAK,EAAE;AAA3B,WAArC,CAApB;AACA;;;2CAEmB;AACnB,cAAMrO,QAAQ,GAAG,KAAK6xC,WAAL,CAAiBrwC,eAAjB,EAAjB;AAEA,cAAMuzC,YAAY,GAAG,KAAKlB,SAAL,CAAezjC,IAAf,CAAoB,UAAA4kC,CAAC;AAAA,mBAAIA,CAAC,CAAC3mC,KAAF,KAAYrO,QAAQ,CAACK,IAAzB;AAAA,WAArB,CAArB;AACA,eAAKyzC,YAAL,GAAoBiB,YAAY,CAAC1mC,KAAb,IAAsB,KAAKwlC,SAAL,CAAe,CAAf,EAAkBxlC,KAA5D;AAEA,cAAM4mC,gBAAgB,GAAG,KAAKhB,UAAL,CAAgB7jC,IAAhB,CAAqB,UAAA4kC,CAAC;AAAA,mBAAIA,CAAC,CAAC3mC,KAAF,KAAYrO,QAAQ,CAAC8gC,eAAzB;AAAA,WAAtB,CAAzB;AACA,eAAKoT,gBAAL,GAAwBe,gBAAgB,CAAC5mC,KAAjB,IAA0B,KAAK4lC,UAAL,CAAgB,CAAhB,EAAmB5lC,KAArE;AAEA,cAAM6mC,oBAAoB,GAAG,KAAKvB,aAAL,CAAmBvjC,IAAnB,CAAwB,UAAA4kC,CAAC;AAAA,mBAAIA,CAAC,CAAC3mC,KAAF,KAAYrO,QAAQ,CAACm1C,mBAAzB;AAAA,WAAzB,CAA7B;AACA,eAAKvB,oBAAL,GAA4BsB,oBAAoB,CAAC7mC,KAArB,IAA8B,KAAKslC,aAAL,CAAmB,CAAnB,EAAsBtlC,KAAhF;AAEA,cAAM+mC,eAAe,GAAG,KAAKrB,cAAL,CAAoB3jC,IAApB,CAAyB,UAAA4kC,CAAC;AAAA,mBAAIA,CAAC,CAAC3mC,KAAF,IAAWrO,QAAQ,CAACq1C,WAAxB;AAAA,WAA1B,CAAxB;AACA,eAAKrB,eAAL,GAAuBoB,eAAe,CAAC/mC,KAAhB,IAAyB,KAAK0lC,cAAL,CAAoB,CAApB,EAAuB1lC,KAAvE;AAEG,cAAMinC,yBAAyB,GAAG,KAAKnB,iBAAL,CAAuB/jC,IAAvB,CAA4B,UAAA4kC,CAAC;AAAA,mBAAIA,CAAC,CAAC3mC,KAAF,IAAWrO,QAAQ,CAACu1C,qBAAxB;AAAA,WAA7B,CAAlC;AAEH,eAAKnB,yBAAL,GAAiCkB,yBAAyB,GACvDA,yBAAyB,CAACjnC,KAD6B,GAEpD,KAAK8lC,iBAAL,CAAuB,CAAvB,EAA0B9lC,KAFhC;AAIA,cAAMmnC,kBAAkB,GAAG,KAAKnB,WAAL,CAAiBjkC,IAAjB,CAAsB,UAAA4kC,CAAC;AAAA,mBAAIA,CAAC,CAAC3mC,KAAF,IAAWrO,QAAQ,CAACe,WAAxB;AAAA,WAAvB,CAA3B;AACA,eAAKuzC,kBAAL,GAA0BkB,kBAAkB,GAAGA,kBAAkB,CAACnnC,KAAtB,GAA8B,KAAKgmC,WAAL,CAAiB,CAAjB,EAAoBhmC,KAA9F;AAEA,cAAMonC,iBAAiB,GAAG,KAAKlB,UAAL,CAAgBnkC,IAAhB,CAAqB,UAAA4kC,CAAC;AAAA,mBAAIA,CAAC,CAAC3mC,KAAF,IAAWrO,QAAQ,CAAC01C,SAAxB;AAAA,WAAtB,CAA1B;AACA,eAAKlB,iBAAL,GAAyBiB,iBAAiB,GAAGA,iBAAiB,CAACpnC,KAArB,GAA6B,KAAKkmC,UAAL,CAAgB,CAAhB,EAAmBlmC,KAA1F;AAEA,cAAMsnC,qBAAqB,GAAG,KAAKlB,cAAL,CAAoBrkC,IAApB,CAAyB,UAAA4kC,CAAC;AAAA,mBAAIA,CAAC,CAAC3mC,KAAF,IAAWrO,QAAQ,CAACiwC,OAAxB;AAAA,WAA1B,CAA9B;AACA,eAAKyE,qBAAL,GAA6BiB,qBAAqB,GAAGA,qBAAqB,CAACtnC,KAAzB,GAAiC,KAAKomC,cAAL,CAAoB,CAApB,EAAuBpmC,KAA1G;AACA;;;4CAEyB;;;;;;;;;AACnBunC,8B,GAAa,KAAK5B,e;AAClB6B,gC,GAAe,KAAKhE,WAAL,CAAiB7xC,QAAjB,CAA0Bq1C,WAA1B,KAA0CO,U;AACzDE,+B,GAAc,KAAK5B,gB;AACnB6B,8B,GAAa,KAAKlE,WAAL,CAAiB7xC,QAAjB,CAA0B8gC,eAA1B,KAA8CgV,W;AAC3DE,2B,GAAU,KAAKlC,Y;AACfmC,8B,GAAa,KAAKpE,WAAL,CAAiB7xC,QAAjB,CAA0BK,IAA1B,KAAmC21C,O;AAChD/F,2B,GAAU,KAAKyE,qB;AAEfwB,+B,GAAc;AACnBb,iCAAW,EAAEO,UADM;AAEnB70C,iCAAW,EAAE,KAAKuzC,kBAFC;AAGnBiB,2CAAqB,EAAE,KAAKnB,yBAHT;AAInBe,yCAAmB,EAAE,KAAKvB,oBAJP;AAKnBvzC,0BAAI,EAAE21C,OALa;AAMnB/F,6BAAO,EAAPA;AANmB,qB;AASpB,yBAAK4B,WAAL,CAAiBsE,cAAjB,CAAgCD,WAAhC;AACA,yBAAKj2C,aAAL,CAAmBgY,WAAnB,CAA+B,KAAK85B,KAApC;;AAEA,wBAAIkE,UAAJ,EAAgB;AACf,2BAAKpB,WAAL,CAAiBuB,UAAjB,CAA4BJ,OAA5B,EADe,CACuB;AACtC;;AAED,wBAAIH,YAAJ,EAAkB;AACjB,2BAAK/1C,aAAL,CAAmBuY,gBAAnB,GADiB,CACsB;AACvC;;yBACG09B,U;;;;;;AAEH,2BAAM,KAAK31C,KAAL,CAAWi2C,QAAX,CAAoBP,WAApB,CAAN;;;AACA,yBAAKjE,WAAL,CAAiByE,aAAjB,CAA+B,iBAA/B,EAAkDR,WAAlD;AACA,yBAAKh2C,aAAL,CAAmBy2C,kBAAnB;;;;;;;;;AAED;;;kCAESvvC,Q,EAA4B;AACrC;AACA,eAAK3D,QAAL,GAAgB,KAAKG,YAAL,CAAkByD,IAAlB,CAAuBD,QAAvB,CAAhB;AACA;;;oCAEW;AACX,eAAK9H,MAAL,CAAYE,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACA,eAAKiE,QAAL,CAAcumB,IAAd;AACA;;;yCAEsB;;;;;;;;AACtB,wBAAI;AACH,2BAAKzpB,QAAL,CAAcq2C,UAAd;AACA,2BAAKv2C,aAAL,CAAmBgY,WAAnB,CAA+B,KAAKg6B,KAApC;AACA,2BAAK5uC,QAAL,CAAcumB,IAAd;AACA,qBAJD,CAIE,OAAOnH,GAAP,EAAY,CAAE;;;;;;;;;AAChB;;;6CAE0B;;;;;;;;AAC1B,wBAAI;AACH,2BAAK3iB,aAAL,CAAmB22C,WAAnB;AACA,2BAAK32C,aAAL,CAAmB42C,gBAAnB;AAEA,2BAAKz2C,aAAL,CAAmBgY,WAAnB,CAA+B,KAAKk6B,KAApC;AACA,2BAAK9uC,QAAL,CAAcumB,IAAd;AACA,qBAND,CAME,OAAOnH,GAAP,EAAY,CAAE;;;;;;;;;AAChB;;;0CAEuB;;;;;;;;AACvB;AACA,wBAAI;AACH;AACA;AACA,2BAAK3iB,aAAL,CAAmB22C,WAAnB;AACA,2BAAK32C,aAAL,CAAmB42C,gBAAnB;AAEA,2BAAKz2C,aAAL,CAAmBgY,WAAnB,CAA+B,KAAKk6B,KAApC;AACA,qBAPD,CAOE,OAAO1vB,GAAP,EAAY,CAAE;;;;;;;;;AAChB;;;mCAEgB;;;;;;;;AAChB,wBAAI;AACH,2BAAK3iB,aAAL,CAAmB22C,WAAnB;AACA,2BAAK32C,aAAL,CAAmB42C,gBAAnB;AAEA,2BAAKv2C,QAAL,CAAcw2C,WAAd;AACA,2BAAK52C,WAAL,CAAiB62C,gBAAjB;AACA,2BAAK/E,WAAL,CAAiBgF,gBAAjB;AAEA,2BAAK/B,gBAAL;AAEA,2BAAK70C,aAAL,CAAmBgY,WAAnB,CAA+B,KAAKo6B,KAApC;AACA,2BAAKhvC,QAAL,CAAcumB,IAAd;AACA,qBAZD,CAYE,OAAOnH,GAAP,EAAY,CAAE;;;;;;;;;AAChB;;;uCAEoB;;;;;;;;AACpB;AACA,wBAAI;AACH;AACA;AACA,2BAAK3iB,aAAL,CAAmB22C,WAAnB;AACA,2BAAK32C,aAAL,CAAmB42C,gBAAnB;AAEA,2BAAKv2C,QAAL,CAAcw2C,WAAd;AACA,2BAAK52C,WAAL,CAAiB62C,gBAAjB;AACA,2BAAK/E,WAAL,CAAiBgF,gBAAjB;AAEA,2BAAK/B,gBAAL;AAEA,2BAAK70C,aAAL,CAAmBgY,WAAnB,CAA+B,KAAKo6B,KAApC;AACA,qBAbD,CAaE,OAAO5vB,GAAP,EAAY,CAAE;;;;;;;;;AAChB;;;yCAEuB;;;;;;;;;;;;0BACjB,KAAKxB,WAAL,KAAqB,KAAKiyB,e;;;;;wDACrB,KAAKjzC,aAAL,CAAmBkY,SAAnB,CAA6B,KAAKm6B,KAAlC,C;;;0BAEL,KAAKrxB,WAAL,CAAiB3S,MAAjB,GAA0B,C;;;;;wDACrB,KAAKrO,aAAL,CAAmBkY,SAAnB,CAA6B,KAAKo6B,KAAlC,C;;;yBAEL,KAAKzyC,aAAL,CAAmByS,cAAnB,E;;;;;wDACK,KAAKtS,aAAL,CAAmBuO,WAAnB,CAA+B,KAAKgkC,KAApC,C;;;AAEZ,yBAAKvyC,aAAL,CAAmB+V,QAAnB,CAA4B,iCAA5B;AACA,yBAAKm9B,oBAAL,GAA4B,wBAA5B;AACA,yBAAKC,4BAAL,GAAoC,IAApC;;;;;kCACsB,KAAKtzC,aAAL,CAAmBb,MAAnB,CAA0B8L,U;;;;;;;;AAAvC+rC,6B;;;AAEK,2BAAM,KAAKhuC,UAAL,CAAgB8P,OAAhB,CAAwBk+B,SAAS,CAAC/Z,YAAlC,EAA+C,KAAKj9B,aAAL,CAAmBb,MAAnB,CAA0BiiB,QAAzE,CAAN;;;AAANtK,uB;;AACmB,2BAAM,KAAK9N,UAAL,CAAgBiuC,OAAhB,CAAwBngC,GAAxB,EAA4B,KAAKqK,WAAjC,CAAN;;;AAAzB61B,6BAAS,CAAC/Z,Y;AACVp2B,2BAAO,CAACC,GAAR,CAAY,iBAAiBkwC,SAAS,CAAC54C,EAA3B,GAAgC,8BAA5C;;;;;;;AAEA,yBAAK+B,aAAL,CAAmB+V,QAAnB,CAA4B,iBAAiB8gC,SAAS,CAAC54C,EAA3B,GAAgC,0BAA5D,E,CACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIC,yBAAK4B,aAAL,CAAmBb,MAAnB,CAA0BiiB,QAA1B,GAAqC,KAAKD,WAA1C;AACA,yBAAKnhB,aAAL,CAAmBuY,gBAAnB;AAEA,yBAAK4I,WAAL,GAAmB,EAAnB;AACA,yBAAKiyB,eAAL,GAAuB,EAAvB;AACH,yBAAKjzC,aAAL,CAAmBgY,WAAnB,CAA+B,KAAKw6B,KAApC;AACA,yBAAKxpC,KAAL,CAAWmF,GAAX,CAAe,6CAAf,EAA8DlN,SAA9D,CAAwE,UAAC0P,GAAD,EAAiB;AAAE,8BAAI,CAACuiC,oBAAL,GAA4BviC,GAA5B;AAAkC,qBAA7H;AACA,yBAAKwiC,4BAAL,GAAoC,KAApC;;;;;;;;;AACE;;;uCAEoB;;;;;;;;;yBACf,KAAKtzC,aAAL,CAAmByS,cAAnB,E;;;;;wDACK,KAAKtS,aAAL,CAAmBuO,WAAnB,CAA+B,KAAKkkC,KAApC,C;;;AAGHsE,6B,GAAY,KAAKl3C,aAAL,CAAmBm3C,iBAAnB,E;AAClB,yBAAK3D,WAAL,GAAmB0D,SAAnB;;AACmB,2BAAM,kDAAiBA,SAAjB,CAAN;;;AAAnB,yBAAKzD,W;AACL,yBAAKF,YAAL,GAAoB,IAApB;;;;;;;;;AACD;;;iCAEQ;AACP,eAAKpzC,aAAL,CAAmBgY,WAAnB,CAA+B,KAAK06B,KAApC;AACD;;;uCAEc;AACb,iBAAO,yDAAsB,KAAK1zC,MAAL,CAAYmjB,IAAlC,CAAP;AACD;;;4CAEyB;;;;;;;;;AAClB80B,8B,GAAa,KAAKn3C,WAAL,CAAiBA,W;;0BAChCm3C,UAAU,CAAC5oC,MAAX,IAAqB,E;;;;;wDAChB,KAAKrO,aAAL,CAAmBkY,SAAnB,CAA6B,KAAKy6B,KAAlC,C;;;AAEHuE,8B,GAAa70B,IAAI,CAACJ,IAAI,CAACK,SAAL,CAAe20B,UAAf,CAAD,C;AACjBF,6B,gEAAkEG,U;AAExE,yBAAK1D,sBAAL,GAA8BuD,SAA9B;;AAC8B,2BAAM,kDAAiBA,SAAjB,CAAN;;;AAA9B,yBAAKtD,sB;AACL,yBAAKF,uBAAL,GAA+B,IAA/B;;;;;;;;;AACD;;;kDAEyB;AACxB,cAAI,KAAK1zC,aAAL,CAAmByS,cAAnB,EAAJ,EAAyC;AACvC,mBAAO,KAAKtS,aAAL,CAAmBuO,WAAnB,CAA+B,KAAKgkC,KAApC,CAAP;AACD;;AACD,cAAM4E,QAAQ,yBAAd;AAEA,cAAMF,UAAU,GAAG,KAAKn3C,WAAL,CAAiBA,WAApC;AACA,eAAKs3C,mBAAL,CAAyBD,QAAzB,EAAmCF,UAAnC;AAEA,eAAKj3C,aAAL,CAAmBgY,WAAnB,CAA+B,KAAK46B,KAApC;AACD;;;4CAEmBuE,Q,EAAUF,U,EAAY;AACxC,cAAMI,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACr1B,IAAI,CAACK,SAAL,CAAe20B,UAAf,CAAD,CAAT,EAAuC;AAClD1xC,gBAAI,EAAE;AAD4C,WAAvC,CAAb,CADwC,CAKxC;;AACA,cAAMgyC,GAAG,GACP,CAAC,CAACC,SAAS,CAACj0B,QAAZ,IAAwB,mBAAmBlY,IAAnB,CAAwBmsC,SAAS,CAACj0B,QAAlC,CAD1B;;AAGA,cAAI5kB,MAAM,CAAC64C,SAAP,CAAiBC,gBAArB,EAAuC;AACrC94C,kBAAM,CAAC64C,SAAP,CAAiBE,UAAjB,CAA4BL,IAA5B,EAAkCF,QAAlC;AACD,WAFD,MAEO;AACL,gBAAMQ,IAAI,GAAGh5C,MAAM,CAACyqC,QAAP,CAAgBwO,aAAhB,CAA8B,GAA9B,CAAb;AACA,gBAAMC,MAAM,GAAGl5C,MAAM,CAACm5C,GAAP,CAAWC,eAAX,CAA2BV,IAA3B,CAAf;;AACA,gBAAIE,GAAJ,EAAS;AACPI,kBAAI,CAACK,IAAL,kCAAoC/1B,IAAI,CAACK,SAAL,CAAe20B,UAAf,CAApC;AACD,aAFD,MAEO;AACLU,kBAAI,CAACK,IAAL,GAAYH,MAAZ;AACD;;AACDF,gBAAI,CAACM,QAAL,GAAgBd,QAAhB;AACA/N,oBAAQ,CAAC8O,IAAT,CAAcC,WAAd,CAA0BR,IAA1B;AACAA,gBAAI,CAAC/pB,KAAL;AACA+T,sBAAU,CAAC;AACTyH,sBAAQ,CAAC8O,IAAT,CAAcE,WAAd,CAA0BT,IAA1B;AACAh5C,oBAAM,CAACm5C,GAAP,CAAWO,eAAX,CAA2BR,MAA3B;AACD,aAHS,EAGP,GAHO,CAAV;AAID;AACF;;;uCAEc;AACb,cAAI,KAAKh4C,aAAL,CAAmByS,cAAnB,EAAJ,EAAyC;AACvC,mBAAO,KAAKtS,aAAL,CAAmBuO,WAAnB,CAA+B,KAAKgkC,KAApC,CAAP;AACD;;AAED,cAAM4E,QAAQ,oBAAd;AACA,cAAMF,UAAU,GAAG,KAAKp3C,aAAL,CAAmBy4C,kBAAnB,EAAnB;AACA,eAAKlB,mBAAL,CAAyBD,QAAzB,EAAmCF,UAAnC;AAEA,eAAKj3C,aAAL,CAAmBgY,WAAnB,CAA+B,KAAK66B,KAApC;AACD;;;uCAEcnxB,K,EAAO;AAAA;;AACpB,cAAI,CAACA,KAAK,CAACrT,MAAX,EAAmB;AACjB;AACD;;AAED,cAAMsT,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAlB;AACA,cAAME,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,gBAAM,CAACE,MAAP,GAAgB,UAAA5gB,KAAK,EAAI;AACvB,gBAAM6gB,QAAQ,GAAY7gB,KAAK,CAAC4c,MAAN,CAAa,QAAb,CAA1B;;AACA,gBAAI;AACF,kBAAMkE,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAX,CAAnB;;AACA,kBAAI,CAACC,UAAU,CAAC3T,MAAZ,IAAsB,CAAC2T,UAAU,CAAC,CAAD,CAAV,CAAcld,OAAzC,EAAkD;AAChD,uBAAO,QAAI,CAAC9E,aAAL,CAAmBkY,SAAnB,CAA6B,QAAI,CAAC46B,KAAlC,CAAP;AACD;;AAED,kBAAM1wB,eAAe,GAAGC,IAAI,CAACJ,IAAI,CAACK,SAAL,CAAeN,UAAf,CAAD,CAA5B;;AACA,sBAAI,CAAC/iB,MAAL,CAAYE,QAAZ,CAAqB,CAAC,qBAAD,CAArB,EAA8C;AAC5CojB,wBAAQ,EAAEH;AADkC,eAA9C;AAGD,aAVD,CAUE,OAAOI,GAAP,EAAY;AACZ,sBAAI,CAACxiB,aAAL,CAAmBkY,SAAnB,CAA6B,QAAI,CAAC66B,KAAlC;AACD;AACF,WAfD;;AAiBAnxB,gBAAM,CAACa,UAAP,CAAkBd,IAAlB;AACD;;;;;;;uBA5fUgwB,iB,EAAiB,uI,EAAA,sJ,EAAA,mJ,EAAA,kJ,EAAA,kJ,EAAA,iI,EAAA,iI,EAAA,4I,EAAA,qI,EAAA,oI,EAAA,sI,EAAA,oI,EAAA,wH;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,gB;AAAA,c;AAAA,wwJ;AAAA;AAAA;;;AD1B9B;;AAEA;;AACI;;AAII;;AAGE;;AACE;;AACE;;AAAI;;;;AAAmD;;AACzD;;AACF;;AAEA;;AACE;;AAEQ;;AACI;;AACE;;AAAsE;;;;AAAyC;;AAC/G;;AACE;;AACE;;AAA8B;AAAA;AAAA;;AAC5B;;AACF;;AACF;;AAAM;;AACR;;AACA;;AACE;;AAAsE;;;;AAA8C;;AACpH;;AACE;;AACE;;AAA8B;AAAA;AAAA;;AAC5B;;AACF;;AACF;;AAAM;;AACR;;AACA;;AACE;;AAAsE;;;;AAA6C;;AACnH;;AACE;;AACE;;AAA8B;AAAA;AAAA;;AAC5B;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAsE;;;;AAAsD;;AAC5H;;AACE;;AACE;;AAA8B;AAAA;AAAA;;AAC5B;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAsE;;;;AAA+C;;AACrH;;AACE;;AACE;;AAA8B;AAAA;AAAA;;AAC5B;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAsE;;AAAO;;AAC7E;;AACE;;AACE;;AAA8B;AAAA;AAAA;;AAC5B;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACA;;AACE;;AAAQ;AAAA,mBAAS,IAAA4G,iBAAA,EAAT;AAA4B,WAA5B;;AAAsE;;;;AAAoD;;AACpI;;AACF;;AACF;;AACR;;AACN;;AAEH;;AAMD;;AAGE;;AACE;;AACE;;AAAI;;;;AAAwD;;AAC9D;;AACF;;AAEA;;AACE;;AAEE;;AACI;;AACE;;AAAoF;;;;AAAuD;;AAC7I;;AACA;;AAIE;;AACE;;AAAQ;AAAA;;AAAA;;AAAA,mBAAS,IAAAtxC,SAAA,KAAT;AAAmC,WAAnC;;AAAwF;;;;AAA0D;;AAC5J;;AACA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,SAAA,KAAT;AAAmC,WAAnC;;AAAsG;;;;AAA0D;;AAC1K;;AACA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,SAAA,MAAT;AAAgC,WAAhC;;AAAsF;;;;AAA0D;;AAC1J;;AACJ;;AACF;;AAEA;;AACF;;AAEJ;;AAGA;;AASA;;AASA;;AASA;;AAcA;;AA0BA;;AA6KA;;AAsPN;;AACF;;;;AA/lBkB;;AAAA;;AAS8E;;AAAA;;AAGpC;;AAAA;;AACpB;;AAAA;;AAK0D;;AAAA;;AAGpC;;AAAA;;AACpB;;AAAA;;AAK0D;;AAAA;;AAGpC;;AAAA;;AACpB;;AAAA;;AAMwD;;AAAA;;AAGpC;;AAAA;;AACpB;;AAAA;;AAMwD;;AAAA;;AAGpC;;AAAA;;AACpB;;AAAA;;AASoB;;AAAA;;AACpB;;AAAA;;AAQkE;;AAAA;;AAkB5F;;AAAA;;AASsF;;AAAA;;AAOc;;AAAA;;AAGc;;AAAA;;AAGhB;;AAAA;;AAoDnF;;AAAA;;AA0BI;;AAAA;;AA6KK;;AAAA;;;;;;;;;;sEC1V7B0qC,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT7vC,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqCF;;AAAgN;;AAAsB;;AAAtO;;;;;;AAAgN;;AAAA;;;;;;AADlN;;AACE;;AACF;;;;;;;;AADmC;;AAAA;;;;;;AAEnC;;AAAmD;;AAAc;;;;;;AAAd;;AAAA;;;;;;AASrD;;AACE;;AAAmD;;AAAG;;AAA6H;;AAAiB;;AAAI;;AAC1M;;;;;;;;AAGA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;;;;;AAH2G;;AAAA;;;;;;;;AAtCrH;;AACE;;AAEI;;AAEI;;AACE;;AACF;;AACA;;AACE;;AACE;;AAQF;;AAEA;;AAGA;;AACF;;AAEA;;AACA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;AACA;;AAKA;;AAKF;;AACJ;;AACJ;;;;;;AA5CmG;;AAoBjF;;AAAA;;AAGW;;AAAA;;AAK2E;;AAAA;;AAInE;;AAAA;;AAKU;;AAAA;;;;;;;;AAuCjC;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AAAvC;;;;;;AAA8O;;AAA6L;;AAAa;;;;;;;;AACxb;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AAAvC;;;;;;AAA8O;;AAA6L;;AAAiB;;;;;;AA4C1b;;AAAoF;;AAAG;;AAA6H;;AAAwB;;AAAI;;;;;;AAChP;;AAAiF;;AAAG;;AAA6H;;AAAyC;;AAAI;;;;;;AAmC5P;;AAA4E;;AAAG;;AAA2G;;AAAsB;;AAAI;;;;;;AACpN;;AAA8E;;AAAG;;AAA6H;;AAAoB;;AAAI;;;;;;AACtO;;AAA2E;;AAAG;;AAAwH;;AAA+B;;AAAI;;AAAuC;;AAAK;;AAAI;;;;;;;;AAsBnR;;AACI;;AAAuB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAvB;;AAAwK;;AAAmF;;AAA6D;;AAAQ;;AACpU;;;;;;AADsE;;AAAA;;AAAsC;;AAAoC;;AAAmC;;AAAA;;AAA4E;;AAAA;;;;;;AAhB3Q;;AAEI;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAG;;AAAoD;;AACzD;;AAEA;;AAGA;;AACI;;AACE;;AAGF;;AACJ;;AAEF;;AAEN;;;;;;AARmB;;AAAA;;;;;;;;AAnGrB;;AAEI;;AAEE;;AAGA;;AACE;;AACE;;AAAQ;;AAA2C;;AAAS;;AAC5D;;AAAoE;;AACpE;;AAAuD;;AACvD;;AACF;;AACF;;AAEA;;AACE;;AACF;;AACA;;AACE;;AACE;;AAQF;;AACF;;AAEA;;AACA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;AACA;;AACE;;AACA;;AACF;;AAEF;;AAEA;;AAEE;;AACE;;AACF;;AACA;;AACE;;AACE;;AAQF;;AACF;;AACA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACJ;;AAIA;;AAGA;;AACE;;AACE;;AACA;;AACA;;AACF;;AACF;;AAGF;;AAEA;;AAyBJ;;;;;;AA3E2G;;AAAA;;AAKhD;;AAAA;;AACH;;AAAA;;AAmCF;;AAAA;;AACE;;AAAA;;AACH;;AAAA;;AAOhB;;AAAA;;;;;;AAmC7B;;AACG;;AAA4S;;;;;;;;AADpQ;;AACxC;;AAAA;;;;;;;;AAHP;;AACE;;AAA8D;AAAA;;AAAA;;AAAA;AAAA;;AAC5D;;AAEF;;AACA;;AAA4E;;AAAiD;;AAC/H;;;;;;AAJY;;AAAA;;;;;;AAKZ;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAaE;;AACG;;AAAqF;;;;;;AAD/C;;AACtC;;AAAA;;;;;;AAHP;;AACE;;AACE;;AAEF;;AACA;;AAA4E;;AAA2D;;AACzI;;;;;;AAJY;;AAAA;;;;;;AAKZ;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;;;AAWf;;AACC;;AACC;;AACC;;AACC;;AACC;;AACD;;AACD;;AACA;;AAMkB;AAAA;;AAAA;;AAAA;AAAA;;AANlB;;AASA;;AAIkB;;AAAsC;;AAAM;;AAC9D;;AACc;;AACA;;AAA4E;;;;AAAyH;;AACrN;;AAEc;;AACE;;AACE;;AAAgE;;AAAiB;;AACjF;;AACI;;AAAyD;;AAAQ;;;;AAA6E;;AAAS;;AAC3J;;AACF;;AACF;;AAEF;;;;;;AAxBT;;AAAA;;AAYyF;;AAAA;;AAOL;;AAAA;;;;;;AAM3E;;AACE;;;;AACF;;;;;;AADE;;AAAA;;;;;;;;AAUF;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AAMmC;AAAA;;AAAA;;AAAA;AAAA;;AANnC;;AASA;;AACE;;AAAsC;;AAAM;;AAC9C;;AACF;;AACA;;AAA4E;;AAAyF;;AACvK;;AAEA;;AACE;;AACE;;AAAgE;;AAAmB;;AACnF;;AACI;;AAAyD;;AAAQ;;;;AAAyD;;AAAS;;AACvI;;AACA;;AAAoB;;AAA8G;;AAAqD;;AAAI;;AAC7L;;AACF;;AAEF;;;;;;AAtBQ;;AAAA;;AASwE;;AAAA;;AAOL;;AAAA;;;;;;AAO3E;;AACE;;AACE;;AAAgE;;AAAmB;;AACnF;;AACI;;AAAyD;;AAAQ;;;;AAAqD;;AAAS;;AACnI;;AACA;;AAAoB;;AAA8G;;AAAqD;;AAAI;;AAC7L;;AACF;;;;;;AAJyE;;AAAA;;;;;;AAnIjF;;AACI;;AACE;;AACE;;AACF;;AACA;;AACE;;AAOA;;AAGF;;AACF;;AAGA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAOA;;AAGF;;AACF;;AAKX;;AACC;;AAAgE;;AAAe;;AAC/E;;AACC;;AAqCa;;AAId;;AACD;;AAGW;;AACE;;AAAgE;;AAAc;;AAC9E;;AACE;;AAmCA;;AAUF;;AACF;;AAGF;;;;;;AAvI8B;;AAAA;;AAOA;;AAAA;;AAYA;;AAAA;;AAOA;;AAAA;;AAYJ;;AAAA;;AAqCI;;AAAA;;AAWS;;AAAA;;AAmCT;;AAAA;;;;;;AAuChB;;AAA2K;;AAAsB;;AAAjM;;;;;;AAA2K;;AAAA;;;;;;AAD7K;;AACE;;AACF;;;;;;;;AAD8B;;AAAA;;;;;;AAE9B;;AAA0D;;AAAkD;;AAA5G;;;;;;AAmBE;;AAAiL;;AAAsB;;AAAvM;;;;;;AAAiL;;AAAA;;;;;;AADnL;;AACE;;AACF;;;;;;;;AAD8B;;AAAA;;;;;;AAE9B;;AAA4D;;AAAsD;;AAAlH;;;;;;AAmBE;;AAAiL;;AAAsB;;AAAvM;;;;;;AAAiL;;AAAA;;;;;;AADnL;;AACE;;AACF;;;;;;;;AAD8B;;AAAA;;;;;;AAmB5B;;AAAuL;;AAAsB;;AAA7M;;;;;;AAAuL;;AAAA;;;;;;AADzL;;AACE;;AACF;;;;;;;;AAD8B;;AAAA;;;;;;;;AAhFxC;;AAEM;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AAME;AAAA;;AAAA;;AAAA;AAAA;;AANF;;AASF;;AACA;;AAGA;;AACF;;AAEA;;AACE;;AACF;;AACA;;AACE;;AACE;;AAME;AAAA;;AAAA;;AAAA;AAAA;;AANF;;AASF;;AACA;;AAGA;;AAEF;;AAEA;;AACE;;AACF;;AACA;;AACE;;AACE;;AAQF;;AACA;;AAGF;;AAEA;;AACE;;AACF;;AACA;;AACE;;AACE;;AAQF;;AACA;;AAGF;;AACF;;AAEN;;;;;;AAnEgB;;AAAA;;AAGsB;;AAAA;;AAkBtB;;AAAA;;AAGsB;;AAAA;;AAkBtB;;AAAA;;AAmBA;;AAAA;;;;;;;;AAazB;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACP;;AACD;;;;;;;;AA9XX;;AACA;;AAGC;;AACE;;AACC;;AAGA;;AACC;;AAEC;;AAEC;;AACC;;AAEY;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AAAvC;;AAAgH;;AAA+D;;AAAsB;;AACrM;;AAA8O;;AAC9O;;AAA8O;;AAChP;;AACF;;AACF;;AAEA;;AA+GJ;;AAmJI;;AAyFX;;AACC;;AACA;;AACC;;AAGD;;AACD;;AACS;;AAGX;;AACD;;AAED;;AACD;;AAED;;AACD;;AACE;;AAKH;;AACC;;AACC;;AAEO;;AACE;;AAAoB;;AAAmB;;AACzC;;AACA;;AACE;;AAEA;;AAAoC;;AAAQ;;AAAsB;;AAAS;;AAC3E;;AACE;;AAAiE;;AAAe;;AAAQ;;AAAK;;AAC7F;;AAAiE;;AAAuB;;AAAQ;;AAAO;;AACvG;;AAAiE;;AAAuB;;AAAQ;;AAAI;;AAA2D;;AAC/J;;AAAiE;;AAAuB;;AAAQ;;AAAI;;AAAqC;;AAAI;;AAAuC;;AAAI;;AAA6B;;AAAI;;AAAI;;AAA8E;;AAAK;;AAAO;;AACzT;;AAEA;;AAEA;;AAAoC;;AAAQ;;AAAqB;;AAAS;;AAA1E;;AACA;;AACE;;AAAiE;;AAAe;;AAAQ;;AAAS;;AACjG;;AAAiE;;AAAuB;;AAAQ;;AAAO;;AACvG;;AAAiE;;AAAS;;AAAQ;;AAAsC;;AAAI;;AAA6B;;AAAI;;AAAI;;AAAgE;;AAAK;;AAAO;;AAAI;;AACjP;;AAAW;;AAAiG;;AAAS;;AAAK;;AAC5H;;AAEA;;AAEA;;AAAoC;;AAAQ;;AAAiB;;AAAS;;AAAtE;;AACA;;AACE;;AAAiE;;AAAe;;AAAQ;;AAAW;;AACnG;;AAAiE;;AAAuB;;AAAQ;;AAAQ;;AACxG;;AAAiE;;AAAS;;AAAQ;;AAAyB;;AAC7G;;AACF;;AACF;;AACF;;AACF;;AAGJ;;AACD;;;;;;AAxb4E;;AAAA;;AAoB+D;;AAAA;;AAA4L;;AAAA;;AAC5L;;AAAA;;AAA4L;;AAAA;;AAK3Q;;AAAA;;AA+GtC;;AAAA;;AAmJwB;;AAAA;;AA4F0D;;AAAA;;;;;;;;AAxdzG;;AAGC;;AACC;;AACC;;AACC;;AACE;;AAEC;;AACC;;AACC;;AAAI;;AAAW;;AAChB;;AACD;;AACO;;AACE;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AACpB;;AACF;;AACF;;AACP;;AACE;;AACC;;AACD;;AACF;;AACD;;AACD;;AACF;;AACD;;AACA;;AAGA;;AACI;;AAGE;;AACI;;AACE;;AAGA;;AA6CA;;AACF;;AACF;;AACJ;;AACJ;;AAGA;;AAgcF;;;;;;AApf2I;;AAAA;;AAoDzG;;AAAA;;;;;;AAmjBJ;;AACE;;AAAO;;AAA6D;;AAAO;;AAC7E;;;;;;AADS;;AAAA;;;;;;AAjBjB;;AAEI;;AACE;;AACE;;AACF;;AACA;;AACI;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAGF;;AACF;;AAGJ;;;;;;AAhBU;;AAAA;;AASG;;AAAA;;;;;;AASb;;AAEI;;AACE;;AACE;;AACF;;AACA;;AACI;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACI;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACI;;AACJ;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AAEJ;;;;;;AA/BU;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AASF;;AAAA;;;;;;;;AAvJ9B;;AAKC;;AACC;;AACC;;AACC;;AACE;;AAEC;;AACC;;AACC;;AAAI;;AAAmB;;AACxB;;AACD;;AACA;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACP;;AACD;;AACF;;AACD;;AACD;;AACF;;AACD;;AACA;;AAGA;;AACA;;AAGC;;AACE;;AACC;;AAGA;;AACC;;AAEC;;AAEC;;AACC;;AAEY;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AAGA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AAGA;;AACE;;AACE;;AACF;;AACA;;AACE;;;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACA;;AACE;;;;AACF;;AACF;;AAEA;;AAyBA;;AAyCX;;AACC;;AACA;;AACC;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AACP;;AACD;;AACD;;AACD;;AACS;;AAGX;;AACD;;AAED;;AACD;;AAED;;AACD;;AACE;;AAKH;;AACC;;AACC;;AAEO;;AACE;;AAAoB;;AAAuB;;AAC7C;;AACA;;AACE;;AAE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","file":"main-es5.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/jsonrpc-lite sync recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate,\n         ActivatedRouteSnapshot,\n         RouterStateSnapshot, \n         Router} from '@angular/router';\n\nimport { WalletService } from './services/wallet.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CanActivateRouteGuard implements CanActivate {\n\n    constructor(private wallet: WalletService, public router: Router) {}\n\n    canActivate(): boolean {\n        if (!this.wallet.isConfigured()) {\n            this.router.navigate(['createwallet']);\n            return false;\n        }\n        return this.wallet.isConfigured();\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { NewsComponent } from './components/news/news.component';\nimport { TransactionsComponent } from './components/transactions/transactions.component';\nimport { AccountsComponent } from './components/accounts/accounts.component';\nimport { RepresentativesComponent } from './components/qlc/representation/representatives/representatives.component';\nimport { TokensComponent } from './components/tokens/tokens.component';\nimport { TransactionComponent } from './components/transaction/transaction.component';\nimport { AccountComponent } from './components/account/account.component';\nimport { TopwalletsComponent } from './components/topwallets/topwallets.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { MyaccountComponent } from './components/myaccount/myaccount.component';\nimport { CreatewalletComponent } from './components/createwallet/createwallet.component';\nimport { ImportWalletComponent } from './components/import-wallet/import-wallet.component';\nimport { MyaccountsComponent } from './components/myaccounts/myaccounts.component';\nimport { SendComponent } from './components/send/send.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { MyrepresentativesComponent } from './components/qlc/representation/myrepresentatives/myrepresentatives.component';\nimport { ManageRepresentativesComponent } from './components/qlc/representation/manage-representatives/manage-representatives.component';\nimport { ImportAddressBookComponent } from './components/import-address-book/import-address-book.component';\nimport { NeoCreateComponent } from './components/neo/neo-create/neo-create.component';\nimport { NeoImportComponent } from './components/neo/neo-import/neo-import.component';\nimport { MyneowalletComponent } from './components/neo/myneowallet/myneowallet.component';\nimport { SendneoComponent } from './components/neo/sendneo/sendneo.component';\nimport { MystakingsComponent } from './components/mystakings/mystakings.component';\nimport { StakingCreateComponent } from './components/staking-create/staking-create.component';\nimport { StakingRevokeComponent } from './components/staking-revoke/staking-revoke.component';\nimport { ChainxCreateComponent } from './components/chainx/chainx-create/chainx-create.component';\nimport { ChainxAccountComponent } from './components/chainx/chainx-account/chainx-account.component';\nimport { ChainxSendComponent } from './components/chainx/chainx-send/chainx-send.component';\nimport { ChainxStakingComponent } from './components/chainx/chainx-staking/chainx-staking.component';\nimport { NeoSettingsComponent } from './components/neo/neo-settings/neo-settings.component';\nimport { MiningComponent } from './components/qlc/mining/mining/mining.component';\nimport { PovExplorerComponent } from './components/pov-explorer/pov-explorer.component';\nimport { PovViewComponent } from './components/pov-view/pov-view.component';\nimport { UserDashboardComponent } from './components/user-dashboard/user-dashboard.component';\nimport { CanActivateRouteGuard } from './app-routing.guard';\nimport { RepresentationRewardComponent } from './components/qlc/representation/representation-reward/representation-reward.component';\nimport { MiningRewardComponent } from './components/qlc/mining/mining-reward/mining-reward.component';\nimport { StakingDashboardComponent } from './components/staking-dashboard/staking-dashboard.component';\nimport { PortalComponent } from './components/portal/portal.component';\nimport { CcswapComponent } from './components/ccswap/ccswap.component';\nimport { Erc20WalletComponent } from './components/erc20/erc20-wallet/erc20-wallet.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'transactions', component: TransactionsComponent },\n  { path: 'transactions/:page', component: TransactionsComponent },\n  { path: 'transactions/:page/:account', component: TransactionsComponent },\n  { path: 'transaction', component: TransactionComponent },\n  { path: 'transaction/:transaction', component: TransactionComponent },\n  { path: 'accounts', component: AccountsComponent },\n  { path: 'accounts/:page', component: AccountsComponent },\n  { path: 'account', component: AccountComponent },\n  { path: 'account/:account', component: AccountComponent },\n  { path: 'representatives', component: RepresentativesComponent },\n  { path: 'tokens', component: TokensComponent },\n  { path: 'topwallets', component: TopwalletsComponent },\n  { path: 'login', component: LoginComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'createwallet', component: CreatewalletComponent },\n  { path: 'import-wallet', component: ImportWalletComponent },\n  { path: 'search/:hash', component: SearchComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'settings', component: SettingsComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'representation', component: MyrepresentativesComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'representation/manage', component: ManageRepresentativesComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'representation/reward', component: RepresentationRewardComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'representation/list', component: RepresentativesComponent },\n  { path: 'import-address-book', component: ImportAddressBookComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'wallets', component: MyaccountsComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'wallets/qlc/send', component: SendComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'wallets/qlc/send/:account', component: SendComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'wallets/qlc', component: MyaccountComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'wallets/qlc/:account', component: MyaccountComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'wallets/neo/create', component: NeoCreateComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'wallets/neo/send', component: SendneoComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'wallets/neo/send/:wallet', component: SendneoComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'wallets/neo/import', component: NeoImportComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'wallets/neo/settings', component: NeoSettingsComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'wallets/neo/:wallet', component: MyneowalletComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'wallets/erc20/:address', component: Erc20WalletComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'wallets/erc20', component: Erc20WalletComponent, canActivate: [CanActivateRouteGuard] },\n  //{ path: 'wallets/chainx/account/create', component: ChainxCreateComponent, canActivate: [CanActivateRouteGuard] },\n  //{ path: 'wallets/chainx/account/:address', component: ChainxAccountComponent, canActivate: [CanActivateRouteGuard] },\n  //{ path: 'wallets/chainx/send', component: ChainxSendComponent, canActivate: [CanActivateRouteGuard] },\n  //{ path: 'wallets/chainx/send/:address', component: ChainxSendComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'staking', component: StakingDashboardComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'staking/qlc', component: MystakingsComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'staking/qlc/create', component: StakingCreateComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'staking/qlc/revoke', component: StakingRevokeComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'swap', component: CcswapComponent, canActivate: [CanActivateRouteGuard] },\n  //{ path: 'staking/chainx', component: ChainxStakingComponent, canActivate: [CanActivateRouteGuard] },\n  //{ path: 'staking/chainx/invoke', component: ChainxStakingComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'mining', component: MiningComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'mining/reward', component: MiningRewardComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'pov-explorer', component: PovExplorerComponent },\n  { path: 'pov-explorer/:page', component: PovExplorerComponent },\n  { path: 'pov', component: PovViewComponent },\n  { path: 'pov/:type/:hash', component: PovViewComponent },\n  { path: 'news', component: NewsComponent },\n  { path: 'dashboard', component: UserDashboardComponent, canActivate: [CanActivateRouteGuard] },\n  { path: 'portal', component: PortalComponent },\n  { path: '**', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div id=\"update-notifications\" *ngIf=\"showUpdate\">\n    <a href=\"#\" class=\"update-close-but\" *ngIf=\"updateBreak == 0\" (click)=\"closeUpdate()\"></a>\n    <div class=\"container pt-0 pb-0 pl-0 pr-0\">\n        <div class=\"row pt-0 pb-0 pl-0 pr-0\">\n          <div class=\"col-12 pl-md-4 pr-md-3 text-center\">\n            {{updateText}}\n            <a href=\"{{updateLink}}\" *ngIf=\"updateLink != ''\" target=\"_blank\" >Click here</a>\n          </div>\n        </div>\n    </div>\n</div>\n<app-header [class.update-open]=\"showUpdate\"></app-header>\n<router-outlet [class.update-open]=\"showUpdate\"></router-outlet>\n<app-notifications></app-notifications>\n<app-desktop *ngIf=\"desktop\"></app-desktop>","import { Component } from '@angular/core';\nimport { WorkPoolService } from './services/work-pool.service';\nimport { AppSettingsService } from './services/app-settings.service';\nimport { NotificationService } from './services/notification.service';\nimport { NodeService } from './services/node.service';\nimport { LangService } from './services/lang.service';\nimport { WalletService } from './services/wallet.service';\nimport { PriceService } from './services/price.service';\nimport { AddressBookService } from './services/address-book.service';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { ApiService } from './services/api.service';\n\nimport { environment } from '../environments/environment';\nimport { QLCWebSocketService } from './services/qlc-websocket.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\twallet = this.walletService.wallet;\n\tshowUpdate = false;\n\tupdateText = '';\n\tupdateLink = '';\n\tupdateBreak = 0;\n\n\tdesktop = false;\n\n\tconstructor(\n\t\tprivate walletService: WalletService,\n\t\tprivate addressBook: AddressBookService,\n\t\tpublic settings: AppSettingsService,\n\t\tprivate notifications: NotificationService,\n\t\tpublic node: NodeService,\n\t\tprivate router: Router,\n\t\tprivate workPool: WorkPoolService,\n\t\tpublic price: PriceService,\n\t\tprivate lang: LangService,\n\t\tprivate api: ApiService,\n\t\tprivate webSocket: QLCWebSocketService\n\t) {\n\t\tif (environment.desktop) {\n\t\t\tthis.desktop = true;\n\t\t}\n\t\t//this.desktop = true;\n\t}\n\n\tasync ngOnInit() {\n\t\t// When the page closes, determine if we should lock the wallet\n\t\twindow.addEventListener('beforeunload', e => {\n\t\t\tif (this.wallet.locked) {\n\t\t\t\treturn; // Already locked, nothing to worry about\n\t\t\t}\n\t\t\tif (this.settings.settings.lockOnClose === 1) {\n\t\t\t\tthis.walletService.lockWallet();\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('unload', e => {\n\t\t\tif (this.wallet.locked) {\n\t\t\t\treturn; // Already locked, nothing to worry about\n\t\t\t}\n\t\t\tif (this.settings.settings.lockOnClose === 1) {\n\t\t\t\tthis.walletService.lockWallet();\n\t\t\t}\n\t\t});\n\t\tthis.router.events.subscribe(event => {\n\t\t\tif (event instanceof NavigationEnd) {\n\t\t\t\t//(<any>window).ga('set', 'page', event.urlAfterRedirects);\n\t\t\t\t//(<any>window).ga('send', 'pageview');\n\t\t\t\t//googleAnalytics(event.urlAfterRedirects);\n\t\t\t}\n\t\t\tif (!(event instanceof NavigationEnd)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\twindow.scrollTo(0, 0);\n\t\t});\n\t\tthis.webSocket.connect();\n    \tthis.addressBook.loadAddressBook();\n\t\tawait this.walletService.loadStoredWallet();\n\t\tthis.settings.loadAppSettings();\n\t\tthis.workPool.loadWorkCache();\n\n\t\tthis.updates();\n\t}\n\n\tasync updates() {\n\t\tconst updatesQuery = await this.api.updates();\n\t\tif (updatesQuery.result && updatesQuery.result != '') {\n\t\t\tthis.showUpdate = true;\n\t\t\tthis.updateText = updatesQuery.result.title;\n\t\t\tthis.updateLink = updatesQuery.result.link;\n\t\t\tthis.updateBreak = updatesQuery.result.break;\n\t\t\tif (this.updateBreak == 1) {\n\t\t\t\tthis.node.break = true;\n\t\t\t} else {\n\t\t\t\tthis.node.break = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tcloseUpdate() {\n\t\tthis.showUpdate = false;\n\t}\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\n\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { NavComponent } from './components/nav/nav.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { TransactionsComponent } from './components/transactions/transactions.component';\nimport { AccountsComponent } from './components/accounts/accounts.component';\nimport { RepresentativesComponent } from './components/qlc/representation/representatives/representatives.component';\nimport { TokensComponent } from './components/tokens/tokens.component';\nimport { AccountComponent } from './components/account/account.component';\nimport { TransactionComponent } from './components/transaction/transaction.component';\nimport { TopwalletsComponent } from './components/topwallets/topwallets.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { CreatewalletComponent } from './components/createwallet/createwallet.component';\nimport { MyaccountComponent } from './components/myaccount/myaccount.component';\n\nimport {HttpClientModule, HTTP_INTERCEPTORS, HttpClient} from '@angular/common/http';\nimport { HttpErrorInterceptor } from './http-error.interceptor';\nimport { QlcPipe } from './pipes/qlc.pipe';\nimport { NotificationsComponent } from './components/notifications/notifications.component';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport { environment } from '../environments/environment';\nimport { DeviceDetectorModule } from 'ngx-device-detector';\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\nimport { ImportWalletComponent } from './components/import-wallet/import-wallet.component';\nimport { AutofocusDirective } from './directives/autofocus.directive';\nimport { MyaccountsComponent } from './components/myaccounts/myaccounts.component';\nimport { SendComponent } from './components/send/send.component';\nimport { FiatPipe } from './pipes/fiat.pipe';\nimport { SearchComponent } from './components/search/search.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { MyrepresentativesComponent } from './components/qlc/representation/myrepresentatives/myrepresentatives.component';\nimport { SqueezePipe } from './pipes/squeeze.pipe';\nimport { ManageRepresentativesComponent } from './components/qlc/representation/manage-representatives/manage-representatives.component';\nimport { ImportAddressBookComponent } from './components/import-address-book/import-address-book.component';\nimport { NeoImportComponent } from './components/neo/neo-import/neo-import.component';\nimport { NeoCreateComponent } from './components/neo/neo-create/neo-create.component';\nimport { MyneowalletComponent } from './components/neo/myneowallet/myneowallet.component';\nimport { SendneoComponent } from './components/neo/sendneo/sendneo.component';\nimport { StakingCreateComponent } from './components/staking-create/staking-create.component';\nimport { MystakingsComponent } from './components/mystakings/mystakings.component';\nimport { StakingRevokeComponent } from './components/staking-revoke/staking-revoke.component';\nimport { AmountValidatorDirective } from './directives/amount-validator.directive';\nimport { ModalUnlockComponent } from './components/modal-unlock/modal-unlock.component';\nimport { DesktopComponent } from './components/desktop/desktop.component';\nimport { NeoSettingsComponent } from './components/neo/neo-settings/neo-settings.component';\nimport { ChainxCreateComponent } from './components/chainx/chainx-create/chainx-create.component';\nimport { ChainxStakingComponent } from './components/chainx/chainx-staking/chainx-staking.component';\nimport { ChainxAccountComponent } from './components/chainx/chainx-account/chainx-account.component';\nimport { ChainxSendComponent } from './components/chainx/chainx-send/chainx-send.component';\nimport { MiningComponent } from './components/qlc/mining/mining/mining.component';\nimport { PovViewComponent } from './components/pov-view/pov-view.component';\nimport { PovExplorerComponent } from './components/pov-explorer/pov-explorer.component';\nimport { NewsComponent } from './components/news/news.component';\nimport { UserDashboardComponent } from './components/user-dashboard/user-dashboard.component';\n\nimport { ChartjsModule } from '@ctrl/ngx-chartjs';\nimport { NoCommaPipe } from './pipes/no-comma.pipe';\nimport { CanActivateRouteGuard } from './app-routing.guard';\nimport { RepresentationRewardComponent } from './components/qlc/representation/representation-reward/representation-reward.component';\nimport { MiningRewardComponent } from './components/qlc/mining/mining-reward/mining-reward.component';\nimport { UserSubmenuComponent } from './components/user-dashboard/user-submenu/user-submenu.component';\nimport { StakingDashboardComponent } from './components/staking-dashboard/staking-dashboard.component';\nimport { SqueezeNumberPipe } from './pipes/squeeze-number.pipe';\nimport { PortalComponent } from './components/portal/portal.component';\nimport { CcswapComponent } from './components/ccswap/ccswap.component';\nimport { Erc20WalletComponent } from './components/erc20/erc20-wallet/erc20-wallet.component';\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavComponent,\n    HeaderComponent,\n    TransactionsComponent,\n    AccountsComponent,\n    RepresentativesComponent,\n    TokensComponent,\n    AccountComponent,\n    TransactionComponent,\n    TopwalletsComponent,\n    LoginComponent,\n    CreatewalletComponent,\n    MyaccountComponent,\n    QlcPipe,\n    NotificationsComponent,\n    ImportWalletComponent,\n    AutofocusDirective,\n    MyaccountsComponent,\n    SendComponent,\n    FiatPipe,\n    SearchComponent,\n    SettingsComponent,\n    MyrepresentativesComponent,\n    SqueezePipe,\n    ManageRepresentativesComponent,\n    ImportAddressBookComponent,\n    NeoImportComponent,\n    NeoCreateComponent,\n    MyneowalletComponent,\n    SendneoComponent,\n    StakingCreateComponent,\n    MystakingsComponent,\n    StakingRevokeComponent,\n    AmountValidatorDirective,\n    ModalUnlockComponent,\n    DesktopComponent,\n    NeoSettingsComponent,\n    ChainxCreateComponent,\n    ChainxStakingComponent,\n    ChainxAccountComponent,\n    ChainxSendComponent,\n    MiningComponent,\n    PovViewComponent,\n    PovExplorerComponent,\n    NewsComponent,\n    UserDashboardComponent,\n    NoCommaPipe,\n    RepresentationRewardComponent,\n    MiningRewardComponent,\n    UserSubmenuComponent,\n    StakingDashboardComponent,\n    SqueezeNumberPipe,\n    PortalComponent,\n    CcswapComponent,\n    Erc20WalletComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ClipboardModule,\n    ChartjsModule,\n\t\tTooltipModule.forRoot(),\n\t\tBsDropdownModule.forRoot(),\n\t\tCollapseModule.forRoot(),\n\t\tModalModule.forRoot(),\n    PopoverModule.forRoot(),\n    AlertModule.forRoot(),\n    CarouselModule.forRoot(),\n    ProgressbarModule.forRoot(),\n    TranslateModule.forRoot({\n      loader: {\n          provide: TranslateLoader,\n          useFactory: (createTranslateLoader),\n          deps: [HttpClient]\n      }\n    }),\n    DeviceDetectorModule.forRoot(),\n    LoggerModule.forRoot({\n\t\t\tserverLoggingUrl: `${environment.rpcUrl}/logs`,\n\t\t\tlevel: NgxLoggerLevel.DEBUG,\n\t\t\tserverLogLevel: NgxLoggerLevel.ERROR\n\t\t})\n  ],\n  providers: [\n    {\n    provide: HTTP_INTERCEPTORS,\n    useClass: HttpErrorInterceptor,\n    multi: true\n    },\n    CanActivateRouteGuard\n],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    ModalUnlockComponent    \n  ]\n})\nexport class AppModule { }\n","<!-- ACCOUNT -->\n<div class=\"container mt-4 mb-2 qlc-content-home\">\n  <div class=\"row\">\n\n    <!-- TITLE -->\n    <div class=\"col-lg-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\">\n      <div class=\"content-title\">\n        <h1>Wallet details</h1>\n      </div>\n    </div>\n\n    <!-- ADDRESS -->\n    <div class=\"col-lg-12 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-blue\">\n        <div class=\"container\">\n\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">Address hash</div>\n          </div>\n          <div class=\"row qlc-table-row-blue row-text-mid mt-3 mb-3\">\n            <div class=\"col-12 text-break\">{{accountId}} \n              <a ngxClipboard [cbContent]=\"accountId\"><img src=\"assets/img/icons/copy.svg\" class=\"img-copy\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Copy to clipboard\"></a> \n              <a (click)=\"openModal(qrCode)\"><img src=\"assets/img/icons/qr-code.svg\" class=\"img-qr\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Show QR code\"></a></div>\n          </div>\n          \n        </div>\n      </div>\n    </div>\n    \n\n    <!-- MORE INFO -->\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-white\">\n        <!-- OTHERS -->\n        <div class=\"container\">\n          <div class=\"row mt-0 pt-0\">\n            <div class=\"col-12 mt-0 pl-0 pr-0 ml-0 mr-0\">\n              \n\n                <div class=\"container pt-0 mt-0\">\n                  <div class=\"row qlc-table-header-white\">\n                    <div class=\"col-12 pt-0 mt-0\">Balances</div>\n                  </div>\n                </div>\n                <div class=\"container\">\n                  <div class=\"row\">\n\n                      <carousel [interval]=\"3000\" class=\"w-100\">\n                        \n                        <slide *ngFor=\"let token of accountMeta.tokens\">\n                          <div class=\"row pt-3 pl-3 pr-3 mb-2 pb-1\">\n                            <div class=\"col-3 pr-3 pt-1\">\n                              <img src=\"assets/img/token-{{ token.tokenInfo.image | lowercase }}.png\" class=\"w-100 icon-token\" style=\"padding-right:2px;\" *ngIf=\"token.tokenInfo\">\n                            </div>\n                            <div class=\"col-9 pr-0 pl-0 mb-2 pb-0\">\n                              <div class=\"row qlc-table-row-white row-text-mid mt-0 pb-1\">\n                                <div class=\"col-12 pb-0 mb-0\"><span style=\"color: #a8a6ae;font-size: 12px;text-transform: uppercase;font-weight: 700; line-height:14px;\" *ngIf=\"token.tokenInfo\">{{ token.tokenInfo.tokenSymbol }}</span></div>\n                                <div class=\"col-12 pb-0 pt-0 mt-0\" style=\"color: #595757;font-size: 14px;text-transform: uppercase;font-weight: 700; line-height:16px;\" *ngIf=\"token.tokenInfo\">{{ token.balance | qlc: token.tokenInfo.decimals | currency:'':'':'1.2-8' }}</div>\n                              </div>\n                            </div>\n                          </div>\n                        </slide>\n                        \n                      </carousel>\n\n                  </div>\n                </div>\n\n\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-white\">\n            <div class=\"col-12\">Pending</div>\n          </div>\n          <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n            <div class=\"col-12 pb-1\">{{ pendingBlocks.length }} transactions</div>\n          </div>\n          <div class=\"row qlc-table-row-white sub-page pt-0\">\n            <div class=\"col-12 text-wrap pt-1\"><span class=\"text-blue\">-</span></div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-blue\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">Total transactions</div>\n          </div>\n          <div class=\"row qlc-table-row-blue row-text-mid mt-3 pb-0\">\n            <div class=\"col-12 pb-1\">{{ accountBlocksCount }}</div>\n          </div>\n          <div class=\"row qlc-table-row-white sub-page pt-0\">\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-blue\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">Representative</div>\n          </div>\n          <div class=\"row qlc-table-row-blue row-text-small mt-3 mb-3\">\n            <div class=\"col-12 text-break\"><a [routerLink]=\"'/account/'+accountMeta.representative\">{{ accountMeta.representative }}</a></div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n        \n  </div>\n  </div>\n\n\n<!-- PENDING TRANSACTIONS -->\n<div class=\"container mt-3 mb-0\" *ngIf=\"pendingBlocks.length > 0\">\n  <div class=\"row\">\n    \n    <div class=\"col-12 pl-0 pr-0\">\n      \n      <!-- TITLE -->\n      <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>Pending Transactions</h1>\n        </div>\n      </div>\n\n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n        <div class=\"content-box-white\">\n\n\n          <div class=\"container\">\n\n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">Type</div>\n              <div class=\"col-xl-6 col-lg-5 col-md-5 col-sm-5 col-7 text-truncate\">Address / Transaction ID</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Amount</div>\n              <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 d-none d-sm-block col-6 pr-4 text-right\">Time</div>\n            </div>\n            <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let pending of pendingBlocks\">\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">\n                  <span class=\"qlc-icon icon-receive\" title=\"Receive\"></span>\n                  <span class=\"d-none d-sm-none d-md-inline-block txState\">\n                    <span class=\"text-color-lightgrey\">State</span><br>\n                    <span class=\"text-bold-grey\">Receive</span>\n                  </span>\n                </div>\n                <div class=\"d-none d-xl-block col-xl-6 pb-0\">\n                    <span class=\"text-color-lightgrey\">From:</span> \n                    <a [routerLink]=\"'/account/' + (pending.account)\">{{ pending.account }}</a><br>\n                    <span class=\"text-color-lightgrey\">Hash:</span>\n                    <a [routerLink]=\"'/transaction/' + pending.hash\"><span class=\"text-tiny\">{{ pending.hash }}</span></a>\n                </div>\n                <div class=\"d-none d-lg-block d-xl-none col-lg-5 pb-0\">\n                    <span class=\"text-color-lightgrey\">From:</span> \n                    <a [routerLink]=\"'/account/' + (pending.account)\">{{ pending.account | squeeze : '25,25' }}</a><br>\n                    <span class=\"text-color-lightgrey\">Hash:</span>\n                    <a [routerLink]=\"'/transaction/' + pending.hash\"><span class=\"text-tiny\">{{ pending.hash | squeeze : '25,25' }}</span></a>\n                </div>\n                <div class=\"d-none d-md-block d-lg-none col-md-5 pb-0\">\n                    <span class=\"text-color-lightgrey\">From:</span> \n                    <a [routerLink]=\"'/account/' + (pending.account)\">{{ pending.account | squeeze : '18,18' }}</a><br>\n                    <span class=\"text-color-lightgrey\">Hash:</span>\n                    <a [routerLink]=\"'/transaction/' + pending.hash\"><span class=\"text-tiny\">{{ pending.hash | squeeze : '18,18' }}</span></a>\n                </div>\n                <div class=\"d-none d-sm-block d-md-none col-sm-5 pb-0\">\n                    <span class=\"text-color-lightgrey\">From:</span> \n                    <a [routerLink]=\"'/account/' + (pending.account)\">{{ pending.account | squeeze : '10,10' }}</a><br>\n                    <span class=\"text-color-lightgrey\">Hash:</span>\n                    <a [routerLink]=\"'/transaction/' + pending.hash\"><span class=\"text-tiny\">{{ pending.hash | squeeze : '10,10' }}</span></a>\n                </div>\n                <div class=\"d-block d-sm-none col-7 pb-0\">\n                    <span class=\"text-color-lightgrey\">From:</span> \n                    <a [routerLink]=\"'/account/' + (pending.account)\">{{ pending.account | squeeze : '10,10' }}</a><br>\n                    <span class=\"text-color-lightgrey\">Hash:</span>\n                    <a [routerLink]=\"'/transaction/' + pending.hash\"><span class=\"text-tiny\">{{ pending.hash | squeeze : '10,10' }}</span></a>\n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pb-0 pr-sm-0 pr-4 text-right {{\n                  pending.type == 'Send' || pending.type == 'ContractSend' ? 'text-color-red' : 'text-color-green'\n                }}\">\n                  <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">{{pending.type == 'Send' || pending.type == 'ContractSend' ? '-' : '+'}} {{ pending.amount | qlc: pending.tokenInfo.decimals | currency:'':'':'1.2-8' }}</span>\n                  <br><span class=\"text-color-grey\">{{ pending.tokenInfo.tokenSymbol }}</span>\n                </div>\n                <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 col-12 pr-4 text-right\">\n                  {{ pending.timestamp * 1000 | date: 'short' }}\n                </div>\n                <div class=\"container transaction-details\">\n  \n                </div>\n              </div>\n\n\n          </div>\n\n\n        </div>\n      </div>\n\n    </div>\n    \n  </div>\n</div>\n\n<!-- LATEST TRANSACTIONS -->\n<div class=\"container mt-0 mb-3\">\n  <div class=\"row\">\n    \n    <div class=\"col-12 pl-0 pr-0\">\n      \n      <!-- TITLE -->\n      <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>Latest Transactions</h1>\n        </div>\n      </div>\n\n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n        <div class=\"content-box-white\">\n\n\n          <div class=\"container\">\n\n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">Type</div>\n              <div class=\"col-xl-6 col-lg-5 col-md-5 col-sm-5 col-7 text-truncate\">Address / Transaction ID</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Amount</div>\n              <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 d-none d-sm-block col-6 pr-4 text-right\">Time</div>\n            </div>\n\n            <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let history of accountHistory\">\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">\n                <span class=\"qlc-icon icon-{{ history.type }}\" title=\"{{ history.type }}\"></span>\n                <span class=\"d-none d-sm-none d-md-inline-block txState\">\n                  <span class=\"text-color-lightgrey\">State</span><br>\n                  <span class=\"text-bold-grey\">{{ history.type }}</span>\n                </span>\n              </div>\n              <div class=\"d-none d-xl-block col-xl-6 pb-0\">\n                <span class=\"text-color-lightgrey text-tiny\">{{history.type == 'Send' || history.type == 'ContractSend' ? 'To' : 'From'}}: </span> \n                <a [routerLink]=\"'/account/' + (history.link_as_account || history.address)\">{{ history.link_as_account || history.address }}</a><br>\n                <span class=\"text-color-lightgrey text-tiny\">Hash: </span> \n                <a [routerLink]=\"'/transaction/' + history.hash\"><span>{{ history.hash }}</span></a><br>\n                <span *ngIf=\"history.povConfirmHeight > 0\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm height: </span> \n                  <a [routerLink]=\"'/pov/height/' + history.povConfirmHeight\">{{ history.povConfirmHeight }}</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm count: </span> {{ history.povConfirmCount }}\n                </span>\n              </div>\n              <div class=\"d-none d-lg-block d-xl-none col-lg-5 pb-0\">\n                <span class=\"text-color-lightgrey text-tiny\">{{history.type == 'Send' || history.type == 'ContractSend' ? 'To' : 'From'}}: </span> \n                <a [routerLink]=\"'/account/' + (history.link_as_account || history.address)\">{{ history.link_as_account || history.address }}</a><br>\n                <span class=\"text-color-lightgrey text-tiny\">Hash: </span> \n                <a [routerLink]=\"'/transaction/' + history.hash\"><span>{{ history.hash }}</span></a><br>\n                <span *ngIf=\"history.povConfirmHeight > 0\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm height: </span> \n                  <a [routerLink]=\"'/pov/height/' + history.povConfirmHeight\">{{ history.povConfirmHeight }}</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm count: </span> {{ history.povConfirmCount }}\n                </span>\n              </div>\n              <div class=\"d-none d-md-block d-lg-none col-md-5 pb-0\">\n                <span class=\"text-color-lightgrey text-tiny\">{{history.type == 'Send' || history.type == 'ContractSend' ? 'To' : 'From'}}: </span> \n                <a [routerLink]=\"'/account/' + (history.link_as_account || history.address)\">{{ history.link_as_account || history.address | squeeze : '18,18' }}</a><br>\n                <span class=\"text-color-lightgrey text-tiny\">Hash: </span> \n                <a [routerLink]=\"'/transaction/' + history.hash\"><span>{{ history.hash | squeeze : '18,18' }}</span></a><br>\n                <span *ngIf=\"history.povConfirmHeight > 0\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm height: </span> \n                  <a [routerLink]=\"'/pov/height/' + history.povConfirmHeight\">{{ history.povConfirmHeight }}</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm count: </span> {{ history.povConfirmCount }}\n                </span>\n              </div>\n              <div class=\"d-none d-sm-block d-md-none col-sm-5 pb-0\">\n                <span class=\"text-color-lightgrey text-tiny\">{{history.type == 'Send' || history.type == 'ContractSend' ? 'To' : 'From'}}: </span> \n                <a [routerLink]=\"'/account/' + (history.link_as_account || history.address)\">{{ history.link_as_account || history.address | squeeze : '15,15' }}</a><br>\n                <span class=\"text-color-lightgrey text-tiny\">Hash: </span> \n                <a [routerLink]=\"'/transaction/' + history.hash\"><span>{{ history.hash | squeeze : '15,15' }}</span></a><br>\n                <span *ngIf=\"history.povConfirmHeight > 0\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm height: </span> \n                  <a [routerLink]=\"'/pov/height/' + history.povConfirmHeight\">{{ history.povConfirmHeight }}</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm count: </span> {{ history.povConfirmCount }}\n                </span>\n              </div>\n              <div class=\"d-block d-sm-none col-7 pb-0\">\n                <span class=\"text-color-lightgrey text-tiny\">{{history.type == 'Send' || history.type == 'ContractSend' ? 'To' : 'From'}}: </span> \n                <a [routerLink]=\"'/account/' + (history.link_as_account || history.address)\">{{ history.link_as_account || history.address | squeeze : '13,13' }}</a><br>\n                <span class=\"text-color-lightgrey text-tiny\">Hash: </span> \n                <a [routerLink]=\"'/transaction/' + history.hash\"><span>{{ history.hash | squeeze : '13,13' }}</span></a><br>\n                <span *ngIf=\"history.povConfirmHeight > 0\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm height: </span> \n                  <a [routerLink]=\"'/pov/height/' + history.povConfirmHeight\">{{ history.povConfirmHeight }}</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm count: </span> {{ history.povConfirmCount }}\n                </span>\n              </div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pb-0 pr-sm-0 pr-4 text-right {{\n                history.type == 'Send' || history.type == 'ContractSend' ? 'text-color-red' : 'text-color-green'\n              }}\">\n                <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" *ngIf=\"history.amount\">{{history.type == 'Send' || history.type == 'ContractSend' ? '-' : '+'}} {{ history.amount | qlc:history.tokenInfo.decimals | currency:'':'':'1.2-8' }}</span>\n                <br><span class=\"text-color-grey\">{{ history.tokenName }}</span>\n              </div>\n              <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 col-12 pr-4 text-right\">\n                {{ history.timestamp * 1000 | date: 'short' }}\n              </div>\n              <div class=\"container transaction-details\">\n\n              </div>\n            </div>\n\n\n            \n          </div>\n\n        </div>\n      </div>\n\n      <!-- BUTTON -->\n      <div class=\"col-lg-12 mb-0 mt-2 pl-md-2 pr-md-2 text-center\" *ngIf=\"accountBlocksCount>pageSize\">\n        <a [routerLink]=\"'/transactions/1/' + accountId\" class=\"btn btn-primary btn-blue\">ALL TRANSACTIONS</a>\n      </div>\n\n    </div>\n    \n  </div>\n</div>\n\n\n\n<div class=\"container mt-4 mb-4\">\n  <div class=\"row\">\n  </div>\n</div>\n\n<ng-template #qrCode>\n  <div class=\"modal-body\">\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n        <div class=\"qrcode\"><img *ngIf=\"qrCodeImage\" [src]=\"qrCodeImage\" /></div>\n    \n  </div>\n</ng-template>","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router, ChildActivationEnd } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\n\nimport BigNumber from 'bignumber.js';\nimport { timer } from 'rxjs';\nimport { NodeService } from 'src/app/services/node.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport * as QRCode from 'qrcode';\nimport { WalletService } from 'src/app/services/wallet.service';\n\n@Component({\n\tselector: 'app-account',\n\ttemplateUrl: './account.component.html',\n\tstyleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\t\n\taccountHistory: any[] = [];\n\tpendingBlocks = [];\n\tpendingSum = 0;\n\tpageSize = 10;\n\n\taccountBlocksCount = 0;\n\t\n\taccountMeta: any = {};\n\taccountId = '';\n\t\n\trouterSub = null;\n\t\n\tmodalRef: BsModalRef;\n\t\n\tqrCodeImage = null;\n\t\n\tshowEditName = false;\n\taddressBookTempName = '';\n\taddressBookModel = '';\n\t\n\t\n\tconstructor(\n\t\tprivate router: ActivatedRoute,\n\t\tprivate route: Router,\n\t\tprivate api: ApiService,\n\t\tprivate node: NodeService,\n\t\tprivate modalService: BsModalService,\n\t\tprivate wallet: WalletService\n\t\t) \n\t{\n\t\t\n\t}\n\t\n\tasync ngOnInit() {\n\t\tthis.routerSub = this.route.events.subscribe(event => {\n\t\t\tif (event instanceof ChildActivationEnd) {\n\t\t\t\tthis.loadAccountDetails(); // Reload the state when navigating to itself from the transactions page\n\t\t\t}\n\t\t});\n\t\tthis.load();\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.routerSub) {\n\t\t\tthis.routerSub.unsubscribe();\n\t\t}\n\t}\n\t\n\tload() {\n\t\tif (this.node.status === true) {\n\t\t\tthis.loadAccountDetails();\n\t\t} else {\n\t\t\tthis.reload();\n\t\t}\n\t}\n\t\n\tasync reload() {\n\t\tconst source = timer(200);\n\t\tconst abc =  source.subscribe(async val => {\n\t\t\tthis.load();\n\t\t});\n\t}\n\t\n\tasync loadAccountDetails() {\n\t\tthis.accountId = '';\n\t\tthis.accountHistory = [];\n\t\tthis.pendingBlocks = [];\n\t\tthis.accountId = this.router.snapshot.params.account;\n\t\ttry {\n\t\t\tawait this.wallet.loadTokens();\n\t\t\t//console.log(this.wallet.tokenMap);\n\n\t\t\tconst accountInfo = await this.api.accountInfo(this.accountId);\n\t\t\tthis.accountMeta = {};\n\t\t\tif (!accountInfo.error) {\n\t\t\t\tconst am = accountInfo.result;\n\t\t\t\tfor (const token of am.tokens) {\n\t\t\t\t\tif (this.wallet.tokenMap.hasOwnProperty(token.type)) {\n\t\t\t\t\t\ttoken.tokenInfo = this.wallet.tokenMap[token.type];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.accountMeta = am;\n\t\t\t}\n\t\t\t//console.log(this.accountMeta);\n\t\t\t\n\t\t\tthis.pendingBlocks = [];\n\t\t\tthis.pendingSum = 0;\n\t\t\t\n\t\t\tconst accountPending = await this.api.accountsPending([this.accountId], 25);\n\t\t\tif (!accountPending.error && accountPending.result) {\n\t\t\t\tconst pendingResult = accountPending.result;\n\t\t\t\t\n\t\t\t\tfor (const account in pendingResult) {\n\t\t\t\t\tif (!pendingResult.hasOwnProperty(account)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tpendingResult[account].forEach(pending => {\n\t\t\t\t\t\tif (this.wallet.tokenMap.hasOwnProperty(pending.type)) {\n\t\t\t\t\t\t\tpending.tokenInfo = this.wallet.tokenMap[pending.type];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.pendingBlocks.push({\n\t\t\t\t\t\t\taccount: pending.source,\n\t\t\t\t\t\t\tamount: pending.amount,\n\t\t\t\t\t\t\ttoken: pending.tokenName,\n\t\t\t\t\t\t\ttimestamp: pending.timestamp,\n\t\t\t\t\t\t\t//addressBookName: this.addressBook.getAccountName(pending.source) || null,\n\t\t\t\t\t\t\ttokenInfo: pending.tokenInfo,\n\t\t\t\t\t\t\thash: pending.hash\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.pendingSum += Number(pending.amount)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// }\n\t\t\t\n\t\t\t// If the account doesnt exist, set the pending balance manually\n\t\t\tif (this.accountMeta.error) {\n\t\t\t\tconst pendingRaw = this.pendingBlocks.reduce(\n\t\t\t\t\t(prev: BigNumber, current: any) => prev.plus(new BigNumber(current.amount)),\n\t\t\t\t\tnew BigNumber(0)\n\t\t\t\t\t);\n\t\t\t\t\tthis.accountMeta.pending = pendingRaw;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.accountHistory = [];\n\t\t\t\tawait this.getAccountHistory(this.accountId);\n\t\t\t\tconst accountBlocksCount = await this.api.accountBlocksCount(this.accountId);\n\t\t\t\tthis.accountBlocksCount = accountBlocksCount.result;\n\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t\tconst qrCode = await QRCode.toDataURL(`${this.accountId}`);\n\t\t\tthis.qrCodeImage = qrCode;\n\t\t}\n\t\t\n\t\tasync getAccountHistory(account, resetPage = true) {\n\t\t\tif (resetPage) {\n\t\t\t\tthis.pageSize = 10;\n\t\t\t}\n\t\t\tconst accountHistory = await this.api.accountHistory(account, this.pageSize, 0);\n\t\t\t// const additionalBlocksInfo = [];\n\t\t\t\n\t\t\tthis.accountHistory = [];\n\t\t\tif (!accountHistory.error) {\n\t\t\t\tthis.accountHistory = await this.wallet.prepareQLCBlockView(accountHistory.result);\n\t\t\t\t//this.accountHistory = this.accountHistory.filter(h => h.type !== 'Change');\n\t\t\t}\n\t\t}\n\t\topenModal(template: TemplateRef<any>) {\n\t\t\tthis.modalRef = this.modalService.show(template);\n\t\t}\n\t}\n\t\t","<!-- ACCOUNTS -->\n<div class=\"container mt-0 mb-3 qlc-content-first\">\n  <div class=\"row\">\n    \n    <div class=\"col-12 pl-0 pr-0\">\n      \n      <!-- TITLE -->\n      <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>QLC Chain Wallets</h1>\n        </div>\n      </div>\n      \n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n        <div class=\"content-box-white\">\n          \n          \n          <div class=\"container\">\n            \n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-8 col-lg-7 col-md-6 col-sm-5 col-6 text-truncate\">Address</div>\n              <div class=\"col-xl-4 col-lg-5 col-md-6 col-sm-7 col-6 text-right\">Balances</div>\n              <!--<div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-4 col-6 pr-4 text-right\">Last transaction</div>-->\n            </div>\n            <div class=\"row qlc-table-row closed\" *ngFor=\"let account of accounts\">\n              <div class=\"d-none d-xl-block col-xl-8\">\n                <a [routerLink]=\"'/account/' + account.account\">{{ account.account }}</a>\n              </div>\n              <div class=\"d-none d-lg-block d-xl-none col-lg-7 pl-4\">\n                <a [routerLink]=\"'/account/' + account.account\">{{ account.account }}</a>\n              </div>\n              <div class=\"d-none d-md-block d-lg-none col-md-6 pl-4\">\n                <a [routerLink]=\"'/account/' + account.account\">{{ account.account | squeeze : '26,26' }}</a>\n              </div>\n              <div class=\"d-none d-sm-block d-md-none col-sm-5 pl-4\">\n                <a [routerLink]=\"'/account/' + account.account\">{{ account.account | squeeze : '18,18' }}</a>\n              </div>\n              <div class=\"d-block d-sm-none col-6 pl-4\">\n                <a [routerLink]=\"'/account/' + account.account\">{{ account.account | squeeze : '11,11' }}</a>\n              </div>\n              <div class=\"col-xl-4 col-lg-5 col-md-6 col-sm-7 col-6 text-right pr-3\">\n                <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" *ngFor=\"let token of account.tokens\" style=\"display:block;padding:0px;margin:0px;min-height:auto;margin-bottom:4px;\">{{ token.balance | qlc:token.tokenInfo.decimals | currency:'':'':'1.2-8' }} {{ token.tokenInfo.tokenSymbol }}<img src=\"assets/img/token-{{ token.tokenInfo.image | lowercase }}.png\" class=\"icon-token\" style=\"width:18px;margin-top:-2px;\"></span>\n              </div>\n              <!--<div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-4 col-6 pr-4 text-right\" *ngFor=\"let token of account.tokens\">{{ token.modified * 1000 | date: 'short' }}</div>-->\n              <div class=\"container transaction-details\"></div>\n            </div>\n          </div>\n          \n          \n        </div>\n      </div>\n      \n      <!-- PAGINATION -->\n      <div class=\"col-lg-12 mb-0 mt-2 pl-md-2 pr-md-2 text-center\" *ngIf=\"pages.length > 1\">\n        <a class=\"btn btn-primary btn-blue btn-box\" *ngIf=\"activePage != 1\" (click)=\"goTo(activePage-1)\">&lt;</a>\n        <a class=\"btn btn-primary btn-white btn-box\" *ngFor=\"let page of pages\" [ngClass]=\"{'active' : page == activePage}\" (click)=\"goTo(page)\">{{ page }}</a>\n        <a class=\"btn btn-primary btn-blue btn-box\" *ngIf=\"activePage != allPages\" (click)=\"goTo(activePage+1)\">&gt;</a>\n      </div>\n      \n    </div>\n    \n  </div>\n</div>\n\n<div class=\"container mt-4 mb-4\">\n  <div class=\"row\">\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, ChildActivationEnd } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { NodeService } from 'src/app/services/node.service';\nimport { timer } from 'rxjs';\n\n@Component({\n  selector: 'app-accounts',\n  templateUrl: './accounts.component.html',\n  styleUrls: ['./accounts.component.scss']\n})\nexport class AccountsComponent implements OnInit {\n\n  accounts: any[] = [];\n  accountsCreated = 0;\n\tpendingBlocks = [];\n  pageSize = 10;\n  pages = [];\n  allPages = 0;\n  activePage = 0;\n  offSet = 0;\n\n  routerSub = null;\n\n  constructor(\n    private route: ActivatedRoute,\n\t\tprivate router: Router,\n\t\tprivate api: ApiService,\n\t\tprivate node: NodeService\n  ) { }\n\n  async ngOnInit() {\n    this.routerSub = this.router.events.subscribe(event => {\n\t\t\tif (event instanceof ChildActivationEnd) {\n\t\t\t\tthis.load(); // Reload the state when navigating to itself from the accounts page\n\t\t\t}\n    });\n    this.load();\n  }\n\n  load() {\n\t\tif (this.node.status === true) {\n      var page = this.route.snapshot.params.page;\n      if (page == undefined || page == 0) \n        page = 1;\n    \n\t\t\tthis.setPage(page);\n\t\t} else {\n\t\t\tthis.reload();\n\t\t}\n\t}\n\n\tasync reload() {\n\t\tconst source = timer(200);\n\t\tconst abc =  source.subscribe(async val => {\n\t\t\t\tthis.load();\n\t\t});\n\t}\n\n  setPages() {\n\t\tthis.activePage = Math.floor((this.offSet + this.pageSize)/this.pageSize);\n\t\tvar displayPages = 7;\n    var pages = this.accountsCreated/this.pageSize;\n    if (this.accountsCreated%this.pageSize != 0) {\n      pages = Math.floor(this.accountsCreated/this.pageSize)+1;\n    }\n\t\t\n\t\tthis.allPages = pages;\n\t\tif (pages < 7)\n\t\t\tdisplayPages = pages;\n\t\t\n\t\tthis.pages = Array(displayPages).fill(0).map((pages,i)=>i+1) ;\n\n\t\tif (pages > 5 && this.activePage > 3 && this.activePage < pages -3) {\n\t\t\tthis.pages[1] = this.activePage -2;\n\t\t\tthis.pages[2] = this.activePage -1;\n\t\t\tthis.pages[3] = this.activePage;\n\t\t\tthis.pages[4] = this.activePage +1;\n\t\t\tthis.pages[5] = this.activePage +2;\n\t\t} else if (pages > 5 && this.activePage > 3 && this.activePage >= pages -3) {\n\t\t\tthis.pages[1] = pages -5;\n\t\t\tthis.pages[2] = pages -4;\n\t\t\tthis.pages[3] = pages -3;\n\t\t\tthis.pages[4] = pages -2;\n\t\t\tthis.pages[5] = pages -1;\n\t\t}\n\n\t\tthis.pages[displayPages-1] = pages;\n\t\tthis.pages[0] = 1;\n\t\tif (this.pages[displayPages-2] != pages -1) {\n\t\t\tthis.pages[displayPages-2] = '...';\n\t\t}\n\n\t\tif (this.pages[1] && this.pages[1] != 2) {\n\t\t\tthis.pages[1] = '...';\n    }\n  }\n\n  setPage(page) {\n    this.activePage = page;\n    this.offSet = page*this.pageSize-this.pageSize;\n    this.loadAccounts();\n  }\n\n  goTo(page) {\n    this.router.navigate(['/accounts/'+page]);\n  }\n\n  async loadAccounts() {\n    this.accounts = [];\n    const accountsCreated = await this.api.accountsCount();\n    \n\t\tif (!accountsCreated.error) {\n      this.accountsCreated = accountsCreated.result;\n      this.setPages();\n\t\t}\n    const accounts = await this.api.accounts(this.pageSize,this.offSet);\n\n    const tokenMap = {};\n\t\tconst tokens = await this.api.tokens();\n\t\tif (!tokens.error) {\n\t\t\ttokens.result.forEach(token => {\n        if (token.tokenSymbol != 'QLC' && token.tokenSymbol != 'QGAS') {\n          token.image = 'none';\n        } else {\n          token.image = token.tokenSymbol;\n        }\n\t\t\t\ttokenMap[token.tokenId] = token;\n\t\t\t});\n    }\n    if (!accounts.error && accounts.result) {\n      accounts.result.forEach(async am => {\n        let accountInfo = await this.api.accountInfo(am);\n        for (const token of accountInfo.result.tokens) {\n          if (tokenMap.hasOwnProperty(token.type)) {\n            token.tokenInfo = tokenMap[token.type];\n          }\n        }\n        this.accounts.push(accountInfo.result);\n      })\n    }\n  }\n\n}\n","<app-user-submenu></app-user-submenu>\n\n<!-- check metamask -->\n<div class=\"stake-screen-1\" *ngIf=\"!etherService.metamask\">\n  <app-erc20-wallet></app-erc20-wallet>\n</div>\n<!-- step 1: choose account to swap -->\n <div class=\"stake-screen-1 qlc-content-home qlc-after-submenu\" *ngIf='step == 1 && etherService.metamask'>\n\n<!-- SEND FORM -->\n<div class=\"row\">\n  <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <!-- TITLE -->\n        <div class=\"col-md-6 col-12 mt-2 pl-2 pr-2\">\n          <div class=\"content-title\">\n            <h1 class=\"neo\" *ngIf=\"recover != 1\">Swap QLC Tokens</h1>\n            <h1 class=\"neo\" *ngIf=\"recover == 1\">Swap QLC Tokens - Recover</h1>\n          </div>\n        </div>\n        <div class=\"col-md-3 col-12 pl-md-2 pr-md-2 pl-2 pr-2\">\n          <button type=\"submit\" (click)=\"recover = !recover\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 neo-background-light\">\n            <span *ngIf=\"recover != 1\">Recover Transactions</span>\n            <span *ngIf=\"recover == 1\">Back to swap</span>\n          </button>\n        </div>\n        <div class=\"col-md-3 col-12 pl-2 pr-2 pt-md-0 pt-2\">\n          <button type=\"submit\"  class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 \" routerLink=\"/wallets\">\n            Back to my Wallets\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<div class=\"container accounts\" *ngIf=\"recover == 1\">\n<div class=\"row\">\n\n  <!-- FORM -->\n  <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 pb-3 ng-invalid-ignore\" >\n      <div class=\"container pl-0 pr-0\">\n        <div class=\"row pl-0 pr-0\">\n\n\n        <div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4 ng-invalid-ignore\" [formGroup]=\"recoverForm\">\n          <div class=\"content-box-white h-auto mt-2 pb-2 pl-2 pr-2\">\n\n              <div class=\"row pt-1 mt-4 pl-4 pr-4\">\n\n                  <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2 mb-4 mt-4\">\n                    RECOVER TXID\n                  </div>\n                  <div class=\"col-md-9 text-left mb-4 mt-4\">\n                    <div class=\"input-group\">\n                      <input\n                        type=\"text\"\n                        class=\"form-control form-my-border\"\n                        placeholder=\"txid\"\n                        onfocus=\"this.placeholder = ''\"\n                        style=\"height: 42px !important;\"\n                        formControlName=\"recover_txid\"\n                      />\n                    </div>\n                    \n                    <span *ngFor=\"let validation of recover_validation_messages.recover_txid\">\n                      <span class=\"error-message pt-2\" *ngIf=\"recoverForm.get('recover_txid').hasError(validation.type) && (recoverForm.get('recover_txid').dirty || recoverForm.get('recover_txid').touched)\" style=\"color:#c10f0f;\">{{validation.message}}<br></span>\n                    </span>\n                    <h5 class=\"pt-3\" *ngFor=\"let step of recoverSteps\">{{ step.msg }}</h5>\n                  </div>\n                  \n                  <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2 mb-4\"></div>\n                  <div class=\"col-md-4 text-left mb-4\">\n                    <button (click)=\"continueUndoneTransaction()\" type=\"submit\" class=\"btn btn-primary\" style=\"min-width:100%;\" [disabled]=\"checkingTxid == 1 || recoverForm.get('recover_txid').status != 'VALID' \">\n                      CONTINUE SWAP\n                    </button>\n                  </div>\n                  <div class=\"col-md-5 pt-3\" *ngIf=\"checkingTxid == 1\">\n                    <span class=\"security-email-sending\" class=\"w-100\"><p><img src=\"assets/img/loading-blue.gif\" style=\"margin-left:-2px; height:24px; width:auto; margin-right:8px;margin-top:-2px;\"> Checking txid ...</p></span>  \n                  </div>\n                </div>\n            </div>\n        </div>\n        </div>\n      </div>\n    </div>\n</div>\n</div>\n\n\n<div class=\"container accounts\" *ngIf=\"recover == 0 || (recover == 1 && recovering_txid == 1)\">\n  <div class=\"row\">\n\n<!-- FORM -->\n<div class=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 pb-3 ng-invalid-ignore\" [formGroup]=\"stakingForm\" >\n<div class=\"container pl-0 pr-0\">\n<div class=\"row pl-0 pr-0\">\n\n\n<div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n  <div class=\"row mt-2 mb-3\">\n    <div class=\"col-6 pr-2\" (click)=\"stakingForm.get('stakingType').setValue(0);loadBalances()\">\n        <div class=\"content-box-white swap-type\" [ngClass]=\"{'selected': stakingForm.value.stakingType == 0, 'unselected': stakingForm.value.stakingType != 0}\">\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <img src=\"assets/img/swap/token-qlc-nep5.png\" style=\"height: 35px; margin: 20px 10px 20px 30px;\">\n              NEP5 QLC\n            </div>\n            <div class=\"col-6 text-right\">\n              ERC20 QLC\n              <img src=\"assets/img/swap/token-qlc-erc20.png\" style=\"height: 35px; margin: 20px 30px 20px 10px;\">\n\n            </div>\n          </div>\n        </div>\n      </div>\n    <div class=\"col-6 pl-2\" (click)=\"stakingForm.get('stakingType').setValue(2);loadBalances()\">\n      <div class=\"content-box-white swap-type\" [ngClass]=\"{'selected': stakingForm.value.stakingType == 2, 'unselected': stakingForm.value.stakingType != 2}\">\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <img src=\"assets/img/swap/token-qlc-erc20.png\" style=\"height: 35px; margin: 20px 10px 20px 30px;\">\n            ERC20 QLC\n          </div>\n          <div class=\"col-6 text-right\">\n            NEP5 QLC\n            <img src=\"assets/img/swap/token-qlc-nep5.png\" style=\"height: 35px; margin: 20px 30px 20px 10px;\">\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n<div class=\"content-box-white h-auto mt-2 pb-2 pl-2 pr-2\">\n\n<div class=\"container ml-1 pr-3 pl-3\">\n<div class=\"row defaultTable sendTokens\">\n<div class=\"col-12\">\n\n<div>\n    <div class=\"row pt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n      <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n        FROM ACCOUNT\n      </div>\n      <div class=\"col-md-9 text-left\">\n        <div *ngIf=\"this.stakingForm.value.stakingType == 0\" class=\"form-group\">\n          <select class=\"custom-select\" formControlName=\"fromNEOWallet\" (change)=\"selectAccount()\">\n            <option *ngFor=\"let account of neowallets\" [value]=\"account.id\"\n              >{{ account.addressBookName ? account.addressBookName + ' - ' : '' }} {{ account.id }} {{ ((account.balances != undefined && account.balances[neoService.tokenList['QLC'].networks['1'].hash] != undefined)? ' ('+account.balances[neoService.tokenList['QLC'].networks['1'].hash].amount + ' QLC)' : '') }} </option>\n          </select>\n          <!-- <p *ngIf=\"this.stakingForm.value.stakingType == 0\" style=\"max-width:100%;font-size:11px;padding-left:16px;padding-top:8px;\">Select a NEP-5 address you want to swap ERC20 QLC from</p>\n          <p *ngIf=\"this.stakingForm.value.stakingType == 2\" style=\"max-width:100%;font-size:11px;padding-left:16px;padding-top:8px;\">Select a ERC20 address you want to swap NEP-5 QLC from</p> -->\n\n        </div>\n        <div *ngIf=\"this.stakingForm.value.stakingType == 2\" class=\"form-group\">\n          <select class=\"custom-select\" formControlName=\"fromNEOWallet\">\n            <option *ngFor=\"let account of etherService.accounts\" [value]=\"account\"\n              >{{ account }}</option>\n          </select>\n          <!-- <p *ngIf=\"this.stakingForm.value.stakingType == 0\" style=\"max-width:100%;font-size:11px;padding-left:16px;padding-top:8px;\">Select a NEP-5 address you want to swap ERC20 QLC from</p>\n          <p *ngIf=\"this.stakingForm.value.stakingType == 2\" style=\"max-width:100%;font-size:11px;padding-left:16px;padding-top:8px;\">Select a ERC20 address you want to swap NEP-5 QLC from</p> -->\n\n        </div>\n        <div class=\"form-group\" *ngIf=\"recover == 1\">\n          {{ stakingForm.value.fromNEOWallet }}\n        </div>\n      </div>\n    </div>\n\n\n<div class=\"row pt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n<div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\nTO ACCOUNT\n</div>\n<div class=\"col-md-9 text-left\">\n<div class=\"form-group\" *ngIf=\"this.stakingForm.value.stakingType == 0\">\n<select class=\"custom-select\" formControlName=\"toQLCWallet\">\n<option *ngFor=\"let account of etherService.accounts\" [value]=\"account\"\n>{{ account }}</option>\n</select>\n</div>\n<div class=\"form-group\" *ngIf=\"this.stakingForm.value.stakingType == 2\">\n<select class=\"custom-select\" formControlName=\"toQLCWallet\" (change)=\"selectAccount()\">\n<option *ngFor=\"let account of neowallets\" [value]=\"account.id\"\n>{{ account.id }} </option>\n</select>\n</div>\n<div class=\"form-group\" *ngIf=\"recover == 1\">\n{{ stakingForm.value.toQLCWallet }}\n</div>\n</div>\n</div>\n                    \n<div class=\"row rowContent mb-5 mt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n<div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">AMOUNT</div>\n<div class=\"col-md-9\">\n<div class=\"row align-items-top\" *ngIf=\"recover == 0\">\n<div class=\"col-md-6 pb-3 pb-md-0\">\n    <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n            <div class=\"input-group-text \">\n                QLC\n            </div>\n        </div>\n        <input\n            type=\"text\"\n            class=\"form-control inlineForm\"\nformControlName=\"amounToStake\"\n            placeholder=\"{{ stakingTypes[this.stakingForm.value.stakingType].minAmount }}\"\nonfocus=\"this.placeholder = ''\"\n(change)=\"checkIfMinAmount()\"\n            style=\"height: 42px !important;\"\n        />\n        <div class=\"input-group-append\">\n            <!--<a (click)=\"setMaxAmount()\">\n                <div class=\"input-group-text maxLink\">Max</div>\n</a>-->\n<div class=\"input-group-text maxLink\">&nbsp;</div>\n        </div>\n</div>\n<p style=\"max-width:100%;font-size:11px;padding-left:16px;padding-top:8px;\">The minimum swap amount is {{ stakingTypes[this.stakingForm.value.stakingType].minAmount}} QLC</p>\n</div>\n\n<div class=\"col-md-6\">\n<div class=\"row align-items-top\">\n<div class=\"col-md-6 dataName pb-3 pb-md-0 form-label-custom-2\">BALANCE</div>\n<div class=\"col-md-6 \">\n<div class=\"text-right fiat pr-1\" style=\"color:#595757;\"><strong>{{ this.stakingForm.value.availableQLCBalance}} QLC</strong></div>\n</div>\n</div>\n</div>\n\n</div>\n<div class=\"form-group\" *ngIf=\"recover == 1\">\n{{ stakingForm.value.amounToStake }} QLC\n</div>\n\n</div>\n</div>\n\n\n\n\n<div class=\"issue-token\" *ngIf=\"this.stakingForm.value.stakingType == 2\">\n\n</div>\n<div class=\"row rowAmount pl-3 pl-sm-3 pl-sm-3 pr-3 pr-sm-3 pr-sm-3 pt-0 mt-0 pb-3 pt-4\">\n        <div class=\"col-md-3\"></div>\n        <div class=\"col-lg-4 col-md-4 col-sm-12 col-12 pl-0 pr-0 pl-md-2 pr-md-2\">\n            <button (click)=\"checkForm()\" type=\"submit\" class=\"btn btn-primary\" style=\"min-width:100%;\">\n                REVIEW & INVOKE SWAP\n            </button>\n        </div>\n    </div>\n</div>\n\n\n</div>\n</div>\n\n</div>\n</div>\n\n</div>\n</div>\n</div>\n\n\n\n<!-- EXPLAINER -->\n<!-- <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n<div class=\"content-box-blue h-100 pb-3\">\n<div class=\"container\">\n\n<div class=\"row qlc-table-header-blue\">\n<div class=\"col-12\">NEP5 TO ERC20 TOKEN SWAP</div>\n</div>\n<div class=\"row qlc-table-row-blue mt-3 qlc-stake-explainer pr-3\">\n<hr style=\"height:1px;width:100%;border:none;background:#7ca7e5;display:block;\" />\n<p>\nNep5 QLC holders can through the cross-chain swap function, 1:1 conversion into ERC20 QLC, users can also operate in the reverse direction.<br>\n</p>\n</div>\n</div>\n</div>\n</div>      -->\n</div>\n\n\t\t\t<!-- EXPLAINER -->\n\t\t\t<div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n\t\t\t\t<div class=\"content-box-blue h-100 pb-3\">\n\t\t\t\t\t<div class=\"container\">\n\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">NEP5 TO ERC20 TOKEN SWAP</div>\n            </div>\n            <div class=\"row qlc-table-row-blue mt-3 qlc-stake-explainer pr-3\">\n              <p>\n                <span style=\"line-height: 2.1em; display: inline-block;\">Nep5 QLC holders can throught the cross-chain swap function convert 1:1 to ERC20 QLC, users can also operate in the reverse direction. </span><br>\n                <span style=\"line-height: 2.1em; color:#7ca7e5;margin-top:4px;display:inline-block;\">Minimum Amount:</span> 1 QLC<br>\n                <span style=\"line-height: 2.1em; color:#7ca7e5;margin-top:4px;display:inline-block;\">Ratio:</span> 1:1<br>\n              </p>\n              <p>\n                <a href=\"\" target=\"_blank\" style=\"text-decoration: underline; font-weight: 400;\">Learn more on GitHub</a>\n              </p>\n\n            </div>\n          </div>\n        </div>\n      </div>\n</div>\n</div>\t\n\n<!-- LATEST SWAP TRANSACTIONS -->\n<div class=\"container mt-0 mb-3\">\n  <div class=\"row\">\n    \n    <div class=\"col-12 pl-0 pr-0\">\n      \n      <!-- TITLE -->\n      <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>Latest Swap Transactions</h1>\n        </div>\n      </div>\n\n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n        <div class=\"content-box-white\">\n\n\n          <div class=\"container\">\n\n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-2 col-lg-3 pr-lg-4 col-md-3 col-4 text-left pr-sm-4 pr-md-0 pr-lg-0 pr-4\">TYPE</div>\n              <div class=\"col-xl-1 d-none d-xl-block text-color-lightgrey text-left text-tiny\">STATUS</div>\n              <div class=\"col-xl-2 col-lg-6 pr-lg-4 col-md-4 col-5 text-left pr-sm-4 pr-md-0 pr-lg-0 pr-4\">SENDER</div>\n              <div class=\"col-xl-2 d-none d-xl-block text-left pr-sm-4 pr-md-0 pr-lg-0 pr-4\">RECIPIENT</div>\n              <div class=\"col-xl-2 d-none d-xl-block text-left pr-sm-4 pr-md-0 pr-lg-0 pr-4\">SWAPID</div>\n              <div class=\"col-xl-1 col-lg-1 col-md-2 col-3 text-color-lightgrey text-right text-tiny\">AMOUNT</div>\n              <div class=\"col-xl-2 col-lg-2 pr-lg-4 col-md-3 d-none d-md-block text-right pr-sm-4 pr-4\">TIME</div>\n            </div>\n\n            <div class=\"row qlc-table-row neo-table-row closed row-anim-in\" *ngFor=\"let history of etherService.swapHistory\">\n              <div class=\"col-xl-2 col-lg-3 pr-lg-4 col-md-3 col-4 text-left text-color-lightgrey text-tiny\">\n                <span>\n                    <span *ngIf=\"(history.state ==4)\" class=\"qlc-icon-swap-red d-none d-md-inline-block\" title=\"{{history.stateStr}}\"></span>\n                    <span *ngIf=\"(history.state ==1 || history.state ==3)\" class=\"qlc-icon-swap-green d-none d-md-inline-block\" title=\"{{history.stateStr}}\"></span>\n                    <span *ngIf=\"(history.state ==0)\" class=\"qlc-icon-swap-blue d-none d-md-inline-block\" title=\"{{history.stateStr}}\"></span>\n                    <span *ngIf=\"(history.state ==0 || history.state ==1)\"><span class=\"text-color-lightgrey\">Swap</span>  <span class=\"text-color-grey\"> NEP5</span> <span class=\"text-color-lightgrey\"> to </span> <span class=\"text-color-grey\">ERC20</span></span>\n                    <span *ngIf=\"(history.state ==2 || history.state ==3 || history.state ==4)\"><span class=\"text-color-lightgrey\">Swap</span>  <span class=\"text-color-grey\"> ERC20</span> <span class=\"text-color-lightgrey\"> to </span> <span class=\"text-color-grey\">NEP5</span></span><br>\n                    <button *ngIf=\"(history.state ==0 || history.state ==4)\" (click)=\"continueUndoneTransaction(history.neoTxHash)\" title=\"click me to continue swap\" type=\"submit\" class=\"btn btn-primary\" style=\"min-width:100%;margin-top:18px\">\n                      CONTINUE SWAP\n                    </button>\n                </span>\n                <span class=\"d-xl-none\">\n                  <br>\n                  <br>\n                  Status: \n                  <span *ngIf=\"(history.state ==1 || history.state ==3)\" class=\"text-color-green\">Completed</span>\n                  <span *ngIf=\"(history.state ==0)\" class=\"text-blue\">Pending</span>\n                  <span *ngIf=\"(history.state ==4)\" class=\"text-color-red\">Failed</span>\n                </span>\n              </div>\n              <div class=\"col-xl-1 d-none d-xl-block text-color-lightgrey text-left text-tiny\">\n                <span>\n                  <span *ngIf=\"(history.state ==1 || history.state ==3)\" class=\"text-color-green\">Completed</span>\n                  <span *ngIf=\"(history.state ==0)\" class=\"text-blue\">Pending</span>\n                  <span *ngIf=\"(history.state ==4)\" class=\"text-color-red\">Failed</span>\n                </span>\n              </div>\n              <div class=\"col-xl-2 col-lg-6 pr-lg-4 col-md-4 col-5 text-left text-color-lightgrey text-tiny\">\n                <span class=\"d-xl-none\">Sender: </span>\n                <a *ngIf=\"(history.state== 0 || history.state ==1)\" href=\"{{ neotubeSite }}address/{{history.neoUserAddr}}/page/1\" target=\"_blank\" >{{history.neoUserAddr | squeeze : '10,9'}}</a>\n                <a *ngIf=\"(history.state== 2 || history.state ==3 || history.state ==4)\" href=\"{{ etherscan }}address/{{history.ethUserAddr}}\" target=\"_blank\" >{{history.ethUserAddr | squeeze : '10,9'}}</a>\n\n                <span class=\"d-xl-none\"><br>Recipient: </span>\n                <a class=\"d-xl-none\" *ngIf=\"(history.state== 2 || history.state ==3 || history.state ==4)\" href=\"{{ neotubeSite }}address/{{history.neoUserAddr}}/page/1\" target=\"_blank\" >{{history.neoUserAddr | squeeze : '10,9'}}</a>\n                <a class=\"d-xl-none\" *ngIf=\"(history.state== 0 || history.state ==1)\" href=\"{{ etherscan }}address/{{history.ethUserAddr}}\" target=\"_blank\" >{{history.ethUserAddr | squeeze : '10,9'}}</a>\n\n                <span class=\"d-xl-none\"><br>Swapid: </span>\n                <a class=\"d-xl-none\" *ngIf=\"(history.state== 0 || history.state ==1)\" href=\"{{ neotubeSite }}/transaction/{{history.neoTxHash}}\" target=\"_blank\" >\n                  {{history.neoTxHash | squeeze : '10,9'}}\n                </a>\n                <a class=\"d-xl-none\" *ngIf=\"(history.state== 2 || history.state ==3 || history.state ==4)\" href=\"{{ etherscan }}/tx/{{history.ethTxHash}}\" target=\"_blank\" >\n                  {{history.ethTxHash | squeeze : '10,9'}}\n                </a>\n                \n                <span class=\"d-md-none\"><br>Time:<br class=\"d-sm-none\"> {{ history.lastModifyTime | date: 'short' }}</span>\n              </div>\n              <div class=\"col-xl-2 d-none d-xl-block text-left text-color-lightgrey text-tiny\">\n                <a *ngIf=\"(history.state== 2 || history.state ==3 || history.state ==4)\" href=\"{{ neotubeSite }}address/{{history.neoUserAddr}}/page/1\" target=\"_blank\" >{{history.neoUserAddr | squeeze : '11,10'}}</a>\n                <a *ngIf=\"(history.state== 0 || history.state ==1)\" href=\"{{ etherscan }}address/{{history.ethUserAddr}}\" target=\"_blank\" >{{history.ethUserAddr | squeeze : '11,10'}}</a>\n\n              </div>\n              <div class=\"col-xl-2 d-none d-xl-block text-left text-color-lightgrey text-tiny\">\n                <a *ngIf=\"(history.state== 0 || history.state ==1)\" href=\"{{ neotubeSite }}/transaction/{{history.neoTxHash}}\" target=\"_blank\" >\n                  {{history.neoTxHash | squeeze : '11,10'}}\n                </a>\n                <a *ngIf=\"(history.state== 2 || history.state ==3 || history.state ==4)\" href=\"{{ etherscan }}/tx/{{history.ethTxHash}}\" target=\"_blank\" >\n                  {{history.ethTxHash | squeeze : '11,10'}}\n                </a>\n              </div>\n              <div class=\"col-xl-1 col-lg-1 col-md-2 col-3 text-color-lightgrey text-right text-tiny\">\n                <span [ngClass]=\"{\n                  'text-blue': (history.state ==0 || history.state ==2),\n                  'text-color-green': (history.state ==1 || history.state ==3),\n                  'text-color-red': history.state == 4\n                }\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"-\">{{ history.amount | qlc | currency:'':'':'1.2-8' }} QLC</span>\n              </div>\n              <div class=\"col-xl-2 col-lg-2 col-md-3 d-none d-md-block pr-4 text-tiny text-right\">\n                <span>{{ history.lastModifyTime | date: 'short' }}</span>\n              </div>\n              <!-- <div class=\"container transaction-details\">\n\n              </div> -->\n            </div>\n\n\n            \n          </div>\n\n        </div>\n      </div>\n\n      <!-- BUTTON -->\n      <!--\n      <div class=\"col-lg-12 mb-0 mt-2 pl-md-2 pr-md-2 text-center\" *ngIf=\"accountBlocksCount>pageSize\">\n        <a [routerLink]=\"'/transactions/1/' + accountId\" class=\"btn btn-primary btn-blue\">ALL TRANSACTIONS</a>\n      </div>\n        -->\n    </div>\n    \n  </div>\n</div>\n</div>\n<!-- confirm choose -->\n<div class=\"stake-screen-1\"  *ngIf='step == 2'>\n\n\n\n    <!-- REVIEW A -->\n    <div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n        <div class=\"row\">\n            <div class=\"col-12 pl-0 pr-0 pb-2\">\n                <div class=\"container\">\n                        <div class=\"row\">\n                            <!-- TITLE -->\n                            <div class=\"col-md-9 col-12 mt-2 pl-md-2 pr-md-2\">\n                                <div class=\"content-title\">\n                                    <h1>Confirm Swap</h1>\n                                </div>\n                            </div>\n                            <!-- to do  -->\n                            <!-- <div class=\"col-md-3 col-12 pl-md-2 pr-md-2\">\n                                    <button (click)=\"back()\" type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0\">\n                                        CHANGE / EDIT\n                                    </button>\n                            </div> -->\n                        </div>\n                    </div>\n            </div>\n        </div>\n  </div>\n\n  <div class=\"container\">\n    <div class=\"row confirmTransaction\">\n\n      <!-- ADDRESS -->\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n        <div class=\"content-box-white h-auto pb-5\">\n          <div class=\"container mb-3\">\n\n\n                <div class=\"row align-items-center fromText pt-5\">\n                  <div class=\"col-12 text-label\">You are about to swap</div>\n                </div>\n                <div class=\"row align-items-center \">\n                  <div class=\"col-12 sum\">\n                    <span>{{ stakingForm.value.amounToStake}} QLC</span>\n                  </div>\n                </div>\n                <div class=\"row align-items-center\">\n                </div>\n                <div class=\"row transfer\">\n                  <div class=\"col-lg-6 text-center pt-4 pb-4\">\n                    <div class=\"text-label pb-2\">FROM ACCOUNT ({{ this.stakingForm.value.stakingType == 0 ? 'NEP5' : 'ERC20' }})</div>\n                    <div class=\"pl-5 pr-5 text-truncate pt-1 pb-1\">\n                      <a [routerLink]=\"'/wallets/neo/' + (this.stakingForm.value.stakingType == 0 ? this.stakingForm.get('fromNEOWallet').value : this.etheraccounts[0])\" class=\"text-blue\">\n                        <span class=\"d-none d-xl-block\">\n                          {{(this.stakingForm.value.stakingType == 0 ? this.stakingForm.get('fromNEOWallet').value : this.etheraccounts[0]) | squeeze : '15,15' }}\n                        </span>\n                        <span class=\"d-none d-lg-block d-xl-none\">\n                          {{(this.stakingForm.value.stakingType == 0 ? this.stakingForm.get('fromNEOWallet').value : this.etheraccounts[0]) | squeeze : '12,12' }}\n                        </span>\n                        <span class=\"d-none d-md-block d-lg-none\">\n                          {{(this.stakingForm.value.stakingType == 0 ? this.stakingForm.get('fromNEOWallet').value : this.etheraccounts[0]) | squeeze : '20,20' }}\n                        </span>\n                        <span class=\"d-none d-sm-block d-md-none\">\n                          {{(this.stakingForm.value.stakingType == 0 ? this.stakingForm.get('fromNEOWallet').value : this.etheraccounts[0]) | squeeze : '15,15' }}\n                        </span>\n                        <span class=\"d-block d-sm-none\">\n                          {{(this.stakingForm.value.stakingType == 0 ? this.stakingForm.get('fromNEOWallet').value : this.etheraccounts[0]) | squeeze : '12,12' }}\n                        </span>\n                      </a>\n                    </div>\n                    <div class=\"pl-5 pr-5 pb-4\">\n                      <a [routerLink]=\"'/wallets/neo/' + (this.stakingForm.value.stakingType == 0 ? this.stakingForm.get('fromNEOWallet').value : this.etheraccounts[0])\" class=\"address\">{{this.stakingForm.value.stakingType == 0 ? this.stakingForm.get('fromNEOWallet').value : this.etheraccounts[0] }}</a>\n                    </div>\n                    <div class=\"pt-2 text-bold negative_change text-color-red\">-{{ stakingForm.value.amounToStake}} QLC</div>\n                    <div class=\"text-label pb-3\">{{ this.stakingForm.value.stakingType == 0 ? 'AMOUNT TO LOCK' : 'AMOUNT TO BURN' }}</div>\n                  </div>\n                  <div class=\"col-lg-6 text-center pt-4 pb-4\">\n                    <div class=\"text-label pb-2\">TO ACCOUNT ({{ this.stakingForm.value.stakingType == 0 ? 'ERC20' : 'NEP5' }})</div>\n                    <div class=\"pl-5 pr-5 text-truncate pt-1 pb-1\">\n                      <a [routerLink]=\"'/wallets/neo/' + (this.stakingForm.value.stakingType == 0 ? this.etheraccounts[0] : this.stakingForm.get('toQLCWallet').value)\" class=\"text-blue\">\n                        <span class=\"d-none d-xl-block\">\n                          {{(this.stakingForm.value.stakingType == 0 ? this.etheraccounts[0] : this.stakingForm.get('toQLCWallet').value) | squeeze : '15,15' }}\n                        </span>\n                        <span class=\"d-none d-lg-block d-xl-none\">\n                          {{(this.stakingForm.value.stakingType == 0 ? this.etheraccounts[0] : this.stakingForm.get('toQLCWallet').value) | squeeze : '12,12' }}\n                        </span>\n                        <span class=\"d-none d-md-block d-lg-none\">\n                          {{(this.stakingForm.value.stakingType == 0 ? this.etheraccounts[0] : this.stakingForm.get('toQLCWallet').value) | squeeze : '20,20' }}\n                        </span>\n                        <span class=\"d-none d-sm-block d-md-none\">\n                          {{(this.stakingForm.value.stakingType == 0 ? this.etheraccounts[0] : this.stakingForm.get('toQLCWallet').value) | squeeze : '15,15' }}\n                        </span>\n                        <span class=\"d-block d-sm-none\">\n                          {{(this.stakingForm.value.stakingType == 0 ? this.etheraccounts[0] : this.stakingForm.get('toQLCWallet').value) | squeeze : '12,12' }}\n                        </span>\n                      </a>\n                    </div>\n                    <div class=\"pl-5 pr-5 pb-4\">\n                      <a [routerLink]=\"'/wallets/neo/' + (this.stakingForm.value.stakingType == 0 ? this.etheraccounts[0] : this.stakingForm.get('toQLCWallet').value)\" class=\"address\">{{(this.stakingForm.value.stakingType == 0 ? this.etheraccounts[0] : this.stakingForm.get('toQLCWallet').value) }}</a>\n                    </div>\n                    <div class=\"pt-2 text-bold positive_change text-color-green\">+{{ stakingForm.value.amounToStake}} QLC</div>\n                    <div class=\"text-label pb-3\">{{ this.stakingForm.value.stakingType == 0 ? 'AMOUNT TO MINT' : 'AMOUNT TO UNLOCK' }}</div>\n                  </div>\n                </div>\n                \n                <div class=\"row align-items-center \">\n                  <div class=\"col-12 sum\">\n                  </div>\n                </div>\n\n                <div class=\"row align-items-center fromText\">\n                  <div class=\"col-12 text-label\">GAS PRICE</div>\n                </div>\n\n                <div class=\"row justify-content-center mt-2\">\n                  <div (click)=\"selectedGasPrice = 'SafeGasPrice'\" class=\"col-2 py-2\" [ngClass]=\"{\n                    'gas-not-selected': selectedGasPrice != 'SafeGasPrice',\n                    'gas-selected': selectedGasPrice == 'SafeGasPrice'\n                  }\">\n                    SLOW<br>\n                    <span style=\"color: #000000\">{{gasPrices.SafeGasPrice}} WEI</span>\n                  \n                  </div>\n                  <div (click)=\"selectedGasPrice = 'ProposeGasPrice'\" class=\"col-2 mx-2 py-2\" [ngClass]=\"{\n                    'gas-not-selected': selectedGasPrice != 'ProposeGasPrice',\n                    'gas-selected': selectedGasPrice == 'ProposeGasPrice'\n                  }\">\n                    AVERAGE<br>\n                    <span style=\"color: #000000\">{{gasPrices.ProposeGasPrice}} WEI</span>\n                  </div>\n                  <div (click)=\"selectedGasPrice = 'FastGasPrice'\" class=\"col-2 py-2\" [ngClass]=\"{\n                    'gas-not-selected': selectedGasPrice != 'FastGasPrice',\n                    'gas-selected': selectedGasPrice == 'FastGasPrice'\n                  }\">\n                    FAST<br>\n                    <span style=\"color: #000000\">{{gasPrices.FastGasPrice}} WEI</span>\n                \n                  </div>\n                </div>\n                \n                <div class=\"row align-items-center \">\n                  <div class=\"col-12 sum\">\n                  </div>\n                </div>\n      \n                <div class=\"row align-items-center justify-content-center rowDefault rowButtons pl-4 pr-4\">\n                  <div class=\"col-lg-2 col-md-4 col-sm-5 col-12 px-0 pr-sm-2 text-left text-truncate mobile-break mb-2\">\n                    <button type=\"submit\" class=\"btn-primary btn-red btn-danger w-100\" style=\"min-width:auto; padding-left:0px; padding-right:0px;\" (click)=\"step = 1\">\n                      {{ 'CANCEL' | translate }}\n                    </button>\n                  </div>\n                  <div class=\"col-lg-2 col-md-4 col-sm-5 col-12 px-0 px-sm-2 text-left text-truncate mobile-break mb-2\">\n                    <button type=\"submit\" class=\"btn btn-primary btn-blue w-100\" style=\"min-width:auto; padding-left:0px; padding-right:0px;\" (click)=\"confirmInvoke()\">\n                      CONFIRM & SWAP\n                    </button>\n                  </div>\n                </div>\n\n\n\n\n          \n          \n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- start swap -->\n<div class=\"stake-screen-1\"  *ngIf='step == 3'>\n\n\n\n    <!-- LOADING -->\n    <div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n        <div class=\"row\">\n            <div class=\"col-12 pl-0 pr-0 pb-2\">\n                <div class=\"container\">\n                        <div class=\"row\">\n                            <!-- TITLE -->\n                            <div class=\"col-md-9 col-12 mt-2 pl-md-2 pr-md-2\">\n                                <div class=\"content-title\">\n                                    <h1>Swapping</h1>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n            </div>\n        </div>\n  </div>\n\n  <div class=\"container\">\n    <div class=\"row confirmTransaction\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n        <div class=\"content-box-white h-auto pb-5\">\n          <div class=\"container mb-3\">\n            <div class=\"row align-items-center fromText pt-5\">\n              <div class=\"col-12 text-label\">PLEASE WAIT, THIS MAY TAKE SEVERAL MINUTES</div>\n            </div>\n            <div class=\"row align-items-center\">\n              <div class=\"col-12 text-center\">\n                <img src=\"assets/img/Loader.svg\" style=\"height: 50px; margin: 25px 0 25px 0;\">\n              </div>\n            </div>\n            <div class=\"row align-items-center\">\n              \n            </div>\n            <div class=\"row align-items-center\">\n              <div class=\"col-12 text-center\">\n                <p style=\"color:#c10f0f;\" class=\"pb-3\"><strong>Important:</strong> Don't leave or close this page!</p>\n              </div>\n              <div class=\"col-12 text-center\" *ngFor=\"let step of invokeSteps\">\n                <p class=\"pt-0 pb-0\"><span style=\"display:block;width:100%;margin-bottom:10px;margin-top:-5px;\" *ngIf=\"step.checkimg == 1\"><img src=\"assets/img/qlc-icon-staking-success-green.svg\" style=\"width:20px;height:auto;\"></span>{{ step.msg }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- completed -->\n<div class=\"stake-screen-1\" *ngIf=\"step == 4\">\n    <!-- COMPLETE -->\n    <div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n        <div class=\"row\">\n            <div class=\"col-12 pl-0 pr-0 pb-2\">\n                <div class=\"container\">\n                        <div class=\"row\">\n                            <!-- TITLE -->\n                            <div class=\"col-md-9 col-12 mt-2 pl-md-2 pr-md-2\">\n                                <div class=\"content-title\">\n                                    <h1>Swap successful</h1>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n            </div>\n        </div>\n  </div>\n  <div class=\"container\">\n    <div class=\"row confirmTransaction\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n        <div class=\"content-box-white h-auto pb-5\">\n          <div class=\"container mb-3\">\n            <div class=\"row align-items-center fromText pt-5\">\n              <div class=\"col-12 text-label\">YOU HAVE SWAPPED</div>\n            </div>\n            <div class=\"row align-items-center \">\n              <div class=\"col-12 sum\">\n                <span>{{ this.haveswappedamount }} QLC</span>\n              </div>\n            </div>\n            <div class=\"row align-items-center\">\n              <div class=\"col-12 text-center\">\n                <img src=\"assets/img/swap/qlc-icon-check-success.svg\" style=\"height: 50px; margin: 25px 0 25px 0;\">\n              </div>\n            </div>\n            <div class=\"row align-items-center\">\n              <div class=\"col-12 text-center text-label\">\n                NEO TRANSACTION HASH\n              </div>\n            </div>\n            <div class=\"row align-items-center\">\n              <div class=\"col-12 text-center\">\n                {{ neoTxHash }}\n              </div>\n            </div>\n            <div class=\"row align-items-center\">\n              <div class=\"col-12 text-center text-label\">\n                ETH TRANSACTION HASH\n              </div>\n            </div>\n            <div class=\"row align-items-center\">\n              <div class=\"col-12 text-center\">\n                {{ ethTxHash }}\n              </div>\n            </div>\n            \n  \n            <div class=\"row align-items-center justify-content-center rowDefault rowButtons pl-4 pr-4 mt-5\">\n              <div class=\"col-lg-2 col-md-4 col-sm-5 col-12 px-0 px-sm-2 text-left text-truncate mobile-break mb-2\">\n                <button type=\"submit\" class=\"btn btn-primary btn-blue w-100\" style=\"min-width:auto; padding-left:0px; padding-right:0px;\" (click)=\"backtoswap();loadBalances()\">\n                  CONTINUE\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport { AddressBookService } from 'src/app/services/address-book.service';\nimport { NeoWalletService } from 'src/app/services/neo-wallet.service';\nimport Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\nimport { ApiNEP5Service } from 'src/app/services/api-nep5.service';\nimport { ApiService } from 'src/app/services/api.service';\nimport { UtilService } from 'src/app/services/util.service';\nimport { WorkPoolService } from 'src/app/services/work-pool.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { timer, Observable, interval } from 'rxjs';\nimport { ApiConfidantService } from 'src/app/services/api-confidant.service';\n\nimport { minAmountValidator } from '../../directives/amount-validator.directive';\n\nimport { environment } from 'src/environments/environment';\nimport { EtherWalletService } from 'src/app/services/ether-wallet.service';\nimport { AnyARecord } from 'dns';\nimport { tx } from '@cityofzion/neon-js';\n\nconst nacl = window['nacl'];\n\n@Component({\n  selector: 'app-ccswap',\n  templateUrl: './ccswap.component.html',\n  styleUrls: ['./ccswap.component.scss'],\n})\nexport class CcswapComponent implements OnInit {\n  neotubeSite = environment.neotubeSite[environment.neoNetwork];\n  etherscan = environment.etherscan[environment.neoNetwork];\n  haveswappedamount: any;\n  ethbalance: any;\n  transactions: any[] = [];\n  etherqlcbalance: any;\n  step = 1;\n  recover = 0;\n  zeroHash = '0000000000000000000000000000000000000000000000000000000000000000';\n  checkingTxid = 0;\n  // tslint:disable-next-line: variable-name\n  recovering_txid = 0;\n  continueInvoke = 0;\n  continueInvokePledge: any;\n\n  public neoTxHash = '';\n  public ethTxHash = '';\n  // parseInt(Math.random()*(maxNum-minNum+1)+minNum,10);\n  public FastGasPrice = parseInt((Math.random() * ( 200 - 150 + 1) + 150).toString(), 10).toString();\n  public ProposeGasPrice = parseInt((Math.random() * ( 150 - 100 + 1) + 100).toString(), 10).toString();\n  public SafeGasPrice = parseInt((Math.random() * ( 100 - 50 + 1) + 50).toString(), 10).toString();\n  public gasPrices = {\n    FastGasPrice: this.FastGasPrice,\n    LastBlock: '0',\n    ProposeGasPrice: this.ProposeGasPrice,\n    SafeGasPrice: this.SafeGasPrice\n  };\n\n  public selectedGasPrice = 'ProposeGasPrice';\n\n  sendingSecurityCode = 0;\n\n  confidantConfirmed = 0;\n  invokeSteps = [];\n  recoverSteps = [];\n\n  confidants = [];\n  macaddresses = [];\n\n  accounts = this.walletService.wallet.accounts;\n  neowallets = this.walletService.wallet.neowallets;\n  etheraccounts: any[];\n  metamask = this.etherService.metamask;\n  stakingTypes;\n\n  staking = {\n    main: [\n      {\n        name: 'For Deposit',\n        minAmount: 1,\n        minTime: 10,\n      },\n      {\n        name: 'For Confidant',\n        minAmount: 1,\n        minTime: 90,\n      },\n      {\n        name: 'For Withdraw',\n        minAmount: 1,\n        minTime: 180,\n      },\n    ],\n    test: [\n      {\n        name: 'For Deposit',\n        minAmount: 1,\n        minTime: 10,\n      },\n      {\n        name: 'For Confidant',\n        minAmount: 1,\n        minTime: 10,\n      },\n      {\n        name: 'For Withdraw',\n        minAmount: 1,\n        minTime: 10,\n      },\n    ],\n  };\n\n  msg3 = '';\n\n  recoverForm = new FormGroup({\n    recover_txid: new FormControl(\n      '',\n      Validators.compose([\n        Validators.required,\n        Validators.pattern('^([a-zA-Z0-9])*'),\n        Validators.maxLength(66),\n        Validators.minLength(64),\n      ])\n    ),\n  });\n\n  // tslint:disable-next-line: variable-name\n  recover_validation_messages = {\n    recover_txid: [\n      { type: 'required', message: 'Txid is required' },\n      {\n        type: 'minlength',\n        message: 'Txid must be at least 64 characters long',\n      },\n      {\n        type: 'maxlength',\n        message: 'Txid cannot be more than 66 characters long',\n      },\n      {\n        type: 'pattern',\n        message: 'Txid must contain only letters and numbers',\n      },\n    ],\n  };\n\n  recoverErrorMsg = '';\n\n  stakingForm = new FormGroup({\n    stakingType: new FormControl('0'),\n    fromNEOWallet: new FormControl('', Validators.required),\n    toQLCWallet: new FormControl('', Validators.required),\n    availableQLCBalance: new FormControl('0'),\n    endDate: new FormControl(''),\n    amounToStake: new FormControl(''),\n    durationInDays: new FormControl(''),\n    tokenName: new FormControl(\n      '',\n      Validators.compose([\n        Validators.required,\n        Validators.pattern('^([a-zA-Z_]+[ ]?)*[a-zA-Z_]$'),\n        Validators.maxLength(40),\n        Validators.minLength(1),\n      ])\n    ),\n    tokenSymbol: new FormControl(\n      '',\n      Validators.compose([\n        Validators.required,\n        Validators.pattern('^([a-zA-Z_]+[ ]?)*[a-zA-Z_]$'),\n        Validators.maxLength(10),\n        Validators.minLength(1),\n      ])\n    ),\n    tokenSupply: new FormControl(\n      '',\n      Validators.compose([\n        Validators.required,\n        Validators.pattern('[1-9][0-9]*'),\n        Validators.maxLength(20),\n        Validators.minLength(3),\n      ])\n    ),\n    tokenDecimals: new FormControl(\n      '',\n      Validators.compose([\n        Validators.required,\n        Validators.pattern('[0-9]+'),\n        Validators.maxLength(2),\n        Validators.minLength(1),\n      ])\n    ),\n    email_address: new FormControl(''),\n    security_code: new FormControl(''),\n  });\n\n  // tslint:disable-next-line: variable-name\n  staking_validation_messages = {\n    tokenName: [\n      { type: 'required', message: 'Token Name is required' },\n      {\n        type: 'minlength',\n        message: 'Token Name must be at least 1 characters long',\n      },\n      {\n        type: 'maxlength',\n        message: 'Token Name cannot be more than 40 characters long',\n      },\n      {\n        type: 'pattern',\n        message: 'Token Name must contain only letters, space or underscore',\n      },\n    ],\n    tokenSymbol: [\n      { type: 'required', message: 'Token Symbol is required' },\n      {\n        type: 'minlength',\n        message: 'Token Symbol must be at least 1 characters long',\n      },\n      {\n        type: 'maxlength',\n        message: 'Token Symbol cannot be more than 40 characters long',\n      },\n      {\n        type: 'pattern',\n        message: 'Token Symbol must contain only letters, space or underscore',\n      },\n    ],\n    tokenSupply: [\n      { type: 'required', message: 'Token Supply is required' },\n      {\n        type: 'minlength',\n        message: 'Token Supply must be at least 3 characters long',\n      },\n      {\n        type: 'maxlength',\n        message: 'Token Supply cannot be more than 20 characters long',\n      },\n      {\n        type: 'pattern',\n        message:\n          'Token Supply must contain only numbers and it must not start with 0',\n      },\n    ],\n    tokenDecimals: [\n      { type: 'required', message: 'Token Decimals is required' },\n      {\n        type: 'minlength',\n        message: 'Token Decimals must be at least 1 characters long',\n      },\n      {\n        type: 'maxlength',\n        message: 'Token Decimals cannot be more than 2 characters long',\n      },\n      {\n        type: 'pattern',\n        message:\n          'Token Decimals must contain only numbers and it must not start with 0',\n      },\n    ],\n    terms: [\n      { type: 'pattern', message: 'You must accept terms and conditions' },\n    ],\n  };\n\n  invalidTokenSymbol = 0;\n  invalidTokenName = 0;\n\n  // testData:any;\n\n  constructor(\n    private walletService: WalletService,\n    private addressBookService: AddressBookService,\n    private neoService: NeoWalletService,\n    private nep5api: ApiNEP5Service,\n    private api: ApiService,\n    private util: UtilService,\n    private workPool: WorkPoolService,\n    private notifications: NotificationService,\n    private trans: TranslateService,\n    private confidantApi: ApiConfidantService,\n    public etherService: EtherWalletService\n  ) {\n    this.stakingTypes = this.staking[environment.neoNetwork];\n    etherService?.web3?.currentProvider.publicConfigStore.on('update', (data) => {\n      this.selectAccount();\n    });\n  }\n\n  ngOnInit() {\n    this.getEtherAccounts();\n    this.loadBalances();\n  }\n\n  async getEtherAccounts() {\n    const accounts: any[] = await this.etherService.getAccounts();\n    this.etheraccounts = accounts;\n    console.log('this.etherService.selectedAddress', this.etherService.selectedAddress);\n    // this.etheraccounts = [this.etherService.selectedAddress];\n    this.ethbalance = await this.etherService.getEthBalance(accounts[0]);\n    const etherqlcbalance: any = await this.etherService.getEthQLCBalance(accounts[0]);\n    this.etherqlcbalance = etherqlcbalance;\n    return accounts;\n  }\n  // init eth three gas fee\n  async initEthThreeGasFee() {\n    const threeGasPrices = await this.etherService.getThreeGasPrice();\n    if (threeGasPrices?.data?.result) {\n      console.log(threeGasPrices);\n      this.gasPrices = threeGasPrices?.data?.result;\n    }\n  }\n\n  // back to swap\n  backtoswap() {\n    this.step = 1;\n    this.ethTxHash = '';\n    this.neoTxHash = '';\n  }\n\n  async continueUndoneTransaction(txhash?: any) {\n    // if (this.walletService.walletIsLocked()) {\n    //   return this.notifications.sendWarning('ERROR wallet locked');\n    // }\n    console.log('length', this.recoverForm.get('recover_txid').value.length);\n    const ethTxHash = txhash ? txhash : this.recoverForm.get('recover_txid').value.startsWith('0x') ? \n    this.recoverForm.get('recover_txid').value : '0x' + this.recoverForm.get('recover_txid').value;\n    console.log('this.recoverForm.getvalue', this.recoverForm.get('recover_txid').value);\n    console.log('ethTxHash', ethTxHash);\n    if (ethTxHash.length != 66) {\n      return this.notifications.sendWarning('ERROR please check your txid');\n    }\n    // const txid = txhash ? txhash.slice(2) : this.recoverForm.get('recover_txid').value.slice(2);\n    const swapInfoByTxHash = await this.etherService.swapInfoByTxHash(\n      ethTxHash\n    );\n    console.log('swapInfoByTxHash', swapInfoByTxHash);\n    if (swapInfoByTxHash == '500') {\n      return this.notifications.sendWarning('ERROR txid not found');\n    }\n    // const txid = swapInfoByTxHash.data.neoHash.slice(2);\n    if (swapInfoByTxHash?.data?.state == 0) {\n      // deposit:state in(0,1); withdraw:state(2,3,4)\n      this.neoTxHash = ethTxHash;\n      this.haveswappedamount = new BigNumber(swapInfoByTxHash.data.amount)\n      .dividedBy(Math.pow(10, 8))\n      .toNumber();\n      this.step = 3;\n      console.log('txid.slice', ethTxHash);\n      const getEthOwnerSign = await this.etherService.getEthOwnerSign(ethTxHash);\n      console.log('getEthOwnerSign', getEthOwnerSign);\n      if (getEthOwnerSign.data.value) {\n        const amountWithDecimals = swapInfoByTxHash.data.amount;\n        console.log('amountWithDecimals', amountWithDecimals);\n        console.log('txid', ethTxHash);\n        console.log(\n          'getEthOwnerSign.data.value',\n          getEthOwnerSign.data.value\n        );\n        const ethMint = await this.etherService.getEthMint(\n          amountWithDecimals,\n          ethTxHash,\n          '0x' + getEthOwnerSign.data.value,\n          swapInfoByTxHash.data.ethUserAddr,\n          Web3.utils.toWei(this.gasPrices[this.selectedGasPrice], 'Gwei')\n        );\n        // tslint:disable-next-line: no-shadowed-variable\n        const id = setInterval(async () => {\n          // tslint:disable-next-line: no-shadowed-variable\n          const swapInfoByTxHash = await this.etherService.swapInfoByTxHash(\n            ethTxHash,\n          );\n          // tslint:disable-next-line: triple-equals\n          if (swapInfoByTxHash?.data?.state == 1) {\n              this.ethTxHash = swapInfoByTxHash?.data?.ethTxHash;\n              console.log('cleardInterval.id', id);\n              clearInterval(id);\n              this.invokeSteps.push({\n                msg:\n                  'Mint ERC20 TOKEN succesfull, the whole process successfull',\n                checkimg: 1,\n              });\n              this.step = 4;\n              this.loadBalances();\n              window.scrollTo(0, 0);\n          }\n        }, 5000);\n      }\n    } else if (swapInfoByTxHash?.data?.state == 1) {\n      // state=1 is depositdown successfull\n      return this.notifications.sendWarning('swap completed');\n    } else if (swapInfoByTxHash?.data?.state == 3) {\n      // state=3 is withdrawdown successfull\n      return this.notifications.sendWarning('swap completed');\n    } else if (swapInfoByTxHash?.data?.state == 4) {\n      return this.notifications.sendWarning('please wait neo node reonline');\n    } else {\n      // don't need to compare state =2\n      return this.notifications.sendWarning('ERROR txid not found');\n    }\n  }\n\n  private markFormGroupTouched(formGroup: FormGroup) {\n    (Object as any).values(formGroup.controls).forEach((control) => {\n      control.markAsTouched();\n\n      if (control.controls) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n\n  async checkForm() {\n    this.markFormGroupTouched(this.stakingForm);\n    // tslint:disable-next-line: radix\n    if (parseInt(this.stakingForm.value.amounToStake) < 1) {\n      return this.notifications.sendWarning('1 QLC Minimum');\n    }\n    // tslint:disable-next-line: radix\n    if (this.stakingForm.value.stakingType == 0) {\n      if (\n        // tslint:disable-next-line: triple-equals\n        this.stakingForm.get('fromNEOWallet').status == 'VALID' &&\n        // tslint:disable-next-line: triple-equals\n        this.stakingForm.get('toQLCWallet').status == 'VALID' &&\n        // tslint:disable-next-line: radix\n        parseInt(this.stakingForm.value.amounToStake) <= parseInt(this.stakingForm\n          .get('availableQLCBalance').value)\n      ) {\n        this.step = 2;\n        window.scrollTo(0, 0);\n      } else {\n        return this.notifications.sendWarning('please check address or minimum qlc');\n      }\n    } else if (this.stakingForm.value.stakingType == 2) {\n      if (\n        // tslint:disable-next-line: triple-equals\n        this.stakingForm.get('fromNEOWallet').status == 'VALID' &&\n        // tslint:disable-next-line: triple-equals\n        this.stakingForm.get('toQLCWallet').status == 'VALID' &&\n        // tslint:disable-next-line: radix\n        parseInt(this.stakingForm.value.amounToStake) <= parseInt(localStorage.getItem('qlcbalance'))\n      ) {\n        this.step = 2;\n        window.scrollTo(0, 0);\n      } else {\n        return this.notifications.sendWarning('please check address or minimum qlc');\n      }\n    }\n    \n    if (this.stakingForm.status == 'VALID') {\n    }\n  }\n\n  invokeNewStaking() {\n    this.loadBalances();\n    this.step = 1;\n    window.scrollTo(0, 0);\n  }\n\n  async checkTokenSymbol() {\n    const tokensResult = await this.api.tokens();\n    if (tokensResult.result) {\n      const tokens = tokensResult.result;\n      const findToken = tokens.find(\n        (token) =>\n          String(token.tokenSymbol).toLowerCase() ==\n          String(this.stakingForm.value.tokenSymbol).toLowerCase()\n      );\n      if (findToken) {\n        this.invalidTokenSymbol = 1;\n      } else {\n        this.invalidTokenSymbol = 0;\n      }\n    }\n  }\n\n  async checkTokenName() {\n    const tokensResult = await this.api.tokens();\n    if (tokensResult.result) {\n      const tokens = tokensResult.result;\n      const findToken = tokens.find(\n        (token) =>\n          String(token.tokenName).toLowerCase() ==\n          String(this.stakingForm.value.tokenName).toLowerCase()\n      );\n      if (findToken) {\n        this.invalidTokenName = 1;\n      } else {\n        this.invalidTokenName = 0;\n      }\n    }\n  }\n\n  async sendSecurityCode() {\n    this.sendingSecurityCode = 1;\n    const confirm = await this.confidantApi.sendSecurityCode(\n      this.stakingForm.value.email_address\n    );\n    this.sendingSecurityCode = 2;\n  }\n\n  async checkSecurityCode() {\n    this.confidantConfirmed = 3;\n    const confirm = await this.confidantApi.checkSecurityCode(\n      this.stakingForm.value.email_address,\n      this.stakingForm.value.security_code\n    );\n    this.confidants = [];\n    if (confirm.valid == 1) {\n      this.confidantConfirmed = 1;\n      this.confidants = confirm.mac_addresses;\n    } else {\n      this.confidantConfirmed = 2;\n    }\n  }\n\n  loadLang() {\n    this.trans\n      .get('SERVICE_WARNINGS_QLC_SERVICE.msg3')\n      .subscribe((res: string) => {\n        this.msg3 = res;\n      });\n  }\n\n  back() {\n    this.step = 1;\n    window.scrollTo(0, 0);\n    this.macaddresses = [];\n  }\n\n  async loadBalances() {\n    // reload eth wallet balances:qlc balance & eth balance\n    this.etherService.getBalances(localStorage.getItem('etheraccount'));\n    this.etherService.getswapHistory(localStorage.getItem('etheraccount'));\n    this.initEthThreeGasFee();\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < this.neowallets.length; i++) {\n      this.neowallets[i].balances = [];\n      this.neowallets[\n        i\n      ].addressBookName = this.addressBookService.getAccountName(\n        this.neowallets[i].id\n      );\n      const balance: any = await this.neoService.getneoTuboBalance(\n        this.neowallets[i].id\n      );\n      // rpc not support https so quit\n      // const rpcbalance: any = await this.neoService.getNeoRpcBalance(\n      //   this.neowallets[i].id\n      // );\n      // console.log('loadBalances.rpcbalance', rpcbalance);\n      // use neotube\n      this.neowallets[i].balances[balance?.assetId] = {\n        amount: balance?.balance,\n        asset_hash: balance?.assetId,\n      };\n      // use neoscan or rpc site neoscan is offline\n      // for (const asset of balance) {\n      //   console.log('asset', asset);\n      //   this.neowallets[i].balances[asset.asset_hash] = {\n      //     amount: new BigNumber(asset.amount)\n      //       .dividedBy(Math.pow(10, 8))\n      //       .toNumber(),\n      //     asset_hash: asset.asset_hash,\n      //   };\n      //   console.log('this.neowallets[i].balances[asset.asset_hash]', this.neowallets[i].balances[asset.asset_hash])\n      // }\n    }\n    this.selectAccount();\n  }\n\n  async selectAccount() {\n    // reload eth qlc balance when switch tab\n    this.etherService.getEthQLCBalance(localStorage.getItem('etheraccount'));\n    // deposit\n    if (this.stakingForm.value.stakingType == 0) {\n      // tslint:disable-next-line: max-line-length\n      if (this.stakingForm.value.fromNEOWallet == '' || !this.neowallets.find((wallet) => wallet.id == this.stakingForm.value.fromNEOWallet)) {\n        if (this.neowallets[0] != undefined && this.neowallets[0].id != undefined) {\n          this.stakingForm.get('fromNEOWallet').setValue(this.neowallets[0].id);\n        }\n      }\n      console.log('localStorage.getItem(etheraccount)', localStorage.getItem('etheraccount'));\n      /*if (this.stakingForm.value.toQLCWallet == '') {\n        if (localStorage.getItem('etheraccount') != undefined) {\n          this.stakingForm.get('toQLCWallet').setValue(localStorage.getItem('etheraccount'));\n        }\n      }*/\n      console.log('this.etherService.selectedAddress', this.etherService.selectedAddress);\n      console.log('this.stakingForm.value.toQLCWallet', this.stakingForm.value.toQLCWallet);\n      this.etherService.getswapHistory(this.stakingForm.get('fromNEOWallet').value);\n      if (this.stakingForm.value.toQLCWallet == '' || this.stakingForm.value.toQLCWallet != this.etherService.selectedAddress ) {\n        if (this.etherService.selectedAddress != undefined) {\n          console.log('setting add')\n          this.stakingForm.get('toQLCWallet').setValue(this.etherService.selectedAddress);\n        }\n      }\n    }\n    // withdraw\n    if (this.stakingForm.value.stakingType == 2) {\n      if (this.stakingForm.value.fromNEOWallet == '' || this.stakingForm.value.fromNEOWallet != this.etherService.selectedAddress ) {\n        /*if (localStorage.getItem('etheraccount') != undefined) {\n          this.stakingForm.get('fromNEOWallet').setValue(localStorage.getItem('etheraccount'));\n        }*/\n        if (this.etherService.selectedAddress != undefined) {\n          this.stakingForm.get('fromNEOWallet').setValue(this.etherService.selectedAddress);\n          this.etherService.getswapHistory(this.etherService.selectedAddress);\n        }\n      }\n      if (this.stakingForm.value.toQLCWallet == '' || !this.neowallets.find((wallet) => wallet.id == this.stakingForm.value.toQLCWallet)) {\n        if (this.neowallets[0] != undefined && this.neowallets[0].id != undefined) {\n          this.stakingForm.get('toQLCWallet').setValue(this.neowallets[0].id);\n        }\n      }\n      this.etherService.getswapHistory(this.stakingForm.get('toQLCWallet').value);\n    }\n    // tslint:disable-next-line: member-ordering\n    const selectedNEOWallet = this.neowallets.find (\n      // tslint:disable-next-line: triple-equals\n      (a) => a.id == this.stakingForm.value.fromNEOWallet\n    );\n    this.stakingForm\n      .get('availableQLCBalance')\n      .setValue(\n        this.stakingForm.value.stakingType == 0 ?\n        selectedNEOWallet?.balances[\n          this.neoService.tokenList['QLC'].networks['1'].hash\n        ] !== undefined\n          ? selectedNEOWallet?.balances[\n              this.neoService.tokenList['QLC'].networks['1'].hash\n            ].amount\n          : 0 : localStorage.getItem('qlcbalance')\n      );\n\n    this.checkIfMinAmount();\n  }\n\n  checkIfMinAmount() {\n    const minAmount =\n      this.stakingForm.value.stakingType == 1\n        ? this.stakingTypes[this.stakingForm.value.stakingType].minAmount *\n          this.macaddresses.length\n        : this.stakingTypes[this.stakingForm.value.stakingType].minAmount;\n    if (this.stakingForm.value.amounToStake <= minAmount) {\n      this.stakingForm.get('amounToStake').setValue(minAmount);\n    }\n    if (\n      new BigNumber(this.stakingForm.value.amounToStake).isGreaterThan(\n        new BigNumber(this.stakingForm.value.availableQLCBalance)\n      )\n    ) {\n      this.stakingForm\n        .get('amounToStake')\n        .setValue(\n          new BigNumber(\n            this.stakingForm.value.availableQLCBalance\n          ).integerValue(BigNumber.ROUND_FLOOR)\n        );\n    }\n    this.stakingForm.get('amounToStake').markAsTouched();\n  }\n\n  // tslint:disable-next-line: variable-name\n  async addMacAdd(mac_address: any) {\n    const findMacAddress = await this.macaddresses.findIndex(\n      (o) => o.mac_address == mac_address\n    );\n    if (findMacAddress !== -1) {\n      await this.macaddresses.splice(findMacAddress, 1);\n    } else {\n      const findConfidant = await this.confidants.find(\n        (o) => o.mac_address == mac_address\n      );\n      this.macaddresses.push(findConfidant);\n    }\n\n    this.stakingForm\n      .get('amounToStake')\n      .setValue(\n        this.stakingTypes[this.stakingForm.value.stakingType].minAmount *\n          this.macaddresses.length\n      );\n    this.stakingForm\n      .get('amounToStake')\n      .setValidators([\n        Validators.required,\n        Validators.pattern('[1-9][0-9]*'),\n        Validators.maxLength(40),\n        Validators.minLength(1),\n        minAmountValidator(\n          this.stakingTypes[Number(this.stakingForm.value.stakingType)]\n            .minAmount * this.macaddresses.length\n        ),\n      ]);\n    this.checkIfMinAmount();\n  }\n\n  setDuration() {\n    this.stakingForm\n      .get('amounToStake')\n      .setValidators([\n        Validators.required,\n        Validators.pattern('[1-9][0-9]*'),\n        Validators.maxLength(40),\n        Validators.minLength(1),\n        minAmountValidator(\n          this.stakingTypes[Number(this.stakingForm.value.stakingType)]\n            .minAmount\n        ),\n      ]);\n    this.stakingForm\n      .get('amounToStake')\n      .setValue(\n        this.stakingTypes[this.stakingForm.value.stakingType].minAmount\n      );\n    this.checkIfMinAmount();\n  }\n\n  async confirmInvoke() {\n    if (this.gasPrices[this.selectedGasPrice] == undefined) {\n      console.log('this.gasPrices[this.selectedGasPrice]', this.gasPrices[this.selectedGasPrice]);\n      return this.notifications.sendWarning('Please choose one gas fee');\n    }\n    console.log('this.gasPrices[this.selectedGasPrice]', this.gasPrices[this.selectedGasPrice]);\n    // tslint:disable-next-line: radix\n    console.log('parseInt(Web3.utils.fromWei(this.ethbalance))', parseFloat(Web3.utils.fromWei(this.ethbalance, 'ether')));\n    // tslint:disable-next-line: radix\n    if (parseFloat(Web3.utils.fromWei(this.ethbalance, 'ether')) < 0.01) {\n      return this.notifications.sendWarning('Your eth wallet balance is insufficient');\n    }\n    if (this.walletService.walletIsLocked()) {\n      return this.notifications.sendWarning('ERROR wallet locked');\n    }\n    this.step = 3;\n    window.scrollTo(0, 0);\n    this.invokeSteps = [];\n    let txData;\n    // tslint:disable-next-line: triple-equals\n    if (this.stakingForm.value.stakingType == 2) {\n      this.step = 3;\n      const burnEth = await this.burnERC20Token();\n      console.log('burnEth', burnEth);\n    } else {\n      this.invokeSteps.push({\n        msg:\n          'Locking ' +\n          this.stakingForm.value.amounToStake +\n          ' QLC on NEO network.',\n      });\n      txData = await this.contractLock();\n\n      if (txData == false) {\n        this.invokeSteps.push({ msg: 'ERROR - Wrong NEO Wallet password.' });\n        return;\n      }\n      // tslint:disable-next-line: triple-equals\n      if (txData.txHash == undefined) {\n        this.invokeSteps.push({\n          msg: 'ERROR - No TXID received. Please try again later.',\n        });\n        return;\n      }\n      console.log('confirmInvoke.txHash', txData.txHash);\n      // 签名交易信息\n      // tslint:disable-next-line: triple-equals\n      if (txData.unsignedData != undefined) {\n        const signData = await this.neoService.signTheTransaction(\n          this.stakingForm.value.fromNEOWallet,\n          txData.unsignedData\n        );\n        console.log('signData', signData);\n        // tslint:disable-next-line: triple-equals\n        if (signData.signature != undefined) {\n          // tslint:disable-next-line: max-line-length\n          const sendNeoTransaction = await this.etherService.sendNeoTransaction(\n            signData.signature,\n            txData.txHash,\n            signData.publicKey,\n            this.stakingForm.value.fromNEOWallet\n          );\n          console.log('sendNeoTransaction', sendNeoTransaction);\n          this.invokeSteps.push({\n            msg: 'TXID received. Waiting for confirmation.',\n            checkimg: 1,\n          });\n          if (sendNeoTransaction.data.value) {\n            const mintData = await this.mintERC20Token(\n              txData,\n              this.stakingForm.value.amounToStake\n            );\n          } else {\n            this.invokeSteps.push({\n              msg: 'TXID confirmation error.',\n              checkimg: 0,\n            });\n          }\n        }\n      }\n    }\n  }\n  async invokeNeoContractFunction() {\n    console.log('invokeNeoContractFunction');\n    // 这里需要判断lock产生的交易是否成功，成功后调用 NeoTransactionConfirmed\n    // const checkLockTransaction = await this.etherService.neoTransactionConfirmed(txData.lockTxId);\n    // console.log('checkLockTransaction', checkLockTransaction);\n    // if (checkLockTransaction.data.value) {\n    //   this.invokeSteps.push({ msg: 'TXID received. Preparing confirmed.', checkimg: 1});\n    //   const neoTransactionConfirmed = await this.etherService.neoTransactionConfirmed(txData.lockTxId);\n    //   console.log('etherService.neoTransactionConfirmed', neoTransactionConfirmed);\n    //   if (neoTransactionConfirmed.data.value) {\n    //       this.invokeSteps.push({ msg: 'TXID confirmed.', checkimg: 1});\n    //       console.log('stakingForm.value.amounToStake', this.stakingForm.value.amounToStake);\n    //       console.log('confirmInvoke.txData', txData);\n    //       this.mintERC20Token(txData, this.stakingForm.value.amounToStake);\n    //   } else {\n    //     this.invokeSteps.push({ msg: 'TXID confirmation error.', checkimg: 0});\n    //   }\n    // } else {\n    //   this.invokeSteps.push({ msg: 'LockTransaction fail', checkimg: 1});\n    //   return;\n    // }\n  }\n\n  // get transactions\n  async getUndownTransactions(address: any) {\n    this.step = 5;\n    console.log('getUndownTransactions.address', address);\n    const data: any = await this.etherService.swapInfosByAddress(address, 1, 10);\n    console.log('getUndownTransactions.data.info', data);\n    this.transactions = data.data.infos;\n    console.log('getUndownTransactions.transactions', this.transactions);\n\n  }\n\n\n  // brun ERC20 Token\n  async burnERC20Token() {\n    this.haveswappedamount = this.stakingForm.value.amounToStake;\n    if (this.walletService.walletIsLocked()) {\n      this.step = 1;\n      window.scrollTo(0, 0);\n      return this.notifications.sendWarning('ERROR wallet locked');\n    }\n    console.log('burnERC20Token.amounToStake', this.stakingForm.value.amounToStake);\n    const amountWithDecimals = Web3.utils.toBN(this.stakingForm.value.amounToStake).mul(Web3.utils.toBN(100000000));\n    const account = this.etheraccounts[0];\n    const neo5Address = this.stakingForm.get('toQLCWallet').value;\n    console.log('neo5Address', neo5Address);\n    console.log('account', account);\n    console.log('amountWithDecimals', amountWithDecimals);\n    const burnERC20Token = await this.etherService.getEthBurn(\n      neo5Address,\n      amountWithDecimals,\n      account,\n      Web3.utils.toWei(this.gasPrices[this.selectedGasPrice], 'Gwei')\n    );\n    const id = setInterval(async () => {\n    console.log('burnERC20Token', burnERC20Token);\n    console.log('localstorage.txhash', localStorage.getItem('txHash'));\n    const swapInfoByTxHash = await this.etherService.swapInfoByTxHash(\n      localStorage.getItem('txHash')\n    );\n    // CheckEthTransaction\n    console.log('burntogettxHash', localStorage.getItem('txHash'));\n    this.ethTxHash = localStorage.getItem('txHash');\n    // tslint:disable-next-line: triple-equals\n    console.log('swapInfoByTxHash.data.state', swapInfoByTxHash?.data?.state);\n    if (swapInfoByTxHash?.data?.state == 3) {\n      this.neoTxHash = swapInfoByTxHash?.data?.neoTxHash;\n      clearInterval(id);\n\n      this.invokeSteps.push({\n        msg: 'Swap successfull',\n        checkimg: 1,\n      });\n      const waitTimer = timer(2000).subscribe( async (data) => {\n        this.step = 4;\n        this.loadBalances();\n        window.scrollTo(0, 0);\n          });\n    }\n  }, 5000);\n  }\n\n  async mintERC20Token(txData, toswapAmount) {\n    this.haveswappedamount = toswapAmount;\n    if (this.walletService.walletIsLocked()) {\n      this.step = 1;\n      window.scrollTo(0, 0);\n      return this.notifications.sendWarning('ERROR wallet locked');\n    }\n    const txid = '0x' + txData.txHash;\n    this.neoTxHash = txid;\n    if (txid) {\n      const id = setInterval(async () => {\n        const swapInfoByTxHash = await this.etherService.swapInfoByTxHash(txid);\n        console.log('swapInfoByTxHash', swapInfoByTxHash);\n        // tslint:disable-next-line: triple-equals\n        if (swapInfoByTxHash?.data?.state == 0) {\n          console.log('cleardInterval.id', id);\n          clearInterval(id);\n          this.invokeSteps.push({\n            msg: 'TXID confirmed. Preparing to mint ERC20 Token.',\n            checkimg: 1,\n          });\n          const getEthOwnerSign = await this.etherService.getEthOwnerSign(txid);\n          console.log('getEthOwnerSign', getEthOwnerSign);\n          if (getEthOwnerSign.data.value) {\n            const amountWithDecimals = Web3.utils.toBN(toswapAmount).mul(Web3.utils.toBN(100000000));\n            // tslint:disable-next-line: max-line-length\n            // gasfee need to get from the api:https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=DJV72718MY7XV8EMXTUY6DM1KCV2C6X14T\n            console.log('mintERC20.toswapAmount', toswapAmount);\n            console.log('mintERC20.amountWithDecimals', amountWithDecimals);\n            console.log('txid', txid);\n            console.log(\n              'getEthOwnerSign.data.value',\n              getEthOwnerSign.data.value\n            );\n            const ethMint = await this.etherService.getEthMint(\n              amountWithDecimals,\n              txid,\n              '0x' + getEthOwnerSign.data.value,\n              this.etheraccounts[0],\n              Web3.utils.toWei(this.gasPrices[this.selectedGasPrice], 'Gwei')\n            );\n            // tslint:disable-next-line: no-shadowed-variable\n            const id = setInterval(async () => {\n              // tslint:disable-next-line: no-shadowed-variable\n              const swapInfoByTxHash = await this.etherService.swapInfoByTxHash(\n                txid\n              );\n              // tslint:disable-next-line: triple-equals\n              if (swapInfoByTxHash?.data?.state == 1) {\n                console.log('ethTxHash', swapInfoByTxHash?.data?.ethTxHash);\n                console.log('cleardInterval.id', id);\n                this.ethTxHash = swapInfoByTxHash?.data?.ethTxHash;\n                clearInterval(id);\n                this.invokeSteps.push({\n                  msg:\n                    'Mint ERC20 TOKEN succesfull, the whole process is successfull.',\n                  checkimg: 1,\n                });\n                this.step = 4;\n                this.loadBalances();\n                window.scrollTo(0, 0);\n              }\n            }, 2000);\n          }\n        }\n      }, 5000);\n      console.log('setInternal.id', id);\n    } else {\n      console.log('please unlock your wallet ... repeating');\n    }\n  }\n\n  async contractLock() {\n    // tslint:disable-next-line: max-line-length\n    // const txData = await this.neoService.neo5toerc20swapaccountLock(this.stakingForm.value.fromNEOWallet, this.stakingForm.value.amounToStake, this.etheraccounts[0]);\n    const amountWithDecimals = new BigNumber(\n      this.stakingForm.value.amounToStake\n    ).multipliedBy(100000000);\n    console.log('amountWithDecimals', amountWithDecimals);\n    const txData = await this.etherService.packNeoTransaction(\n      amountWithDecimals,\n      this.stakingForm.value.fromNEOWallet,\n      this.etheraccounts[0]\n    );\n    console.log('contractLock.txData', txData);\n    // if (txData == false) {\n    //   return false;\n    // }\n    // tslint:disable-next-line: triple-equals\n    if (txData.data.txHash == undefined) {\n      return this.contractLock();\n    }\n    return txData.data;\n  }\n  async getPreparePledge(txData, pType) {\n    const request1 = {\n      beneficial: txData.beneficial,\n      amount: txData.amount,\n      pType,\n    };\n    const request2 = {\n      multiSigAddress: txData.multiSigAddress,\n      publicKey: txData.publicKey,\n      lockTxId: txData.lockTxId,\n    };\n    const preparedPledge = await this.nep5api.prepareBenefitPledge(\n      request1,\n      request2\n    );\n    if (!preparedPledge.result) {\n      return this.getPreparePledge(txData, pType);\n    } else {\n      return preparedPledge;\n    }\n  }\n\n  async getPrepareMintagePledge(txData) {\n    const request1 = {\n      beneficial: txData.beneficial,\n      tokenName: this.stakingForm.value.tokenName,\n      tokenSymbol: this.stakingForm.value.tokenSymbol,\n      totalSupply: this.stakingForm.value.tokenSupply,\n      decimals: Number(this.stakingForm.value.tokenDecimals),\n    };\n    const request2 = {\n      multiSigAddress: txData.multiSigAddress,\n      publicKey: txData.publicKey,\n      lockTxId: txData.lockTxId,\n    };\n    const preparedPledge = await this.nep5api.prepareMintagePledge(\n      request1,\n      request2\n    );\n    if (!preparedPledge.result) {\n      return this.getPrepareMintagePledge(txData);\n    } else {\n      return preparedPledge;\n    }\n  }\n\n  async processBlock(block, keyPair, txid) {\n    const povFittest = await this.api.getFittestHeader();\n    if (povFittest.error || !povFittest.result) {\n      console.log('ERROR - no fittest header');\n      return;\n    }\n    block.poVHeight = povFittest.result.height;\n    const blockHash = await this.api.blockHash(block);\n    const signed = nacl.sign.detached(\n      this.util.hex.toUint8(blockHash.result),\n      keyPair.secretKey\n    );\n    const signature = this.util.hex.fromUint8(signed);\n\n    block.signature = signature;\n    let generateWorkFor = block.previous;\n    if (block.previous == this.zeroHash) {\n      const publicKey = await this.api.accountPublicKey(block.address);\n      generateWorkFor = publicKey.result;\n    }\n\n    if (!this.workPool.workExists(generateWorkFor)) {\n      this.notifications.sendInfo(this.msg3);\n    }\n    // console.log('generating work');\n    const work = await this.workPool.getWork(generateWorkFor);\n    // console.log('work >>> ' + work);\n    block.work = work;\n\n    const processResponse = await this.nep5api.process(block, txid);\n\n    if (processResponse && processResponse.result) {\n      this.workPool.addWorkToCache(processResponse.result); // Add new hash into the work pool\n      this.workPool.removeFromCache(generateWorkFor);\n      return processResponse;\n    } else {\n      return null;\n    }\n  }\n}\n","<app-user-submenu></app-user-submenu>\n\n<!-- LATEST TRANSACTIONS -->\n<div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n  <div class=\"row\">\n    <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n      <!-- LATEST TRANSACTIONS -->\n      <div class=\"container\">\n        <div class=\"row\">\n          <!-- TITLE -->\n          <div class=\"col-md-6 col-12 mt-2 pl-2 pr-2\">\n            <div class=\"content-title\">\n              <h1 class=\"chainx\">ChainX Account Details - {{ chainxAccountService.getNetwork() }}</h1>\n            </div>\n          </div>\n          <div class=\"col-md-3 col-12 pl-md-2 pr-md-2 pl-2 pr-2\">\n            <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 chainx-background-light\" routerLink=\"/staking/chainx\">\n              Staking\n            </button>\n          </div>\n          <div class=\"col-md-3 col-12 pl-2 pr-2 pt-md-0 pt-2\">\n            <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 chainx-background-light\" routerLink=\"/wallets\">\n              Back to my Wallets\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"container pb-2\">\n  <div class=\"row pl-md-0 pr-md-0 pl-2 pr-2\">\n    <!-- LEFT -->\n    <div class=\"col-lg-9 col-md-12 col-sm-12 order-lg-1 order-2 pl-0 pr-0 mb-3\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-12 pb-2 pl-2 pr-2\">\n            <div class=\"content-box-blue h-auto pb-3 chainx-background-light\">\n              <div class=\"container\">\n                <div class=\"row qlc-table-header-blue chainx-background-light\">\n                  <div class=\"col-12 white\">Address</div>\n                </div>\n                <div class=\"row qlc-table-row-blue row-text-mid mt-3 chainx-background-light\">\n                  <div class=\"col-12 text-break pr-3\"><span *ngIf=\"account.addressBookName\" class=\"force-wrap\">{{ account.addressBookName }} - </span>{{ account.id }} <a ngxClipboard [cbContent]=\"account.id\"><img src=\"assets/img/icons/copy.svg\" class=\"img-copy\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Copy to clipboard\"></a></div>\n                  <div class=\"col-12 px-0\" *ngIf=\"showEditName\">\n                    <div class=\"editNameButtons\">\n                      <div class=\"row pl-3 pr-3\">\n                        <div class=\"col-md-12 col-12 py-3\">\n                          <input type=\"text\" class=\"form-control\" [(ngModel)]=\"account.addressBookName\" autofocus/>\n                        </div>\n                        <div class=\"col-md-4 col-12 \">\n                          <button class=\"btn btn-primary chainx-background\" type=\"button\" (click)=\"editNameCancel()\">\n                            {{ 'CANCEL' | translate }}\n                          </button>\n                        </div>\n                        <div class=\"col-md-4 col-12 py-3 py-md-0 \">\n                          <button class=\"btn btn-primary chainx-background\" type=\"button\" (click)=\"editNameSave()\">\n                            {{ 'OK' | translate }}\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <!-- BALANCE QLC -->\n          <div class=\"col-md-4 col-sm-6 col-12 pl-2 pr-2\">\n            <div class=\"content-box-white h-auto mt-2 pb-2\">\n              <div class=\"container\">\n                <div class=\"row qlc-table-header-white\">\n                  <div class=\"col-12\">PCX Free Balance</div>\n                </div>\n              </div>\n              <div class=\"container\">\n                <div class=\"row\">\n                  <div class=\"col-3 mt-3\">\n                    <img src=\"assets/img/token-pcx.png\" class=\"w-100 icon-token\">\n                  </div>\n                  <div class=\"col-9 pr-0 pl-0\">\n                    <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                      <ng-container *ngIf=\"!loading; else showLoadingTemplate\">\n                        <div class=\"col-12 pb-0\" *ngIf=\"account.balances != null; else nanTemplate\">{{ (account.balances.Free / chainxAccountService.divisor) | currency:'':'':'1.2-8' }}</div>\n                      </ng-container>\n                    </div>\n                    <div class=\"row qlc-table-row-white sub-page pt-0\">\n                      <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- BALANCE QSMS -->\n          <div class=\"col-md-4 col-sm-6 col-12 pl-2 pr-2\">\n            <div class=\"content-box-white h-auto mt-2 pb-2\">\n              <div class=\"container\">\n                <div class=\"row qlc-table-header-white\">\n                  <div class=\"col-12\">PCX Total Balance</div>\n                </div>\n              </div>\n              <div class=\"container\">\n                <div class=\"row\">\n                  <div class=\"col-3 mt-3\">\n                    <img src=\"assets/img/token-pcx.png\" class=\"w-100 icon-token\">\n                  </div>\n                  <div class=\"col-9 pr-0 pl-0\">\n                    <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                      <ng-container *ngIf=\"!loading; else showLoadingTemplate\">\n                        <div class=\"col-12 pb-0\" *ngIf=\"account.balances != null; else nanTemplate\">{{ (account.balances.TotalBalance / chainxAccountService.divisor) | currency:'':'':'1.2-8' }}</div>\n                      </ng-container>\n                    </div>\n                    <div class=\"row qlc-table-row-white sub-page pt-0\">\n                      <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- BALANCE QGAS -->\n          <div class=\"col-md-4 col-sm-6 col-12 pl-2 pr-2\">\n            <div class=\"content-box-white h-auto mt-2 pb-2\">\n              <div class=\"container\">\n                <div class=\"row qlc-table-header-white\">\n                  <div class=\"col-12\">PCX Staking Reserved</div>\n                </div>\n              </div>\n              <div class=\"container\">\n                <div class=\"row\">\n                  <div class=\"col-3 mt-3\">\n                    <img src=\"assets/img/token-pcx-staking.png\" class=\"w-100 icon-token\">\n                  </div>\n                  <div class=\"col-9 pr-0 pl-0\">\n                    <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                      <ng-container *ngIf=\"!loading; else showLoadingTemplate\">\n                        <div class=\"col-12 pb-0\" *ngIf=\"account.balances != null; else nanTemplate\">{{ (account.balances.ReservedStaking / chainxAccountService.divisor) | currency:'':'':'1.2-8' }}</div>\n                      </ng-container>\n                    </div>\n                    <div class=\"row qlc-table-row-white sub-page pt-0\">\n                      <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"container pt-0\">\n                <div class=\"row qlc-table-header-white pt-0\">\n                  <div class=\"col-12\">PCX Unfreeze Reserved</div>\n                </div>\n              </div>\n              <div class=\"container\">\n                <div class=\"row\">\n                  <div class=\"col-3 mt-3\">\n                    <img src=\"assets/img/token-pcx-unfreeze.png\" class=\"w-100 icon-token\">\n                  </div>\n                  <div class=\"col-9 pr-0 pl-0\">\n                    <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                      <ng-container *ngIf=\"!loading; else showLoadingTemplate\">\n                        <div class=\"col-12 pb-0\" *ngIf=\"account.balances != null; else nanTemplate\">{{ (account.balances.ReservedStakingRevocation / chainxAccountService.divisor) | currency:'':'':'1.2-8' }}</div>\n                      </ng-container>\n                    </div>\n                    <div class=\"row qlc-table-row-white sub-page pt-0\">\n                      <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"container mt-3\">\n              <div class=\"row\">\n                <div class=\"col-12 pl-0 pr-0\">\n                  <button type=\"submit\" class=\"btn btn-primary btn-green btn-icon-chainx w-100 pl-2 pr-0 chainx-background-light\" routerLink=\"/staking/chainx\">CLAIM PCX Reward</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--     RIGHT -->\n    <div class=\"col-lg-3 col-md-12 col-sm-12 order-lg-2 order-1 pl-0 pr-0 mb-xs-3 mb-3\">\n      <div class=\"col-12 pl-2 pr-2\">\n        <div class=\"content-box-chainx h-100 pb-4 pr-0 chainx-background\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-blue chainx-background\">\n              <div class=\"col-12 white\">Account Actions</div>\n            </div>\n            <div class=\"row pt-3 pr-0\">\n              <div class=\"col-12 pr-0\">\n                <a routerLink=\"/wallets/chainx/send/{{ account.id }}\" class=\"menu-myaccount menu-icon-send pr-0\">Send</a> <a (click)=\"editName()\" class=\"menu-myaccount menu-icon-rename pr-0\">Rename Account</a> <a *ngIf=\"account.id !== ''\" href=\"{{ chainxAccountService.getExplorer() }}/accounts/{{ chainxAccountService.getPublicKey(account.id) }}\" class=\"menu-myaccount menu-icon-details pr-0\" target=\"_blank\">Account Details</a> <a (click)=\"deleteWallet()\" class=\"menu-myaccount menu-icon-delete pr-0\" target=\"_blank\">Delete wallet</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-12 pl-2 pr-2 mt-2\">\n        <div class=\"content-box-chainx pb-2 pr-0 chainx-background\">\n          <div class=\"container\">\n            <div class=\"row pt-3 pr-0\">\n              <div class=\"col-12 pr-0\">\n                <a (click)=\"recoverPrivateKey(recoverPrivateKeyTemplate)\" class=\"menu-myaccount menu-icon-recoverkey pr-0\" target=\"_blank\">{{ recoverPrivateKeyText }}</a> <a *ngIf=\"account.mnemonic\" (click)=\"recoverMnemonic(recoverMnemonicTemplate)\" class=\"menu-myaccount menu-icon-recoverkey pr-0\" target=\"_blank\">{{ recoverMnemonicText }}</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!--LATEST TRANSACTIONS-->\n<div class=\"container mt-0 mb-3\">\n  <div class=\"row\">\n    <div class=\"col-12 pl-0 pr-0\">\n      <!-- TITLE -->\n      <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>Latest Asset Transfers</h1>\n        </div>\n      </div>\n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\" *ngIf=\"transfers; else showLoaderTemplate\">\n        <div class=\"content-box-white\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">Type</div>\n              <div class=\"col-xl-6 col-lg-5 col-md-5 col-sm-5 col-7 text-truncate\">Address / Transaction ID</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Amount</div>\n              <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 d-none d-sm-block col-6 pr-4 text-right\">Time</div>\n            </div>\n            <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let transfer of transfers.items\">\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">\n                <span class=\"qlc-icon icon-{{ transfer.signed === publicKey ? 'Send' : 'Receive' }}\" [title]=\"transfer.signed === publicKey ? 'Send' : 'Receive'\"></span> <span class=\"d-none d-sm-none d-md-inline-block txState\">\n                  <span class=\"text-color-lightgrey\">State</span><br>\n                  <span class=\"text-bold-grey\" [innerText]=\"transfer.signed === publicKey ? 'Send' : 'Receive'\"></span>\n                </span>\n              </div>\n              <div class=\"col-xl-6 col-lg-5 col-md-5 col-sm-5 col-7 pb-0 text-truncate\">\n                <span class=\"text-color-lightgrey\">{{transfer.signed === publicKey ? 'to' : 'from'}}: </span> <a href=\"{{ chainxAccountService.getExplorer() }}/accounts/{{'0x'+transfer.payee}}\" target=\"_blank\">{{ chainxAccountService.getPublicAddress('0x'+transfer.payee) }}</a> <a href=\"{{ chainxAccountService.getExplorer() }}/txs/{{transfer.hash}}\" target=\"_blank\"><br> <span class=\"text-tiny\">{{ transfer.hash }}</span> </a>\n              </div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pb-0 pr-sm-0 pr-4 text-right \">\n                <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">{{ transfer.signed === publicKey ? '-' : '+'}} {{ (transfer.value / chainxAccountService.divisor) | currency:'':'':'1.2-8' }}</span> <br><span class=\"text-color-grey\">{{ transfer.token }}</span>\n              </div>\n              <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 col-12 pr-4 text-right\">\n                {{ transfer.time | date: 'short' }}\n              </div>\n              <div class=\"container transaction-details\">\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!--       BUTTON-->\n      <ng-container *ngIf=\"transactions\">\n        <div class=\"col-lg-12 mb-0 mt-2 pl-md-2 pr-md-2 text-center\" *ngIf=\"transactions.total>transactions.pageSize\">\n          <a (click)=\"getTransactions(transactions.total)\" class=\"btn btn-primary btn-blue\">ALL TRANSACTIONS</a>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n<!--LATEST TRANSACTIONS-->\n<div class=\"container mt-0 mb-3\">\n  <div class=\"row\">\n    <div class=\"col-12 pl-0 pr-0\">\n      <!-- TITLE -->\n      <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>Latest Staking Records</h1>\n        </div>\n      </div>\n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\" *ngIf=\"transactions; else showLoaderTemplate\">\n        <div class=\"content-box-white\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">Type</div>\n              <div class=\"col-xl-6 col-lg-5 col-md-5 col-sm-5 col-7 text-truncate\">Address / Transaction ID</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Amount</div>\n              <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 d-none d-sm-block col-6 pr-4 text-right\">Time</div>\n            </div>\n            <ng-container *ngFor=\"let transaction of transactions.items\">\n              <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngIf=\"transaction.call !== 'transfer'\">\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">\n                  <span class=\"qlc-icon icon-chainx-{{ transaction.call === 'nominate' ? 'invoke' : (transaction.call === 'unnominate' ? 'revoke' : transaction.call) }}\" title=\"{{ transaction.call }}\"></span> <span class=\"d-none d-sm-none d-md-inline-block txState\">\n                      <span class=\"text-color-lightgrey\">State</span><br>\n                      <span class=\"text-bold-grey text-capitalize\">{{ transaction.call === 'nominate' ? 'invoke' : (transaction.call === 'unnominate' ? 'revoke' : transaction.call) }}</span>\n                    </span>\n                </div>\n                <div class=\"col-xl-6 col-lg-5 col-md-5 col-sm-5 col-7 pb-0 text-truncate\">\n                  <span class=\"text-color-lightgrey\">Target: </span> <a href=\"{{ chainxAccountService.getExplorer() }}/accounts/{{'0x'+transaction.args[0].data}}\" target=\"_blank\">{{ chainxAccountService.getPublicAddress('0x'+transaction.args[0].data) }}</a> <a href=\"{{ chainxAccountService.getExplorer() }}/txs/{{transaction.hash}}\" target=\"_blank\"><br> <span class=\"text-tiny\">{{ transaction.hash }}</span> </a>\n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pb-0 pr-sm-0 pr-4 text-right\" *ngIf=\"transaction.call === 'nominate' || transaction.call === 'unnominate'; else noBalanceTemplate\">\n                  <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"-\"> {{ (transaction.args[1].data / chainxAccountService.divisor) | currency:'':'':'1.2-8' }}<br><span class=\"text-color-grey\">PCX</span></span>\n                </div>\n                <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 col-12 pr-4 text-right\">\n                  {{ transaction.time | date: 'short' }}\n                </div>\n                <div class=\"container transaction-details\">\n                </div>\n              </div>\n            </ng-container>\n          </div>\n        </div>\n      </div>\n      <!--       BUTTON-->\n      <ng-container *ngIf=\"transactions\">\n        <div class=\"col-lg-12 mb-0 mt-2 pl-md-2 pr-md-2 text-center\" *ngIf=\"transactions.total>transactions.pageSize\">\n          <a (click)=\"getTransactions(transactions.total)\" class=\"btn btn-primary btn-blue\">ALL TRANSACTIONS</a>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n<ng-template #nanTemplate>\n  <div class=\"col-12 pb-0\">NaN</div>\n</ng-template>\n<ng-template #noBalanceTemplate>\n  <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pb-0 pr-sm-0 pr-4 text-right \">\n    <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"-\">/<br><span class=\"text-color-grey\">PCX</span></span>\n  </div>\n</ng-template>\n<ng-template #showLoadingTemplate>\n  <div class=\"col-12 pb-0\">\n    <img src=\"assets/img/preloaders/preloader-black-38px.svg\" style=\"margin-top:-2px;width:24px;height:auto;opacity:0.65;\">\n  </div>\n</ng-template>\n<ng-template #showLoaderTemplate>\n  <img src=\"assets/img/preloaders/preloader-chainx-64px.svg\" style=\"margin-left: calc(50% - 32px); margin-top: 10%;\">\n</ng-template>\n<ng-template #recoverPrivateKeyTemplate>\n  <div class=\"modal-body\">\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"row text-center\">\n      <div class=\"col-12\">\n        <h1 class=\"pt-5\">Your ChainX private key is</h1>\n        <p class=\"pb-5\" class=\"overflow-wrap\">{{ recoveredPrivateKey }}</p>\n      </div>\n    </div>\n  </div>\n</ng-template>\n<ng-template #recoverMnemonicTemplate>\n  <div class=\"modal-body\">\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"row text-center\">\n      <div class=\"col-12\">\n        <h1 class=\"pt-5\">Your ChainX mnemonic phrase is</h1>\n        <p class=\"pb-5\" class=\"overflow-wrap\">{{ recoveredMnemonic }}</p>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { ChangeDetectorRef, Component, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { combineLatest, Subscription } from 'rxjs';\nimport { AddressBookService } from '../../../services/address-book.service';\nimport { ChainxAccountService } from '../../../services/chainx-account.service';\nimport { NotificationService } from '../../../services/notification.service';\nimport { WalletService } from '../../../services/wallet.service';\nimport BigNumber from 'bignumber.js';\n\nexport interface IItems {\n  number: number;\n  index: number;\n  hash: string;\n  signed: string;\n  signature: string;\n  account_index: number;\n  era: string;\n  module: string;\n  call: string;\n  help: string;\n  args: any[];\n  data: string;\n  version: number;\n  acceleration: 1;\n  time: number;\n  status: string;\n}\n\nexport interface ITransactions {\n  items: object;\n  page: number;\n  pageSize: number;\n  total: number;\n}\n\n@Component({\n  selector: 'app-chainx-account',\n  templateUrl: './chainx-account.component.html',\n  styleUrls: ['./chainx-account.component.scss']\n})\nexport class ChainxAccountComponent implements OnInit {\n  account = {\n    id: '',\n    addressBookName: null,\n    balances: null,\n    mnemonic: null,\n    wif: null\n  };\n  addressBookNameTemp = '';\n  showEditName = false;\n  modalRef: BsModalRef;\n  recoverMnemonicText = 'Recover mnemonic phrase';\n  recoverPrivateKeyText = 'Recover private key';\n  recoveredMnemonic = null;\n  recoveredPrivateKey = null;\n  subscriptions: Subscription[] = [];\n  loading = true;\n  transactions;\n  transfers;\n  publicKey: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private changeDetection: ChangeDetectorRef,\n    private modalService: BsModalService,\n    private addressBookService: AddressBookService,\n    private notificationService: NotificationService,\n    private walletService: WalletService,\n    public chainxAccountService: ChainxAccountService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.publicKey = this.chainxAccountService.getPublicKey(this.route.snapshot.params.address).replace('0x', '');\n    // this.publicKey = '9614fd65f80d0e6da07573618e224e495d135ee5b0eebd4e5d4529819e55c050';\n    this.loadAccount();\n    this.getTransactions();\n  }\n\n  async loadAccount() {\n    const account = this.walletService.wallet.chainxAccounts.find(a => a.id === this.route.snapshot.params.address);\n\n    if (account === undefined) {\n      return this.router.navigate(['/wallets/']);\n    }\n\n    this.account = account;\n    const assets = await this.chainxAccountService.getAssetsByAccount(this.account.id);\n\n    for (const asset of assets.data) {\n      this.account.balances = asset.details;\n      this.account.balances.TotalBalance = (Object.values(asset.details).reduce(\n        (prev: BigNumber, current: any) => prev.plus(new BigNumber(current)),\n        new BigNumber(0)\n      ));\n    }\n\n    this.loading = false;\n  }\n\n  async getTransactions(pageSize = 10) {\n    this.transactions = await this.chainxAccountService.get(`/account/${this.publicKey}/txs?page=0&page_size=${pageSize}`);\n    this.transfers = await this.chainxAccountService.get(`/account/${this.publicKey}/transfers?page=0&page_size=${pageSize}`);\n\n    //console.log(this.transactions.items);\n    //console.log(this.transfers.items);\n  }\n\n  editName() {\n    this.showEditName = true;\n    this.addressBookNameTemp = this.account.addressBookName;\n  }\n\n  async editNameSave() {\n    const addressBookName = this.account.addressBookName.trim();\n    if (!addressBookName) {\n      this.addressBookService.deleteAddress(this.account.id);\n      this.notificationService.sendSuccess('Account name successfully deleted.');\n      this.showEditName = false;\n\n      return;\n    }\n\n    try {\n      await this.addressBookService.saveAddress(this.account.id, addressBookName);\n    } catch (err) {\n      this.notificationService.sendError(err.message);\n\n      return;\n    }\n\n    this.notificationService.sendSuccess('Account name successfully updated');\n    this.showEditName = false;\n  }\n\n  editNameCancel() {\n    this.showEditName = false;\n    this.account.addressBookName = this.addressBookNameTemp;\n  }\n\n  deleteWallet() {\n    const existingAccountIndex = this.walletService.wallet.chainxAccounts.findIndex(a => a.id === this.account.id);\n\n    if (existingAccountIndex === -1) {\n      return;\n    }\n\n    this.walletService.wallet.chainxAccounts.splice(existingAccountIndex, 1);\n\n    this.walletService.saveWalletExport();\n    this.router.navigate(['/wallets/']);\n  }\n\n  openModal(template: TemplateRef<any>) {\n    combineLatest(\n      this.modalService.onShow,\n      this.modalService.onShown,\n      this.modalService.onHide,\n      this.modalService.onHidden\n    ).subscribe(() => this.changeDetection.markForCheck());\n    this.subscriptions.push(\n      this.modalService.onHide.subscribe((reason: string) => {\n        this.recoveredPrivateKey = '';\n        this.recoverPrivateKeyText = 'Recover private key';\n        this.recoveredMnemonic = '';\n        this.recoverMnemonicText = 'Recover mnemonic phrase';\n      })\n    );\n\n    this.modalRef = this.modalService.show(template);\n  }\n\n  async recoverMnemonic(template) {\n    if (this.walletService.walletIsLocked()) {\n      return this.notificationService.sendWarning('ERROR wallet locked');\n    }\n\n    this.recoverMnemonicText = 'Preparing, please wait.';\n    this.recoveredMnemonic = this.chainxAccountService.decrypt(this.account.wif);\n    this.openModal(template);\n  }\n\n  async recoverPrivateKey(template) {\n    if (this.walletService.walletIsLocked()) {\n      return this.notificationService.sendWarning('ERROR wallet locked');\n    }\n\n    this.recoverPrivateKeyText = 'Preparing, please wait.';\n\n    let privateKey = this.chainxAccountService.decrypt(this.account.wif);\n\n    if (this.account.mnemonic) {\n      privateKey = (this.chainxAccountService.account(privateKey)).privateKey();\n    }\n\n    this.recoveredPrivateKey = privateKey;\n    this.openModal(template);\n  }\n}\n","<div class=\"container mt-0 qlc-content-first\">\n  <div class=\"row\" *ngIf=\"activePanel==0\">\n    <div class=\"col-12 pl-0 pr-0\">\n      <div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>Create/Import ChainX Account</h1>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-12 mt-2 mb-4 pl-md-2 pr-md-2\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-white pb-4 pt-5\">\n            <div class=\"col-lg-6 offset-lg-3 content-title\"><h2 class=\"title-grey\">How would you like to access your account?</h2></div>\n            <div class=\"col-lg-6 offset-lg-3 mt-4\">\n              <div class=\"custom-control custom-radio custom-control-inline\">\n                <input type=\"radio\" id=\"signinType1\" name=\"signinType\" class=\"custom-control-input\" value=\"new\" checked [(ngModel)]=\"selectedImportOption\"> <label class=\"custom-control-label\" for=\"signinType1\">Create new account</label>\n              </div>\n              <div class=\"custom-control custom-radio custom-control-inline\">\n                <input type=\"radio\" id=\"signinType2\" name=\"signinType\" class=\"custom-control-input\" value=\"private\" [(ngModel)]=\"selectedImportOption\"> <label class=\"custom-control-label\" for=\"signinType2\">Private key</label>\n              </div>\n              <div class=\"custom-control custom-radio custom-control-inline\">\n                <input type=\"radio\" id=\"signinType3\" name=\"signinType\" class=\"custom-control-input\" value=\"encrypted\" [(ngModel)]=\"selectedImportOption\"> <label class=\"custom-control-label\" for=\"signinType3\">Mnemonic phrase</label>\n              </div>\n              <div class=\"row justify-content-center rowContent autoHP pt-2 pl-3 pr-3\" *ngIf=\"selectedImportOption === 'new'\">\n                <div class=\"col-12 px-0 py-3 text-truncate dataName\">Enter your account name - Optional</div>\n                <div class=\"col-12 px-0 pb-3 text-left text-truncate\">\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"accountName\" placeholder=\"Account name\" onfocus=\"this.placeholder = ''\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row justify-content-center rowContent autoHP pt-2 pl-3 pr-3\" *ngIf=\"selectedImportOption === 'private'\">\n                <div class=\"col-12 px-0 py-3 text-truncate dataName\">Enter your private key</div>\n                <div class=\"col-12 px-0 pb-3 text-left text-truncate\">\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <input type=\"text\" class=\"form-control\" (keyup.enter)=\"importFromPrivateKey()\" [(ngModel)]=\"importPrivateKey\" placeholder=\"Private key\" onfocus=\"this.placeholder = ''\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row justify-content-center rowContent autoHP pt-2 pl-3 pr-3\" *ngIf=\"selectedImportOption === 'encrypted'\">\n                <div class=\"col-12 px-0 py-3 text-truncate dataName\">Enter your mnemonic phrase in order</div>\n                <div class=\"col-12 px-0 pb-3 text-left text-truncate\">\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <input type=\"text\" class=\"form-control\" (keyup.enter)=\"importFromMnemonic()\" [(ngModel)]=\"importMnemonic\" placeholder=\"Mnemonic phrase\" onfocus=\"this.placeholder = ''\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row qlc-table-row-white\">\n            <div class=\"col-12 pl-4 pb-3 pr-3 pt-2 text-center\">\n              <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"selectedImportOption === 'new'\" [disabled]=\"alreadyImporting\" (click)=\"createAccount()\" [disabled]=\"creating\">Create new account</button>\n              <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"selectedImportOption === 'private'\" [disabled]=\"alreadyImporting\" (click)=\"importFromPrivateKey()\">Import with private key</button>\n              <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"selectedImportOption === 'encrypted'\" [disabled]=\"alreadyImporting\" (click)=\"importFromMnemonic()\">Import with mnemonic phrase</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"activePanel == 1\">\n    <div class=\"col-lg-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\">\n      <div class=\"content-title\">\n        <h1>New ChainX wallet created!</h1>\n      </div>\n    </div>\n    <div class=\"col-lg-12 mt-2 mb-4 pl-md-2 pr-md-2\">\n      <div class=\"content-box-white\" *ngIf=\"newAccountMnemonic == '' && newAccountPrivateKey == ''\">\n        <div class=\"col-12 text-center pt-5\">\n          <h3>Generating key. Please wait.</h3>\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-6 offset-md-3 mt-5 mb-5\">\n                <div id=\"noTrespassingOuterBarG\">\n                  <div id=\"noTrespassingFrontBarG\" class=\"noTrespassingAnimationG\">\n                    <div class=\"noTrespassingBarLineG\"></div>\n                    <div class=\"noTrespassingBarLineG\"></div>\n                    <div class=\"noTrespassingBarLineG\"></div>\n                    <div class=\"noTrespassingBarLineG\"></div>\n                    <div class=\"noTrespassingBarLineG\"></div>\n                    <div class=\"noTrespassingBarLineG\"></div>\n                    <div class=\"noTrespassingBarLineG\"></div>\n                    <div class=\"noTrespassingBarLineG\"></div>\n                    <div class=\"noTrespassingBarLineG\"></div>\n                    <div class=\"noTrespassingBarLineG\"></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"content-box-white\" *ngIf=\"newAccountMnemonic != '' && newAccountPrivateKey != ''\">\n        <div class=\"col-12 px-0 text-center py-3 pt-5 pb-4\">\n          <strong>Below is your mnemonic phrase and private key for your new account</strong>\n        </div>\n        <div class=\"row align-items-top pl-5 pr-5\">\n          <div class=\"col-xl-6 pr-md-3\">\n            <div class=\"col-12 defaultTable tableQLC content\">\n              <div class=\"row align-items-center rowTitles\">\n                <div class=\"col-12 pb-3\">\n                  Mnemonic phrase\n                </div>\n              </div>\n              <div class=\"row align-items-center rowDefault\">\n                <div class=\"col-12 pb-3 seed-txt\" style=\"word-wrap: break-word;\">\n                  {{ newAccountMnemonic }}\n                </div>\n              </div>\n              <div class=\"row align-items-center rowButtons\">\n                <div class=\"col-12\">\n                  <a tooltip=\"Copy mnemonic phrase\" ngxClipboard [cbContent]=\"newAccountMnemonic\" (cbOnSuccess)=\"copied()\" class=\"icon-text-link\"><span class=\"icon copy light\"></span> {{ 'COPY_TO_CLIPBOARD' | translate }}</a>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-xl-6 pl-md-3\">\n            <div class=\"col-12 defaultTable tableQLC content\">\n              <div class=\"row align-items-center rowTitles\">\n                <div class=\"col-12 pb-3\">\n                  Private key\n                </div>\n              </div>\n              <div class=\"row align-items-center rowDefault\">\n                <div class=\"col-12 pb-3 seed-txt\" style=\"word-wrap: break-word;\">\n                  {{ newAccountPrivateKey }}\n                </div>\n              </div>\n              <div class=\"row align-items-center rowButtons\">\n                <div class=\"col-12\">\n                  <a tooltip=\"Copy private key\" ngxClipboard [cbContent]=\"newAccountPrivateKey\" (cbOnSuccess)=\"copied()\" class=\"icon-text-link\"><span class=\"icon copy light\"></span> {{ 'COPY_TO_CLIPBOARD' | translate }}</a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row defaultTable content pt-5\">\n          <div class=\"col-12 pb-3\">\n            <div class=\"row align-items-center rowContent autoHP\">\n              <div class=\"col-12 px-0 pb-1 text-center boldbig text-color-red\" style=\"font-weight: bold;\">\n                Make sure to write down your mnemonic phrase and private key or save it somewhere safe, and never share it with anyone!\n              </div>\n              <div class=\"col-12 px-0 pb-3 text-center boldbig pt-4\">\n                It is the only way to recover your funds in an emergency. There is no way to recover a private key if you loose it.\n              </div>\n            </div>\n            <div class=\"row align-items-center justify-content-center rowDefault rowButtons pt-4\">\n              <div class=\"col-xl-4 col-lg-4 col-md-6 col-sm-8 col-12 px-0 px-sm-2 text-left text-truncate mobile-break mb-5\">\n                <a (click)=\"confirmNewAccount()\">\n                  <button type=\"submit\" [disabled]=\"alreadyImporting\" class=\"btn btn-primary pl-0 pr-0 btn-danger w-100\">I have saved my mnemonic phrase and private key</button>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { ChainxAccountService } from 'src/app/services/chainx-account.service';\nimport { Router } from '@angular/router';\nimport { AddressBookService } from '../../../services/address-book.service';\n\n@Component({\n  selector: 'app-chainx-create',\n  templateUrl: './chainx-create.component.html',\n  styleUrls: ['./chainx-create.component.scss']\n})\nexport class ChainxCreateComponent implements OnInit {\n  activePanel = 0;\n  selectedImportOption = 'new';\n  accountName = '';\n  alreadyImporting = false;\n  newAccountMnemonic = null;\n  newAccountPrivateKey = null;\n  newAccount = null;\n  importPrivateKey = '';\n  importMnemonic = '';\n\n  constructor(\n    private router: Router,\n    private walletService: WalletService,\n    private notificationService: NotificationService,\n    private chainxAccountService: ChainxAccountService,\n    private addressBookService: AddressBookService\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n  async createAccount() {\n    if (this.walletService.isLocked()) {\n      return this.notificationService.sendError('Wallet must be unlocked.');\n    }\n\n    this.accountName = this.accountName.trim();\n\n    if (this.accountName.length > 0 && this.addressBookService.nameExists(this.accountName)) {\n      return this.notificationService.sendInfo('Account name already exists, choose another one.');\n    }\n\n    this.activePanel = 1;\n    this.notificationService.sendInfo('Creating wallet, please wait.');\n    this.alreadyImporting = true;\n\n    const account = await this.chainxAccountService.createAccount(null, this.accountName);\n    const wif = this.chainxAccountService.decrypt(account.wif);\n\n    this.newAccountMnemonic = wif;\n    this.newAccountPrivateKey = (this.chainxAccountService.account(wif)).privateKey();\n\n    this.newAccount = account;\n    this.notificationService.sendSuccess('Wallet created. Please save your mnemonic phrase and private key in a safe space.');\n    this.alreadyImporting = false;\n  }\n\n  confirmNewAccount() {\n    const address = this.newAccount.id;\n    this.newAccount = null;\n    this.newAccountMnemonic = '';\n    this.newAccountPrivateKey = '';\n\n    this.router.navigate([`wallets/chainx/account/${address}`]);\n  }\n\n  async importFromPrivateKey() {\n    if (this.walletService.isLocked()) {\n      return this.notificationService.sendError('Wallet must be unlocked.');\n    }\n\n    this.alreadyImporting = true;\n    this.importPrivateKey = this.importPrivateKey.trim();\n\n    if (this.importPrivateKey.length === 0) {\n      return this.notificationService.sendInfo('Insert your private key.');\n    }\n\n    this.notificationService.sendInfo('Importing wallet, please wait.');\n\n    const privateKey = this.importPrivateKey;\n\n    if (!await this.chainxAccountService.checkPrivateKey(privateKey)) {\n      this.alreadyImporting = false;\n\n      return this.notificationService.sendWarning('Invalid private key or account already exists.');\n    }\n\n    const account = await this.chainxAccountService.createAccount(privateKey);\n\n    this.importPrivateKey = '';\n    this.notificationService.sendSuccess('Wallet was imported.');\n    this.alreadyImporting = false;\n\n    this.router.navigate(['wallets/chainx/account/' + account.id]);\n  }\n\n  async importFromMnemonic() {\n    if (this.walletService.isLocked()) {\n      return this.notificationService.sendError('Wallet must be unlocked.');\n    }\n\n    this.alreadyImporting = true;\n    this.importMnemonic = this.importMnemonic.trim();\n\n    if (this.importMnemonic.length === 0) {\n      this.alreadyImporting = false;\n\n      return this.notificationService.sendInfo('Insert your mnemonic phrase.');\n    }\n\n    this.notificationService.sendInfo('Importing wallet, please wait.');\n\n    const mnemonic = this.importMnemonic;\n\n    if (!await this.chainxAccountService.checkMnemonic(mnemonic)) {\n      this.alreadyImporting = false;\n\n      return this.notificationService.sendWarning('Invalid mnemonic phrase or account already exists.');\n    }\n\n    const account = await this.chainxAccountService.createAccount(mnemonic);\n\n    this.importMnemonic = '';\n    this.notificationService.sendSuccess('Wallet was imported.');\n    this.alreadyImporting = false;\n\n    this.router.navigate(['wallets/chainx/account/' + account.id]);\n  }\n}\n","<app-user-submenu></app-user-submenu>\n<div class=\"send-screen-1 qlc-content-home qlc-after-submenu\" *ngIf=\"activePanel == 'send'\">\n  <!-- SEND FORM -->\n  <div class=\"container mt-0 qlc-content-first\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2\">\n        <!-- LATEST TRANSACTIONS -->\n        <div class=\"container\">\n          <div class=\"row\">\n            <!-- TITLE -->\n            <div class=\"col-md-6 col-12 mt-2 pl-md-2 pr-md-2\">\n              <div class=\"content-title\">\n                <h1 class=\"chainx\">Send from Chainx account - {{ chainxAccountService.getNetwork() }}</h1>\n              </div>\n            </div>\n            <div class=\"col-md-3 col-12 pl-md-2 pr-md-2\">\n              <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 chainx-background-light\" (click)=\"loadAccount(true)\">\n                Refresh\n              </button>\n            </div>\n            <div class=\"col-md-3 col-12 pl-md-2 pr-md-2\">\n              <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 chainx-background-light\" routerLink=\"/wallets\">\n                Back to my Wallets\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container accounts\">\n    <div class=\"row\">\n      <!-- ADDRESS -->\n      <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n        <div class=\"content-box-blue h-100 pb-3 chainx-background\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-blue chainx-background\">\n              <div class=\"col-12 white\">Address</div>\n            </div>\n            <div class=\"row qlc-table-row-blue row-text-mid mt-3 chainx-background\">\n              <div class=\"col-12 text-break pr-3\">{{ chainxAccount.id }}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- BALANCES -->\n      <div class=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 pb-3\">\n        <div class=\"container pl-0 pr-0\">\n          <div class=\"row pl-0 pr-0\">\n            <!-- BALANCES -->\n            <div class=\"col-md-4 col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 mb-0 order-md-1 order-2\">\n              <div class=\"content-box-white h-auto mt-2 pb-2 balance-box active\">\n                <div class=\"container\">\n                  <div class=\"row qlc-table-header-white\">\n                    <div class=\"col-12\">PCX Balance</div>\n                  </div>\n                </div>\n                <!-- QLC -->\n                <div class=\"container\">\n                  <div class=\"row\">\n                    <div class=\"col-3 mt-3\">\n                      <img src=\"assets/img/token-pcx.png\" class=\"w-100 icon-token\">\n                    </div>\n                    <div class=\"col-9 pr-0 pl-0\">\n                      <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                        <div class=\"col-12 pb-0\"></div>\n                        <ng-container *ngIf=\"!loading; else showLoadingTemplate\">\n                          <div class=\"col-12 pb-0\" *ngIf=\"chainxAccount.balances != null; else nanTemplate\">{{ (chainxAccount.balances.Free / chainxAccountService.divisor) | currency:'':'':'1.2-8' }}</div>\n                        </ng-container>\n                      </div>\n                      <div class=\"row qlc-table-row-white sub-page pt-0\">\n                        <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- BALANCES -->\n            <div class=\"col-md-4 col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 mb-0 order-md-2 order-3\">\n              <div class=\"content-box-white h-auto mt-2 pb-2 balance-box active\">\n                <div class=\"container\">\n                  <div class=\"row qlc-table-header-white\">\n                    <div class=\"col-12\">PCX Staking Reserved</div>\n                  </div>\n                </div>\n                <!-- QLC -->\n                <div class=\"container\">\n                  <div class=\"row\">\n                    <div class=\"col-3 mt-3\">\n                      <img src=\"assets/img/token-pcx-staking.png\" class=\"w-100 icon-token\">\n                    </div>\n                    <div class=\"col-9 pr-0 pl-0\">\n                      <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                        <div class=\"col-12 pb-0\"></div>\n                        <ng-container *ngIf=\"!loading; else showLoadingTemplate\">\n                          <div class=\"col-12 pb-0\" *ngIf=\"chainxAccount.balances != null; else nanTemplate\">{{ (chainxAccount.balances.ReservedStaking / chainxAccountService.divisor) | currency:'':'':'1.2-8' }}</div>\n                        </ng-container>\n                      </div>\n                      <div class=\"row qlc-table-row-white sub-page pt-0\">\n                        <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- BALANCES -->\n            <div class=\"col-md-4 col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 mb-0 order-md-3 order-4\">\n              <div class=\"content-box-white h-auto mt-2 pb-2 balance-box active\">\n                <div class=\"container\">\n                  <div class=\"row qlc-table-header-white\">\n                    <div class=\"col-12\">PCX Unfreeze Reserved</div>\n                  </div>\n                </div>\n                <!-- QLC -->\n                <div class=\"container\">\n                  <div class=\"row\">\n                    <div class=\"col-3 mt-3\">\n                      <img src=\"assets/img/token-pcx-unfreeze.png\" class=\"w-100 icon-token\">\n                    </div>\n                    <div class=\"col-9 pr-0 pl-0\">\n                      <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                        <div class=\"col-12 pb-0\"></div>\n                        <ng-container *ngIf=\"!loading; else showLoadingTemplate\">\n                          <div class=\"col-12 pb-0\" *ngIf=\"chainxAccount.balances != null; else nanTemplate\">{{ (chainxAccount.balances.ReservedStakingRevocation / chainxAccountService.divisor) | currency:'':'':'1.2-8' }}</div>\n                        </ng-container>\n                      </div>\n                      <div class=\"row qlc-table-row-white sub-page pt-0\">\n                        <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- SEND FORM -->\n            <div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n              <div class=\"content-box-white h-auto mt-2 pb-2 pl-2 pr-2\">\n                <div class=\"container ml-1 pr-3 pl-3\">\n                  <div *ngIf=\"!chainxAccounts.length\" class=\"row defaultTable content\">\n                    <div class=\"col-12 text-center\">\n                      {{ 'NO_WALLET_CONFIGURED' | translate}}<a routerLink=\"/createwallet\">{{ 'NO_WALLET_CONFIGURED_CLICK' | translate }}</a>\n                    </div>\n                  </div>\n                  <div *ngIf=\"chainxAccounts.length\" class=\"row defaultTable sendTokens\">\n                    <div class=\"col-12\">\n                      <div class=\"row rowContent mb-5\">\n                        <div class=\"col-md-2 dataName pb-3 pb-md-0 form-label-custom-2\">{{ 'SEND_TOKENS_TAB.amount' | translate }}</div>\n                        <div class=\"col-md-10\">\n                          <div class=\"row align-items-top\">\n                            <div class=\"col-md-6 pb-3 pb-md-0\">\n                              <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                  <div class=\"input-group-text \">\n                                    PCX\n                                  </div>\n                                </div>\n                                <input\n                                  type=\"text\"\n                                  class=\"form-control inlineForm\"\n                                  [(ngModel)]=\"amount\"\n                                  placeholder=\"{{ 'SEND_TOKENS_TAB.amount_placeholder' | translate }}\"\n                                  onfocus=\"this.placeholder = ''\"\n                                  (change)=\"checkAmount()\"\n                                  style=\"height: 42.5px !important;\"\n                                />\n                                <div class=\"input-group-append\">\n                                  <a (click)=\"setMaxAmount()\" class=\"chainx\">\n                                    <div class=\"input-group-text maxLink chainx\">{{ 'SEND_TOKENS_TAB.max' | translate }}</div>\n                                  </a>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                              <div class=\"row align-items-top\">\n                                <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">{{ 'BALANCE' | translate }}</div>\n                                <div class=\"col-md-9 \">\n                                  <div class=\"row\">\n                                    <ng-container *ngIf=\"!loading; else showLoadingBalanaceTemplate\">\n                                      <div class=\"col-6 pr-0 balance\" *ngIf=\"chainxAccount.balances != null; else nanBalanceTemplate\">\n                                        {{ (chainxAccount.balances.Free / chainxAccountService.divisor) | currency:'':'':'1.2-8' }}\n                                      </div>\n                                    </ng-container>\n                                    <div class=\"col-6 pl-0 text-right fiat\">(-)</div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"row align-items-top pt-3 pt-md-2\">\n                            <div class=\"col-md-6 d-none d-md-block\">\n                              <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                  <div class=\"input-group-text\">USD/$</div>\n                                </div>\n                                <input\n                                  type=\"text\"\n                                  class=\"form-control inlineForm2\"\n                                  placeholder=\"{{ 'SEND_TOKENS_TAB.amount_placeholder' | translate }}\"\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-md-2 dataName pb-3 pb-md-0 form-label-custom-2\">\n                          {{ 'SEND_TOKENS_TAB.from_account' | translate }}\n                        </div>\n                        <div class=\"col-md-10\">\n                          <div class=\"form-group\">\n                            <select class=\"custom-select\" [(ngModel)]=\"accountFrom\" (change)=\"selectAccount()\">\n                              <option *ngFor=\"let account of chainxAccounts\" [value]=\"account.id\">{{ account.addressBookName ? account.addressBookName+' - ' : '' }} {{ account.id }}</option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-md-2 dataName pb-3 pb-md-0 form-label-custom-2\">\n                          {{ 'SEND_TOKENS_TAB.to_account' | translate }}\n                        </div>\n                        <div class=\"col-md-10 text-left text-truncate\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"custom-select contacts\"\n                              [(ngModel)]=\"accountToBook\"\n                              (change)=\"selectFromBook()\">\n                              <option [value]=\"\"></option>\n                              <ng-container *ngFor=\"let account of chainxAccounts\">\n                                <option [value]=\"account.id\" *ngIf=\"account.id != accountFrom\">{{ account.addressBookName ? account.addressBookName+' - ' : '' }} {{ account.id }}</option>\n                              </ng-container>\n                            </select> <input\n                            type=\"text\"\n                            class=\"form-control toaccount\"\n                            placeholder=\"{{ 'SEND_TOKENS_TAB.to_account_placeholder' | translate }}\"\n                            onfocus=\"this.placeholder = ''\"\n                            [(ngModel)]=\"accountToName +''+ accountTo\"\n                          />\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-md-2 dataName pb-3 pb-md-0 form-label-custom-2\">\n                          MEMO\n                        </div>\n                        <div class=\"col-md-10\">\n                          <div class=\"form-group\">\n                            <input\n                              type=\"text\"\n                              class=\"form-control inlineForm3\"\n                              placeholder=\"Memo\"\n                              onfocus=\"this.placeholder = ''\"\n                              [(ngModel)]=\"memo\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row rowAmount pl-3 pl-sm-3 pl-sm-3 pr-3 pr-sm-3 pr-sm-3\">\n                        <div class=\"col-md-2\"></div>\n                        <div class=\"col-lg-5 col-md-4 col-sm-12 col-12 pl-0 pr-0 pl-md-2 pr-md-2\">\n                          <button type=\"submit\" class=\"btn btn-primary chainx-background-light\" *ngIf=\"chainxAccount.balances !== null\" (click)=\"sendTransaction()\" style=\"min-width:100%;\">\n                            {{ 'SEND_TOKENS_TAB.send' | translate }}\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- END SEND FORM-->\n<div class=\"send-screen-2 qlc-content-home qlc-after-submenu\" *ngIf=\"activePanel == 'confirm'\">\n  <!-- SEND FORM -->\n  <div class=\"container mt-0 qlc-content-first\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0\">\n        <!-- TITLE -->\n        <div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n          <div class=\"content-title\">\n            <h1>{{ 'SEND_TOKENS_TAB.confirm_transaction' | translate }}</h1>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container\">\n    <div class=\"row confirmTransaction\">\n      <!-- ADDRESS -->\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n        <div class=\"content-box-white h-auto pb-5\">\n          <div class=\"container mb-3\">\n            <div class=\"row align-items-center fromText pt-5\">\n              <div class=\"col-12 text-label\">{{ 'SEND_TOKENS_TAB.you_are_about_to_send' | translate }}</div>\n            </div>\n            <div class=\"row align-items-center mt-2\">\n              <div class=\"col-12 sum\">\n                <span class=\"chainx\">{{ amount }} PCX</span>\n              </div>\n            </div>\n            <div class=\"row align-items-center\">\n            </div>\n            <div class=\"row transfer pb-0 mb-0\">\n              <div class=\"col-lg-6 text-center pt-4 pb-0\">\n                <div class=\"text-label pb-2\">{{ 'SEND_TOKENS_TAB.from_account' | translate }}</div>\n                <div class=\"pl-5 pr-5 text-truncate pt-1 pb-1\">\n                  <a [routerLink]=\"'/wallets/chainx/account/' + accountFrom\" class=\"name\"\n                  ><span *ngIf=\"accountFromName\">{{ accountFromName }}</span\n                  ><span *ngIf=\"!accountFromName\">{{ accountFrom }}</span></a\n                  >\n                </div>\n                <div class=\"pl-5 pr-5 pb-4\">\n                  <a [routerLink]=\"'/wallets/chainx/account/' + accountFrom\" class=\"address\">{{ accountFrom }}</a>\n                </div>\n                <div class=\"pt-2 text-bold negative_change\">-{{ amount }} PCX</div>\n                <div class=\"text-label pb-3\">{{ 'SEND_TOKENS_TAB.amount_to_send' | translate }}</div>\n              </div>\n              <div class=\"col-lg-6 text-center pt-4 pb-4\">\n                <div class=\"text-label pb-2\">{{ 'SEND_TOKENS_TAB.to_account' | translate }}</div>\n                <div class=\"pl-5 pr-5 text-truncate pt-1 pb-1\">\n                  <a [routerLink]=\"'/wallets/chainx/account/' + accountTo\" class=\"name\"\n                  ><span *ngIf=\"accountToName\">{{ accountToName }}</span\n                  ><span *ngIf=\"!accountToName\">{{ accountTo }}</span></a\n                  >\n                </div>\n                <div class=\"pl-5 pr-5 pb-4\">\n                  <a [routerLink]=\"'/wallets/chainx/account/' + accountTo\" class=\"address\">{{ accountTo }}</a>\n                </div>\n                <div class=\"pt-2 text-bold positive_change\">+{{ amount }} PCX</div>\n                <div class=\"text-label pb-3\">{{ 'SEND_TOKENS_TAB.amount_to_receive' | translate }}</div>\n              </div>\n            </div>\n            <div class=\"row align-items-center mt-0 mb-0\">\n              <div class=\"col-12 sum\">\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-lg-6 offset-lg-3 text-center pt-2 pb-2\">\n                <div class=\"text-label pb-2\">MEMO</div>\n                <div class=\"pl-5 pr-5 pt-1 pb-1\" style=\"font-weight: normal !important;\">\n                  {{ memo }}\n                </div>\n              </div>\n            </div>\n            <div class=\"row align-items-center mt-0 mb-4\">\n              <div class=\"col-12 sum\">\n              </div>\n            </div>\n            <div class=\"row align-items-center justify-content-center rowDefault rowButtons pl-4 pr-4\">\n              <div class=\"col-lg-2 col-md-4 col-sm-5 col-12 px-0 pr-sm-2 text-left text-truncate mobile-break mb-2\">\n                <button type=\"submit\" class=\"btn-primary btn-red btn-danger w-100\" style=\"min-width:auto; padding-left:0px; padding-right:0px;\" [disabled]=\"alreadySending\" (click)=\"activePanel = 'send'\">\n                  {{ 'CANCEL' | translate }}\n                </button>\n              </div>\n              <div class=\"col-lg-2 col-md-4 col-sm-5 col-12 px-0 px-sm-2 text-left text-truncate mobile-break mb-2\">\n                <button type=\"submit\" class=\"btn btn-primary btn-blue w-100\" style=\"min-width:auto; padding-left:0px; padding-right:0px;\" *ngIf=\"!confirmingTransaction\" (click)=\"confirmTransaction()\">\n                  {{ 'SEND_TOKENS_TAB.confirm_send' | translate }}\n                </button>\n                <button type=\"submit\" class=\"btn btn-primary btn-blue w-100\" [disabled]=\"alreadySending\" style=\"min-width:auto; padding-left:0px; padding-right:0px;\" *ngIf=\"confirmingTransaction\">\n                  {{ 'LOADING' | translate }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"send-screen-2 qlc-content-home qlc-after-submenu\" *ngIf=\"activePanel == 'success'\">\n  <!-- SEND FORM -->\n  <div class=\"container mt-0 qlc-content-first\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0\">\n        <!-- TITLE -->\n        <div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n          <div class=\"content-title\">\n            <h1>Transaction successful</h1>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container\">\n    <div class=\"row confirmTransaction\">\n      <!-- ADDRESS -->\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n        <div class=\"content-box-white h-auto pb-5\">\n          <div class=\"container mb-3\">\n            <div class=\"row align-items-center fromText pt-5\">\n              <div class=\"col-12 text-label\">Transaction hash</div>\n            </div>\n            <div class=\"row align-items-center mt-2\">\n              <div class=\"col-12 sum\">\n                <span><a href=\"{{ chainxAccountService.getExplorer() }}/txs/{{ txHash }}\" target=\"_blank\">{{ txHash  }}</a></span>\n              </div>\n            </div>\n            <div class=\"row align-items-center justify-content-center rowDefault rowButtons pl-4 pr-4 mt-5\">\n              <div class=\"col-lg-2 col-md-4 col-sm-5 col-12 px-0 pr-sm-2 text-left text-truncate mobile-break mb-2\">\n                <button type=\"submit\" class=\"btn-primary btn-blue w-100\" style=\"min-width:auto; padding-left:0px; padding-right:0px;\" (click)=\"activePanel = 'send'\">\n                  Back to send\n                </button>\n              </div>\n              <div class=\"col-lg-2 col-md-4 col-sm-5 col-12 px-0 px-sm-2 text-left text-truncate mobile-break mb-2\">\n                <button type=\"submit\" class=\"btn btn-primary btn-blue w-100\" style=\"min-width:auto; padding-left:0px; padding-right:0px;\" routerLink=\"/wallets\">\n                  My wallets\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #nanTemplate>\n  <div class=\"col-12 pb-0\">NaN</div>\n</ng-template>\n<ng-template #nanBalanceTemplate>\n  <div class=\"col-6 pr-0 balance\">Nan</div>\n</ng-template>\n<ng-template #showLoadingTemplate>\n  <div class=\"col-12 pb-0\">\n    <img src=\"assets/img/preloaders/preloader-black-38px.svg\" style=\"margin-top:-2px;width:24px;height:auto;opacity:0.65;\">\n  </div>\n</ng-template>\n<ng-template #showLoadingBalanaceTemplate>\n  <div class=\"col-6 pb-0 balance\">\n    <!--<div class=\"lds-dual-ring-small\"></div>-->\n    <img src=\"assets/img/preloaders/preloader-black-38px.svg\" style=\"margin-top:-6px;width:16px;height:auto;opacity:0.65;\">\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddressBookService } from '../../../services/address-book.service';\nimport { ChainxAccountService } from '../../../services/chainx-account.service';\nimport { NotificationService } from '../../../services/notification.service';\nimport { WalletService } from '../../../services/wallet.service';\nimport { CurrencyPipe } from '@angular/common';\nimport BigNumber from 'bignumber.js';\nimport { NoCommaPipe } from '../../../pipes/no-comma.pipe';\n\n@Component({\n  selector: 'app-chainx-send',\n  templateUrl: './chainx-send.component.html',\n  styleUrls: ['./chainx-send.component.scss'],\n  providers: [CurrencyPipe, NoCommaPipe]\n})\nexport class ChainxSendComponent implements OnInit {\n  chainxAccounts = this.walletService.wallet.chainxAccounts;\n  chainxAccount = {\n    id: '',\n    addressBookName: null,\n    balances: null,\n    wif: null\n  };\n  activePanel = 'send';\n  amount = null;\n  amountFiat?: number;\n  accountFrom = '';\n  accountFromName = '';\n  accountTo = '';\n  accountToBook = '';\n  accountToName = '';\n  memo = '';\n  txHash = '';\n  confirmingTransaction = false;\n  alreadySending = false;\n  loading = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private currencyPipe: CurrencyPipe,\n    private addressBookService: AddressBookService,\n    private notificationService: NotificationService,\n    private walletService: WalletService,\n    public chainxAccountService: ChainxAccountService,\n    public noCommaPipe: NoCommaPipe\n  ) {\n  }\n\n  ngOnInit() {\n    this.accountFrom = this.route.snapshot.params.address;\n\n    if (!this.accountFrom) {\n      this.accountFrom = this.chainxAccounts[0].id;\n    }\n\n    this.loadAccount();\n  }\n\n  async loadAccount(refresh = false) {\n    let account = this.chainxAccounts.find(a => a.id === this.route.snapshot.params.address);\n\n    if (account === undefined) {\n      account = this.chainxAccounts[0];\n    }\n\n    this.chainxAccount = account;\n    const assets = await this.chainxAccountService.getAssetsByAccount(this.chainxAccount.id);\n\n    for (const asset of assets.data) {\n      this.chainxAccount.balances = asset.details;\n    }\n\n    if (refresh) {\n      this.notificationService.sendInfo('Successfully refreshed.');\n    }\n\n    this.loading = false;\n  }\n\n  checkAmount() {\n    this.amount = this.noCommaPipe.transform(this.amount);\n\n    if (this.chainxAccount.balances === null || !this.amount || Number(this.amount) < 0) {\n      this.amount = 0;\n    } else if (new BigNumber(this.amount * this.chainxAccountService.divisor).gt(new BigNumber(this.chainxAccount.balances.Free))) {\n      this.amount = this.chainxAccount.balances.Free / this.chainxAccountService.divisor;\n    }\n\n    this.transformAmount();\n  }\n\n  private transformAmount() {\n    this.amount = this.currencyPipe.transform(this.amount, '', '', '1.2-8');\n  }\n\n  async selectAccount() {\n    this.chainxAccount = this.chainxAccounts.find(a => a.id === this.accountFrom);\n    const assets = await this.chainxAccountService.getAssetsByAccount(this.chainxAccount.id);\n\n    for (const asset of assets.data) {\n      this.chainxAccount.balances = asset.details;\n    }\n\n    this.amount = null;\n  }\n\n  async confirmTransaction() {\n    if (this.walletService.walletIsLocked()) {\n      return this.notificationService.sendWarning('ERROR wallet locked');\n    }\n\n    this.alreadySending = true;\n    this.confirmingTransaction = true;\n\n    try {\n      const amount = Number(this.noCommaPipe.transform(this.amount)) * this.chainxAccountService.divisor;\n\n      const data = {\n        sender: this.accountFrom,\n        destination: this.accountTo,\n        memo: this.memo,\n        amount\n      };\n\n      const response: any = await this.chainxAccountService.transfer(data);\n\n      this.activePanel = 'success';\n      this.notificationService.sendSuccess(`Transaction was successful.`);\n      this.txHash = response.txHash;\n    } catch (err) {\n      console.log(err);\n\n      if (typeof err.message !== 'undefined') {\n        this.notificationService.sendError(err.message);\n      } else if (typeof err.result !== 'undefined') {\n        this.notificationService.sendError(`Some error occurred: ${err.result}`);\n      }\n    }\n\n    this.confirmingTransaction = false;\n    this.resetFields();\n\n    await this.loadAccount();\n  }\n\n  async sendTransaction() {\n    if (!this.accountFrom) {\n      return this.notificationService.sendWarning('Missing account of sender.');\n    }\n\n    if (!this.accountTo) {\n      return this.notificationService.sendWarning('Missing account of receiver.');\n    }\n\n    if (this.accountFrom === this.accountTo) {\n      return this.notificationService.sendWarning('Receiver account is the same as sender account.');\n    }\n\n    this.amount = this.noCommaPipe.transform(this.amount);\n\n    if (!this.amount || parseFloat(this.amount) === 0) {\n      return this.notificationService.sendWarning('Amount is missing.');\n    }\n\n    this.accountFromName = this.addressBookService.getAccountName(this.accountFrom);\n    this.accountToName = this.addressBookService.getAccountName(this.accountTo);\n\n    this.activePanel = 'confirm';\n  }\n\n  async setMaxAmount() {\n    this.amount = this.chainxAccount.balances === null ? 0 : (this.chainxAccount.balances.Free / this.chainxAccountService.divisor);\n\n    this.transformAmount();\n  }\n\n  selectFromBook() {\n    this.accountTo = this.accountToBook;\n    this.accountToName = this.addressBookService.getAccountName(this.accountTo) || '';\n\n    if (this.accountToName !== '') {\n      this.accountToName += ' - ';\n    }\n  }\n\n  resetFields() {\n    this.amount = null;\n    this.amountFiat = null;\n    this.accountTo = '';\n    this.accountToBook = '';\n    this.accountToName = '';\n    this.memo = '';\n    this.alreadySending = false;\n  }\n}\n","<app-user-submenu></app-user-submenu>\n<!-- CHAIN X STAKING - STEP 01 - DASHBOARD-->\n<div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\" *ngIf=\"step === 1\">\n  <div class=\"row\">\n    <div class=\"col-12 pl-0 pr-0\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <!-- TITLE -->\n          <div class=\"col-md-6 col-12 mt-2 pl-2 pr-2\">\n            <div class=\"content-title\">\n              <h1 style=\"display:inline-block;\">My PCX Stakings</h1>\n            </div>\n          </div>\n          <div class=\"col-md-3 col-12 pl-md-2 pr-md-2 pl-3 pr-3 pb-3\">\n            <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 mr-xl-2 mr-lg-4 mr-md-5 ml-0 w-100\" routerLink=\"/wallets\">\n              BACK TO MY WALLETS\n            </button>\n          </div>\n          <div class=\"col-md-3 col-12 pl-md-2 pr-md-2 pl-3 pr-3 pb-3\">\n            <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 ml-xl-2 ml-lg-4 ml-md-5 ml-0 w-100\" routerLink=\"/staking/chainx/invoke\">\n              INVOKE NEW STAKING\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row pb-4\">\n    <div class=\"col-lg-4 col-md-4 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-tokens-chainx\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">YOUR CURRENT STAKING VOLUME</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\"><span *ngIf=\"nominationTotal; else nanTemplate\">{{ (nominationTotal.staking / chainxAccountService.divisor) | currency:'':'':'1.2-8' }} PCX</span></div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-4 col-md-4 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-tokens-chainx\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">YOUR CURRENT UNFREEZE RESERVED</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\"><span *ngIf=\"nominationTotal; else nanTemplate\">{{ (nominationTotal.unfreezeLocked / chainxAccountService.divisor) | currency:'':'':'1.2-8'}} PCX</span></div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-4 col-md-4 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-voting-chainx\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">TOTAL UNCLAIMED REWARDS</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\"><span *ngIf=\"nominationTotal; else nanTemplate\">{{ (nominationTotal.unclaimed / chainxAccountService.divisor) | currency:'':'':'1.2-8'}} PCX</span></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"nominationRecords.length > 0; else showLoaderTemplate\">\n    <div class=\"row\" *ngFor=\"let nominationRecord of nominationRecords\">\n      <div class=\"col-12 pl-0 pr-0 pt-2\">\n        <!-- LIST -->\n        <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n          <h5><span style=\"display:inline-block;\" *ngIf=\"nominationRecord.name !== null\">{{ nominationRecord.name }} - </span><a href=\"/chainx/account/{{ nominationRecord.address }}\" target=\"_blank\">{{ nominationRecord.address }}</a></h5>\n          <div class=\"content-box-white\">\n            <div class=\"container\">\n              <div class=\"row qlc-table-header pr-4\">\n                <div class=\"col-xl-2 col-lg-2 order-lg-1 col-md-4 order-md-1 col-sm-3 order-sm-3 col-6 order-1 pl-4\">Candidate</div>\n                <div class=\"col-xl-3 col-lg-3 order-lg-2 d-lg-block col-md-2 d-md-none col-sm-12 order-sm-5 d-sm-none col-7 d-none order-6 text-truncate\">Address</div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-3 col-md-2 order-md-3 col-sm-3 order-sm-3 col-4 pr-sm-0 order-5 text-right pr-0\">Current<br>Jackpot</div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-4 col-md-2 order-md-4 d-md-block col-sm-3 order-sm-3 d-sm-none col-6 pr-sm-0 order-2 text-right pr-0\">Your<br>Stakings</div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-5 col-md-2 order-md-5 col-sm-3 order-sm-3 col-4 pr-sm-0 order-3 text-left text-sm-right pl-4\">Unfreeze<br>Reserved</div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-6 col-md-2 order-md-6 col-sm-3 order-sm-3 col-4 pr-sm-0 order-4 text-right\">Unclaimed<br>Rewards</div>\n                <div class=\"col-xl-3 col-lg-3 order-lg-7 d-lg-block col-md-7 order-md-5 d-md-none col-sm-6 order-sm-4 d-sm-none col-12 d-none order-7 pr-sm-0 pr-0 text-right\"></div>\n              </div>\n              <ng-container *ngIf=\"nominationRecord.nominations.length > 0; else noStakings\"><!---->\n                <div class=\"row qlc-table-row qlc-table-row-twolines closed pr-4\" *ngFor=\"let nomination of nominationRecord.nominations\">\n                  <div class=\"col-xl-2 col-lg-2 order-lg-1 col-md-4 order-md-1 col-sm-3 order-sm-1 col-8 order-1 pl-4 pb-0 pr-0\">\n                    <span class=\"qlc-icon icon-candidate-online d-sm-none d-md-inline-block\" title=\"Candidate\"></span> <span class=\"d-inline-block\">\n                        {{ nomination.candidate.name }}\n                      </span>\n                  </div>\n                  <div class=\"col-xl-3 col-lg-3 order-lg-2 pl-lg-2 col-md-8 order-md-2 pl-md-4 col-sm-8 order-sm-5 pl-sm-4 col-12 pl-4 order-6 pb-0 text-truncate\" tooltip=\"{{ nomination.candidateAddress }}\">\n                    <a href=\"https://scan.chainx.org/accounts/{{ nomination[0] }}\" target=\"_blank\">{{ nomination.candidateAddress }}</a>\n                  </div>\n                  <div class=\"col-xl-1 col-lg-1 order-lg-3 col-md-2 order-md-3 col-sm-3 order-sm-4 col-4 order-5 pb-0 pr-sm-0 pr-0 text-right\">\n                    <span tooltip=\"{{ (nomination.jackpot / chainxAccountService.divisor) | currency:'':'':'1.2-8' }}\">{{ (nomination.jackpot / chainxAccountService.divisor) | currency:'':'':'1.2-2' }}</span>\n                  </div>\n                  <div class=\"col-xl-1 col-lg-1 order-lg-4 col-md-2 order-md-4 col-sm-4 order-sm-6 col-4 order-2 pb-0 pr-sm-0 pr-0 text-right\">\n                    <span tooltip=\"{{ (nomination[1].nomination / chainxAccountService.divisor) | currency:'':'':'1.2-8' }}\">{{ (nomination[1].nomination / chainxAccountService.divisor) | currency:'':'':'1.2-2' }}</span>\n                  </div>\n                  <div class=\"col-xl-1 col-lg-1 order-lg-5 col-md-2 order-md-5 col-sm-3 order-sm-2 col-4 order-3 pb-0 pr-sm-0 pl-4 pr-0 text-sm-right text-left\">\n                    <span tooltip=\"{{ (nomination.unfreezeReserved / chainxAccountService.divisor) | currency:'':'':'1.2-8' }}\">{{ (nomination.unfreezeReserved / chainxAccountService.divisor) | currency:'':'':'1.2-2' }}</span>\n                  </div>\n                  <div class=\"col-xl-1 col-lg-1 order-lg-6 col-md-2 order-md-6 col-sm-3 order-sm-3 col-4 order-4 pb-0 pr-sm-0 pr-0 text-right\">\n                    <span tooltip=\"{{ (nomination.unclaimed / chainxAccountService.divisor) | currency:'':'':'1.2-8' }}\">{{ (nomination.unclaimed / chainxAccountService.divisor) | currency:'':'':'1.2-2' }}</span>\n                  </div>\n                  <div class=\"col-xl-3 col-lg-3 order-lg-7 col-md-4 order-md-7 offset-md-0 col-sm-4 offset-sm-8 order-sm-7 col-12 order-7 pb-0 pr-sm-0 pr-0 text-right\">\n                    <button type=\"submit\" (click)=\"invokeChange(nominationRecord.address, nomination.candidate, nomination[1].nomination)\" class=\"btn btn-primary float-right ml-1 mr-0 pl-3 pr-3 pt-1 pb-1\" style=\"height:auto; min-height:auto; min-width:auto !important; margin-top:-6px;\">\n                      CHANGE\n                    </button>\n                    <button type=\"submit\" (click)=\"claim(nominationRecord.address, nomination.candidateAddress)\" [disabled]=\"alreadyClaiming\" class=\"btn btn-primary float-right ml-1 mr-1 pl-3 pr-3 pt-1 pb-1\" style=\"height:auto; min-height:auto; min-width:auto !important; margin-top:-6px;\">\n                      CLAIM\n                    </button>\n                    <button type=\"submit\" (click)=\"unfreezeDetails(nominationRecord.address, nomination[0])\" [disabled]=\"nomination[1].revocations.length === 0\" class=\"btn btn-primary float-right ml-0 mr-1 pl-3 pr-3 pt-1 pb-1\" style=\"height:auto; min-height:auto; min-width:auto !important; margin-top:-6px;\">\n                      UNFREEZE\n                    </button>\n                  </div>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</div>\n<ng-template #nanTemplate>\n  <div class=\"col-12 pb-0\">\n    <img src=\"assets/img/preloaders/preloader-white-38px.svg\" style=\"margin-left:-16px; margin-top:0px;width:24px;height:auto;\">\n  </div>\n</ng-template>\n<ng-template #noStakings>\n  <div class=\"col-12 pb-0 text-center pt-4 pb-4\">\n    You have currently no active stakings. <a routerLink=\"/staking/chainx/invoke\" class=\"color-chainx\">Invoke new staking</a>\n  </div>\n</ng-template>\n<!-- CHAIN X STAKING - STEP 02 - CANDIDATES -->\n<div class=\"container mt-4 mb-2 qlc-content-home qlc-after-submenu\" *ngIf=\"step === 2\">\n  <div class=\"row\">\n    <!-- TITLE -->\n    <div class=\"col-md-9 col-12 mt-2 pl-2 pr-2\">\n      <div class=\"content-title\">\n        <h1 style=\"display:inline-block;\">Select your ChainX Candidate</h1>\n<!--        <span style=\"width:16px;height:16px;background:#8fcfef;display:inline-block;margin-left:26px;margin-right:8px;\"></span>-->\n<!--        <span style=\"display:inline-block;vertical-align:top;height:16px;margin-top:3px;\">Senator</span> -->\n        <span style=\"width:16px;height:16px;background:#f9de92;display:inline-block;margin-left:16px;margin-right:8px;\"></span>\n        <span style=\"display:inline-block;vertical-align:top;height:16px;margin-top:3px;\">Trustee</span>\n      </div>\n    </div>\n    <div class=\"col-md-3 col-12 pl-md-2 pr-md-2 pl-3 pr-3 pb-3\">\n      <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 mr-xl-0 mr-lg-0 mr-md-5 ml-0 w-100\" routerLink=\"/staking/chainx\">\n        BACK TO MY STAKINGS\n      </button>\n    </div>\n    <ng-container *ngIf=\"!loading; else showLoaderTemplate\">\n      <!-- CANDIDATES LIST -->\n      <!-- CANDIDATE ITEM START -->\n      <ng-container *ngFor=\"let candidate of candidates; let i = index\">\n        <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-0 mb-2\">\n          <div class=\"content-box-white cursor-pointer popover-box\">\n            <div style=\"position:absolute; width:30px;height:8px;display:inline-block; bottom:10px; right:10px;\">\n<!--              <span tooltip=\"Senator\" style=\"width:8px;height:8px;background:#8fcfef;display:block;float:right;margin-left:6px;\"></span> -->\n              <span tooltip=\"Trustee\" *ngIf=\"candidate.isTrustee.length > 0\" style=\"width:8px;height:8px;background:#f9de92;display:block;float:right;margin-left:6px;\"></span>\n            </div>\n            <div class=\"container\">\n              <div class=\"row\">\n                <div class=\"col-4 mt-3\">\n                  <!--                  <span *ngIf=\"checkImage(); then logo; else default;\">-->\n                  <img src=\"https://chainx-validators-logo.oss-cn-hangzhou.aliyuncs.com/{{ candidate.name.toLowerCase() }}.png\" onerror=\"this.src='assets/img/chainx-node-default.png'\" [style.display]=\"(defaultLogo) ? 'none' : 'block' \" class=\"w-100 icon-token\">\n                  <!--                  </span>-->\n                </div>\n                <div class=\"col-8 pr-0 pl-0\">\n                  <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                    <div class=\"col-12 pb-2\">{{ candidate.name }}</div>\n                  </div>\n                  <div class=\"row qlc-table-row-white sub-page pt-0 pb-3\">\n                    <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">Bonded:</span> {{ (candidate.selfVote / chainxAccountService.divisor) | currency:'':'':'1.0-0' }}</div>\n                    <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">Total:</span> {{ (candidate.totalNomination / chainxAccountService.divisor) | currency:'':'':'1.0-0' }}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"popover-candidate\">\n              <div class=\"container pl-0 pr-0 pt-2 pb-0\">\n                <div class=\"row pl-0 pr-0 pb-0\">\n                  <div class=\"col-5 candidate-left pr-0\"><span class=\"l\">Bonded Rank</span></div>\n                  <div class=\"col-7 candidate-right text-truncate\">{{ (i+1) }}</div>\n                  <div class=\"col-5 candidate-left pr-0\"><span class=\"l\">Type</span></div>\n                  <div class=\"col-7 candidate-right text-truncate\" *ngIf=\"candidate.isValidator; else syncModeTemplate\">Validator</div>\n                  <div class=\"col-5 candidate-left pr-0\"><span class=\"l\">Node Duty</span></div>\n                  <div class=\"col-7 candidate-right text-truncate\"><span *ngIf=\"candidate.isTrustee.length > 0\">Trustee, </span><span>Member</span></div>\n                  <div class=\"col-5 candidate-left pr-0\"><span class=\"l\">Website</span></div>\n                  <div class=\"col-7 candidate-right text-truncate\"><a href=\"http://{{ candidate.url }}\" target=\"_blank\">{{ candidate.url }}</a></div>\n                  <div class=\"col-5 candidate-left pr-0\"><span class=\"l\">Account</span></div>\n                  <div class=\"col-7 candidate-right text-truncate\" style=\"padding-right:20px;\"><a href=\"https://scan.chainx.org/accounts/{{ candidate.account }}\" target=\"_blank\">{{ chainxAccountService.getPublicAddress(candidate.account) }}</a></div>\n                  <div class=\"col-5 candidate-left pr-0\"><span class=\"l\">Jackpot Address</span></div>\n                  <div class=\"col-7 candidate-right text-truncate\" style=\"padding-right:20px;\"><a href=\"https://scan.chainx.org/accounts/{{ candidate.jackpotAccount }}\" target=\"_blank\">{{ chainxAccountService.getPublicAddress(candidate.jackpotAccount) }}</a></div>\n                  <div class=\"col-5 candidate-left pr-0\"><span class=\"l\">Jackpot Balance</span></div>\n                  <div class=\"col-7 candidate-right text-truncate\" style=\"padding-right:20px;\">{{ (candidate.jackpot / chainxAccountService.divisor) | currency:'':'':'1.0-8' }}</div>\n                  <div class=\"col-5 candidate-left pr-0\"><span class=\"l\">Validator Brief</span></div>\n                  <div class=\"col-7 candidate-right\" style=\"padding-right:20px;\">{{ candidate.about || '/' }}</div>\n                  <div class=\"col-10 offset-1\">\n                    <button type=\"submit\" class=\"btn btn-primary chainx-background mt-3 mb-2 w-100\" *ngIf=\"(candidate.selfVote * 10) > candidate.totalNomination; else disableVoteTemplate\" style=\"max-width: 100% !important;min-width: 100% !important;\" (click)=\"vote(candidate)\">Vote</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ng-template #logo>\n              <div class=\"col-7 candidate-right text-truncate\">\n                <img src=\"https://chainx-validators-logo.oss-cn-hangzhou.aliyuncs.com/{{ candidate.name.toLowerCase() }}.png\" class=\"w-100 icon-token\">\n              </div>\n            </ng-template>\n            <ng-template #default>\n              <img src=\"assets/img/chainx-node-default.png\" class=\"w-100 icon-token\">\n            </ng-template>\n          </div>\n        </div>\n      </ng-container>\n      <!-- CANDIDATE ITEM END -->\n    </ng-container>\n  </div>\n</div>\n<ng-template #syncModeTemplate>\n  <div class=\"col-7 candidate-right text-truncate\">Sync mode</div>\n</ng-template>\n<ng-template #disableVoteTemplate>\n  <button type=\"submit\" class=\"btn btn-primary chainx-background mt-3 mb-2 w-100\" style=\"max-width: 100% !important;min-width: 100% !important;\" disabled>Node is full</button>\n</ng-template>\n<ng-template #showLoaderTemplate>\n  <!--<img src=\"assets/img/Loader.svg\" style=\"margin-left: 40%; margin-top: 20%\"/>-->\n  <img src=\"assets/img/preloaders/preloader-chainx-64px.svg\" style=\"margin-left: calc(50% - 32px); margin-top: 10%;\">\n</ng-template>\n<ng-template #showLoadingTemplate>\n<!--  <div class=\"col-12 pb-0\">-->\n    <!--<div class=\"lds-dual-ring\"></div>-->\n    <img src=\"assets/img/preloaders/preloader-black-38px.svg\" style=\"margin-top:-2px;width:24px;height:auto;opacity:0.65;\">\n<!--  </div>-->\n</ng-template>\n<!-- CHAIN X STAKING - STEP 02 - INVOKE -->\n<div class=\"stake-screen-1 qlc-content-home qlc-after-submenu\" *ngIf=\"step === 3\">\n  <!-- TITLE -->\n  <div class=\"container mt-0 qlc-content-first\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <!-- TITLE -->\n            <div class=\"col-md-6 col-12 mt-2 pl-md-2 pr-md-2\">\n              <div class=\"content-title\">\n                <h1>Initiate New Staking - {{ candidate.name }}</h1>\n              </div>\n            </div>\n            <div class=\"col-md-3 offset-md-3 col-12 pl-md-2 pr-md-2\">\n              <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0\" (click)=\"backToNominates()\">\n                Back to Candidates\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container accounts\">\n    <div class=\"row\">\n      <!-- FORM -->\n      <div class=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 pb-3 ng-invalid-ignore\">\n        <div class=\"container pl-0 pr-0\">\n          <div class=\"row pl-0 pr-0\">\n            <div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n              <div class=\"content-box-white h-auto mt-0 pb-2 pl-2 pr-2 pt-0\">\n                <div class=\"container ml-1 pr-3 pl-3 pt-0 mt-0\">\n                  <div class=\"row defaultTable sendTokens mt-1\">\n                    <div class=\"col-12\">\n                      <div class=\"row pt-0\" style=\"border-bottom: 1px solid #edeef4;\">\n                        <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                          AMOUNT TO STAKE\n                        </div>\n                        <div class=\"col-md-5 text-left\">\n                          <div class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                              <div class=\"input-group-text \">\n                                PCX\n                              </div>\n                            </div>\n                            <input\n                              type=\"text\"\n                              class=\"form-control inlineForm\"\n                              [(ngModel)]=\"amount\"\n                              placeholder=\"Stake amount\"\n                              onfocus=\"this.placeholder = ''\"\n                              (change)=\"checkAmount()\"\n                              style=\"height: 42.5px !important;\"\n                            />\n                            <div class=\"input-group-append\">\n                              <a (click)=\"setMaxAmount()\">\n                                <div class=\"input-group-text maxLink\">Max</div>\n                              </a>\n                            </div>\n                          </div>\n                          <p style=\"max-width:100%;font-size:11px;padding-left:16px;padding-top:8px;\" *ngIf=\"chainxAccount.balances !== null; else noBalanceTemplate\">The maximum amount you can stake is {{ (((candidate.selfVote * 10)-candidate.totalNomination) / chainxAccountService.divisor) | currency:'':'':'1.2-8'}} PCX</p>\n                          <p style=\"max-width:100%;font-size:12px;padding-left:16px;padding-top:8px;color:red\" *ngIf=\"stakingWarning\">A node can only receive up to 10 times the votes it bonded, please contact the node to increase the bonded votes. <a href=\"https://scan.chainx.org/referendum/finished\" target=\"_blank\">More info (Proposal 01)</a></p>\n                        </div>\n                        <div class=\"col-md-4 dataName pb-3 pb-md-0 form-label-custom-2\">\n                          BALANCE:\n                          <ng-container *ngIf=\"chainxAccount.balances; else showLoadingTemplate\">\n                            {{ (chainxAccount.balances.Free / chainxAccountService.divisor) | currency:'':'':'1.2-8'}} PCX\n                          </ng-container>\n                        </div>\n                      </div>\n                      <div class=\"row pt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n                        <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                          STAKE FROM\n                        </div>\n                        <div class=\"col-md-9 text-left\">\n                          <div class=\"form-group\">\n                            <select class=\"custom-select\" [(ngModel)]=\"accountFrom\" (change)=\"selectAccount()\">\n                              <option *ngFor=\"let account of chainxAccounts\" [value]=\"account.id\">{{ account.addressBookName ? account.addressBookName+' - ' : '' }} {{ account.id }}</option>\n                            </select>\n                            <p style=\"max-width:100%;font-size:11px;padding-left:16px;padding-top:8px;\">Select your PCX wallet you want to stake PCX from</p>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row pt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n                        <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                          MEMO\n                        </div>\n                        <div class=\"col-md-9 text-left\">\n                          <div class=\"form-group\">\n                            <input class=\"form-control w-100 h-25 inlineForm3\" [(ngModel)]=\"memo\"/>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row rowAmount pl-3 pl-sm-3 pl-sm-3 pr-3 pr-sm-3 pr-sm-3 pt-0 mt-0 pb-3 pt-4\">\n                        <div class=\"col-md-3\"></div>\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 col-12 pl-0 pr-0 pl-md-2 pr-md-2\">\n                          <button (click)=\"invoke()\" [disabled]=\"alreadyInvoking || stakingWarning\" type=\"submit\" class=\"btn btn-primary\" style=\"min-width:100%;\">\n                            VOTE & INVOKE STAKING\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- EXPLAINER -->\n      <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n        <div class=\"content-box-blue h-100 pb-3\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">ABOUT STAKING PCX</div>\n            </div>\n            <div class=\"row qlc-table-row-blue mt-3 qlc-stake-explainer pr-3\">\n              <hr style=\"height:1px;width:100%;border:none;background:#eeddad;display:block;\"/>\n              <p>\n                <span style=\"color:#eeddad;margin-top:4px;display:inline-block;\">Minimum Amount:</span><br>No limit<br>\n                <span style=\"color:#eeddad;margin-top:4px;display:inline-block;padding-top:10px;\">Maximum Amount:</span><br>The maximum amount is 10 times the votes a node has bonded (check the available amount)<br>\n\n                <span style=\"color:#eeddad;margin-top:4px;display:inline-block;padding-top:10px;\">Minimum Staking Period:</span><br>No limit. You can revoke your staking anytime. Once you do, your PCX stays frozen for another 3 days before you can unfreeze them.<br>\n\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #noBalanceTemplate>\n  <p style=\"max-width:100%;font-size:11px;padding-left:16px;padding-top:8px;\">You have no balance</p>\n</ng-template>\n<!-- STAKINGS LIST -->\n<!-- CHAIN X STAKING - CHANGE -->\n<div class=\"stake-screen-1 qlc-content-home qlc-after-submenu\" *ngIf=\"step === 4\">\n  <!-- TITLE -->\n  <div class=\"container mt-0 qlc-content-first\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <!-- TITLE -->\n            <div class=\"col-md-6 col-12 mt-2 pl-md-2 pr-md-2\">\n              <div class=\"content-title\">\n                <h1>Change Staking</h1>\n              </div>\n            </div>\n            <div class=\"col-md-3 offset-md-3 col-12 pl-md-2 pr-md-2\">\n              <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0\" (click)=\"step = 1\">\n                Back to My Stakings\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container accounts\">\n    <div class=\"row\">\n      <!-- FORM -->\n      <div class=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 pb-3 ng-invalid-ignore\">\n        <div class=\"container pl-0 pr-0\">\n          <div class=\"row pl-0 pr-0\">\n            <div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n              <div class=\"content-box-white h-auto mt-0 pb-2 pl-2 pr-2 pt-0\">\n                <div class=\"container ml-1 pr-3 pl-3 pt-0 mt-0\">\n                  <div class=\"row pt-5\" style=\"border-bottom: 1px solid #edeef4;\">\n                    <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\" style=\"margin-top:-14px;\">\n                      WHAT'S YOUR CHANGE\n                    </div>\n                    <div class=\"col-md-9 text-left\">\n                      <div class=\"form-group\">\n                        <input type=\"radio\" name=\"stakingChange\" [(ngModel)]=\"changeStaking\" value=\"increase\" id=\"c1\"><label for=\"c1\" style=\"padding-left:10px;padding-right:30px;\"> Increase</label> <input type=\"radio\" name=\"stakingChange\" [(ngModel)]=\"changeStaking\" value=\"decrease\" id=\"c2\"><label for=\"c2\" style=\"padding-left:10px;padding-right:30px;\"> Decrease</label>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row defaultTable sendTokens mt-1\" *ngIf=\"changeStaking == 'increase'\">\n                    <div class=\"col-12\">\n                      <div class=\"row pt-0\" style=\"border-bottom: 1px solid #edeef4;\">\n                        <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                          AMOUNT TO INCREASE\n                        </div>\n                        <div class=\"col-md-5 text-left\">\n                          <div class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                              <div class=\"input-group-text \">\n                                PCX\n                              </div>\n                            </div>\n                            <input\n                              type=\"text\"\n                              class=\"form-control inlineForm\"\n                              [(ngModel)]=\"amount\"\n                              placeholder=\"Increase amount\"\n                              onfocus=\"this.placeholder = ''\"\n                              (change)=\"checkAmount()\"\n                              style=\"height: 42.5px !important;\"\n                            />\n                            <div class=\"input-group-append\">\n                              <a (click)=\"setMaxAmount()\">\n                                <div class=\"input-group-text maxLink\">Max</div>\n                              </a>\n                            </div>\n                          </div>\n                          <p style=\"max-width:100%;font-size:11px;padding-left:16px;padding-top:8px;\">The maximum amount you can increase is {{ (((candidate.selfVote * 10)-candidate.totalNomination) / chainxAccountService.divisor) | currency:'':'':'1.2-8'}} PCX</p>\n                          <p style=\"max-width:100%;font-size:12px;padding-left:16px;padding-top:8px;color:red\" *ngIf=\"stakingWarning\">A node can only receive up to 10 times the votes it bonded, please contact the node to increase the bonded votes. <a href=\"https://scan.chainx.org/referendum/finished\" target=\"_blank\">More info (Proposal 01)</a></p>\n                        </div>\n                        <div class=\"col-md-4 dataName pb-3 pb-md-0 form-label-custom-2\">\n                          BALANCE:\n                          <ng-container *ngIf=\"chainxAccount.balances; else showLoadingTemplate\">\n                            {{ (chainxAccount.balances.Free / chainxAccountService.divisor) | currency:'':'':'1.2-8'}} PCX\n                          </ng-container>\n                        </div>\n                      </div>\n                      <div class=\"row pt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n                        <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                          MEMO\n                        </div>\n                        <div class=\"col-md-9 text-left\">\n                          <div class=\"form-group\">\n                            <input class=\"form-control w-100 h-25 inlineForm3\" [(ngModel)]=\"memo\"/>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row rowAmount pl-3 pl-sm-3 pl-sm-3 pr-3 pr-sm-3 pr-sm-3 pt-0 mt-0 pb-3 pt-4\">\n                        <div class=\"col-md-3\"></div>\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 col-12 pl-0 pr-0 pl-md-2 pr-md-2\">\n                          <button (click)=\"invoke()\" [disabled]=\"alreadyInvoking\" type=\"submit\" class=\"btn btn-primary\" style=\"min-width:100%;\">\n                            INCREASE STAKING\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row defaultTable sendTokens mt-1\" *ngIf=\"changeStaking == 'decrease'\">\n                    <div class=\"col-12\">\n                      <div class=\"row pt-0\" style=\"border-bottom: 1px solid #edeef4;\">\n                        <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                          AMOUNT TO DECREASE\n                        </div>\n                        <div class=\"col-md-6 text-left\">\n                          <div class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                              <div class=\"input-group-text \">\n                                PCX\n                              </div>\n                            </div>\n                            <input\n                              type=\"text\"\n                              class=\"form-control inlineForm\"\n                              [(ngModel)]=\"amount\"\n                              placeholder=\"Decrease amount\"\n                              onfocus=\"this.placeholder = ''\"\n                              (change)=\"checkAmount('revoke')\"\n                              style=\"height: 42.5px !important;\"\n                            />\n                            <div class=\"input-group-append\">\n                              <a (click)=\"setMaxAmount('revoke')\">\n                                <div class=\"input-group-text maxLink\">Max</div>\n                              </a>\n                            </div>\n                          </div>\n                          <p style=\"max-width:100%;font-size:11px;padding-left:16px;padding-top:8px;\">The maximum amount you can decrease is {{ (candidateStaked / chainxAccountService.divisor) | currency:'':'':'1.2-8' }} PCX</p>\n                        </div>\n                      </div>\n                      <div class=\"row pt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n                        <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                          MEMO\n                        </div>\n                        <div class=\"col-md-9 text-left\">\n                          <div class=\"form-group\">\n                            <input class=\"form-control w-100 h-25 inlineForm3\" [(ngModel)]=\"memo\"/>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row rowAmount pl-3 pl-sm-3 pl-sm-3 pr-3 pr-sm-3 pr-sm-3 pt-0 mt-0 pb-3 pt-4\">\n                        <div class=\"col-md-3\"></div>\n                        <div class=\"col-lg-6 col-md-6 col-sm-12 col-12 pl-0 pr-0 pl-md-2 pr-md-2\">\n                          <button (click)=\"revoke()\" [disabled]=\"alreadyInvoking\" type=\"submit\" class=\"btn btn-primary\" style=\"min-width:100%;\">\n                            DECREASE STAKING\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- EXPLAINER -->\n      <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n        <div class=\"content-box-blue h-100 pb-3\">\n          <div class=\"container\" *ngIf=\"changeStaking === 'increase'\">\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">INCREASE</div>\n            </div>\n            <div class=\"row qlc-table-row-blue mt-3 qlc-stake-explainer pr-3\">\n              <hr style=\"height:1px;width:100%;border:none;background:#eeddad;display:block;\"/>\n              <p>\n                  <span style=\"color:#eeddad;margin-top:4px;display:inline-block;\">Simply add PCX to your staking</span><br>\n                  You can add additional PCX to you staking and earn more rewards.<br>\n                  <span style=\"color:#eeddad;margin-top:4px;display:inline-block;padding-top:10px;\">Maximum Amount:</span><br>The maximum amount is 10 times the votes a node has bonded (check the available amount)<br>\n              </p>\n            </div>\n          </div>\n          <div class=\"container\" *ngIf=\"changeStaking === 'decrease'\">\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">DECREASE</div>\n            </div>\n            <div class=\"row qlc-table-row-blue mt-3 qlc-stake-explainer pr-3\">\n              <hr style=\"height:1px;width:100%;border:none;background:#eeddad;display:block;\"/>\n              <p>\n                  <span style=\"color:#eeddad;margin-top:4px;display:inline-block;\">Simply decrease your PCX staking</span><br>\n                  You can revoke your PCX from staking partly or the full amount.<br><br>\n                  Once you do, that PCX stays frozen for another 3 days before you can unfreeze them.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!--STAKINGS LIST-->\n<!-- CHAIN X STAKING - UNFREEZE -->\n<div class=\"stake-screen-1 qlc-content-home qlc-after-submenu\" *ngIf=\"step === 5\">\n  <!-- TITLE -->\n  <div class=\"container mt-0 qlc-content-first\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <!-- TITLE -->\n            <div class=\"col-md-6 col-12 mt-2 pl-md-2 pr-md-2\">\n              <div class=\"content-title\">\n                <h1>Unfreeze Stakings</h1>\n              </div>\n            </div>\n            <div class=\"col-md-3 offset-md-3 col-12 pl-md-2 pr-md-2\">\n              <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0\" (click)=\"step = 1\">\n                Back to My Stakings\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container accounts\">\n    <div class=\"row\">\n      <!-- FORM -->\n      <div class=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 pb-3 ng-invalid-ignore\">\n        <div class=\"container pl-0 pr-0\">\n          <div class=\"row pl-0 pr-0 pt-2\">\n            <div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n              <div class=\"content-box-white\">\n                <div class=\"container\">\n                  <div class=\"row qlc-table-header pr-4\">\n                    <div class=\"col-xl-4 col-lg-4 order-lg-1 col-md-4 order-md-1 col-sm-4 order-sm-1 col-4 pr-sm-0 order-1 text-left pr-0\">In order</div>\n                    <div class=\"col-xl-2 col-lg-2 order-lg-2 col-md-2 order-md-2 d-md-block col-sm-2 order-sm-3 d-sm-none col-2 pr-sm-0 order-2 text-left pr-0\">Block Number</div>\n                    <div class=\"col-xl-3 col-lg-3 order-lg-3 col-md-3 order-md-3 col-sm-3 order-sm-3 col-3 pr-sm-0 order-3 text-left text-sm-right pl-4\">Predicted dead time</div>\n                    <div class=\"col-xl-3 col-lg-3 order-lg-4 d-lg-block col-md-3 order-md-4 d-md-none col-sm-3 order-sm-4 d-sm-none col-3 d-none order-4 pr-sm-0 pr-0 text-right\"></div>\n                  </div>\n                  <ng-container *ngIf=\"nominationRecordsUnfreeze\">\n                    <div class=\"row qlc-table-row qlc-table-row-twolines closed pr-4\" *ngFor=\"let revocation of nominationRecordsUnfreeze.revocations; let i = index\">\n                      <div class=\"col-xl-4 col-lg-4 order-lg-1 col-md-4 order-md-1 col-sm-4 order-sm-1 col-4 order-1 pb-0 pr-sm-0 pr-0 text-left\">\n                        <span tooltip=\"{{ (revocation.value / chainxAccountService.divisor) | currency:'':'':'1.2-8' }}\">{{ (revocation.value / chainxAccountService.divisor) | currency:'':'':'1.2-8' }}</span>\n                      </div>\n                      <div class=\"col-xl-2 col-lg-2 order-lg-2 col-md-2 order-md-2 col-sm-2 order-sm-2 col-2 order-2 pb-0 pr-sm-0 pr-0 text-left\">\n                        <span tooltip=\"{{ revocation.blockNumber }}\">{{ revocation.blockNumber }}</span>\n                      </div>\n                      <div class=\"col-xl-3 col-lg-3 order-lg-3 col-md-3 order-md-3 col-sm-3 order-sm-3 col-3 order-3 pb-0 pr-sm-0 pl-4 pr-0 text-sm-right text-left\">\n                        <span tooltip=\"\">24/10/2019 06:32</span>\n                      </div>\n                      <div class=\"col-xl-3 col-lg-3 order-lg-4 col-md-3 order-md-4 offset-md-0 col-sm-3 offset-sm-0 order-sm-4 col-3 order-4 pb-0 pr-sm-0 pr-0 text-right\">\n                        <button type=\"submit\" (click)=\"unfreeze(nominationRecordsUnfreeze.sender, nominationRecordsUnfreeze.target, i)\" class=\"btn btn-primary float-right ml-0 mr-1 pl-3 pr-3 pt-1 pb-1\" style=\"height:auto; min-height:auto; min-width:auto !important; margin-top:-6px;\" [disabled]=\"unfreezing\">\n                          UNFREEZE\n                        </button>\n                      </div>\n                    </div>\n                  </ng-container>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- EXPLAINER -->\n      <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n        <div class=\"content-box-blue h-100 pb-0\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">UNFREEZE</div>\n            </div>\n            <div class=\"row qlc-table-row-blue mt-1 qlc-stake-explainer pr-3\">\n              <hr style=\"height:1px;width:100%;border:none;background:#eeddad;display:block;\"/>\n              <p>\n                After revoking an amount of staked PCX, they stay locked for 3 days before you can unfreeze and transfer them back to your free balance.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!--UNFREEZE LIST-->\n","import { Component, OnInit } from '@angular/core';\nimport { ChainxAccountService } from '../../../services/chainx-account.service';\nimport { NotificationService } from '../../../services/notification.service';\nimport { WalletService } from '../../../services/wallet.service';\nimport { CurrencyPipe } from '@angular/common';\nimport BigNumber from 'bignumber.js';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddressBookService } from '../../../services/address-book.service';\nimport { NoCommaPipe } from '../../../pipes/no-comma.pipe';\n\nexport interface NominationUnfreeze {\n  sender: string;\n  target: string;\n  revocations: Revocations[];\n}\n\nexport interface Revocations {\n  value: number;\n  blockNumber: number;\n}\n\nexport interface NominationTotal {\n  staking: number;\n  unfreezeLocked: number;\n  unclaimed: number;\n}\n\n@Component({\n  selector: 'app-chainx-staking',\n  templateUrl: './chainx-staking.component.html',\n  styleUrls: ['./chainx-staking.component.scss'],\n  providers: [CurrencyPipe, NoCommaPipe]\n})\nexport class ChainxStakingComponent implements OnInit {\n  chainxAccounts = this.walletService.wallet.chainxAccounts;\n  chainxAccount = {\n    id: '',\n    addressBookName: null,\n    balances: null,\n    wif: null\n  };\n  nominationRecords = [];\n  nominationRecordsUnfreeze: NominationUnfreeze;\n  nominationTotal: NominationTotal;\n  amount = null;\n  accountFrom = '';\n  memo = '';\n  candidates;\n  candidate = null;\n  candidateStaked = 0;\n  loading = true;\n  defaultLogo = false;\n  step: number;\n  alreadyInvoking = false;\n  alreadyClaiming = false;\n  changeStaking = 'increase';\n  stakingWarning = false;\n  unfreezing = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private currencyPipe: CurrencyPipe,\n    private addressBookService: AddressBookService,\n    private notificationService: NotificationService,\n    private walletService: WalletService,\n    public chainxAccountService: ChainxAccountService,\n    public noCommaPipe: NoCommaPipe\n  ) {\n  }\n\n  async ngOnInit() {\n    const route = this.route.snapshot.url;\n\n    // await this.chainxAccountService.getTransfers(3416020);\n    // await this.chainxAccountService.getTransfers(3365865); // expired\n    // await this.chainxAccountService.getTransfers(3365885); // expired\n    // await this.chainxAccountService.getTransfers(3365961); // expired\n    // await this.chainxAccountService.getTransfers(3365981); // expired\n    // await this.chainxAccountService.getTransfers(3422428);\n    // await this.chainxAccountService.getTransfers(3423063);\n    // await this.chainxAccountService.getTransfers(3423078);\n    // await this.chainxAccountService.getTransfers(3423304);\n    // await this.chainxAccountService.getTransfers(3437693);\n\n    switch (route[route.length - 1].path) {\n      case 'invoke' : {\n        this.step = 2;\n        this.loadCandidates();\n      }\n        break;\n      default : {\n        this.step = 1;\n        await this.loadCandidates(false);\n        await this.getNominatioRecords();\n      }\n    }\n  }\n\n  private transformAmount(amount): string {\n    return this.currencyPipe.transform(amount, '', '', '1.2-8');\n  }\n\n  async loadCandidates(invoking = true) {\n    this.candidates = await this.chainxAccountService.getCandidates();\n    this.candidates = this.candidates.filter(e => e.isActive).sort((a, b) => b.selfVote - a.selfVote);\n\n    if (invoking) {\n      this.loading = false;\n    }\n  }\n\n  async getNominatioRecords() {\n    let stakingTotal = 0;\n    let unfreezeLockedTotal = 0;\n    let unclaimedTotal = 0;\n\n    for (const chainxAccount of this.chainxAccounts) {\n      const stakingDividend = await this.chainxAccountService.getStakingDividendByAccount(chainxAccount.id);\n      const nominationRecords = await this.chainxAccountService.getNominationRecords(chainxAccount.id);\n\n      for (const nominationRecord of nominationRecords) {\n        const candidate = this.candidates.find(e => e.account === nominationRecord[0]);\n\n        nominationRecord.candidate = candidate;\n        nominationRecord.candidateAddress = this.chainxAccountService.getPublicAddress(nominationRecord[0]);\n        nominationRecord.jackpot = candidate.jackpot;\n        nominationRecord.unclaimed = (Object.entries(stakingDividend).find(e => e[0] === nominationRecord[0]))[1];\n        nominationRecord.unfreezeReserved = 0;\n        nominationRecord.unfreezeReserved = nominationRecord[1].revocations.reduce(\n          (prev: BigNumber, current: any) => prev.plus(new BigNumber(current.value)),\n          new BigNumber(0)\n        );\n\n        stakingTotal += Number(nominationRecord[1].nomination);\n        unfreezeLockedTotal += Number(nominationRecord.unfreezeReserved);\n        unclaimedTotal += Number(nominationRecord.unclaimed);\n      }\n\n      this.nominationRecords.push({\n        address: chainxAccount.id,\n        publicKey: this.chainxAccountService.getPublicKey(chainxAccount.id),\n        name: this.addressBookService.getAccountName(chainxAccount.id),\n        nominations: nominationRecords\n      });\n    }\n\n    this.nominationTotal = {\n      staking: stakingTotal,\n      unfreezeLocked: unfreezeLockedTotal,\n      unclaimed: unclaimedTotal\n    };\n  }\n\n  async loadAccount(refresh = false) {\n    const account = this.chainxAccounts.find(a => a.id === this.chainxAccounts[0].id);\n\n    if (account === undefined) {\n      return this.notificationService.sendError('Address does not exists.');\n    }\n\n    this.chainxAccount = account;\n    this.accountFrom = account.id;\n    const assets = await this.chainxAccountService.getAssetsByAccount(this.chainxAccount.id);\n\n    for (const asset of assets.data) {\n      this.chainxAccount.balances = asset.details;\n    }\n  }\n\n  async updateStakingData() {\n    if (!this.nominationTotal) {\n      return this.getNominatioRecords();\n    }\n\n    let stakingTotal = 0;\n    let unfreezeLockedTotal = 0;\n    let unclaimedTotal = 0;\n\n    for (const nominationRecord of this.nominationRecords) {\n      const stakingDividend = await this.chainxAccountService.getStakingDividendByAccount(nominationRecord.address);\n      const nominationRecords = await this.chainxAccountService.getNominationRecords(nominationRecord.address);\n\n      for (const nomination of nominationRecord.nominations) {\n        nomination.unclaimed = (Object.entries(stakingDividend).find(e => e[0] === nomination[0]))[1];\n        nomination[1].nomination = nominationRecords.find(e => e[0] === nomination[0])[1].nomination;\n        nomination.unfreezeReserved = 0;\n        nomination.unfreezeReserved = nominationRecords.find(e => e[0] === nomination[0])[1].revocations.reduce(\n          (prev: BigNumber, current: any) => prev.plus(new BigNumber(current.value)),\n          new BigNumber(0)\n        );\n\n        stakingTotal += Number(nomination[1].nomination);\n        unfreezeLockedTotal += Number(nomination.unfreezeReserved);\n        unclaimedTotal += Number(nomination.unclaimed);\n      }\n    }\n\n    this.nominationTotal.staking = stakingTotal;\n    this.nominationTotal.unfreezeLocked = unfreezeLockedTotal;\n    this.nominationTotal.unclaimed = unclaimedTotal;\n  }\n\n  async claim(sender, target) {\n    if (this.walletService.walletIsLocked()) {\n      return this.notificationService.sendWarning('ERROR wallet locked');\n    }\n\n    this.alreadyClaiming = true;\n\n    try {\n      const data = {\n        sender,\n        target\n      };\n\n      await this.chainxAccountService.claim(data);\n      this.notificationService.sendSuccess(`Claim asset type: PCX`);\n    } catch (err) {\n      console.log(err);\n      this.alreadyInvoking = false;\n\n      if (typeof err.message !== 'undefined') {\n        this.notificationService.sendError(err.message);\n      } else if (typeof err.result !== 'undefined') {\n        this.notificationService.sendError(`Some error occurred: ${err.result}`);\n      }\n    }\n\n    this.alreadyClaiming = false;\n\n    this.updateStakingData();\n  }\n\n  async invoke() {\n    if (this.walletService.walletIsLocked()) {\n      return this.notificationService.sendWarning('ERROR wallet locked');\n    }\n\n    if (!this.accountFrom) {\n      return this.notificationService.sendWarning('Missing account of sender.');\n    }\n\n    this.amount = this.noCommaPipe.transform(this.amount);\n\n    if (!this.amount || parseFloat(this.amount) === 0) {\n      return this.notificationService.sendWarning('Amount is missing.');\n    }\n\n    this.alreadyInvoking = true;\n\n    try {\n      const amount = this.amount * this.chainxAccountService.divisor;\n      const data = {\n        sender: this.accountFrom,\n        target: this.chainxAccountService.getPublicAddress(this.candidate.account),\n        memo: this.memo,\n        amount\n      };\n\n      await this.chainxAccountService.nominate(data);\n      this.notificationService.sendSuccess(`Invoke amount: ${this.transformAmount(amount / this.chainxAccountService.divisor)}. PCX: Memo: ${this.memo}`);\n\n    } catch (err) {\n      console.log(err);\n\n      if (typeof err.message !== 'undefined') {\n        this.notificationService.sendError(err.message);\n      } else if (typeof err.result !== 'undefined') {\n        this.notificationService.sendError(`Some error occurred: ${err.result}. Please try again later`);\n      }\n    }\n\n    this.resetFields();\n    this.updateStakingData();\n    this.step = 1;\n    this.router.navigateByUrl('/staking/chainx');\n  }\n\n  async revoke() {\n    if (this.walletService.walletIsLocked()) {\n      return this.notificationService.sendWarning('ERROR wallet locked');\n    }\n\n    if (!this.accountFrom) {\n      return this.notificationService.sendWarning('Missing account of sender.');\n    }\n\n    if (!this.candidate) {\n      return this.notificationService.sendWarning('Missing account of candidate.');\n    }\n\n    this.amount = this.noCommaPipe.transform(this.amount);\n\n    if (!this.amount || parseFloat(this.amount) === 0) {\n      return this.notificationService.sendWarning('Amount is missing.');\n    }\n\n    this.alreadyInvoking = true;\n\n    try {\n      const amount = this.amount * this.chainxAccountService.divisor;\n      const data = {\n        sender: this.accountFrom,\n        target: this.chainxAccountService.getPublicAddress(this.candidate.account),\n        memo: this.memo,\n        amount\n      };\n\n      await this.chainxAccountService.unnominate(data);\n      this.notificationService.sendSuccess(`Revoke amount: ${this.transformAmount(amount / this.chainxAccountService.divisor)}. PCX: Memo: ${this.memo}`);\n    } catch (err) {\n      console.log(err);\n\n      if (typeof err.message !== 'undefined') {\n        this.notificationService.sendError(err.message);\n      } else if (typeof err.result !== 'undefined') {\n        this.notificationService.sendError(`Some error occurred: ${err.result}`);\n      }\n    }\n\n    this.resetFields();\n    this.updateStakingData();\n    this.step = 1;\n  }\n\n  async invokeChange(sender, target, staked) {\n    if (this.walletService.walletIsLocked()) {\n      return this.notificationService.sendWarning('ERROR wallet locked');\n    }\n\n    this.accountFrom = sender;\n    this.candidate = target;\n    this.candidateStaked = staked;\n    this.step = 4;\n    this.chainxAccount = this.chainxAccounts.find(e => e.id === this.accountFrom);\n    const assets = await this.chainxAccountService.getAssetsByAccount(this.chainxAccount.id);\n\n    for (const asset of assets.data) {\n      this.chainxAccount.balances = asset.details;\n    }\n  }\n\n  async unfreeze(sender, target, revocationIndex) {\n    if (this.walletService.walletIsLocked()) {\n      return this.notificationService.sendWarning('ERROR wallet locked');\n    }\n    this.unfreezing = true;\n\n    try {\n      const data = {\n        sender,\n        target,\n        revocationIndex\n      };\n\n      await this.chainxAccountService.unfreeze(data);\n      this.notificationService.sendSuccess(`Unfreeze success.`);\n\n      this.unfreezeDetails(sender, this.chainxAccountService.getPublicKey(target));\n    }\n    catch (err) {\n      console.log(err);\n\n      if (typeof err.message !== 'undefined') {\n        this.notificationService.sendError(err.message);\n      } else if (typeof err.result !== 'undefined') {\n        this.notificationService.sendError(`Some error occurred: ${err.result}. You can unfreeze your assets after 3 days.`);\n      }\n    }\n    finally {\n      this.unfreezing = false;\n    }\n  }\n\n  async unfreezeDetails(sender, candidateAccount) {\n    if (this.walletService.walletIsLocked()) {\n      return this.notificationService.sendWarning('ERROR wallet locked');\n    }\n\n    this.accountFrom = sender;\n    this.candidate = candidateAccount;\n    this.step = 5;\n\n    const nominationRecords = await this.chainxAccountService.getNominationRecords(this.accountFrom);\n    const nominationRecord = nominationRecords.find(e => e[0] === this.candidate);\n    const target = this.chainxAccountService.getPublicAddress(nominationRecord[0]);\n\n    this.nominationRecordsUnfreeze = {\n      revocations: nominationRecord[1].revocations,\n      sender,\n      target\n    };\n  }\n\n  async selectAccount() {\n    this.chainxAccount = this.chainxAccounts.find(e => e.id === this.accountFrom);\n    const assets = await this.chainxAccountService.getAssetsByAccount(this.chainxAccount.id);\n\n    for (const asset of assets.data) {\n      this.chainxAccount.balances = asset.details;\n    }\n\n    this.amount = null;\n  }\n\n  backToNominates(): void {\n    this.resetFields();\n    this.step = 2;\n  }\n\n  checkAmount(action = '') {\n    let amount = Number(this.noCommaPipe.transform(this.amount)) * this.chainxAccountService.divisor;\n\n    if (this.chainxAccount.balances === null || !amount || amount < 0) {\n      amount = 0;\n    } else if (new BigNumber(amount).gt(new BigNumber(this.chainxAccount.balances.Free))) {\n      amount = this.chainxAccount.balances.Free;\n    }\n\n    if (this.step === 3 || this.step === 4) {\n      if (!action) {\n        const availableAmount = (this.candidate.selfVote * 10) - this.candidate.totalNomination;\n\n        if (new BigNumber(amount).gt(new BigNumber(availableAmount))) {\n          this.stakingWarning = true;\n        } else {\n          this.stakingWarning = false;\n        }\n      }\n      else {\n        if (new BigNumber(amount).gt(new BigNumber(this.candidateStaked))) {\n          amount = this.candidateStaked;\n        }\n      }\n    }\n\n    this.amount = this.transformAmount(amount / this.chainxAccountService.divisor);\n  }\n\n  vote(account): void {\n    this.candidate = account;\n    this.loadAccount();\n    this.step = 3;\n  }\n\n  async setMaxAmount(action = 'invoke') {\n    const amount = new BigNumber(this.amount * this.chainxAccountService.divisor);\n\n    switch (action) {\n      case 'invoke': {\n        const availableAmount = new BigNumber((this.candidate.selfVote * 10) - this.candidate.totalNomination);\n\n        if (amount.eq(0)) {\n          if (this.chainxAccount.balances) {\n            if (new BigNumber(this.chainxAccount.balances.Free).gt(availableAmount)) {\n              this.amount = availableAmount;\n            }\n            else {\n              this.amount = this.chainxAccount.balances.Free;\n            }\n          }\n        }\n        else if (amount.gt(availableAmount)) {\n          this.amount = availableAmount;\n        }\n\n        this.stakingWarning = false;\n      } break;\n      case 'revoke' : {\n        this.amount = this.candidateStaked;\n      } break;\n      default : {\n        this.amount = this.chainxAccount.balances === null ? 0 : this.chainxAccount.balances.Free;\n      }\n    }\n\n    this.amount = this.transformAmount(Number(this.amount) / this.chainxAccountService.divisor);\n  }\n\n  private resetFields(): void {\n    this.amount = null;\n    this.accountFrom = '';\n    this.memo = '';\n    this.candidate = null;\n    this.alreadyInvoking = false;\n  }\n\n  // private async request(url): Promise<any> {\n  //   return await this.http\n  //     .get(url)\n  //     .toPromise()\n  //     .then(res => {\n  //       return res;\n  //     })\n  //     .catch(err => {\n  //       if (err.status === 500 || err.status === 0) {\n  //       }\n  //       throw err;\n  //     });\n  // }\n\n  checkImage() {\n    this.defaultLogo = !this.defaultLogo;\n\n    // console.log(this.candidates);\n    // const status = await this.request('https://chainx-validators-logo.oss-cn-hangzhou.aliyuncs.com/hotbit.png');\n    // console.log(status);\n\n    return this.defaultLogo;\n  }\n}\n","<div class=\"container mt-0 pt-0 mt-0 mb-2 qlc-content-first\">\n    <div class=\"row pt-0 mt-0\">\n        <div class=\"col-lg-12 pl-0 pr-0 pt-0\">\n            <div class=\"container mt-0 mb-4\">\n                \n                <!-- configure/import wallet start --> \n                <div class=\"row\" *ngIf=\"activePanel == 0\">\n                    <div class=\"col-lg-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\">\n                        <div class=\"content-title\">\n                            <h1>{{ 'CONFIGURE_WALLET.configure_wallet_title' | translate }}</h1>\n                        </div>\n                    </div>\n                    \n                    <div class=\"col-lg-12 mt-2 mb-4 pl-md-2 pr-md-2\">\n                        <div class=\"content-box-white pt-5 pb-5\">\n                            <div class=\"col-12 my-3\" *ngIf=\"wallet.seed\">\n                                <div class=\"col-12 px-0 py-3 text-center content-title\" [innerHTML]=\"'CONFIGURE_WALLET.configure_wallet_warning' | translate\">\n                                    \n                                </div>\n                            </div>\n                            <div class=\"row justify-content-md-center defaultTable content text-center mb-3\" *ngIf=\"activePanel == 0\">\n                                <div class=\"col-12 px-4 mt-3 mb-2 \">\n                                    <p>\n                                        {{ 'CONFIGURE_WALLET.configure_wallet_text' | translate }}\n                                    </p>\n                                </div>\n                                <div class=\"col-12 px-0 pt-0\">\n                                    <div class=\"row justify-content-center buttons\">\n                                        <div class=\"col-xl-3 col-lg-4 col-10\">\n                                            <a (click)=\"setPanel(11)\"><button type=\"submit\" class=\"btn btn-primary btn-blue mt-1\">{{ 'CONFIGURE_WALLET.configure_wallet_button_import' | translate }}</button></a>\n                                        </div>\n                                        <div class=\"col-xl-3 col-lg-4 col-10\">\n                                            <a (click)=\"setPanel(1)\"><button type=\"submit\" class=\"btn btn-primary btn-blue mt-1\">{{ 'CONFIGURE_WALLET.configure_wallet_button_create' | translate }}</button></a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>                    \n                </div>\n                <!-- configure/import wallet end --> \n                \n                <!-- create new wallet text start -->\n                <div class=\"row\" *ngIf=\"activePanel == 1\">\n                    <div class=\"col-lg-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\">\n                        <div class=\"row\">\n                            <div class=\"col-md-9\">\n                                <div class=\"content-title\">\n                                    <h1>{{ 'CREATE_NEW_WALLET.create_new_wallet_title' | translate }}</h1>\n                                </div>\n                            </div>\n                            \n                            <div class=\"col-md-3 col-12 pb-2 pt-0 mt-0\">\n                                <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0\" (click)=\"activePanel=0\" style=\"margin-top:-7px !important;\">\n                                    BACK\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"col-lg-12 mt-2 mb-4 pl-md-2 pr-md-2\">\n                        <div class=\"content-box-white\">\n                            <form>\n                                <div class=\"container\">\n                                    <div class=\"row qlc-table-header-white pb-4 pt-5\">\n                                        <div class=\"col-lg-6 offset-lg-3 content-title\"><h2 class=\"title-grey\">{{ 'CREATE_NEW_WALLET.create_new_wallet_warning' | translate }}</h2></div>\n                                        <div class=\"col-lg-6 offset-lg-3 mt-4 text-paragraph-default\">\n                                            <p class=\"text-justify\">{{ 'CREATE_NEW_WALLET.create_new_wallet_text1' | translate }}</p>\n                                            <p class=\"text-justify\">\n                                                <strong>\n                                                    {{ 'CREATE_NEW_WALLET.create_new_wallet_text2' | translate }}<br><br>\n                                                    <span class=\"text-color-red align-justify\">{{ 'CREATE_NEW_WALLET.create_new_wallet_text3' | translate }}</span>\n                                                </strong>\n                                                <br><br>\n                                                <strong><span class=\"text-color-red align-justify\">The wallet DOES NOT support NEP-5 QLC token yet, please do not transfer your QLC to this wallet! Kindly stay tuned for the QLC staking schedule.</span></strong>\n                                            </p>\n                                        </div>\n                                        <div class=\"col-lg-6 offset-lg-3 mt-4\">\n                                            <div class=\"custom-control custom-check custom-control-inline\">\n                                                <input type=\"checkbox\" id=\"confirmUnderstand\" name=\"confirmUnderstand\" class=\"custom-control-input\" [(ngModel)]=\"agree\">\n                                                <label class=\"custom-control-label\" for=\"confirmUnderstand\">{{ 'CREATE_NEW_WALLET.create_new_wallet_agree' | translate }}</label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    \n                                    <div class=\"row qlc-table-row-white\">\n                                        <div class=\"col-12 pl-4 pb-3 pr-3 pt-2 text-center\">\n                                            <input (click)=\"createNewWallet()\" [disabled]=\"!agree\" class=\"btn btn-primary btn-blue mt-1\" value=\"{{ 'CREATE_NEW_WALLET.create_new_wallet_button' | translate }}\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>                    \n                </div>\n                <!-- create new wallet text end -->\n                \n                <!-- new wallet created start -->\n                <div class=\"row\" *ngIf=\"activePanel == 3\">\n                    <div class=\"col-lg-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\">\n                        <div class=\"content-title\">\n                            <h1>{{ 'CREATE_NEW_CREATED.create_new_created_title' | translate }}</h1>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-12 mt-2 mb-4 pl-md-2 pr-md-2\">\n                        <div class=\"content-box-white\">\n                            <div class=\"col-12 px-0 text-center py-3 pt-5 pb-4\">\n                                <strong>{{ 'CREATE_NEW_CREATED.create_new_created_text' | translate }}</strong>\n                            </div>\n                            <div class=\"row align-items-top pl-5 pr-5\">\n                                <div class=\"col-xl-6 pr-md-3\">\n                                    <div class=\"col-12 defaultTable tableQLC content\">\n                                        <div class=\"row align-items-center rowTitles\">\n                                            <div class=\"col-12 pb-3\">\n                                                {{ 'CREATE_NEW_CREATED.mnemonic' | translate }}\n                                            </div>\n                                        </div>\n                                        <div class=\"row align-items-center rowDefault\">\n                                            <div class=\"col-12 pb-3 seed-txt pb-4\">\n                                                {{ newWalletMnemonic }}\n                                            </div>\n                                        </div>\n                                        <div class=\"row align-items-center rowButtons\">\n                                            <div class=\"col-12\">\n                                                <a tooltip=\"{{ 'CREATE_NEW_CREATED.copy_mnemonic' | translate }}\" ngxClipboard [cbContent]=\"newWalletMnemonic\" (cbOnSuccess)=\"copied()\" class=\"icon-text-link\"><span class=\"icon copy light\"></span> {{ 'COPY_TO_CLIPBOARD' | translate }}</a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-xl-6 pl-md-3\">\n                                    <div class=\"col-12 defaultTable tableQLC content\">\n                                        <div class=\"row align-items-center rowTitles\">\n                                            <div class=\"col-12 pb-3\">\n                                                {{ 'CREATE_NEW_CREATED.seed' | translate }}\n                                            </div>\n                                        </div>\n                                        <div class=\"row align-items-center rowDefault\">\n                                            <div class=\"col-12 pb-3 seed-txt\" style=\"word-wrap: break-word;\">\n                                                {{ newWalletSeed }}\n                                            </div>\n                                        </div>\n                                        <div class=\"row align-items-center rowButtons pb-3 mb-3\">\n                                            <div class=\"col-12 align-self-end pb-5 mb-0\">\n                                                <a tooltip=\"{{ 'CREATE_NEW_CREATED.copy_seed' | translate }}\" ngxClipboard [cbContent]=\"newWalletSeed\" (cbOnSuccess)=\"copied()\" class=\"icon-text-link\" ><span class=\"icon copy light\"></span> {{ 'COPY_TO_CLIPBOARD' | translate }}</a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            \n                            \n                            <div class=\"row defaultTable content pt-5\">\n                                <div class=\"col-12 pb-3\">\n                                    <div class=\"row align-items-center rowContent autoHP\">\n                                        <div class=\"col-12 px-0 pb-1 text-center boldbig text-color-red\" [innerHtml]=\"'CREATE_NEW_CREATED.warning1' | translate\" style=\"font-weight: bold;\">\n                                            \n                                        </div>\n                                        <div class=\"col-12 px-0 pb-3 text-center boldbig pt-4\">\n                                            {{ 'CREATE_NEW_CREATED.warning2' | translate }}\n                                        </div>\n                                    </div>\n                                    \n                                    <div class=\"row align-items-center justify-content-center rowDefault rowButtons pt-4\">\n                                        <div class=\"col-xl-4 col-lg-4 col-md-6 col-sm-8 col-12 px-0 px-sm-2 text-left text-truncate mobile-break mb-5\">\n                                            <a (click)=\"confirmNewSeed()\"><button type=\"submit\" class=\"btn btn-primary pl-0 pr-0 btn-danger w-100\">{{ 'CREATE_NEW_CREATED.create_new_created_button' | translate }}</button></a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- new wallet created end -->\n                \n                <!-- set wallet password start -->\n                <div class=\"row\" *ngIf=\"activePanel == 4\">\n                    <div class=\"col-lg-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\">\n                        <div class=\"content-title\">\n                            <h1>{{ 'SET_WALLET_PASSWORD.set_wallet_password_title' | translate }}</h1>\n                        </div>\n                    </div>\n                    \n                    <div class=\"col-lg-12 mt-2 mb-4 pl-md-2 pr-md-2\">\n                        <div class=\"content-box-white pt-5 pb-5\">\n\n                            <div class=\"row justify-content-md-center defaultTable content text-center mb-3\" *ngIf=\"activePanel == 0\">\n                                <div class=\"col-12 px-4 mt-3 \">\n\n\n                    <!--<div class=\"col-lg-12 mt-2 mb-4 pl-md-2 pr-md-2\">\n                        <div class=\"content-box-white\">\n                            <div class=\"col-12 px-0 text-center pt-3\">-->\n                                        \n                                        {{ 'SET_WALLET_PASSWORD.set_wallet_password_text' | translate }}\n                                </div>\n                            </div>\n                            <div class=\"row align-items-center rowContent autoHP\">\n                                    <div class=\"col-md-6 offset-md-3\">\n                                        <div class=\"col-12 py-3 text-truncate dataName form-label-custom\">\n                                            {{ 'SET_WALLET_PASSWORD.password' | translate }}\n                                        </div>\n                                        <div class=\"col-12 pb-0 text-left text-truncate\">\n                                            <div class=\"form-group\">\n                                                <div class=\"input-group\">\n                                                    <input type=\"password\" class=\"form-control\" [(ngModel)]=\"walletPasswordModel\" placeholder=\"{{ 'SET_WALLET_PASSWORD.password_placeholder' | translate }}\" onfocus=\"this.placeholder = ''\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-6 offset-md-3\">\n                                        <div class=\"col-12 pb-0 py-md-3 text-truncate dataName form-label-custom\">\n                                            {{ 'SET_WALLET_PASSWORD.confirm' | translate }}\n                                        </div>\n                                        <div class=\"col-12 pb-3 text-left text-truncate\">\n                                            <div class=\"form-group\">\n                                                <div class=\"input-group\">\n                                                    <input type=\"password\" class=\"form-control\" (keyup.enter)=\"saveWalletPassword()\" [(ngModel)]=\"walletPasswordConfirmModel\" placeholder=\"{{ 'SET_WALLET_PASSWORD.confirm_placeholder' | translate }}\" onfocus=\"this.placeholder = ''\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                \n                                <div class=\"row align-items-center justify-content-center rowDefault rowButtons\">\n                                    <div class=\"col-lg-3 col-md-5 col-sm-6 col-12 text-truncate mobile-break text-center\">\n                                        <button (click)=\"saveWalletPassword()\" type=\"submit\" class=\"btn btn-primary\">{{ 'SET_WALLET_PASSWORD.set_wallet_password_button' | translate }}</button>\n                                    </div>\n                                    <div class=\"col-12 boldBig text-center pt-4 pb-3\">\n                                        {{ 'SET_WALLET_PASSWORD.warning' | translate }}\n                                    </div>\n                                </div>\n                        </div>\n                    </div>                    \n                </div>\n                <!-- set wallet password end -->\n                \n                <!-- wallet configured start -->\n                <div class=\"row\" *ngIf=\"activePanel == 5\">\n                    <div class=\"col-lg-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\">\n                        <div class=\"content-title\">\n                            <h1>{{ 'WALLET_CONFIGURED.wallet_configured_title' | translate }}</h1>\n                        </div>\n                    </div>\n                    \n                    <div class=\"col-lg-12 mt-2 mb-4 pl-md-2 pr-md-2\">\n                        <div class=\"content-box-white pt-1\">\n                            <div class=\"col-12 px-0 text-center py-3 pt-5 mt-3 pb-5\">\n                                {{ 'WALLET_CONFIGURED.wallet_configured_text' | translate }} \n                            </div>\n\n                            <div class=\"row justify-content-center\">\n                                <div class=\"col-xl-3 col-lg-3 col-md-4 col-sm-5 col-12 px-0 px-sm-2\">\n                                    <button routerLink=\"/wallets\" type=\"submit\" class=\"btn btn-primary\">{{ 'WALLET_CONFIGURED.wallet_configured_button' | translate }}</button>\n                                </div>\n                            </div>\n\n                            <div class=\"col-12 px-0 text-center py-3 pt-5 pb-5 mb-1\">\n                                {{ 'WALLET_CONFIGURED.warning' | translate }}\n                            </div>\n                        </div>\n                    </div>                    \n                </div>\n                <!-- wallet configured end -->\n                <div class=\"row\" *ngIf=\"activePanel == 11\">\n\n                        <!-- TITLE -->\n                        <div class=\"col-lg-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\">\n                            <div class=\"row\">\n                                <div class=\"col-md-9\">\n                                    <div class=\"content-title\">\n                                        <h1>{{ 'IMPORT.import_title' | translate }}</h1>\n                                    </div>\n                                </div>\n                                \n                                <div class=\"col-md-3 col-12 pb-2 pt-0 mt-0\">\n                                    <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0\" (click)=\"activePanel=0\" style=\"margin-top:-7px !important;\">\n                                        BACK\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n  \n                        <div class=\"col-lg-12 mt-2 mb-4 pl-md-2 pr-md-2\">\n                            <div class=\"content-box-white\">\n                                    <div class=\"container\">\n            \n                                        <div class=\"row qlc-table-header-white pb-4 pt-5\">\n                                            <div class=\"col-lg-6 offset-lg-3 content-title\"><h2 class=\"title-grey\">How would you like to access your account?</h2></div>\n                                            <div class=\"col-lg-6 offset-lg-3 mt-4\">\n  \n                                                <div class=\"custom-control custom-radio custom-control-inline\">\n                                                    <input type=\"radio\" id=\"signinType1\" name=\"signinType\" class=\"custom-control-input\" value=\"mnemonic\" checked [(ngModel)]=\"selectedImportOption\">\n                                                    <label class=\"custom-control-label\" for=\"signinType1\">Account Mnemonic Phase</label>\n                                                </div>\n                                                <div class=\"custom-control custom-radio custom-control-inline\">\n                                                    <input type=\"radio\" id=\"signinType2\" name=\"signinType\" class=\"custom-control-input\" value=\"seed\" [(ngModel)]=\"selectedImportOption\">\n                                                    <label class=\"custom-control-label\" for=\"signinType2\">Account Seed</label>\n                                                </div>\n\n                                                <div class=\"custom-control custom-radio custom-control-inline\">\n                                                    <input type=\"radio\" id=\"signinType3\" name=\"signinType\" class=\"custom-control-input\" value=\"file\" [(ngModel)]=\"selectedImportOption\">\n                                                    <label class=\"custom-control-label\" for=\"signinType3\">Account File</label>\n                                                </div>\n                                            \n                                            <div class=\"row justify-content-center rowContent autoHP pt-2 pl-3 pr-3\" *ngIf=\"selectedImportOption === 'seed'\">\n                                                    <div class=\"col-12 px-0 py-3 text-truncate dataName\">{{ 'IMPORT.seed_title' | translate }}</div>\n                                                    <div class=\"col-12 px-0 pb-3 text-left text-truncate\">\n                                                        <div class=\"form-group\">\n                                                            <div class=\"input-group\">\n                                                                <input type=\"text\" class=\"form-control\" (keyup.enter)=\"importExistingWallet()\" [(ngModel)]=\"importSeedModel\" placeholder=\"{{ 'IMPORT.seed_placeholder' | translate }}\" onfocus=\"this.placeholder = ''\">\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row justify-content-center rowContent autoHP pt-2 pl-3 pr-3\" *ngIf=\"selectedImportOption === 'mnemonic'\">\n                                                    <div class=\"col-12 px-0 py-3 text-truncate dataName\">{{ 'IMPORT.mnemonic_title' | translate }}</div>\n                                                    <div class=\"col-12 px-0 pb-3 text-left text-truncate\">\n                                                        <div class=\"form-group\">\n                                                            <div class=\"input-group\">\n                                                                <input type=\"text\" class=\"form-control\" (keyup.enter)=\"importExistingWallet()\" [(ngModel)]=\"importSeedMnemonicModel\" placeholder=\"{{ 'IMPORT.mnemonic_placeholder' | translate }}\" onfocus=\"this.placeholder = ''\">\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row justify-content-center rowContent autoHP pt-2 pl-3 pr-3\" *ngIf=\"selectedImportOption === 'file'\">\n                                                    <div class=\"col-12 px-0 py-3\">{{ 'IMPORT.file_text' | translate }}</div>\n                                                    \n                                                </div>\n                                            </div>\n                                        </div>\n                                        \n                                        <div class=\"row qlc-table-row-white\">\n                                            <div class=\"col-12 pl-4 pb-3 pr-3 pt-2 text-center\">\n                                                    <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"selectedImportOption === 'mnemonic'\" (click)=\"importExistingWallet()\">{{ 'IMPORT.mnemonic_button' | translate }}</button>\n                                                    <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"selectedImportOption === 'seed'\" (click)=\"importExistingWallet()\">{{ 'IMPORT.seed_button' | translate }}</button>\n                                                    <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"selectedImportOption === 'file'\" (click)=\"importExistingWallet()\">{{ 'IMPORT.file_button' | translate }}</button>\n                                                    <input type=\"file\" id=\"import-from-file\" *ngIf=\"selectedImportOption === 'file'\" (change)=\"importFromFile($event.target.files)\" multiple>\n                                            </div>\n                                        </div>\n  \n                                    </div>\n                            </div>\n                        </div>\n  \n                    </div>\n                \n                \n                \n                \n            </div>\n        </div>\n        \n    </div>\n</div>\n\n\n<div class=\"container mt-4 mb-4\">\n    <div class=\"row\">\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { WalletService } from 'src/app/services/wallet.service';\n\nimport * as bip from 'bip39';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-createwallet',\n  templateUrl: './createwallet.component.html',\n  styleUrls: ['./createwallet.component.scss']\n})\nexport class CreatewalletComponent implements OnInit {\n  wallet = this.walletService.wallet;\n\tactivePanel = 0;\n\n  newWalletSeed = '';\n\tnewWalletMnemonic = '';\n\timportSeedModel = '';\n\timportSeedMnemonicModel = '';\n\twalletPasswordModel = '';\n  walletPasswordConfirmModel = '';\n  agree = false;\n  \n  selectedImportOption = 'seed';\n\timportOptions = [\n\t\t{ name: 'seed', value: 'seed' },\n\t\t{ name: 'mnemonic', value: 'mnemonic' },\n\t\t{ name: 'file', value: 'file' }\n\t];\n\n  msg1 = '';\n\tmsg2 = '';\n\tmsg3 = '';\n\tmsg4 = '';\n\tmsg5 = '';\n\tmsg6 = '';\n\tmsg7 = '';\n\tmsg8 = '';\n\tmsg9 = '';\n\tmsg10 = '';\n\tmsg11 = '';\n\tmsg12 = '';\n\tmsg13 = '';\n\tmsg14 = '';\n\tmsg15 = '';\n\tmsg16 = '';\n\tmsg17 = '';\n\tmsg18 = '';\n\tmsg19 = '';\n\tmsg20 = '';\n\tmsg21 = '';\n\n  constructor(\n\t//\tprivate router: ActivatedRoute,\n\t\tpublic walletService: WalletService,\n\t\tprivate notifications: NotificationService,\n\t\tprivate route: Router,\n\t\t// private ledgerService: LedgerService,\n\t\tprivate trans: TranslateService\n\t) {\n\t}\n\n  ngOnInit() {\n    this.loadLang();\n    this.trans.onLangChange.subscribe((event: LangChangeEvent) => {\n\t\t\tthis.loadLang();\n\t\t});\n  }\n\n  loadLang() {\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg1').subscribe((res: string) => { this.msg1 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg2').subscribe((res: string) => { this.msg2 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg3').subscribe((res: string) => { this.msg3 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg4').subscribe((res: string) => { this.msg4 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg5').subscribe((res: string) => { this.msg5 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg6').subscribe((res: string) => { this.msg6 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg7').subscribe((res: string) => { this.msg7 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg8').subscribe((res: string) => { this.msg8 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg9').subscribe((res: string) => { this.msg9 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg10').subscribe((res: string) => { this.msg10 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg11').subscribe((res: string) => { this.msg11 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg12').subscribe((res: string) => { this.msg12 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg13').subscribe((res: string) => { this.msg13 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg14').subscribe((res: string) => { this.msg14 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg15').subscribe((res: string) => { this.msg15 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg16').subscribe((res: string) => { this.msg16 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg17').subscribe((res: string) => { this.msg17 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg18').subscribe((res: string) => { this.msg18 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg19').subscribe((res: string) => { this.msg19 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg20').subscribe((res: string) => { this.msg20 = res; });\n\t\tthis.trans.get('CONFIGURE_WALLET_WARNINGS.msg21').subscribe((res: string) => { this.msg21 = res; });\n\t\tthis.importOptions = [\n\t\t\t{ name: this.msg1, value: 'seed' },\n\t\t\t{ name: this.msg2, value: 'mnemonic' },\n\t\t\t{ name: this.msg3, value: 'file' }\n\t\t];\n\t}\n\n  setPanel(panel) {\n\t\tthis.activePanel = panel;\n\t}\n\n\tcopied() {\n\t\tthis.notifications.sendSuccess(this.msg19);\n  }\n  \n  async createNewWallet() {\n\t\tconst newSeed = await this.walletService.createNewWallet();\n\t\tthis.newWalletSeed = newSeed;\n\t\tthis.newWalletMnemonic = bip.entropyToMnemonic(newSeed);\n\n\t\tthis.activePanel = 3;\n\t\tthis.notifications.sendSuccess(this.msg15);\n  }\n  \n  confirmNewSeed() {\n\t\tthis.newWalletSeed = '';\n\t\tthis.activePanel = 4;\n  }\n  \n  saveWalletPassword() {\n\t\tif (this.walletPasswordConfirmModel !== this.walletPasswordModel) {\n\t\t\treturn this.notifications.sendError(this.msg16);\n\t\t}\n\t\tif (this.walletPasswordModel.length < 1) {\n\t\t\treturn this.notifications.sendWarning(this.msg17);\n\t\t}\n\t\tconst newPassword = this.walletPasswordModel;\n\t\tthis.walletService.wallet.password = newPassword;\n\n\t\tthis.walletService.saveWalletExport();\n\n\t\tthis.walletPasswordModel = '';\n\t\tthis.walletPasswordConfirmModel = '';\n\n\t\tthis.activePanel = 5;\n\t\tthis.notifications.sendSuccess(this.msg18);\n  }\n  \n  async importExistingWallet() {\n\t\tlet importSeed = '';\n\t\tif (this.selectedImportOption === 'seed') {\n      const existingSeed = this.importSeedModel.trim();\n\t\t\tif (existingSeed.length !== 64) {\n\t\t\t\treturn this.notifications.sendError(this.msg4);\n\t\t\t} \n\t\t\timportSeed = existingSeed;\n\t\t} else if (this.selectedImportOption === 'mnemonic') {\n\t\t\tconst mnemonic = this.importSeedMnemonicModel.toLowerCase().trim();\n\t\t\tconst words = mnemonic.split(' ');\n\t\t\tif (words.length < 12) {\n\t\t\t\treturn this.notifications.sendError(this.msg5);\n\t\t\t}\n\n\t\t\t// Try and decode the mnemonic\n\t\t\ttry {\n\t\t\t\tconst newSeed = bip.mnemonicToEntropy(mnemonic);\n\t\t\t\tif (!newSeed || newSeed.length !== 64) {\n\t\t\t\t\treturn this.notifications.sendError(this.msg6);\n\t\t\t\t}\n\t\t\t\timportSeed = newSeed.toUpperCase(); // Force uppercase, for consistency\n\t\t\t} catch (err) {\n\t\t\t\treturn this.notifications.sendError(this.msg7);\n\t\t\t}\n\t\t} else {\n\t\t\treturn this.notifications.sendError(this.msg8);\n\t\t}\n\n\t\tthis.notifications.sendInfo(this.msg9, { identifier: 'importing-loading' });\n\t\tawait this.walletService.createWalletFromSeed(importSeed);\n\n\t\tthis.notifications.removeNotification('importing-loading');\n\n\t\tthis.activePanel = 4;\n\t\tthis.notifications.sendSuccess(this.msg10);\n  }\n  \n  importFromFile(files) {\n\t\tif (!files.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst file = files[0];\n\t\tconst reader = new FileReader();\n\t\treader.onload = event => {\n\t\t\tconst fileData = event.target['result'];\n\t\t\ttry {\n\t\t\t\tconst importData = JSON.parse(String(fileData));\n\t\t\t\tif (!importData.seed || !importData.hasOwnProperty('accountsIndex')) {\n\t\t\t\t\treturn this.notifications.sendError(this.msg20);\n\t\t\t\t}\n\n\t\t\t\tconst walletEncrypted = btoa(JSON.stringify(importData));\n\t\t\t\tthis.route.navigate(['import-wallet'], { fragment: walletEncrypted });\n\t\t\t} catch (err) {\n\t\t\t\tthis.notifications.sendError(this.msg21);\n\t\t\t}\n\t\t};\n\n\t\treader.readAsText(file);\n\t}\n\n}\n","<ng-template #template>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left w-100 text-center\">Node Control Center</h4>\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showCheckingStatus\">\n        Checking node status...\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showNodeFound\">\n        Node version {{ desktopConfig.nodeData.version }} found. Checking for updates...\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showNoNodeFound\">\n        No node found. Checking for latest version...\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showDownload\">\n        <span *ngIf=\"showDownloadUpdate\">New node version {{ newVersion.version }} found. <em>Click download to proceed</em></span>\n        <span *ngIf=\"showDownloadNew\">Found latest version {{ newVersion.version }} <em>Click download to proceed</em></span>\n        <div *ngIf=\"deleteLedgerWarningShowOnUpdate\">\n            <span *ngIf=\"deleteLedgerWarning\">Warning: It is recommended to delete old ledger data. Click Delete</span>\n            <div *ngIf=\"deleteLedgerWarning\">\n                <button type=\"button\" class=\"btn btn-danger mt-4 mb-4\" (click)=\"deleteLedger()\">Delete</button>\n            </div>\n            <span *ngIf=\"deleteLedgerWarningProgress\">Deleting ledger data</span>\n            <span *ngIf=\"deleteLedgerWarningFinish\">Ledger data delted. Please procceed.</span>\n        </div>\n        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4\" (click)=\"nodeUpdate()\">Download</button>\n    </div>\n    <div class=\"modal-body text-center pb-4\" *ngIf=\"showDownloading\">\n        Downloading, please wait.<br>\n        <progressbar [value]=\"downloadProgress\" type=\"success\" [striped]=\"true\" [animate]=\"true\" style=\"height:26px; margin-top:16px; vertical-align: middle; background: #495057;\">{{ downloadProgress | number : '1.2-2' }}%</progressbar>\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showDownloadFinished\">\n        Download finished.\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showNoUpdate\">\n        No update found.\n    </div>\n  \n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showStartNode\">\n        <div>\n            <span *ngIf=\"deleteLedgerWarning\">Warning: If you are experiencing problems running the node it is recommended to delete old ledger data. Click Delete</span>\n            <div *ngIf=\"deleteLedgerWarning\">\n                <button type=\"button\" class=\"btn btn-danger mt-4 mb-4\" (click)=\"deleteLedger()\">Delete</button>\n            </div>\n            <span *ngIf=\"deleteLedgerWarningProgress\">Deleting ledger data</span>\n            <span *ngIf=\"deleteLedgerWarningFinish\">Ledger data delted. Please procceed.</span>\n        </div>\n        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4\" (click)=\"nodeStart()\">Start node</button>\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showStartingNode\">\n        Starting node...\n    </div>\n    <div class=\"modal-body text-center pb-4\" *ngIf=\"showSynchronizingNode && (api.nodeMainBlocksCount > api.nodeBlocksCount || api.nodeBlocksCount == 0 || api.nodeMainBlocksCount == 0)\">\n        Synchronizing Transactions please wait...<br>\n        <progressbar *ngIf=\"api.nodeMainBlocksCount != 0\" [max]=\"api.nodeMainBlocksCount\" type=\"info\" [value]=\"api.nodeBlocksCount\" [striped]=\"true\" [animate]=\"true\" style=\"height:26px; margin-top:16px; vertical-align: middle; background: #495057;\">{{ api.nodeBlocksCount }}/{{ api.nodeMainBlocksCount }}</progressbar>\n    </div>\n    <div class=\"modal-body text-center pb-4\" *ngIf=\"showSynchronizingNode && node.synchronizedPov !== true\">\n        Synchronizing POV please wait...<br>\n    </div>\n    <div class=\"modal-body text-center\" *ngIf=\"showSynchronizingNode && node.synchronized === true && api.nodeMainBlocksCount <= api.nodeBlocksCount && api.nodeBlocksCount != 0 && api.nodeMainBlocksCount != 0\">\n    <!--<div class=\"modal-body text-center\"> -->\n        <img src=\"assets/img/qlc-icon-staking-success-green.svg\" style=\"height:128px;width:128px;\" class=\"mt-2 mb-4\"><br>\n        The node is synchronized and ready to use.<br>\n        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4\" aria-label=\"Close\" (click)=\"closeModal()\">Close</button>\n        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4\" aria-label=\"Setup mining\" (click)=\"openMiningSetupModal()\">Setup mining</button>\n    </div>\n</ng-template>\n\n<!-- MINER STEP 01 -->\n\n<ng-template #templateMiningSetup>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left w-100 text-center\">Miner Setup</h4>\n    </div>\n    <div class=\"modal-body text-center pb-0\">\n        \n        <p><span class=\"title-modal-blue mt-5 mb-4\">Do you want to run a miner?</span><br>\n        PoV supports mutliple algorithms</p>\n\n        <hr class=\"hr-modal\">\n        <div class=\"container\" *ngIf=\"minerAccounts.length == 0\">\n            <div class=\"row\">\n                <div class=\"col-12 pb-3 pt-3\">\n                    <p class=\"text-center pt-2 pb-2\"><span class=\"title-modal-blue mt-0 mb-4\">You are not a miner yet</span><br>\n                        Stake 100k QLC and start mining.</p>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"container\" *ngIf=\"minerAccounts.length > 0\">\n            <div class=\"row\">\n                <div class=\"col-12 pb-3 pt-3\">\n                    <p class=\"text-left\">Please choose your account:</p>\n                </div>\n                <div class=\"col-12 mb-3\">\n                    <select class=\"custom-select\" [(ngModel)]=\"selectedMinerAccount\" id=\"form-horizontal-select\">\n                        <option *ngFor=\"let minerAccount of minerAccounts\" [value]=\"minerAccount.id\">{{ minerAccount.id | squeeze : '12,12' }}</option>\n                    </select>\n                </div>\n      \n            </div>\n            <div class=\"row\">\n                <div class=\"col-12 pb-3 pt-3\">\n                    <p class=\"text-left\">Please choose your favorite PoW miner.</p>\n                </div>\n                <div class=\"col-1 mb-3\"><input type=\"radio\" value=\"1\" name=\"pow-algo\" id=\"pow-algo-1\" [(ngModel)]=\"selectedMiner\"></div>\n                <div class=\"col-11 mb-3 pl-0\">\n                    <label for=\"pow-algo-1\" class=\"text-left w-100\">\n                        <span class=\"title-modal-blue\">Use gqlc-miner </span><span class=\"text-modal-red\">(SIMPLE & NOT RECOMMENDED)</span>\n                        <p>gqlc-miner is just for develop testing with very poor performance.</p>\n                    </label>\n                </div>\n        \n                <div class=\"col-1\"><input type=\"radio\" value=\"2\" name=\"pow-algo\" id=\"pow-algo-2\" [(ngModel)]=\"selectedMiner\"></div>\n                <div class=\"col-11 pl-0\">\n                    <label for=\"pow-algo-2\" class=\"text-left w-100\">\n                        <span class=\"title-modal-blue\">Use gqlc-pool </span><span class=\"text-modal-green\">(FOR ADVANCED USERS)</span>\n                        <p>gqlc-pool is a very simple mining pool between node and miner, which support stratum mining protocol.</p>\n                    </label>\n                </div>\n            </div>\n        </div>\n\n        <hr class=\"hr-modal\" style=\"margin-bottom:0;\">\n\n        <div class=\"container\" *ngIf=\"minerAccounts.length == 0\">\n            <div class=\"row\">\n                <div class=\"col-6 pb-3 pt-3 pl-2\">\n                    <button type=\"button\" class=\"btn btn-primary btn-grey mt-4 mb-4 w-100 pl-0 pr-0\" style=\"min-width: auto;\" aria-label=\"Close\" (click)=\"closeMiningSetupModal()\">OK</button>\n                </div>\n            </div>\n        </div> \n\n        <div class=\"container\" *ngIf=\"minerAccounts.length > 0\">\n            <div class=\"row\">\n                <div class=\"col-6 pb-3 pt-3 pr-2\">\n                    <button type=\"button\" class=\"btn btn-primary mt-4 mb-4 w-100 pl-0 pr-0\" style=\"min-width: auto;\" aria-label=\"Continue\" (click)=\"continueMinerSetup()\">YES, CONTINUE</button>\n                </div>\n                <div class=\"col-6 pb-3 pt-3 pl-2\">\n                    <button type=\"button\" class=\"btn btn-primary btn-grey mt-4 mb-4 w-100 pl-0 pr-0\" style=\"min-width: auto;\" aria-label=\"Close\" (click)=\"closeMiningSetupModal()\">I DON'T WANT TO MINE</button>\n                </div>\n            </div>\n        </div>        \n    </div>\n</ng-template>\n\n\n<ng-template #templatePoolSetup>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left w-100 text-center\">Gqlc Pool Setup</h4>\n    </div>\n    <div class=\"modal-body text-center pb-0\">\n        \n        <p><span class=\"title-modal-blue mt-5 mb-4\">Choose algorithm</span></p>\n\n        <hr class=\"hr-modal\" style=\"margin-bottom:0 !important;\">\n        \n        <div style=\"margin-left:-14px; margin-right:-14px;padding-left:14px;padding-right:14px;background: #f7f7f7;\">\n\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 pb-3 pt-3\">\n                        <p class=\"text-left\">Please choose your PoW algorithm.</p>\n                    </div>\n                    <div class=\"col-1\"><input type=\"radio\" value=\"SHA256D\" name=\"pow-algo\" id=\"pow-algo-1\" [(ngModel)]=\"selectedAlgo\"></div>\n                    <div class=\"col-11 pl-0\">\n                        <label for=\"pow-algo-1\" class=\"text-left w-100\">\n                            <span class=\"title-modal-blue\">SHA256D</span>\n                        </label>\n                    </div>\n            \n                    <div class=\"col-1\"><input type=\"radio\" value=\"X11\" name=\"pow-algo\" id=\"pow-algo-2\" [(ngModel)]=\"selectedAlgo\"></div>\n                    <div class=\"col-11 pl-0\">\n                        <label for=\"pow-algo-2\" class=\"text-left w-100\">\n                            <span class=\"title-modal-blue\">X11</span>\n                        </label>\n                    </div>\n\n                    <div class=\"col-1 mb-3\"><input type=\"radio\" value=\"SCRYPT\" name=\"pow-algo\" id=\"pow-algo-3\" [(ngModel)]=\"selectedAlgo\"></div>\n                    <div class=\"col-11 mb-3 pl-0\">\n                        <label for=\"pow-algo-3\" class=\"text-left w-100\">\n                            <span class=\"title-modal-blue\">SCRYPT</span>\n                        </label>\n                    </div>\n                </div>\n            </div>\n\n            <hr class=\"hr-modal\" style=\"margin-bottom:0 !important; margin-top:0 !important;\">\n            \n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-md-6 offset-md-3 pb-3 pt-3 pr-2\">\n                        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4 w-100 pl-0 pr-0\" style=\"min-width: auto;\" aria-label=\"Continue\" (click)=\"poolUpdate()\">Continue</button>\n                    </div>\n                </div>\n            </div>        \n\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #templateGqlcMiningSetup>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left w-100 text-center\">Gqlc Miner Setup</h4>\n    </div>\n    <div class=\"modal-body text-center pb-0\">\n        \n        <p><span class=\"title-modal-blue mt-5 mb-4\">Choose algorithm</span></p>\n\n        <hr class=\"hr-modal\" style=\"margin-bottom:0 !important;\">\n        \n        <div style=\"margin-left:-14px; margin-right:-14px;padding-left:14px;padding-right:14px;background: #f7f7f7;\">\n\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 pb-3 pt-3\">\n                        <p class=\"text-left\">Please choose your favorite PoW algorithm.</p>\n                    </div>\n                    <div class=\"col-1\"><input type=\"radio\" value=\"SHA256D\" name=\"pow-algo\" id=\"pow-algo-1\" [(ngModel)]=\"selectedAlgo\"></div>\n                    <div class=\"col-11 pl-0\">\n                        <label for=\"pow-algo-1\" class=\"text-left w-100\">\n                            <span class=\"title-modal-blue\">SHA256D</span>\n                        </label>\n                    </div>\n            \n                    <div class=\"col-1\"><input type=\"radio\" value=\"X11\" name=\"pow-algo\" id=\"pow-algo-2\" [(ngModel)]=\"selectedAlgo\"></div>\n                    <div class=\"col-11 pl-0\">\n                        <label for=\"pow-algo-2\" class=\"text-left w-100\">\n                            <span class=\"title-modal-blue\">X11</span>\n                        </label>\n                    </div>\n\n                    <div class=\"col-1 mb-3\"><input type=\"radio\" value=\"SCRYPT\" name=\"pow-algo\" id=\"pow-algo-3\" [(ngModel)]=\"selectedAlgo\"></div>\n                    <div class=\"col-11 mb-3 pl-0\">\n                        <label for=\"pow-algo-3\" class=\"text-left w-100\">\n                            <span class=\"title-modal-blue\">SCRYPT</span>\n                        </label>\n                    </div>\n                </div>\n            </div>\n\n            <hr class=\"hr-modal\" style=\"margin-bottom:0 !important; margin-top:0 !important;\">\n            \n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-md-6 offset-md-3 pb-3 pt-3 pr-2\">\n                        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4 w-100 pl-0 pr-0\" style=\"min-width: auto;\" aria-label=\"Continue\" (click)=\"minerUpdate()\">Continue</button>\n                    </div>\n                </div>\n            </div>        \n\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #templateMiner>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left w-100 text-center\">Gqlc Miner Setup</h4>\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showCheckingMinerStatus\">\n        Checking miner status...\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showMinerFound\">\n        Miner version {{ desktopConfig.minerData.version }} found. Checking for updates...\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showNoMinerFound\">\n        No miner found. Checking for latest version...\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showDownloadMiner\">\n        <span *ngIf=\"showDownloadMinerUpdate\">New miner version {{ newMinerVersion.version }} found. <em>Click download to proceed</em></span>\n        <span *ngIf=\"showDownloadMinerNew\">Found latest version {{ newMinerVersion.version }} <em>Click download to proceed</em></span>\n        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4\" (click)=\"runMinerUpdate()\">Download</button>\n    </div>\n    <div class=\"modal-body text-center pb-4\" *ngIf=\"showDownloadingMiner\">\n        Downloading, please wait.<br>\n        <progressbar [value]=\"downloadMinerProgress\" type=\"success\" [striped]=\"true\" [animate]=\"true\" style=\"height:26px; margin-top:16px; vertical-align: middle; background: #495057;\">{{ downloadMinerProgress | number : '1.2-2' }}%</progressbar>\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showDownloadMinerFinished\">\n        Download finished.\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showNoMinerUpdate\">\n        No update found.\n    </div>\n  \n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showStartMiner\">\n        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4\" (click)=\"minerStart()\">Start miner</button>\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showStartingMiner\">\n        Starting miner...\n    </div>\n    <div class=\"modal-body text-center\" *ngIf=\"showStartedMiner\">\n        <img src=\"assets/img/qlc-icon-staking-success-green.svg\" style=\"height:128px;width:128px;\" class=\"mt-2 mb-4\"><br>\n        The miner is running.<br>\n        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4\" aria-label=\"Close\" (click)=\"closeMinerModal()\">Close</button>\n    </div>\n</ng-template>\n\n<ng-template #templatePool>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left w-100 text-center\">Gqlc Pool Setup</h4>\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showCheckingPoolStatus && !showStartedPool\">\n        Checking pool status...\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showPoolFound\">\n        Pool version {{ desktopConfig.poolData.version }} found. Checking for updates...\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showNoPoolFound\">\n        No pool found. Checking for latest version...\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showDownloadPool\">\n        <span *ngIf=\"showDownloadPoolUpdate\">New Pool version {{ newPoolVersion.version }} found. <em>Click download to proceed</em></span>\n        <span *ngIf=\"showDownloadPoolNew\">Found latest version {{ newPoolVersion.version }} <em>Click download to proceed</em></span>\n        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4\" (click)=\"runPoolUpdate()\">Download</button>\n    </div>\n    <div class=\"modal-body text-center pb-4\" *ngIf=\"showDownloadingPool\">\n        Downloading, please wait.<br>\n        <progressbar [value]=\"downloadPoolProgress\" type=\"success\" [striped]=\"true\" [animate]=\"true\" style=\"height:26px; margin-top:16px; vertical-align: middle; background: #495057;\">{{ downloadPoolProgress | number : '1.2-2' }}%</progressbar>\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showDownloadPoolFinished\">\n        Download finished.\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showNoPoolUpdate && !showStartedPool\">\n        No update found.\n    </div>\n  \n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showStartPool\">\n        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4\" (click)=\"poolStart()\">Start pool</button>\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showStartingPool\">\n        Starting pool...\n    </div>\n    <div class=\"modal-body text-center\" *ngIf=\"showStartedPool\">\n        <img src=\"assets/img/qlc-icon-staking-success-green.svg\" style=\"height:128px;width:128px;\" class=\"mt-2 mb-4\"><br>\n        The pool is running.<br>\n        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4\" aria-label=\"Close\" (click)=\"closePoolModal()\">Close</button><br>\n        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4\" aria-label=\"Close\" (click)=\"openPoolMinersModal()\">Show possible miners</button>\n    </div>\n</ng-template>\n\n<!-- MINER STEP 02 -->\n<!--\n<ng-template #templateMiningSetup>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left w-100 text-center\">Miner Setup</h4>\n    </div>\n    <div class=\"modal-body text-center pb-0\">\n        \n        <p><span class=\"title-modal-blue mt-5 mb-4\">How to run different Stratum mining protocols</span></p>\n\n        <hr class=\"hr-modal\" style=\"margin-bottom:0 !important;\">\n        \n        <div style=\"margin-left:-14px; margin-right:-14px;padding-left:14px;padding-right:14px;background: #f7f7f7;\">\n\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 pb-2 pt-4\">\n                        <p class=\"text-left\"><span class=\"text-modal-comment\"># SHA256D</span><br>./gqlc-stratum -nodeurl http://127.0.0.1:29735 <strong>-algo SHA256D</strong> -miner qlc_xxxYOUR_QLC_ADDRESSxxx</p>\n                    </div>\n                </div>\n            </div>\n\n            <hr class=\"hr-modal\" style=\"margin-bottom:0 !important; margin-top:0 !important;\">\n\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 pb-2 pt-4\">\n                        <p class=\"text-left\"><span class=\"text-modal-comment\"># or X11</span><br>./gqlc-stratum -nodeurl http://127.0.0.1:29735 <strong>-algo X11</strong> -miner qlc_xxxYOUR_QLC_ADDRESSxxx</p>\n                    </div>\n                </div>\n            </div>\n\n            <hr class=\"hr-modal\" style=\"margin-bottom:0 !important; margin-top:0 !important;\">\n\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 pb-2 pt-4\">\n                        <p class=\"text-left\"><span class=\"text-modal-comment\"># or SCRYPT</span><br>./gqlc-stratum -nodeurl http://127.0.0.1:29735 <strong>-algo SCRYPT</strong> -miner qlc_xxxYOUR_QLC_ADDRESSxxx</p>\n                    </div>\n                </div>\n            </div>\n\n            <hr class=\"hr-modal\" style=\"margin-bottom:0 !important; margin-top:0 !important;\">\n            \n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-md-6 offset-md-3 pb-3 pt-3 pr-2\">\n                        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4 w-100 pl-0 pr-0\" style=\"min-width: auto;\" aria-label=\"Continue\" (click)=\"closeMiningSetupModal()\">I UNDERSTAND, CONTINUE</button>\n                    </div>\n                </div>\n            </div>        \n\n        </div>\n    </div>\n</ng-template>\n-->\n\n\n<!-- MINER STEP 03 -->\n<ng-template #templatePoolMiners>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left w-100 text-center\">Miner Setup</h4>\n    </div>\n    <div class=\"modal-body text-center pb-0\">\n        \n        <p><span class=\"title-modal-blue mt-5 mb-4\">What kind of miner will you use?</span>\n\n        <hr class=\"hr-modal\">\n        \n        <div class=\"container pb-3\">\n            <div class=\"row\">\n                <div class=\"col-12 pb-3 pt-3\">\n                    <p class=\"text-left\">Please choose your Miner</p>\n                </div>\n\n                <div class=\"col-1 mb-3\"><input type=\"radio\" value=\"1\" name=\"pow-miner\" id=\"pow-miner-1\" [(ngModel)]=\"selectedPoolMiner\"></div>\n                <div class=\"col-11 mb-3 pl-0\">\n                    <label for=\"pow-miner-1\" class=\"text-left w-100\">\n                        <span class=\"title-modal-blue mb-3\">Use CPU Miner </span><span class=\"text-modal-red\">(NOT RECOMMENDED)</span>\n                        <p class=\"pt-2\">Crypto CPUminer (Linux + Windows)<br><a href=\"https://github.com/tpruvot/cpuminer-multi\" target=\"_blank\">https://github.com/tpruvot/cpuminer-multi</a></p>\n                    </label>\n                </div>\n        \n                <div class=\"col-1\"><input type=\"radio\" value=\"2\" name=\"pow-miner\" id=\"pow-miner-2\" [(ngModel)]=\"selectedPoolMiner\"></div>\n                <div class=\"col-11 pl-0\">\n                    <label for=\"pow-miner-2\" class=\"text-left w-100\">\n                        <span class=\"title-modal-blue mb-3\">Use GPU Miner </span>\n                        <p class=\"pt-2 pb-0 mb-0\">OPENCL:<br><a href=\"https://github.com/tpruvot/cpuminer-multi\" target=\"_blank\">https://github.com/tpruvot/cpuminer-multi</a></p>\n                        <p class=\"mt-2 pt-0\">CUDA:<br><a href=\"https://github.com/luke-jr/bfgminer\" target=\"_blank\">https://github.com/luke-jr/bfgminer</a></p>\n                    </label>\n                </div>\n\n                <div class=\"col-1\"><input type=\"radio\" value=\"3\" name=\"pow-miner\" id=\"pow-miner-3\" [(ngModel)]=\"selectedPoolMiner\"></div>\n                <div class=\"col-11 pl-0\">\n                    <label for=\"pow-miner-3\" class=\"text-left w-100\">\n                        <span class=\"title-modal-blue\">Use ASIC Miner</span>\n                    </label>\n                </div>\n            </div>\n        </div>\n\n        <hr class=\"hr-modal\" style=\"margin-bottom:0;\">\n\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-12 col-md-6 offset-md-3 pb-3 pt-3 pr-2\">\n                    <button type=\"button\" class=\"btn btn-primary mt-4 mb-4 w-100 pl-0 pr-0\" style=\"min-width: auto;\" aria-label=\"Continue\" (click)=\"continuePoolMinerSetup()\">CONTINUE TO INSTRUCTIONS</button>\n                </div>\n            </div>\n        </div>        \n    </div>\n</ng-template>\n\n<!-- MINER STEP 03/A -->\n<ng-template #templatePoolMinersCPU>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left w-100 text-center\">Miner Setup</h4>\n    </div>\n    <div class=\"modal-body text-center pb-0\">\n        \n        <p><span class=\"title-modal-blue mt-5 mb-4\">CPU Miner Instructions</span></p>\n\n        <hr class=\"hr-modal\" style=\"margin-bottom:0 !important;\">\n        \n        <div style=\"margin-left:-14px; margin-right:-14px;padding-left:14px;padding-right:14px;\">\n\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 pb-2 pt-4\">\n                        <p class=\"text-left\">Crypto CPUminer (Linux + Windows)<br><a href=\"https://github.com/tpruvot/cpuminer-multi\" target=\"_blank\">https://github.com/tpruvot/cpuminer-multi</a></p>\n                    </div>\n                </div>\n            </div>\n\n            <hr class=\"hr-modal\" style=\"margin-bottom:0 !important; margin-top:0 !important;\">\n\n        </div>\n\n        <div style=\"margin-left:-14px; margin-right:-14px;padding-left:14px;padding-right:14px;background: #f7f7f7;\">\n\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 pb-2 pt-4\">\n                        <p class=\"text-left\"><span class=\"text-modal-comment\"># SHA256D</span><br>./cpuminer -a sha256d -o stratum+tcp://127.0.0.1:3333 -O test.1:test</p>\n                    </div>\n                </div>\n            </div>\n\n            <hr class=\"hr-modal\" style=\"margin-bottom:0 !important; margin-top:0 !important;\">\n\n        </div>\n\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-12 col-md-6 offset-md-3 pb-3 pt-3 pr-2\">\n                    <button type=\"button\" class=\"btn btn-primary mt-4 mb-4 w-100 pl-0 pr-0\" style=\"min-width: auto;\" aria-label=\"Done\" (click)=\"closePoolMinersModalCPU()\">Done</button>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</ng-template>\n\n<!-- MINER STEP 03/B -->\n<ng-template #templatePoolMinersGPU>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left w-100 text-center\">Miner Setup</h4>\n    </div>\n    <div class=\"modal-body text-center pb-0\">\n        \n        <p><span class=\"title-modal-blue mt-5 mb-4\">GPU miner Instructions</span></p>\n\n        <hr class=\"hr-modal\" style=\"margin-bottom:0 !important;\">\n        \n        <div style=\"margin-left:-14px; margin-right:-14px;padding-left:14px;padding-right:14px;\">\n\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 pb-2 pt-4\">\n                        <p class=\"text-left\"><span class=\"font-blue\">OPEN CL</span> (Supports sha256d/scrypt, without x11.)<br><a href=\"https://github.com/luke-jr/bfgminer\" target=\"_blank\">https://github.com/luke-jr/bfgminer</a></p>\n                    </div>\n                </div>\n            </div>\n\n            <hr class=\"hr-modal\" style=\"margin-bottom:0 !important; margin-top:0 !important;\">\n\n        </div>\n\n        <div style=\"margin-left:-14px; margin-right:-14px;padding-left:14px;padding-right:14px;background: #f7f7f7;\">\n\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 pb-2 pt-4\">\n                        <p class=\"text-left\"><span class=\"text-modal-comment\"># SHA256D</span><br>./bfgminer -o stratum+tcp://127.0.0.1:3333 -O test.1:test -S opencl:auto</p>\n                        <p class=\"text-left\"><span class=\"text-modal-comment\"># SCRYPT</span><br>./bfgminer --scrypt -o stratum+tcp://127.0.0.1:3333 -O test.1:test -S opencl:auto</p>\n                    </div>\n                </div>\n            </div>\n            <hr class=\"hr-modal\" style=\"margin-bottom:0 !important; margin-top:0 !important;\">\n\n        </div>\n        \n        <div style=\"margin-left:-14px; margin-right:-14px;padding-left:14px;padding-right:14px;\">\n\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 pb-2 pt-4\">\n                        <p class=\"text-left\"><span class=\"font-blue\">CUDA</span> (Supports sha256d/x11/scrypt)<br><a href=\"https://github.com/KlausT/ccminer\" target=\"_blank\">https://github.com/KlausT/ccminer</a></p>\n                    </div>\n                </div>\n            </div>\n            <hr class=\"hr-modal\" style=\"margin-bottom:0 !important; margin-top:0 !important;\">\n\n        </div>\n\n        <div style=\"margin-left:-14px; margin-right:-14px;padding-left:14px;padding-right:14px;background: #f7f7f7;\">\n\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 pb-2 pt-4\">\n                        <p class=\"text-left\"><span class=\"text-modal-comment\"># Please follow ccminer's guide</span></p>\n                    </div>\n                </div>\n            </div>\n            <hr class=\"hr-modal\" style=\"margin-bottom:0 !important; margin-top:0 !important;\">\n\n        </div>        \n\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-12 col-md-6 offset-md-3 pb-3 pt-3 pr-2\">\n                    <button type=\"button\" class=\"btn btn-primary mt-4 mb-4 w-100 pl-0 pr-0\" style=\"min-width: auto;\" aria-label=\"Done\" (click)=\"closePoolMinersModalGPU()\">Done</button>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</ng-template>\n\n<!-- MINER STEP 03/C -->\n<ng-template #templatePoolMinersASIC>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left w-100 text-center\">Miner Setup</h4>\n    </div>\n    <div class=\"modal-body text-center pb-0\">\n        \n        <p><span class=\"title-modal-blue mt-5 mb-4\">ASIC Miner Instructions</span></p>\n\n        <hr class=\"hr-modal\" style=\"margin-bottom:0 !important;\">\n        \n        <div style=\"margin-left:-14px; margin-right:-14px;padding-left:14px;padding-right:14px;\">\n\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 pb-2 pt-4\">\n                        <p class=\"text-left\">Please check your miner's guides, and config the miner to use gqlc stratum pool, such as:</p>\n                    </div>\n                </div>\n            </div>\n            <hr class=\"hr-modal\" style=\"margin-bottom:0 !important; margin-top:0 !important;\">\n\n        </div>\n\n        <div style=\"margin-left:-14px; margin-right:-14px;padding-left:14px;padding-right:14px;background: #f7f7f7;\">\n\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 pb-2 pt-4\">\n                        <p class=\"text-left\">stratum+tcp://192.168.1.100:3333</p>\n                    </div>\n                </div>\n            </div>\n            <hr class=\"hr-modal\" style=\"margin-bottom:0 !important; margin-top:0 !important;\">\n\n        </div>\n\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-12 col-md-6 offset-md-3 pb-3 pt-3 pr-2\">\n                    <button type=\"button\" class=\"btn btn-primary mt-4 mb-4 w-100 pl-0 pr-0\" style=\"min-width: auto;\" aria-label=\"Done\" (click)=\"closePoolMinersModalASIC()\">Done</button>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</ng-template>\n\n<ng-template #templateNodeStopped>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left w-100 text-center\">Node Control Center</h4>\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showNodeStopped\">\n        Node stopped. Please run the node to use the wallet.\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showStartNode\">\n        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4\" (click)=\"nodeStart()\">Start node</button>\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showStartingNode\">\n        Starting node...\n    </div>\n    <div class=\"modal-body text-center pb-4\" *ngIf=\"showSynchronizingNode && (api.nodeMainBlocksCount > api.nodeBlocksCount || api.nodeBlocksCount == 0 || api.nodeMainBlocksCount == 0)\">\n        Synchronizing Transactions please wait...<br>\n        <progressbar *ngIf=\"api.nodeMainBlocksCount != 0\" [max]=\"api.nodeMainBlocksCount\" type=\"info\" [value]=\"api.nodeBlocksCount\" [striped]=\"true\" [animate]=\"true\" style=\"height:26px; margin-top:16px; vertical-align: middle; background: #495057;\">{{ api.nodeBlocksCount }}/{{ api.nodeMainBlocksCount }}</progressbar>\n    </div>\n    <div class=\"modal-body text-center pb-4\" *ngIf=\"showSynchronizingNode && node.synchronizedPov !== true\">\n        Synchronizing POV please wait...<br>\n    </div>\n    <div class=\"modal-body text-center\" *ngIf=\"showSynchronizingNode && node.synchronized === true && api.nodeMainBlocksCount <= api.nodeBlocksCount && api.nodeBlocksCount != 0 && api.nodeMainBlocksCount != 0\">\n        <img src=\"assets/img/qlc-icon-staking-success-green.svg\" style=\"height:128px;width:128px;\" class=\"mt-2 mb-4\"><br>\n        The node is synchronized and ready to use.<br>\n        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4\" aria-label=\"Close\" (click)=\"closeNodeStoppedModal()\">Close</button>\n    </div>\n</ng-template>\n\n<ng-template #templateUpdateCheck>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title pull-left w-100 text-center\">Node Control Center</h4>\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showCheckingStatus\">\n        Checking for udpates...\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showNodeFound\">\n        Node version {{ desktopConfig.nodeData.version }} found. Checking for node updates...\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showDownload\">\n        <span *ngIf=\"showDownloadUpdate\">New node version {{ newVersion.version }} found. <em>Click download to proceed</em></span>\n        <div *ngIf=\"deleteLedgerWarningShowOnUpdate\">\n            <span *ngIf=\"deleteLedgerWarning\">Warning: It is recommended to delete old ledger data. Click Delete</span>\n            <div *ngIf=\"deleteLedgerWarning\">\n                <button type=\"button\" class=\"btn btn-danger mt-4 mb-4\" (click)=\"deleteLedger()\">Delete</button>\n            </div>\n            <span *ngIf=\"deleteLedgerWarningProgress\">Deleting ledger data</span>\n            <span *ngIf=\"deleteLedgerWarningFinish\">Ledger data delted. Please procceed.</span>\n        </div>\n        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4\" (click)=\"nodeUpdate()\">Download</button>\n    </div>\n    <div class=\"modal-body text-center pb-4\" *ngIf=\"showDownloading\">\n        Downloading, please wait.<br>\n        <progressbar [value]=\"downloadProgress\" type=\"success\" [striped]=\"true\" [animate]=\"true\" style=\"height:26px; margin-top:16px; vertical-align: middle; background: #495057;\">{{ downloadProgress | number : '1.2-2' }}%</progressbar>\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showDownloadFinished\">\n        Download finished.\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showNoUpdate\">\n        No update found.\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showStartNode\">\n        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4\" (click)=\"nodeStart()\">Start node</button>\n    </div>\n    <div class=\"modal-body text-center pb-0\" *ngIf=\"showStartingNode\">\n        Starting node...\n    </div>\n    <div class=\"modal-body text-center pb-4\" *ngIf=\"!showDownload && !showDownloading && !showStartNode && showSynchronizingNode && (api.nodeMainBlocksCount != api.nodeBlocksCount || api.nodeBlocksCount == 0 || api.nodeMainBlocksCount == 0)\">\n        Synchronizing please wait...<br>\n        <progressbar *ngIf=\"api.nodeMainBlocksCount != 0\" [max]=\"api.nodeMainBlocksCount\" type=\"info\" [value]=\"api.nodeBlocksCount\" [striped]=\"true\" [animate]=\"true\" style=\"height:26px; margin-top:16px; vertical-align: middle; background: #495057;\">{{ api.nodeBlocksCount }}/{{ api.nodeMainBlocksCount }}</progressbar>\n    </div>\n    <div class=\"modal-body text-center\" *ngIf=\"!showDownload && !showDownloading && !showStartNode && showSynchronizingNode && api.nodeMainBlocksCount == api.nodeBlocksCount && api.nodeBlocksCount != 0 && api.nodeMainBlocksCount != 0\">\n        <img src=\"assets/img/qlc-icon-staking-success-green.svg\" style=\"height:128px;width:128px;\" class=\"mt-2 mb-4\"><br>\n        The node is synchronized and ready to use.<br>\n        <button type=\"button\" class=\"btn btn-primary mt-4 mb-4\" aria-label=\"Close\" (click)=\"closeUpdateCheckModal()\">Close</button>\n    </div>\n</ng-template>\n\n<div class=\"nodeControl\" *ngIf=\"showNodeControl\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-12 pl-md-2 pr-md-2\">\n\n                <div class=\"nodeControlIcon\" [ngClass]=\"{'nodeOnline': node.running}\"></div>\n\n                <div class=\"nodeInfoBoxHolder\">\n                    <div class=\"nodeInfoBox first\">\n                        <span class=\"nodeLabel\">Node status: </span>\n                        <span class=\"nodeData\" *ngIf=\"node.running == false\">Offline</span>\n                        <span class=\"nodeData\" *ngIf=\"node.running == true && showSynchronizingNode && (api.nodeMainBlocksCount != api.nodeBlocksCount || api.nodeBlocksCount == 0 || api.nodeMainBlocksCount == 0)\">Synchronizing</span>\n                        <span class=\"nodeData\" *ngIf=\"node.running == true && showSynchronizingNode && api.nodeMainBlocksCount == api.nodeBlocksCount && api.nodeBlocksCount != 0 && api.nodeMainBlocksCount != 0\">Online</span>\n                    </div>\n                    <!--<div class=\"nodeInfoBox\" *ngIf=\"node.running == true\">\n                        <span class=\"nodeLabel\">Memory Usage: </span>\n                        <span class=\"nodeData\">{{ nodeMemoryUsage / 1024 | number : '1.2-2' }} K</span>       \n                    </div>-->\n                    <div class=\"nodeInfoBox third\" *ngIf=\"node.running == true && platform != 'win32'\">\n                        <span class=\"nodeLabel\">CPU Usage: </span>\n                        <span class=\"nodeData\">{{ nodeCPUUsage | number : '1.2-2' }} %</span>\n                    </div>\n                    <div class=\"nodeInfoBox third\" *ngIf=\"node.running == true && platform == 'win32'\">\n                        <span class=\"nodeLabel\">Node version: </span>\n                        <span class=\"nodeData\">{{ desktopConfig.nodeData.version }}</span>\n                    </div>\n                    <!--<div class=\"nodeInfoBox\" *ngIf=\"node.running == true\">\n                        <span class=\"nodeLabel\">Uptime: </span>\n                        <span class=\"nodeData\">{{ nodeUptime }}</span>\n                    </div>-->\n                </div>\n                <div class=\"nodeInfoBoxButton\" *ngIf=\"node.running == true\" style=\"right: 160px; position: absolute;\">\n                    <button (click)=\"openMiningSetupModal()\" class=\"btn btn-primary btn-node-start btn-small mt-2 mb-2\">\n                        Setup\n                    </button>\n                </div>\n                <div class=\"nodeInfoBoxButton\" *ngIf=\"node.running == true\">\n                    <button (click)=\"nodeStop()\" class=\"btn btn-primary btn-node-start btn-small mt-2 mb-2\">\n                        Stop node\n                    </button>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"minerControl\" *ngIf=\"showMinerControl\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-12 pl-md-2 pr-md-2\">\n\n                <div class=\"nodeControlIcon\" [ngClass]=\"{'nodeOnline': showStartedMiner}\"></div>\n\n                <div class=\"nodeInfoBoxHolder\">\n                    <div class=\"minerInfoBoxFirst\">\n                        <span class=\"nodeLabel\">Miner status: </span>\n                        <span class=\"nodeData\" *ngIf=\"showStartedMiner == false\">Not running</span>\n                        <span class=\"nodeData\" *ngIf=\"showStartedMiner\">Running</span>\n                    </div>\n                    <div class=\"minerInfoBox\" *ngIf=\"showStartedMiner\">\n                        <span class=\"nodeLabel\">Last message: </span>\n                        <span class=\"nodeData\">{{ minerLastMsg }}</span>       \n                    </div>\n                    <!--\n                    <div class=\"nodeInfoBox\" *ngIf=\"node.running == true\">\n                        <span class=\"nodeLabel\">Memory Usage: </span>\n                        <span class=\"nodeData\">{{ nodeMemoryUsage / 1024 | number : '1.2-2' }} K</span>       \n                    </div>\n                    <div class=\"nodeInfoBox third\" *ngIf=\"node.running == true && platform != 'win32'\">\n                        <span class=\"nodeLabel\">CPU Usage: </span>\n                        <span class=\"nodeData\">{{ nodeCPUUsage | number : '1.2-2' }} %</span>\n                    </div>\n                    <div class=\"nodeInfoBox third\" *ngIf=\"node.running == true && platform == 'win32'\">\n                        <span class=\"nodeLabel\">Miner version: </span>\n                        <span class=\"nodeData\">{{ desktopConfig.nodeData.version }}</span>\n                    </div>\n                    <div class=\"nodeInfoBox\" *ngIf=\"node.running == true\">\n                        <span class=\"nodeLabel\">Uptime: </span>\n                        <span class=\"nodeData\">{{ nodeUptime }}</span>\n                    </div>\n                    -->\n                </div>\n                <div class=\"minerInfoBoxButton\" *ngIf=\"showStartedMiner\">\n                    <button (click)=\"minerStop()\" class=\"btn btn-primary btn-node-start btn-small mt-2 mb-2\">\n                        Stop miner\n                    </button>\n                </div>\n                <div class=\"minerInfoBoxButton\" *ngIf=\"!showStartedMiner\">\n                    <button (click)=\"minerStart()\" class=\"btn btn-primary btn-node-start btn-small mt-2 mb-2\">\n                        Start miner\n                    </button>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"minerControl\" *ngIf=\"showPoolControl\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-12 pl-md-2 pr-md-2\">\n\n                <div class=\"nodeControlIcon\" [ngClass]=\"{'nodeOnline': showStartedPool}\"></div>\n\n                <div class=\"nodeInfoBoxHolder\">\n                    <div class=\"minerInfoBoxFirst\">\n                        <span class=\"nodeLabel\">Pool status: </span>\n                        <span class=\"nodeData\" *ngIf=\"showStartedPool == false\">Not running</span>\n                        <span class=\"nodeData\" *ngIf=\"showStartedPool\">Running</span>\n                    </div>\n                    <div class=\"minerInfoBox\" *ngIf=\"showStartedPool\">\n                        <span class=\"nodeLabel\">Last message: </span>\n                        <span class=\"nodeData\">{{ poolLastMsg }}</span>       \n                    </div>\n                    <!--\n                    <div class=\"nodeInfoBox\" *ngIf=\"node.running == true\">\n                        <span class=\"nodeLabel\">Memory Usage: </span>\n                        <span class=\"nodeData\">{{ nodeMemoryUsage / 1024 | number : '1.2-2' }} K</span>       \n                    </div>\n                    <div class=\"nodeInfoBox third\" *ngIf=\"node.running == true && platform != 'win32'\">\n                        <span class=\"nodeLabel\">CPU Usage: </span>\n                        <span class=\"nodeData\">{{ nodeCPUUsage | number : '1.2-2' }} %</span>\n                    </div>\n                    <div class=\"nodeInfoBox third\" *ngIf=\"node.running == true && platform == 'win32'\">\n                        <span class=\"nodeLabel\">Miner version: </span>\n                        <span class=\"nodeData\">{{ desktopConfig.nodeData.version }}</span>\n                    </div>\n                    <div class=\"nodeInfoBox\" *ngIf=\"node.running == true\">\n                        <span class=\"nodeLabel\">Uptime: </span>\n                        <span class=\"nodeData\">{{ nodeUptime }}</span>\n                    </div>\n                    -->\n                </div>\n                <div class=\"minerInfoBoxButton\" *ngIf=\"showStartedPool\">\n                    <button (click)=\"poolStop()\" class=\"btn btn-primary btn-node-start btn-small mt-2 mb-2\">\n                        Stop pool\n                    </button>\n                </div>\n                <div class=\"minerInfoBoxButton\" *ngIf=\"!showStartedPool\">\n                    <button (click)=\"openPoolSetupModal()\" class=\"btn btn-primary btn-node-start btn-small mt-2 mb-2\">\n                        Start pool\n                    </button>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, TemplateRef, ContentChild, ViewChild } from '@angular/core';\nimport { IpcService } from 'src/app/services/ipc.service';\nimport { NodeService } from 'src/app/services/node.service';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { ApiService } from 'src/app/services/api.service';\nimport { interval, timer } from 'rxjs';\nimport { WalletService } from 'src/app/services/wallet.service';\n\n@Component({\n  selector: 'app-desktop',\n  templateUrl: './desktop.component.html',\n  styleUrls: ['./desktop.component.scss']\n})\nexport class DesktopComponent implements OnInit {\n  accounts = this.walletService.wallet.accounts;\n  minerAccounts = [];\n  selectedMinerAccount = '';\n\n  modalRef: BsModalRef;\n  modalNodeStoppedRef: BsModalRef;\n  modalUpdateCheckRef: BsModalRef;\n  modalMiningSetupRef: BsModalRef;\n  modalGqlcMiningSetupRef: BsModalRef;\n  modalPoolSetupRef: BsModalRef;\n\n  modalMinerRef: BsModalRef;\n  modalPoolRef: BsModalRef;\n  modalPoolMinersRef: BsModalRef;\n  modalPoolMinersCPURef: BsModalRef;\n  modalPoolMinersGPURef: BsModalRef;\n  modalPoolMinersASICRef: BsModalRef;\n  \n  minerStats = [];\n\n  modalConfig = {\n    backdrop: true,\n    ignoreBackdropClick: true\n  };\n\n  desktopConfig = {\n    version: '',\n    nodeData: {\n      version: '',\n      filename: '',\n      gitrev: '',\n      platform: ''\n    },\n    minerData: {\n      version: '',\n      filename: '',\n      gitrev: '',\n      platform: ''\n    },\n    poolData: {\n      version: '',\n      filename: '',\n      gitrev: '',\n      platform: ''\n    }\n  };\n\n  showNodeControl = true;\n\n  deleteLedgerWarning = true;\n  deleteLedgerWarningProgress = false;\n  deleteLedgerWarningFinish = false;\n  deleteLedgerWarningShowOnUpdate = false;\n\n  downloadProgress = 0;\n  newVersion = '';\n\n  startingDesktop = true;\n  stoppedDesktop = false;\n  stoppingNode = false;\n  updateCheckDesktop = false;\n\n  showCheckingStatus = true;\n  showNodeFound = false;\n  showNoNodeFound = false;\n  showDownload = false;\n  showDownloadUpdate = false;\n  showDownloadNew = false;\n  showDownloading = false;\n  showDownloadFinished = false;\n  showStartNode = false;\n  showStartingNode = false;\n  showSynchronizingNode = false;\n  showNoUpdate = false;\n  showNodeStopped = false;\n\n  nodeMemoryUsage = 0;\n  nodeCPUUsage = 0; // not working correctly on windows - pidusage\n  nodeUptime = '';\n\n  platform = '';\n  arch = '';\n\n  //miner\n\n  minerLastMsg = '';\n  minerLog = [];\n\n  selectedMiner = '1';\n  selectedAlgo = 'SHA256D';\n  selectedPoolMiner = '1';\n\n\n  showCheckingMinerStatus = true;\n  showMinerFound = false;\n  showNoMinerFound = false;\n  showDownloadMinerNew = false;\n  showDownloadMinerUpdate = false;\n\n  showDownloadMiner = false;\n  showDownloadingMiner = false;\n  showDownloadMinerFinished = false;\n  \n  downloadMinerProgress = 0;\n  newMinerVersion = '';\n\n  showNoMinerUpdate = false;\n  showStartMiner = false;\n  showStartingMiner = false;\n  showStartedMiner = false;\n  stoppingMiner = false;\n\n  showMinerControl = false;\n  \n  //pool\n\n  poolLastMsg = '';\n  poolLog = [];\n\n  showCheckingPoolStatus = true;\n  showPoolFound = false;\n  showNoPoolFound = false;\n  showDownloadPoolNew = false;\n  showDownloadPoolUpdate = false;\n\n  showDownloadPool = false;\n  showDownloadingPool = false;\n  showDownloadPoolFinished = false;\n  \n  downloadPoolProgress = 0;\n  newPoolVersion = '';\n\n  showNoPoolUpdate = false;\n  showStartPool = false;\n  showStartingPool = false;\n  showStartedPool = false;\n  stoppingPool = false;\n\n  showPoolControl = false;\n\n  private checkProccesInterval$ = interval(5000);\n\n\n  @ViewChild('template', { read: TemplateRef, static:true }) template: TemplateRef<any>;\n  @ViewChild('templateNodeStopped', { read: TemplateRef, static:true }) templateNodeStopped: TemplateRef<any>;\n  @ViewChild('templateUpdateCheck', { read: TemplateRef, static:true }) templateUpdateCheck: TemplateRef<any>;\n  @ViewChild('templateMiningSetup', { read: TemplateRef, static:true }) templateMiningSetup: TemplateRef<any>;\n  @ViewChild('templateGqlcMiningSetup', { read: TemplateRef, static:true }) templateGqlcMiningSetup: TemplateRef<any>;\n  \n  @ViewChild('templateMiner', { read: TemplateRef, static:true }) templateMiner: TemplateRef<any>;\n\n  @ViewChild('templatePool', { read: TemplateRef, static:true }) templatePool: TemplateRef<any>;\n  @ViewChild('templatePoolSetup', { read: TemplateRef, static:true }) templatePoolSetup: TemplateRef<any>;\n  @ViewChild('templatePoolMiners', { read: TemplateRef, static:true }) templatePoolMiners: TemplateRef<any>;\n  @ViewChild('templatePoolMinersCPU', { read: TemplateRef, static:true }) templatePoolMinersCPU: TemplateRef<any>;\n  @ViewChild('templatePoolMinersGPU', { read: TemplateRef, static:true }) templatePoolMinersGPU: TemplateRef<any>;\n  @ViewChild('templatePoolMinersASIC', { read: TemplateRef, static:true }) templatePoolMinersASIC: TemplateRef<any>;\n  \n\n  \n\n  \n\n  \n\n  \n  constructor(\n    public api: ApiService,\n    public ipc: IpcService, \n    public node: NodeService, \n    private modalService: BsModalService,\n    private notifications: NotificationService,\n    private walletService: WalletService\n  ) { }\n\n  async ngOnInit() {\n    this.ipc.on('update-check', async (event, data) => {\n      console.log('got event update-check');\n      console.log('got data');\n      console.log(data);\n      this.showDownload = false;\n      this.showDownloading = false;\n      this.showNoUpdate = false;\n      this.showDownloadFinished = false;\n      const latest = await this.api.nodeVersion(this.desktopConfig.version,this.desktopConfig.nodeData.version,this.platform,this.arch);\n      //console.log(latest);\n      if (latest.result) {\n        if (this.desktopConfig.nodeData.version != latest.result.version) {\n          this.showDownload = true;\n          this.newVersion = latest.result;\n          if (this.desktopConfig.nodeData.version == '') {\n            this.showDownloadNew = true;\n          } else {\n            this.showDownloadUpdate = true;\n          }\n\n        } else {\n          this.showNoUpdate = true;\n          this.showStartNode = true;\n        }\n      }\n      this.openUpdateCheckModal(this.templateUpdateCheck);\n    });\n    this.ipc.on('download-progress', (event, data) => {\n      //console.log('got event');\n      //console.log(event);\n      //console.log('got data');\n      //console.log(data);\n      this.downloadProgress = data.progress;\n      this.showDownload = false;\n      this.showDownloadUpdate = false;\n      this.showDownloadNew = false;\n      this.showDownloading = true;\n    });\n    this.ipc.on('delete-ledger-finish', (event, data) => {\n      this.deleteLedgerWarningProgress = false;\n      this.deleteLedgerWarningFinish = true;\n    });\n    this.ipc.on('download-finished', (event, data) => {\n      //console.log('got event');\n      //console.log(event);\n      //console.log('got data');\n      //console.log(data);\n      this.desktopConfig.nodeData = data;\n      this.showDownload = false;\n      this.showDownloadUpdate = false;\n      this.showDownloadNew = false;\n      this.showDownloading = false;\n      this.showDownloadFinished = true;\n      this.showStartNode = true;\n    });\n    this.ipc.on('download-miner-progress', (event, data) => {\n      //console.log('got event');\n      //console.log(event);\n      //console.log('got data');\n      //console.log(data);\n      this.downloadMinerProgress = data.progress;\n      this.showDownloadMiner = false;\n      this.showDownloadMinerUpdate = false;\n      this.showDownloadMinerNew = false;\n      this.showDownloadingMiner = true;\n    });\n    this.ipc.on('download-miner-finished', (event, data) => {\n      //console.log('got event');\n      //console.log(event);\n      //console.log('got data');\n      //console.log(data);\n      this.showDownloadMiner = false;\n      this.showDownloadMinerUpdate = false;\n      this.showDownloadMinerNew = false;\n      this.showDownloadingMiner = false;\n      this.showDownloadMinerFinished = true;\n      this.showStartMiner = true;\n    });\n    this.ipc.on('miner-log', (event, data) => {\n      //console.log('got event');\n      //console.log(event);\n      //console.log('got data');\n      //console.log(data);\n      this.minerLastMsg = data;\n      this.minerLog.push(data);\n    });\n    this.ipc.on('download-pool-progress', (event, data) => {\n      //console.log('got event');\n      //console.log(event);\n      //console.log('got data');\n      //console.log(data);\n      this.downloadPoolProgress = data.progress;\n      this.showDownloadPool = false;\n      this.showDownloadPoolUpdate = false;\n      this.showDownloadPoolNew = false;\n      this.showDownloadingPool = true;\n    });\n    this.ipc.on('download-pool-finished', (event, data) => {\n      //console.log('got event');\n      //console.log(event);\n      //console.log('got data');\n      //console.log(data);\n      this.showDownloadPool = false;\n      this.showDownloadPoolUpdate = false;\n      this.showDownloadPoolNew = false;\n      this.showDownloadingPool = false;\n      this.showDownloadPoolFinished = true;\n      this.showStartPool = true;\n    });\n    this.ipc.on('pool-log', (event, data) => {\n      //console.log('got event');\n      //console.log(event);\n      //console.log('got data');\n      //console.log(data);\n      this.poolLastMsg = data;\n      this.poolLog.push(data);\n    });\n    this.ipc.on('node-running', (event, data) => {\n      //console.log('got node-running event',event);\n      //console.log('got data',data);\n      //console.log(data);\n      if (data.status == 1) {\n        if (this.stoppingNode === false && !this.showStartNode && !this.showDownload && !this.showDownloading && !this.showDownloadFinished && !this.showNoUpdate) {\n          this.node.running = true;\n          this.showStartNode = false;\n          this.showStartingNode = false;\n          if (this.showSynchronizingNode === false) {\n            this.api.connect();\n            this.showSynchronizingNode = true;\n            this.node.setSynchronizingPov();\n            this.node.setSynchronizingTransactions();\n          }\n          \n        }\n      } else {\n        if (this.node.running === true) {\n          this.node.setOffline('Node stopped.');\n          this.node.running = false;\n          this.node.synchronized = false;\n          this.showNodeStopped = true;\n          this.showSynchronizingNode = false;\n          this.nodeMemoryUsage = 0;\n          this.nodeCPUUsage = 0;\n          this.nodeUptime = '';\n          if (this.stoppedDesktop === false && this.updateCheckDesktop === false) {\n            this.showStartNode = true;\n            this.stoppedDesktop = true;\n            this.openNodeStoppedModal(this.templateNodeStopped);\n          }\n        }\n      }\n    });\n    this.ipc.on('miner-running', (event, data) => {\n      //console.log('got node-running event');\n      //console.log('got data');\n      //console.log(data);\n      if (data.status == 1) {\n        if (this.stoppingMiner === false) {\n          //this.miner.running = true;\n          this.showStartMiner = false;\n          this.showStartingMiner = false;\n          this.showStartedMiner = true;\n          \n        }\n      } else {\n        //this.miner.running = false;\n        if (this.startingDesktop === false && this.stoppedDesktop === false && this.updateCheckDesktop === false) {\n          this.showStartMiner = true;\n          //this.stoppedDesktop = true;\n          //this.openNodeStoppedModal(this.templateNodeStopped);\n        }\n      }\n    });\n    this.ipc.on('pool-running', (event, data) => {\n      //console.log('got node-running event');\n      //console.log('got data');\n      //console.log(data);\n      if (data.status == 1) {\n        if (this.stoppingPool === false) {\n          //this.miner.running = true;\n          this.showStartPool = false;\n          this.showStartingPool = false;\n          this.showStartedPool = true;\n          \n        }\n      } else {\n        //this.miner.running = false;\n        if (this.startingDesktop === false && this.stoppedDesktop === false && this.updateCheckDesktop === false) {\n          this.showStartPool = true;\n          //this.stoppedDesktop = true;\n          //this.openNodeStoppedModal(this.templateNodeStopped);\n        }\n      }\n    });\n    this.ipc.on('node-data', async (event, data) => {\n      //console.log('got node-data event');\n      //console.log('got data');\n      //console.log(data);\n      this.desktopConfig = data.config;\n      if (this.desktopConfig.nodeData.version != '') {\n        this.showNodeFound = true;\n      } else {\n        this.showNoNodeFound = true;\n      }\n      this.platform = data.platform;\n      this.arch = data.arch;\n      const latest = await this.api.nodeVersion(this.desktopConfig.version,this.desktopConfig.nodeData.version,this.platform,this.arch);\n      //console.log(latest);\n      if (latest.result) {\n        if (this.desktopConfig.nodeData.version != latest.result.version) {\n          this.showDownload = true;\n          this.newVersion = latest.result;\n          if (this.desktopConfig.nodeData.version == '') {\n            this.showDownloadNew = true;\n          } else {\n            this.showDownloadUpdate = true;\n            if (latest.result.version === 'v1.4.0') {\n              this.deleteLedgerWarningShowOnUpdate = true;\n            }\n          }\n\n        } else {\n          this.showNoUpdate = true;\n          this.showStartNode = true;\n        }\n      }\n    });\n\n    this.ipc.on('node-process-data', (event, data) => {\n      //console.log('got node-process-data event');\n      //console.log('got data');\n      //console.log(data);\n      if (data.stats) {\n        this.nodeCPUUsage = data.stats.cpu;\n        this.nodeMemoryUsage = data.stats.memory;\n        this.nodeUptime = this.millisecondsTohhmmss(data.stats.elapsed);\n      }\n    });\n    \n    this.openModal(this.template);\n    //this.openMiningSetupModal();\n    \n    this.notifications.removeNotification('node-offline');\n    this.notifications.removeNotification('node-connect');\n\n    this.nodeData();\n\n    this.checkProccesInterval$.subscribe(async () => {\n\t\t\tthis.nodeGetProcess();\n\t\t});\n  }\n\n  async checkIfMinerAccounts() {\n    this.minerAccounts = [];\n    for (const account of this.accounts) { // check if any account address is a miner\n      \n      console.log('.................checking account state');\n      const repStatus = await this.api.pov_getLatestAccountState(account.id);\n      if (repStatus.result) {\n        console.log(repStatus);\n        if (repStatus.result.accountState && repStatus.result.accountState != null) {\n          if (repStatus.result.accountState.vote && repStatus.result.accountState.vote >= 10000000000000) {\n            console.log('found minerAccount');\n            console.log(account)\n            this.minerAccounts.push(account);\n          } \n        } \n      } else {\n        console.log('ERROR getting account state');\n      }\n    }\n    if (this.minerAccounts[0]) {\n      this.selectedMinerAccount = this.minerAccounts[0].id;\n    }\n  }\n\n  async deleteLedger() {\n    this.ipc.send('delete-ledger','');\n    this.deleteLedgerWarning = false;\n    this.deleteLedgerWarningProgress = true;\n  }\n\n\n  millisecondsTohhmmss(milliseconds) {\n    const totalSeconds = milliseconds/1000;\n    const days    = Math.floor(totalSeconds / 86400);\n    const hours   = Math.floor((totalSeconds - (days * 86400)) / 3600);\n    const minutes = Math.floor((totalSeconds  - (days * 86400) - (hours * 3600)) / 60);\n    const seconds = Math.floor(totalSeconds - (days * 86400) - (hours * 3600) - (minutes * 60));\n    let result:string = (days > 0 ? days + 'd ' : '');\n    result += (hours < 10 ? \"0\" + hours : hours);\n    result += \":\" + (minutes < 10 ? \"0\" + minutes : minutes);\n    result += \":\" + (seconds  < 10 ? \"0\" + seconds : seconds);\n    return result;\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template, this.modalConfig);\n  }\n\n  closeModal() {\n    this.modalRef.hide();\n    this.startingDesktop = false;\n    this.nodeData();\n  }\n\n  openNodeStoppedModal(template: TemplateRef<any>) {\n    this.modalRef.hide();\n    this.api.nodeBlocksCount = 0;\n    this.api.nodeMainBlocksCount = 0;\n    this.showStartNode = true;\n    this.showSynchronizingNode = false;\n    this.node.running = false;\n    this.modalNodeStoppedRef = this.modalService.show(template, this.modalConfig);\n    const source = timer(1500);\n\t\tconst abc =  source.subscribe(async val => {\n      this.stoppingNode = false;\n\t\t});\n  }\n\n  closeNodeStoppedModal() {\n    this.modalNodeStoppedRef.hide();\n    this.stoppedDesktop = false;\n  }\n\n  openUpdateCheckModal(template: TemplateRef<any>) {\n    this.updateCheckDesktop = true;\n    this.showCheckingStatus = true;\n    this.modalUpdateCheckRef = this.modalService.show(template, this.modalConfig);\n\n  }\n\n  closeUpdateCheckModal() {\n    this.modalUpdateCheckRef.hide();\n    this.updateCheckDesktop = false;\n    this.nodeData();\n  }\n  \n  \n  nodeStart() {\n    this.ipc.send('node-start','');\n\n    this.showCheckingStatus = false;\n    this.showNodeFound = false;\n    this.showNoNodeFound = false;\n    this.showDownloadFinished = false;\n    this.showStartNode = false;\n    this.showNoUpdate = false;\n    this.showStartingNode = true;\n    this.showNodeStopped = false;\n  }\n\n  nodeStop() {\n    this.ipc.send('node-stop','');\n    this.stoppingNode = true;\n    this.showNodeStopped = true;\n    this.node.setOffline('Node stopped.');\n  }\n\n  nodeRestart() {\n    this.ipc.send('node-restart','');\n  }\n\n  nodeUpdate() {\n    this.api.nodeBlocksCount = 0;\n    this.api.nodeMainBlocksCount = 0;\n    this.ipc.send('node-stop','');\n    this.ipc.send('node-update',this.newVersion);\n  }\n//{arch: \"x64\", platform: \"win32\"}\n  nodeGetVersion() {\n    this.ipc.send('node-version-get','');\n  }\n\n  nodeGetProcess() {\n    this.ipc.send('node-process','');\n  }\n\n  nodeSaveVersion() {\n    this.ipc.send('node-version-save','');\n  }\n\n  nodeData() {\n    this.ipc.send('node-data','');\n  }\n\n  async openMiningSetupModal() {\n    this.modalRef.hide();\n    this.modalMiningSetupRef = this.modalService.show(this.templateMiningSetup, this.modalConfig);\n    await this.checkIfMinerAccounts();\n  }\n\n  closeMiningSetupModal() {\n    this.modalMiningSetupRef.hide();\n  }\n\n  continueMinerSetup() {\n    console.log(this.selectedMiner);\n    if (this.selectedMiner == '1') {\n      this.openGqlcMiningSetupModal();\n    } else {\n      this.openPoolSetupModal();\n    }\n  }\n\n  continuePoolMinerSetup() {\n    console.log(this.selectedPoolMiner);\n    if (this.selectedPoolMiner == '1') {\n      this.openPoolMinersModalCPU();\n    } else if (this.selectedPoolMiner == '2') {\n      this.openPoolMinersModalGPU();\n\n    } else {\n      this.openPoolMinersModalASIC();\n    }\n  }\n\n  openPoolSetupModal() {\n    this.modalMiningSetupRef.hide();\n    this.modalPoolSetupRef = this.modalService.show(this.templatePoolSetup, this.modalConfig);\n  }\n\n  closePoolSetupModal() {\n    this.modalPoolSetupRef.hide();\n  }\n  \n  openPoolModal() {\n    this.closePoolSetupModal();\n    this.modalPoolRef = this.modalService.show(this.templatePool, this.modalConfig);\n  }\n\n  closePoolModal() {\n    this.modalPoolRef.hide();\n  }\n\n  openPoolMinersModal() {\n    this.closePoolModal();\n    this.modalPoolMinersRef = this.modalService.show(this.templatePoolMiners, this.modalConfig);\n  }\n\n  closePoolMinersModal() {\n    this.modalPoolMinersRef.hide();\n  }\n\n  openPoolMinersModalCPU() {\n    this.closePoolMinersModal();\n    this.modalPoolMinersCPURef = this.modalService.show(this.templatePoolMinersCPU, this.modalConfig);\n  }\n\n  closePoolMinersModalCPU() {\n    this.modalPoolMinersCPURef.hide();\n  }\n\n  openPoolMinersModalGPU() {\n    this.closePoolMinersModal();\n    this.modalPoolMinersGPURef = this.modalService.show(this.templatePoolMinersGPU, this.modalConfig);\n  }\n\n  closePoolMinersModalGPU() {\n    this.modalPoolMinersGPURef.hide();\n  }\n\n  openPoolMinersModalASIC() {\n    this.closePoolMinersModal();\n    this.modalPoolMinersASICRef = this.modalService.show(this.templatePoolMinersASIC, this.modalConfig);\n  }\n\n  closePoolMinersModalASIC() {\n    this.modalPoolMinersASICRef.hide();\n  }\n  \n\n\n  openGqlcMiningSetupModal() {\n    this.modalMiningSetupRef.hide();\n    this.modalGqlcMiningSetupRef = this.modalService.show(this.templateGqlcMiningSetup, this.modalConfig);\n  }\n\n  closeGqlcMiningSetupModal() {\n    this.modalGqlcMiningSetupRef.hide();\n  }\n\n  openMinerModal() {\n    this.closeGqlcMiningSetupModal();\n    this.modalMinerRef = this.modalService.show(this.templateMiner, this.modalConfig);\n  }\n\n  closeMinerModal() {\n    this.modalMinerRef.hide();\n  }\n\n  \n\n  minerStart() {\n    this.ipc.send('miner-start',{\n      'qlc_address' : this.selectedMinerAccount,\n      'algo' : this.selectedAlgo\n    });\n    this.showMinerControl = true;\n\n    /*this.showCheckingStatus = false;\n    this.showNodeFound = false;\n    this.showNoNodeFound = false;\n    this.showDownloadFinished = false;\n    this.showStartNode = false;\n    this.showNoUpdate = false;\n    this.showStartingNode = true;\n    this.showNodeStopped = false;*/\n  }\n\n  minerStop() {\n    this.ipc.send('miner-stop','');\n    this.showStartedMiner = false;\n    /*this.stoppingNode = true;\n    this.showNodeStopped = true;*/\n  }\n\n  minerRestart() {\n    this.ipc.send('miner-restart','');\n  }\n\n  async minerUpdate() {\n    this.openMinerModal();\n    /*this.api.nodeBlocksCount = 0;\n    this.api.nodeMainBlocksCount = 0;*/\n    const latest = await this.api.minerVersion(this.desktopConfig.version,this.desktopConfig.minerData.version,this.platform,this.arch);\n    //console.log(latest);\n    if (latest.result) {\n      if (this.desktopConfig.minerData.version != latest.result.version) {\n        this.showDownloadMiner = true;\n        this.newMinerVersion = latest.result;\n        if (this.desktopConfig.minerData.version == '') {\n          this.showDownloadMinerNew = true;\n        } else {\n          this.showDownloadMinerUpdate = true;\n        }\n\n      } else {\n        this.showNoMinerUpdate = true;\n        this.showStartMiner = true;\n      }\n    }\n\n  }\n\n  async runMinerUpdate() {\n    this.ipc.send('miner-stop','');\n    console.log(this.newMinerVersion);\n    this.ipc.send('miner-update',this.newMinerVersion);\n  }\n\n\n  poolStart() {\n    this.ipc.send('pool-start',{\n      'qlc_address' : this.selectedMinerAccount,\n      'algo' : this.selectedAlgo\n    });\n    this.showPoolControl = true;\n\n    /*this.showCheckingStatus = false;\n    this.showNodeFound = false;\n    this.showNoNodeFound = false;\n    this.showDownloadFinished = false;\n    this.showStartNode = false;\n    this.showNoUpdate = false;\n    this.showStartingNode = true;\n    this.showNodeStopped = false;*/\n  }\n\n  poolStop() {\n    this.ipc.send('pool-stop','');\n    this.showStartedPool = false;\n    /*this.stoppingNode = true;\n    this.showNodeStopped = true;*/\n  }\n\n  poolRestart() {\n    this.ipc.send('pool-restart','');\n  }\n\n  async poolUpdate() {\n    this.openPoolModal();\n    /*this.api.nodeBlocksCount = 0;\n    this.api.nodeMainBlocksCount = 0;*/\n    const latest = await this.api.poolVersion(this.desktopConfig.version,this.desktopConfig.poolData.version,this.platform,this.arch);\n    //console.log(latest);\n    if (latest.result) {\n      if (this.desktopConfig.poolData.version != latest.result.version) {\n        this.showDownloadPool = true;\n        this.newPoolVersion = latest.result;\n        if (this.desktopConfig.poolData.version == '') {\n          this.showDownloadPoolNew = true;\n        } else {\n          this.showDownloadPoolUpdate = true;\n        }\n\n      } else {\n        this.showNoPoolUpdate = true;\n        this.showStartPool = true;\n      }\n    }\n\n  }\n\n  async runPoolUpdate() {\n    this.ipc.send('pool-stop','');\n    console.log(this.newPoolVersion);\n    this.ipc.send('pool-update',this.newPoolVersion);\n  }\n\n\n  async getMinerStats() {\n    const minerStatsQuery = await this.api.getMinerStats();\n    if (minerStatsQuery.result) {\n      const minerStats = minerStatsQuery.result.minerStats;\n      let displayMinerStats = [];\n      for (var key in minerStats) {\n        //console.log(minerStats[key]);\n        displayMinerStats.push({\n          \"address\" : key,\n          \"mainBlockNum\": minerStats[key].mainBlockNum,\n          \"mainRewardAmount\": minerStats[key].mainRewardAmount,\n          \"firstBlockTime\": minerStats[key].firstBlockTime,\n          \"lastBlockTime\": minerStats[key].lastBlockTime,\n          \"firstBlockHeight\": minerStats[key].firstBlockHeight,\n          \"lastBlockHeight\": minerStats[key].lastBlockHeight,\n          \"isHourOnline\": minerStats[key].isHourOnline,\n          \"isDayOnline\": minerStats[key].isDayOnline\n        });\n      }\n      this.minerStats = displayMinerStats;\n      return true;\n    }\n    return false;\n    //console.log(this.minerStats);\n  }\n\n}\n","<app-user-submenu></app-user-submenu>\n\n<div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\" *ngIf=\"!etherService || etherService.selectedAddress == '' || !etherService.selectedAddress\">\n  <div class=\"row\">\n    <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n      <!-- LATEST TRANSACTIONS -->\n      <div class=\"container\">\n        <div class=\"row\">\n          <!-- TITLE -->\n          <div class=\"col-md-9 col-12 mt-2 pl-2 pr-2\">\n            <div class=\"content-title\">\n              <h1 class=\"erc20\" *ngIf=\"etherService.checkIfWallet()\">Connect your ERC20 Wallet</h1>\n              <h1 class=\"erc20\" *ngIf=\"!etherService.checkIfWallet()\">Get your ERC20 Wallet</h1>\n            </div>\n          </div>\n          <div class=\"col-md-3 col-12 pl-2 pr-2 pt-md-0 pt-2\">\n            <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 erc20-background-light\" routerLink=\"/wallets\">\n              Back to my Wallets\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"container pb-2\" *ngIf=\"!etherService || etherService.selectedAddress == '' || !etherService.selectedAddress\">\n  <div class=\"row pl-md-0 pr-md-0 pl-2 pr-2\">\n    <!-- LEFT -->\n    <div class=\"col-xl-9 col-lg-12 col-md-12 col-sm-12 order-lg-1 pl-0 pr-0 mb-3\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-12 pb-2 pl-2 pr-2\">\n            <div class=\"content-box-white h-auto\">\n              <div class=\"container\">\n                <div class=\"row justify-content-center\" style=\"padding: 57px 0px;\">\n                  <div class=\"col-md-1 col-12 text-center\">\n                    <img src=\"assets/img/qlc-icon-lock-red.svg\" style=\"height: 70px;\" >\n                  </div>\n                  <div class=\"col-xl-3 col-md-5 py-md-0 py-3 col-12 my-auto text-center\" style=\"font-size: 12px;\" *ngIf=\"etherService.checkIfWallet()\">\n                    Please connect and authorize your ERC20 Wallet Client\n                  </div>\n                  <div class=\"col-xl-3 col-md-5 py-md-0 py-3 col-12 my-auto text-center\" style=\"font-size: 12px;\" *ngIf=\"!etherService.checkIfWallet()\">\n                    To use this Dapp you must install MetaMask.\n                  </div>\n                  <div class=\"col-md-4 col-12 my-auto\">\n                    <button type=\"submit\" (click)=\"etherService?.connectWallet()\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 erc20-background-light\" *ngIf=\"etherService.checkIfWallet()\">\n                      CONNECT WALLET\n                    </button>\n                    <a href=\"https://metamask.io\" target=\"_blank\" *ngIf=\"!etherService.checkIfWallet()\">\n                      <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 erc20-background-light\">\n                        GET METAMASK\n                      </button>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--     RIGHT -->\n    <div class=\"col-lg-3 d-xl-block d-none order-2 pl-0 pr-0 mb-xs-3 mb-3\">\n      <div class=\"col-12 pl-2 pr-2\">\n        <div class=\"content-box-chainx h-100 pb-4 pr-0 erc20-background\">\n          <div class=\"container\">\n            <div class=\"row pt-3 pr-0\">\n              <div class=\"col-12 pr-0 text-center connect-background\">\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- ERC20 Wallet Details -->\n<div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\" *ngIf=\"etherService.selectedAddress && etherService.selectedAddress != ''\">\n  <div class=\"row\">\n    <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n      <!-- ERC20 Wallet Details -->\n      <div class=\"container\">\n        <div class=\"row\">\n          <!-- TITLE -->\n          <div class=\"col-md-9 col-12 mt-2 pl-2 pr-2\">\n            <div class=\"content-title\">\n              <h1 class=\"erc20\">ERC20 Wallet Details - {{ etherService.getDefaultNetwork() }}</h1>\n            </div>\n          </div>\n          <div class=\"col-md-3 col-12 pl-2 pr-2 pt-md-0 pt-2\">\n            <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 erc20-background-light\" routerLink=\"/wallets\">\n              Back to my Wallets\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"container pb-2\" *ngIf=\"etherService.selectedAddress && etherService.selectedAddress != ''\">\n  <div class=\"row pl-md-0 pr-md-0 pl-2 pr-2\">\n    <!-- LEFT -->\n    <div class=\"col-lg-9 col-md-12 col-sm-12 order-lg-1 order-2 pl-0 pr-0 mb-3\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-12 pb-2 pl-2 pr-2\">\n            <div class=\"content-box-blue h-auto pb-3 erc20-background-light\">\n              <div class=\"container\">\n                <div class=\"row qlc-table-header-blue erc20-background-light\">\n                  <div class=\"col-12 white\">Address</div>\n                </div>\n                <div class=\"row qlc-table-row-blue row-text-mid mt-3 erc20-background-light\">\n                  <div class=\"col-12 text-break pr-3\">{{ etherService.selectedAddress }} <a ngxClipboard [cbContent]=\"etherService.selectedAddress\"><img src=\"assets/img/icons/copy.svg\" class=\"img-copy\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Copy to clipboard\"></a></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <!-- BALANCE QLC -->\n          <div class=\"col-md-4 col-sm-6 col-12 pl-2 pr-2\">\n            <div class=\"content-box-white h-auto mt-2 pb-2\">\n              <div class=\"container\">\n                <div class=\"row qlc-table-header-white\">\n                  <div class=\"col-12\">Eth Balance</div>\n                </div>\n              </div>\n              <div class=\"container\">\n                <div class=\"row\">\n                  <div class=\"col-3 mt-3\">\n                    <img src=\"assets/img/swap/token-eth.png\" class=\"w-100 icon-token\">\n                  </div>\n                  <div class=\"col-9 pr-0 pl-0\">\n                    <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                      <ng-container *ngIf=\"!loading; else showLoadingTemplate\">\n                        <div class=\"col-12 pb-0\" *ngIf=\"etherService?.balances && etherService?.balances?.ETH; else nanTemplate\">{{ etherService?.balances?.ETH | currency:'':'':'1.2-8' }}</div>\n                      </ng-container>\n                    </div>\n                    <div class=\"row qlc-table-row-white sub-page pt-0\">\n                      <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- BALANCE QSMS -->\n          <div class=\"col-md-4 col-sm-6 col-12 pl-2 pr-2\">\n            <div class=\"content-box-white h-auto mt-2 pb-2\">\n              <div class=\"container\">\n                <div class=\"row qlc-table-header-white\">\n                  <div class=\"col-12\">QLC Balance</div>\n                </div>\n              </div>\n              <div class=\"container\">\n                <div class=\"row\">\n                  <div class=\"col-3 mt-3\">\n                    <img src=\"assets/img/swap/token-qlc-erc20.png\" class=\"w-100 icon-token\">\n                  </div>\n                  <div class=\"col-9 pr-0 pl-0\">\n                    <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                      <ng-container *ngIf=\"!loading; else showLoadingTemplate\">\n                        <div class=\"col-12 pb-0\" *ngIf=\"etherService?.balances && etherService?.balances?.QLC; else nanTemplate\">{{ etherService?.balances?.QLC | currency:'':'':'1.2-8' }}</div>\n                      </ng-container>\n                    </div>\n                    <div class=\"row qlc-table-row-white sub-page pt-0\">\n                      <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--     RIGHT -->\n    <div class=\"col-lg-3 col-md-12 col-sm-12 order-lg-2 order-1 pl-0 pr-0 mb-xs-3 mb-3\">\n      <div class=\"col-12 pl-2 pr-2\">\n        <div class=\"content-box-chainx h-100 pb-4 pr-0 erc20-background\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-blue erc20-background\">\n              <div class=\"col-12 white\">Account Actions</div>\n            </div>\n            <div class=\"row pt-3 pr-0\">\n              <div class=\"col-12 pr-0\">\n                <!--  <a routerLink=\"/erc20/send/{{ etherService.selectedAddress }}\" class=\"menu-myaccount menu-icon-send pr-0\">Send</a> -->\n                <a routerLink=\"/swap\" class=\"menu-myaccount menu-icon-rename pr-0\">Swap QLC Tokens</a> \n                <a *ngIf=\"etherService.selectedAddress !== ''\" href=\"{{ etherService.getExplorer() }}/address/{{ etherService.selectedAddress }}\" class=\"menu-myaccount menu-icon-details pr-0\" target=\"_blank\">Account Details</a> \n                <!--     <a (click)=\"etherService.disconnectWallet()\" class=\"menu-myaccount menu-icon-delete pr-0\" target=\"_blank\">Disconnect wallet</a> -->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- LATEST SWAP TRANSACTIONS -->\n<div class=\"container mt-0 mb-3\">\n  <div class=\"row\">\n    \n    <div class=\"col-12 pl-0 pr-0\">\n      \n      <!-- TITLE -->\n      <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>Latest Swap Transactions</h1>\n        </div>\n      </div>\n\n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n        <div class=\"content-box-white\">\n\n\n          <div class=\"container\">\n\n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-2 col-lg-3 pr-lg-4 col-md-3 col-4 text-left pr-sm-4 pr-md-0 pr-lg-0 pr-4\">TYPE</div>\n              <div class=\"col-xl-1 d-none d-xl-block text-color-lightgrey text-left text-tiny\">STATUS</div>\n              <div class=\"col-xl-2 col-lg-6 pr-lg-4 col-md-4 col-5 text-left pr-sm-4 pr-md-0 pr-lg-0 pr-4\">SENDER</div>\n              <div class=\"col-xl-2 d-none d-xl-block text-left pr-sm-4 pr-md-0 pr-lg-0 pr-4\">RECIPIENT</div>\n              <div class=\"col-xl-2 d-none d-xl-block text-left pr-sm-4 pr-md-0 pr-lg-0 pr-4\">SWAPID</div>\n              <div class=\"col-xl-1 col-lg-1 col-md-2 col-3 text-color-lightgrey text-right text-tiny\">AMOUNT</div>\n              <div class=\"col-xl-2 col-lg-2 pr-lg-4 col-md-3 d-none d-md-block text-right pr-sm-4 pr-4\">TIME</div>\n            </div>\n\n            <div class=\"row qlc-table-row neo-table-row closed row-anim-in\" *ngFor=\"let history of etherService.swapHistory\">\n              <div class=\"col-xl-2 col-lg-3 pr-lg-4 col-md-3 col-4 text-left text-color-lightgrey text-tiny\">\n                <span>\n                    <span *ngIf=\"(history.state ==2)\" class=\"qlc-icon-swap-red d-none d-md-inline-block\" title=\"{{history.stateStr}}\"></span>\n                    <span *ngIf=\"(history.state ==1 || history.state ==3)\" class=\"qlc-icon-swap-green d-none d-md-inline-block\" title=\"{{history.stateStr}}\"></span>\n                    <span *ngIf=\"(history.state ==0)\" class=\"qlc-icon-swap-blue d-none d-md-inline-block\" title=\"{{history.stateStr}}\"></span>\n                    <span *ngIf=\"(history.state ==0 || history.state ==1)\"><span class=\"text-color-lightgrey\">Swap</span>  <span class=\"text-color-grey\"> NEP5</span> <span class=\"text-color-lightgrey\"> to </span> <span class=\"text-color-grey\">ERC20</span></span>\n                    <span *ngIf=\"(history.state ==2 || history.state ==3 || history.state ==4)\"><span class=\"text-color-lightgrey\">Swap</span>  <span class=\"text-color-grey\"> ERC20</span> <span class=\"text-color-lightgrey\"> to </span> <span class=\"text-color-grey\">NEP5</span></span>\n                </span>\n                <span class=\"d-xl-none\">\n                  <br>\n                  <br>\n                  Status: \n                  <span *ngIf=\"(history.state ==1 || history.state ==3)\" class=\"text-color-green\">Completed</span>\n                  <span *ngIf=\"(history.state ==0 || history.state ==2)\" class=\"text-blue\">Pending</span>\n                  <span *ngIf=\"(history.state ==4)\" class=\"text-color-red\">Failed</span>\n                </span>\n              </div>\n              <div class=\"col-xl-1 d-none d-xl-block text-color-lightgrey text-left text-tiny\">\n                <span>\n                  <span *ngIf=\"(history.state ==1 || history.state ==3)\" class=\"text-color-green\">Completed</span>\n                  <span *ngIf=\"(history.state ==0 || history.state ==2)\" class=\"text-blue\">Pending</span>\n                  <span *ngIf=\"(history.state ==4)\" class=\"text-color-red\">Failed</span>\n                </span>\n              </div>\n              <div class=\"col-xl-2 col-lg-6 pr-lg-4 col-md-4 col-5 text-left text-color-lightgrey text-tiny\">\n                <span class=\"d-xl-none\">Sender: </span>\n                <a *ngIf=\"(history.state== 0 || history.state ==1)\" href=\"{{ neotubeSite }}address/{{history.neoUserAddr}}/page/1\" target=\"_blank\" >{{history.neoUserAddr | squeeze : '10,9'}}</a>\n                <a *ngIf=\"(history.state== 2 || history.state ==3)\" href=\"{{ etherscan }}address/{{history.ethUserAddr}}\" target=\"_blank\" >{{history.ethUserAddr | squeeze : '10,9'}}</a>\n\n                <span class=\"d-xl-none\"><br>Recipient: </span>\n                <a class=\"d-xl-none\" *ngIf=\"(history.state== 2 || history.state ==3 || history.state ==4)\" href=\"{{ neotubeSite }}address/{{history.neoUserAddr}}/page/1\" target=\"_blank\" >{{history.neoUserAddr | squeeze : '10,9'}}</a>\n                <a class=\"d-xl-none\" *ngIf=\"(history.state== 0 || history.state ==1)\" href=\"{{ etherscan }}address/{{history.ethUserAddr}}\" target=\"_blank\" >{{history.ethUserAddr | squeeze : '10,9'}}</a>\n\n                <span class=\"d-xl-none\"><br>Swapid: </span>\n                <a class=\"d-xl-none\" *ngIf=\"(history.state== 0 || history.state ==1)\" href=\"{{ neotubeSite }}/transaction/{{history.neoTxHash}}\" target=\"_blank\" >\n                  {{history.neoTxHash | squeeze : '10,9'}}\n                </a>\n                <a class=\"d-xl-none\" *ngIf=\"(history.state== 2 || history.state ==3 || history.state ==4)\" href=\"{{ etherscan }}/tx/{{history.ethTxHash}}\" target=\"_blank\" >\n                  {{history.ethTxHash | squeeze : '10,9'}}\n                </a>\n                \n                <span class=\"d-md-none\"><br>Time:<br class=\"d-sm-none\"> {{ history.lastModifyTime | date: 'short' }}</span>\n              </div>\n              <div class=\"col-xl-2 d-none d-xl-block text-left text-color-lightgrey text-tiny\">\n                <a *ngIf=\"(history.state== 2 || history.state ==3 || history.state ==4)\" href=\"{{ neotubeSite }}address/{{history.neoUserAddr}}/page/1\" target=\"_blank\" >{{history.neoUserAddr | squeeze : '11,10'}}</a>\n                <a *ngIf=\"(history.state== 0 || history.state ==1)\" href=\"{{ etherscan }}address/{{history.ethUserAddr}}\" target=\"_blank\" >{{history.ethUserAddr | squeeze : '11,10'}}</a>\n\n              </div>\n              <div class=\"col-xl-2 d-none d-xl-block text-left text-color-lightgrey text-tiny\">\n                <a *ngIf=\"(history.state== 0 || history.state ==1)\" href=\"{{ neotubeSite }}/transaction/{{history.neoTxHash}}\" target=\"_blank\" >\n                  {{history.neoTxHash | squeeze : '11,10'}}\n                </a>\n                <a *ngIf=\"(history.state== 2 || history.state ==3 || history.state ==4)\" href=\"{{ etherscan }}/tx/{{history.ethTxHash}}\" target=\"_blank\" >\n                  {{history.ethTxHash | squeeze : '11,10'}}\n                </a>\n              </div>\n              <div class=\"col-xl-1 col-lg-1 col-md-2 col-3 text-color-lightgrey text-right text-tiny\">\n                <span [ngClass]=\"{\n                  'text-blue': (history.state ==0 || history.state ==2),\n                  'text-color-green': (history.state ==1 || history.state ==3),\n                  'text-color-red': history.state == 4\n                }\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"-\">{{ history.amount | qlc | currency:'':'':'1.2-8' }} QLC</span>\n              </div>\n              <div class=\"col-xl-2 col-lg-2 col-md-3 d-none d-md-block pr-4 text-tiny text-right\">\n                <span>{{ history.lastModifyTime | date: 'short' }}</span>\n              </div>\n              <!-- <div class=\"container transaction-details\">\n\n              </div> -->\n            </div>\n\n\n            \n          </div>\n\n        </div>\n      </div>\n\n      <!-- BUTTON -->\n      <!--\n      <div class=\"col-lg-12 mb-0 mt-2 pl-md-2 pr-md-2 text-center\" *ngIf=\"accountBlocksCount>pageSize\">\n        <a [routerLink]=\"'/transactions/1/' + accountId\" class=\"btn btn-primary btn-blue\">ALL TRANSACTIONS</a>\n      </div>\n        -->\n    </div>\n    \n  </div>\n</div>\n\n<!-- Latest ETH Transfers -->\n<div class=\"container mt-0 mb-3\" *ngIf=\"etherService.selectedAddress && etherService.selectedAddress != ''\">\n  <div class=\"row\">\n    <div class=\"col-12 pl-0 pr-0\">\n      <!-- TITLE -->\n      <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>Latest ETH Transfers</h1>\n        </div>\n      </div>\n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\" *ngIf=\"etherService.transactions; else showLoaderTemplate\">\n        <div class=\"content-box-white\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">Type</div>\n              <div class=\"col-xl-6 col-lg-5 col-md-5 col-sm-5 col-7 text-truncate\">Address / Transaction ID</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Amount</div>\n              <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 d-none d-sm-block col-6 pr-4 text-right\">Time</div>\n            </div>\n            <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let transaction of etherService.transactions\">\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">\n                <span class=\"qlc-icon icon-{{ transaction.from === addresslc ? 'Send' : 'Receive' }}\" [title]=\"transaction.from === addresslc ? 'Send' : 'Receive'\"></span> <span class=\"d-none d-sm-none d-md-inline-block txState\">\n                  <span class=\"text-color-lightgrey\">State</span><br>\n                  <span class=\"text-bold-grey\" [innerText]=\"transaction.from === addresslc ? 'Send' : 'Receive'\"></span>\n                </span>\n              </div>\n              <div class=\"col-xl-6 col-lg-5 col-md-5 col-sm-5 col-7 pb-0 text-truncate\">\n                <span class=\"text-color-lightgrey\">{{transaction.from === addresslc ? 'to' : 'from'}}: </span> <a href=\"{{ etherService.getExplorer() }}/address/{{transaction.from === addresslc ? transaction.to : transaction.from}}\" target=\"_blank\">{{ transaction.from === addresslc ? transaction.to : transaction.from }}</a> <a href=\"{{ etherService.getExplorer() }}/tx/{{transaction.hash}}\" target=\"_blank\"><br> <span class=\"text-tiny\">{{ transaction.hash }}</span> </a>\n              </div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pb-0 pr-sm-0 pr-4 text-right \">\n                <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">{{ transaction.from === addresslc ? '-' : '+'}} {{ etherService.web3.utils.fromWei(transaction.value, 'ether') | currency:'':'':'1.2-8' }}</span> <br><span class=\"text-color-grey\">ETH</span>\n              </div>\n              <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 col-12 pr-4 text-right\">\n                {{ transaction.timeStamp * 1000 | date: 'short' }}\n              </div>\n              <div class=\"container transaction-details\">\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!--       BUTTON-->\n      <ng-container *ngIf=\"transactions\">\n        <div class=\"col-lg-12 mb-0 mt-2 pl-md-2 pr-md-2 text-center\" *ngIf=\"transactions.length>10\">\n          <a (click)=\"getAllTransactions()\" class=\"btn btn-primary btn-blue\">ALL TRANSACTIONS</a>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n<!--LATEST TRANSACTIONS-->\n<div class=\"container mt-0 mb-3\" *ngIf=\"etherService.selectedAddress && etherService.selectedAddress != ''\">\n  <div class=\"row\">\n    <div class=\"col-12 pl-0 pr-0\">\n      <!-- TITLE -->\n      <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>Latest Internal Transfers</h1>\n        </div>\n      </div>\n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\" *ngIf=\"etherService.internalTransactions; else showLoaderTemplate\">\n        <div class=\"content-box-white\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">Type</div>\n              <div class=\"col-xl-6 col-lg-5 col-md-5 col-sm-5 col-7 text-truncate\">Address / Transaction ID</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Amount</div>\n              <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 d-none d-sm-block col-6 pr-4 text-right\">Time</div>\n            </div>\n            <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let transaction of etherService.internalTransactions\">\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">\n                <span class=\"qlc-icon icon-{{ transaction.from === addresslc ? 'Send' : 'Receive' }}\" [title]=\"transaction.from === addresslc ? 'Send' : 'Receive'\"></span> <span class=\"d-none d-sm-none d-md-inline-block txState\">\n                  <span class=\"text-color-lightgrey\">State</span><br>\n                  <span class=\"text-bold-grey\" [innerText]=\"transaction.from === addresslc ? 'Send' : 'Receive'\"></span>\n                </span>\n              </div>\n              <div class=\"col-xl-6 col-lg-5 col-md-5 col-sm-5 col-7 pb-0 text-truncate\">\n                <span class=\"text-color-lightgrey\">{{transaction.from === addresslc ? 'to' : 'from'}}: </span> <a href=\"{{ etherService.getExplorer() }}/address/{{transaction.from === addresslc ? transaction.to : transaction.from}}\" target=\"_blank\">{{ transaction.from === addresslc ? transaction.to : transaction.from }}</a> <a href=\"{{ etherService.getExplorer() }}/tx/{{transaction.hash}}\" target=\"_blank\"><br> <span class=\"text-tiny\">{{ transaction.hash }}</span> </a>\n              </div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pb-0 pr-sm-0 pr-4 text-right \">\n                <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">{{ transaction.from === addresslc ? '-' : '+'}} {{ etherService.web3.utils.fromWei(transaction.value, 'ether') | currency:'':'':'1.2-8' }}</span> <br><span class=\"text-color-grey\">ETH</span>\n              </div>\n              <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 col-12 pr-4 text-right\">\n                {{ transaction.timeStamp * 1000 | date: 'short' }}\n              </div>\n              <div class=\"container transaction-details\">\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!--       BUTTON-->\n      <ng-container *ngIf=\"internalTransactions\">\n        <div class=\"col-lg-12 mb-0 mt-2 pl-md-2 pr-md-2 text-center\" *ngIf=\"internalTransactions.length>10\">\n          <a (click)=\"getAllInternalTransactions()\" class=\"btn btn-primary btn-blue\">ALL TRANSACTIONS</a>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #nanTemplate>\n  <div class=\"col-12 pb-0\">NaN</div>\n</ng-template>\n<ng-template #noBalanceTemplate>\n  <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pb-0 pr-sm-0 pr-4 text-right \">\n    <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"-\">/<br><span class=\"text-color-grey\">PCX</span></span>\n  </div>\n</ng-template>\n<ng-template #showLoadingTemplate>\n  <div class=\"col-12 pb-0\">\n    <img src=\"/assets/img/preloaders/preloader-black-38px.svg\" style=\"margin-top:-2px;width:24px;height:auto;opacity:0.65;\">\n  </div>\n</ng-template>\n<ng-template #showLoaderTemplate>\n  <img src=\"/assets/img/preloaders/preloader-chainx-64px.svg\" style=\"margin-left: calc(50% - 32px); margin-top: 10%;\">\n</ng-template>\n","import { ChangeDetectorRef, Component, OnInit, TemplateRef } from '@angular/core';\nimport { WalletService } from '../../../services/wallet.service';\nimport { combineLatest, Subscription } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddressBookService } from '../../../services/address-book.service';\nimport { NotificationService } from '../../../services/notification.service';\nimport { EtherWalletService } from 'src/app/services/ether-wallet.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-erc20-wallet',\n  templateUrl: './erc20-wallet.component.html',\n  styleUrls: ['./erc20-wallet.component.scss']\n})\nexport class Erc20WalletComponent implements OnInit {\n  neotubeSite = environment.neotubeSite[environment.neoNetwork];\n  etherscan = environment.etherscan[environment.neoNetwork];\n  swapHistory: any[] = [];\n  address = this.etherService.selectedAddress;\n  addresslc: string;\n  loading = true;\n  showEditName = false;\n  addressBookNameTemp = '';\n  recoverPrivateKeyText = 'Recover private key';\n  recoveredPrivateKey = null;\n  subscriptions: Subscription[] = [];\n  balances: any[] = [];\n  transactions: any[];\n  erc20Transactions: any[];\n  internalTransactions: any[];\n  noWallet = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private changeDetection: ChangeDetectorRef,\n    private addressBookService: AddressBookService,\n    private notificationService: NotificationService,\n    private walletService: WalletService,\n    public etherService: EtherWalletService\n  ) {\n  }\n\n  async ngOnInit() {\n    this.addresslc = this.address.toLowerCase();\n    // this.getEtherAccounts();\n    this.loadWallet();\n  }\n  // async getEtherAccounts() {\n  //   const accounts: any[] = await this.etherService.getAccounts();\n  //   const swaptransactions: any = await this.etherService.swapInfosByAddress(\n  //     accounts[0],\n  //     1,\n  //     20\n  //   );\n  //   this.swapHistory = swaptransactions.data.infos;\n  // }\n  async loadWallet() {\n    if (this.etherService.selectedAddress) {\n      this.noWallet = false;\n    }\n    this.loading = false;\n  }\n\n  async getBalances() {\n    console.log(this.address);\n    // const balances = await this.etherService.getBalances(this.address);\n  }\n\n  deleteWallet() {\n    this.router.navigate(['myaccounts/']);\n  }\n\n}\n","<div id=\"particles-js\"></div>\n\n<!--\n  <div class=\"acc-button acc-unlock\"  (click)=\"openModal(unlockWallet)\" *ngIf=\"walletService.isConfigured() && !walletService.isLedgerWallet() && walletService.isLocked()\"></div>\n  <div class=\"acc-button acc-lock\" (click)=\"lockWallet()\" *ngIf=\"walletService.isConfigured() && !walletService.isLedgerWallet() && !walletService.isLocked()\"></div>\n  <div class=\"acc-button acc-configure\" routerLink=\"/createwallet\" *ngIf=\"!walletService.isConfigured()\"></div>\n-->\n\n<!-- HEADER -->\n<div class=\"qlc-top qlc-top-home\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-md-2 pr-md-2\">\n        <div class=\"qlc-menu\">\n\n          <!-- MENU -->\n          <a routerLink=\"/\" routerLinkActive=\"active\" class=\"brand\"></a>\n          <div class=\"menu-holder\">\n            <!-- data-link=\"menu-sub-account\" -->\n            <div class=\"menu-item menu-account\" routerLink=\"/dashboard\"><div class=\"lock-icon locked\" *ngIf=\"walletService.isConfigured() && !walletService.isLedgerWallet() && walletService.isLocked()\"></div><div class=\"lock-icon\" *ngIf=\"walletService.isConfigured() && !walletService.isLedgerWallet() && !walletService.isLocked()\"></div></div>\n            <div class=\"menu-item menu-lang menu-hide-mobile\" data-link=\"menu-sub-language\"></div>\n            <div class=\"menu-item menu-currency usd menu-hide-mobile\" data-link=\"menu-sub-currency\"></div>\n            <div class=\"menu-item menu-search\" data-link=\"menu-sub-search\"></div>\n            <div class=\"menu-search-field\" data-link=\"menu-sub-search\">Search for: Address, Transaction, Phone Number</div>\n            <div class=\"menu-item menu-main\" data-link=\"menu-sub-main\"><span>{{ 'NAV.menu' | translate }}</span></div>\n\n          </div>\n\n          <!-- SUB MAIN -->\n          <div class=\"menu-sub-holder menu-sub-main\">\n            <div class=\"menu-item menu-close\"></div>\n            <div class=\"menu-sub-items\">\n              <!-- <a routerLink=\"/topwallets\" routerLinkActive=\"active\">Top Wallets</a>-->\n              <a routerLink=\"/portal\" routerLinkActive=\"active\">Portal</a>\n              <a routerLink=\"/pov-explorer\" routerLinkActive=\"active\">PoV Explorer</a>\n              <a routerLink=\"/news\" routerLinkActive=\"active\">News</a>\n              <a routerLink=\"/tokens\" routerLinkActive=\"active\">Tokens</a>\n              <a routerLink=\"/representatives\" routerLinkActive=\"active\">{{ 'NAV.representatives' | translate }}</a>\n              <a routerLink=\"/accounts\" routerLinkActive=\"active\">{{ 'NAV.accounts' | translate }}</a>\n              <a routerLink=\"/transactions\" routerLinkActive=\"active\">{{ 'NAV.transactions' | translate }}</a>\n              <a routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">{{ 'NAV.home' | translate }}</a>\n            </div>\n            <div class=\"sub-left\">Menu</div>\n          </div>\n\n          <!-- SUB SEARCH -->\n          <div class=\"menu-sub-holder menu-sub-search\">\n            <div class=\"menu-sub-search-form\">\n              \n                <input type=\"text\" name=\"search\" class=\"search-text\" (keyup.enter)=\"search()\" [(ngModel)]=\"search_text\">\n                <input type=\"button\" class=\"search-button\" (click)=\"search()\">\n              \n            </div>\n            <div class=\"sub-left sub-left-search\">Search</div>\n          </div>\n\n          <!-- SUB CURRENCY -->\n          <div class=\"menu-sub-holder menu-sub-currency\">\n            <div class=\"menu-item menu-close\"></div>\n            <div class=\"menu-sub-items menu-sub-items-currency\">\n              <a (click)=\"openModal(dev)\">USD<span class=\"mobile-menu-only\"> American Dollar</span></a>\n              <a (click)=\"openModal(dev)\">CNY<span class=\"mobile-menu-only\"> Chinese Yuan</span></a>\n              <a (click)=\"openModal(dev)\">EUR<span class=\"mobile-menu-only\"> Euro</span></a>\n              <a (click)=\"openModal(dev)\">GBP<span class=\"mobile-menu-only\"> British Pound</span></a>\n              <a (click)=\"openModal(dev)\">QLC<span class=\"mobile-menu-only\"> QLC Chain Token</span></a>\n              <a (click)=\"openModal(dev)\">NEO<span class=\"mobile-menu-only\"> NEO Token</span></a>\n              <a (click)=\"openModal(dev)\">ETH<span class=\"mobile-menu-only\"> Ethereum</span></a>\n              <a (click)=\"openModal(dev)\">BTC<span class=\"mobile-menu-only\"> Bitcoin</span></a>\n            </div>\n            <div class=\"sub-left sub-left-currency usd\">Choose your currency</div>\n          </div>\n\n          <!-- SUB ACCOUNT -->\n          <div class=\"menu-sub-holder menu-sub-account\">\n            <div class=\"menu-item menu-close\"></div>\n            <div class=\"menu-sub-items menu-sub-items-account\">\n              <a (click)=\"openModal(unlockWallet)\" *ngIf=\"walletService.isConfigured() && !walletService.isLedgerWallet() && walletService.isLocked()\">Unlock Account</a>\n              <a (click)=\"lockWallet()\" *ngIf=\"walletService.isConfigured() && !walletService.isLedgerWallet() && !walletService.isLocked()\">Lock Account</a>\n              <!--\n                <a routerLink=\"/wallets\" routerLinkActive=\"active\" *ngIf=\"walletService.isConfigured()\">My Wallets</a>\n                <a routerLink=\"/send\" routerLinkActive=\"active\" *ngIf=\"walletService.isConfigured()\">Send</a>\n              -->\n              <a routerLink=\"/createwallet\" routerLinkActive=\"active\">Create/Import Account</a>\n              <a routerLink=\"/settings\" routerLinkActive=\"active\" *ngIf=\"walletService.isConfigured()\">Settings</a>\n              <a routerLink=\"/dashboard\" routerLinkActive=\"active\">Dashboard</a>\n              <!--\n                <a routerLink=\"/myrepresentatives\" routerLinkActive=\"active\" *ngIf=\"walletService.isConfigured()\">My representatives</a>\n              -->\n              \n            </div>\n            <div class=\"sub-left sub-left-account\">Account</div>\n          </div>\n          \n          \n          <!-- SUB LANGUAGE -->\n          <div class=\"menu-sub-holder menu-sub-language\">\n            <div class=\"menu-item menu-close\"></div>\n            <div class=\"menu-sub-items menu-sub-items-language\">\n              <a (click)=\"openModal(dev)\"><img src=\"assets/img/flags/de.png\"><span class=\"mobile-menu-only\"> Deutsch</span></a>\n              <a (click)=\"openModal(dev)\"><img src=\"assets/img/flags/ru.png\"><span class=\"mobile-menu-only\"> Pу̏скӣ</span></a>\n              <a (click)=\"openModal(dev)\"><img src=\"assets/img/flags/kr.png\"><span class=\"mobile-menu-only\"> 한국어</span></a>\n              <a (click)=\"openModal(dev)\"><img src=\"assets/img/flags/cn.png\"><span class=\"mobile-menu-only\"> 简体中文</span></a>\n              <a (click)=\"openModal(dev)\"><img src=\"assets/img/flags/en.png\"><span class=\"mobile-menu-only\"> English</span></a>\n            </div>\n            <div class=\"sub-left sub-left-language\">Choose your language</div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #dev>\n  <div class=\"modal-body\">\n\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"row text-center\">\n      <div class=\"col-12\">\n        <h1 class=\"pt-5\">Under development</h1>\n        <p class=\"pb-5\">This feature will be available soon.</p>\n      </div>\n    </div>\n\n  </div>\n</ng-template>\n\n<ng-template #unlockWallet>\n  <div class=\"modal-body\">\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"row text-center\">\n        <div class=\"col-10 offset-1\">\n            <div class=\"form-group text-center\">\n              <img src=\"assets/img/qlc-icon-lock-red.svg\" style=\"width:80px;height:auto;\" class=\"pt-4\">\n              <h1 class=\"pt-4\">Unlock Account</h1>\n              <div class=\"input-group pt-3 pb-3\">\n                <input class=\"form-control pass-field text-center\" type=\"password\" [(ngModel)]=\"unlockPassword\" (keyup.enter)=\"unlockWalletConfirm()\" placeholder=\"Enter your password\" appAutofocus>\n              </div>\n              <button class=\"btn btn-primary mb-4 w-100 pl-0 pr-0\" type=\"button\" (click)=\"unlockWalletConfirm()\">UNLOCK</button>\n            </div>\n      </div>\n    </div>\n    \n  </div>\n</ng-template>","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { Base64 } from 'js-base64';\n\ndeclare var jQuery: any;\ndeclare var require: any;\n\ndeclare global {\n  interface Window { jQuery: any; $: any; }\n}\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  wallet = this.walletService.wallet;\n  search_text = '';\n\n  modalRef: BsModalRef;\n\n  unlockPassword = '';\n\n  msg1 = '';\n\tmsg2 = '';\n\tmsg3 = '';\n\tmsg4 = '';\n\tmsg5 = '';\n\n  constructor(\n    public walletService: WalletService,\n    private notificationService: NotificationService,\n    private trans: TranslateService,\n    private router: Router,\n    private modalService: BsModalService\n  ) \n  { \n    this.loadLang();\n  }\n\n  ngOnInit() {\n    (function ($) {\n      var myTarget;\n      $('.menu-close').on('click', function (e) {\n        e.preventDefault();\n        $('.menu-sub-holder').removeClass('active');\n      });\n      $('.sub-left').on('click', function (e) {\n        e.preventDefault();\n        $('.menu-sub-holder').removeClass('active');\n      });\n      $('.menu-item').on('click', function (e) {\n        e.preventDefault();\n        myTarget = $(this).attr('data-link');\n        $('.'+myTarget).addClass('active');\n        if(myTarget == 'menu-sub-search') $('.search-text').focus();\n      });\n      $('.menu-search-field').on('click', function (e) {\n        e.preventDefault();\n        myTarget = $(this).attr('data-link');\n        $('.'+myTarget).addClass('active');\n        $('.search-text').focus();\n      });\n\n      $('.menu-sub-items').on('click', function (e) {\n        e.preventDefault();\n        $('.menu-sub-holder').removeClass('active');\n      });\n    \n    \n    \n    \n      $(window).click(function() {\n        //Hide the menus if visible\n        $('.menu-sub-holder').removeClass('active');\n      });\n      \n      $('.qlc-menu').click(function(event){\n        event.stopPropagation();\n      });\n    \n    \n    \n    \n    \n    \n      $('.navbar-toggler').on('click', function (e) {\n        e.preventDefault();\n        $('.navbar').toggleClass('open');\n      });\n      \n      $('.table-button-expand').on('click', function (e) {\n        e.preventDefault();\n        $(this).toggleClass('closed');\n        $(this).closest('div').next().toggleClass('open');\n      });\n      \n      $('.table-button-tokens').on('click', function (e) {\n        e.preventDefault();\n        $('.qlc-table-extra-token').toggleClass('closed');\n        $('.link-token-toggle').toggleClass('closed');\n      });\n      \n      /* LANG SELECT */\n      $('.qlc-top-language').on('click', function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        $(this).toggleClass('open');\n        $('.qlc-top-language-selector').toggleClass('open');\n      });\t\n      \n      $(window).click(function() {\n        var langMenuState = $('.qlc-top-language-selector').hasClass('open');\n        if (langMenuState === true) {\n          $('.qlc-top-language').toggleClass('open');\n          $('.qlc-top-language-selector').toggleClass('open');\n        }\n      });\n    \n      $('.qlc-top-language-selector').click(function(e){\n        e.stopPropagation();\n      });\n      $('.qlc-top-language-but').click(function(e){\n        e.preventDefault();\n        e.stopPropagation();\n        $('.qlc-top-language').toggleClass('open');\n        $('.qlc-top-language-selector').toggleClass('open');\n      });\n      \n      /* TOOLTIP INIT */\n      /*$(function () {\n          $('[data-toggle=\"tooltip\"]').tooltip();\n      });*/\n    })(jQuery);\n  }\n\n\n  async lockWallet() {\n\t\tif (this.wallet.type === 'ledger') {\n\t\t\treturn; // No need to lock a ledger wallet, no password saved\n\t\t}\n\t\tif (!this.wallet.password) {\n\t\t\treturn this.notificationService.sendWarning(this.msg3);\n\t\t}\n\t\tconst locked = await this.walletService.lockWallet();\n\t\tif (locked) {\n      this.notificationService.sendSuccess(this.msg4);\n\t\t} else {\n\t\t\tthis.notificationService.sendError(this.msg5);\n\t\t}\n  }\n\n  async unlockWalletConfirm() {\n\t\tconst unlocked = await this.walletService.unlockWallet(this.unlockPassword);\n\t\tthis.unlockPassword = '';\n\n\t\tif (unlocked) {\n      this.notificationService.sendSuccess(this.msg1);\n      this.modalRef.hide();\n\t\t} else {\n\t\t\tthis.notificationService.sendError(this.msg2);\n\t\t}\n\n    this.unlockPassword = '';\n  }\n  \n  loadLang() {\n    this.trans.get('WALLET_WARNINGS.msg1').subscribe((res: string) => { this.msg1 = res; });\n\t\tthis.trans.get('WALLET_WARNINGS.msg2').subscribe((res: string) => { this.msg2 = res; });\n\t\tthis.trans.get('WALLET_WARNINGS.msg3').subscribe((res: string) => { this.msg3 = res; });\n\t\tthis.trans.get('WALLET_WARNINGS.msg4').subscribe((res: string) => { this.msg4 = res; });\n\t\tthis.trans.get('WALLET_WARNINGS.msg5').subscribe((res: string) => { this.msg5 = res; });\n\t}\n\n  \n  search() {\n    if ((this.search_text.startsWith('qlc_1') || this.search_text.startsWith('qlc_3')) && this.search_text.length === 64) {\n      this.router.navigate(['/account/'+this.search_text]);\n    } else if(this.search_text.length === 64) {\n      this.router.navigate(['/transaction/'+this.search_text]);\n    } else {\n      const b64Encoded = Base64.encodeURI(this.search_text);\n      this.router.navigate(['/search/'+b64Encoded]);\n    }\n  }\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n}\n","<!-- HOME -->\n<div class=\"container mt-4 mb-4 qlc-content-home\">\n  <div class=\"row\">\n\n    <!-- TITLE -->\n    <div class=\"col-lg-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\">\n      <div class=\"content-title\">\n        <h1>Network Status</h1>\n      </div>\n    </div>\n    \n    <!--<div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-voting\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">VOTE RATIO</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12\">{{ votingPowerPercent | currency:'':'':'1.2-2' }} %</div>\n          </div>\n          <div class=\"row qlc-table-header-darkblue\">\n            <div class=\"col-12\"><a routerLink=\"/representatives\"><span class=\"qlc-icon icon-arrow-right-bluelight\"></span>Details</a></div>\n          </div>\n        </div>\n      </div>\n    </div>-->\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-blocks\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">BLOCKS</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12\">\n              <span *ngIf=\"ws.povLatestHeader != undefined\">{{ ws.povLatestHeader.basHdr.height | currency:'':'':'1.0-0' }}</span>\n            </div>\n          </div>\n          <div class=\"row qlc-table-header-darkblue\">\n            <div class=\"col-12\"><a routerLink=\"/pov-explorer\"><span class=\"qlc-icon icon-arrow-right-bluelight\"></span>All Blocks</a></div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-transactions\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">TRANSACTIONS</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12\">{{ wallet.blocksCount.count | currency:'':'':'1.0-0' }}</div>\n          </div>\n          <div class=\"row qlc-table-header-darkblue\">\n            <div class=\"col-12\"><a routerLink=\"/transactions\"><span class=\"qlc-icon icon-arrow-right-bluelight\"></span>All transactions</a></div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-accounts\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">WALLETS</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12\">{{ accountsCreated | currency:'':'':'1.0-0' }}</div>\n          </div>\n          <div class=\"row qlc-table-header-darkblue\">\n            <div class=\"col-12\"><a routerLink=\"/accounts\"><span class=\"qlc-icon icon-arrow-right-bluelight\"></span>All wallets</a></div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-tokens\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">TOKENS</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12\">{{ tokensCount | currency:'':'':'1.0-0'}}</div>\n          </div>\n          <div class=\"row qlc-table-header-darkblue\">\n            <div class=\"col-12\"><a routerLink=\"/tokens\"><span class=\"qlc-icon icon-arrow-right-bluelight\"></span>All tokens</a></div>\n          </div>\n        </div>\n      </div>\n    </div>\n        \n  </div>\n</div>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12 pl-md-2 pr-md-2 mt-0 mb-3 d-none d-md-block \">\n      <a routerLink=\"/portal\">\n        <img src=\"assets/img/banner-mining-support-plan-lg.png\" alt=\"Banner minner support plan\" style=\"width: 100%;\">\n      </a>\n    </div>\n\n    <div class=\"col-12 pl-md-2 pr-md-2 mt-0 mb-3 d-block d-md-none \">\n      <a routerLink=\"/portal\">\n        <img src=\"assets/img/banner-mining-support-plan-sm.png\" alt=\"Banner minner support plan\" style=\"width: 100%;\">\n      </a>\n    </div>\n\n    \n  </div>\n</div>\n<div class=\"container\"><div class=\"row\">\n\n  <div class=\"col-lg-6 col-md-12 col-12 pl-0 pr-0\">\n    <!-- LATEST BLOCKS -->\n    <div class=\"container mt-0 mb-3\">\n      <div class=\"row\">\n        \n        <div class=\"col-12 pl-0 pr-0\">\n          \n          <!-- TITLE -->\n          <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n            <div class=\"content-title\">\n              <h1>Latest Blocks</h1>\n            </div>\n          </div>\n    \n          <!-- LIST -->\n          <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n            <div class=\"content-box-white\">\n    \n                <div class=\"container\">\n      \n                    <div class=\"row qlc-table-header\">\n                      <div class=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 pl-4\">Block</div>\n                      <div class=\"col-xl-5 col-lg-6 col-md-4 col-sm-6 col-6 text-truncate\">Hash / Miner Account</div>\n                      <div class=\"col-xl-2 col-lg-3 pr-lg-4 col-md-2 col-sm-3 col-3 text-sm-right text-xl-center text-lg-right text-md-center text-right pr-sm-4 pr-md-0 pr-lg-0 pr-4\">Tx Num</div>\n                      <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-12 d-none d-xl-block d-lg-none d-md-block col-6 pr-4 text-right\">Time</div>\n                    </div>\n                    \n                    <div class=\"row qlc-table-row qlc-table-row-four closed row-anim-in\" *ngFor=\"let povHeader of ws.latest5Blocks\">\n                      <div class=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 pl-4 pb-0\">\n                        <span class=\"\">\n                          <span class=\"qlc-icon icon-block\" title=\"Block {{ povHeader.basHdr.height | currency:'':'':'1.0-0' }}\"></span>\n                          <span class=\"text-bold-grey\"><a [routerLink]=\"'/pov/height/' + povHeader.basHdr.height\">{{ povHeader.basHdr.height | currency:'':'':'1.0-0' }}</a></span>\n                        </span>\n                      </div>\n                      <div class=\"col-xl-5 col-lg-7 col-md-4 col-sm-7 col-7 pb-0\">\n                        <span class=\"text-color-lightgrey text-tiny\">Hash: </span><a [routerLink]=\"'/pov/hash/' + povHeader.basHdr.hash\">{{ povHeader.basHdr.hash | squeeze : '11,10' }}</a><br>\n                        <span class=\"text-color-lightgrey text-tiny\">Miner: </span><a [routerLink]=\"'/account/' + povHeader.cbtx.txOuts[0].address\">{{ povHeader.cbtx.txOuts[0].address | squeeze : '11,10' }}</a><br>\n                        <span class=\"text-color-lightgrey text-tiny\">Algorithm: </span>{{ povHeader.algoName }}<br>\n                        <span class=\"text-color-lightgrey text-tiny\">AuxPOW: </span>{{ (povHeader.auxHdr != null ? 'Yes' : 'No' ) }}\n                        \n                      </div>\n                      <div class=\"col-xl-2 col-lg-2 pr-lg-4 col-md-2 col-sm-2 col-2 pb-0 pr-sm-4 pr-md-0 pr-lg-0 pr-4 text-sm-right text-md-center text-xl-center text-lg-right text-right \">\n                          {{ povHeader.cbtx.txNum }}\n                      </div>\n                      <div class=\"col-xl-2 col-lg-12 col-md-3 col-sm-12 col-12 pr-4 text-right text-lg-right pr-lg-4\">\n                        {{ povHeader.basHdr.timestamp * 1000 | date: 'short' }}\n                      </div>\n                  </div>\n                </div>\n             \n    \n    \n            </div>\n          </div>\n    \n          <!-- BUTTON -->\n          <div class=\"col-lg-12 mb-0 mt-2 pl-md-2 pr-md-2 text-center\">\n            <a routerLink=\"/pov-explorer\" class=\"btn btn-primary btn-blue\">ALL BLOCKS</a>\n          </div>\n        \n        </div>\n        \n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-lg-6 col-md-12 col-12 pl-0 pr-0\">\n<!-- LATEST TRANSACTIONS -->\n<div class=\"container mt-0 mb-3\">\n  <div class=\"row\">\n    \n    <div class=\"col-12 pl-0 pr-0\">\n      \n      <!-- TITLE -->\n      <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>Latest Transactions</h1>\n        </div>\n      </div>\n\n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n        <div class=\"content-box-white\">\n\n\n          <div class=\"container\">\n\n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 pl-4\">Type</div>\n              <div class=\"col-xl-5 col-lg-7 col-md-4 col-sm-7 col-6 text-truncate\">Address / Transaction ID</div>\n              <div class=\"col-xl-2 col-lg-2 pr-lg-4 col-md-2 pr-md-0 col-sm-2 col-3 pr-sm-4 pr-4 pr-xl-0 text-right text-xl-right\">Amount</div>\n              <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 d-none d-xl-block d-md-block d-lg-none d-sm-none col-6 pr-4 text-right\">Time</div>\n            </div>\n\n            <div class=\"row qlc-table-row qlc-table-row-four closed row-anim-in\" *ngFor=\"let transaction of ws.latest5Transactions\">\n              <div class=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3 pl-4 pb-0 pr-sm-0\">\n                <span class=\"qlc-icon icon-{{ transaction.type }}\" title=\"{{ transaction.type }}\"></span>\n                <span class=\"d-none d-sm-inline-block d-md-inline-block\">\n                  <span class=\"text-bold-grey\" *ngIf=\"transaction.type != 'ContractReward'\">{{ transaction.type }}</span>\n                  <span class=\"text-bold-grey\" *ngIf=\"transaction.type == 'ContractReward'\" style=\"font-size: 11px;\">{{ transaction.type }}</span>\n                </span>\n              </div>\n              <div class=\"col-xl-5 pr-xl-0 col-lg-6 col-md-4 col-sm-6 col-6 pb-0\">\n                <span class=\"text-color-lightgrey text-tiny\">{{transaction.type == 'Send' || transaction.type == 'ContractSend' ? 'To' : 'From'}}: </span> \n                <a [routerLink]=\"'/account/' + (transaction.link_as_account || transaction.address)\">{{ transaction.link_as_account || transaction.address | squeeze : '11,10' }}</a><br>\n                <span class=\"text-color-lightgrey text-tiny\">Hash: </span> \n                <a [routerLink]=\"'/transaction/' + transaction.hash\"><span>{{ transaction.hash | squeeze : '11,10' }}</span></a>\n                <span *ngIf=\"transaction.povConfirmHeight > 0\">\n                  <br><span class=\"text-color-lightgrey text-tiny\">Confirm height:</span>\n                  <a [routerLink]=\"'/pov/height/' + transaction.povConfirmHeight\"> {{ transaction.povConfirmHeight }}</a><br> \n                  <span class=\"text-color-lightgrey text-tiny\">Confirm count:</span> {{ transaction.povConfirmCount }}\n                </span>\n              </div>\n              <div class=\"col-xl-2 pr-xl-0 col-lg-3 pr-lg-4 col-md-2 pr-md-0 col-sm-3 col-3 pb-0 pr-sm-0 pr-sm-4 pr-4 text-xl-right text-right {{\n                transaction.type == 'Send' || transaction.type == 'ContractSend' ? 'text-color-red' : 'text-color-green'\n              }}\" [ngStyle]=\"{'font-size: 11px': transaction.type == 'ContractReward'}\">\n                <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" *ngIf=\"transaction.tokenInfo && transaction.type != 'ContractReward'\" style=\"font-size: 11px;\">{{transaction.type == 'Send' || transaction.type == 'ContractSend' ? '-' : '+'}} {{ transaction.amount | qlc:transaction.tokenInfo.decimals | currency:'':'':'1.2-8' }}</span>\n                <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" *ngIf=\"transaction.tokenInfo && transaction.type == 'ContractReward'\" style=\"font-size: 11px;\">{{transaction.type == 'Send' || transaction.type == 'ContractSend' ? '-' : '+'}} {{ transaction.amount | qlc:transaction.tokenInfo.decimals | currency:'':'':'1.2-8' }}</span>\n                <br><span class=\"text-color-grey\">{{ transaction.tokenName }}</span>\n              </div>\n              <div class=\"col-xl-2 col-lg-12 col-md-3 col-sm-12 col-12 pr-4 text-right\">\n                {{ transaction.timestamp * 1000 | date: 'short' }}\n              </div>\n              <div class=\"container transaction-details\">\n          \n              </div>\n            </div>\n\n          </div>\n\n\n        </div>\n      </div>\n\n      <!-- BUTTON -->\n      <div class=\"col-lg-12 mb-0 mt-2 pl-md-2 pr-md-2 text-center\">\n        <a routerLink=\"/transactions\" class=\"btn btn-primary btn-blue\">ALL TRANSACTIONS</a>\n      </div>\n    \n    </div>\n    \n  </div>\n</div>\n</div>\n\n</div></div>\n\n<!-- POV STATUS -->\n\n<div class=\"container\">\n  <div class=\"row equal\">\n\n    <!-- TITLE -->\n    <div class=\"col-lg-12 mb-0 pb-0 mt-4 pl-md-2 pr-md-2\">\n      <div class=\"content-title\">\n        <h1>Mining Status (POV)</h1>\n      </div>\n    </div>\n    \n    <a routerLink=\"/mining\" class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\" style=\"text-decoration: none;\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-white sub-page\">\n            <div class=\"col-12\">Miners online</div>\n          </div>\n          <div class=\"row qlc-table-row-white sub-page pb-0\">\n            <div class=\"col-12 text-wrap pb-1\"><span class=\"row-text-big\" style=\"color: #000000;\">{{ minerOnline | currency:'':'':'1.0-0' }}</span></div>\n          </div>\n          <div class=\"row qlc-table-row-white sub-page pt-0\">\n            <div class=\"col-12 text-wrap pt-1\"><span class=\"text-blue\">{{ minerCount | currency:'':'':'1.0-0' }} total mining accounts</span></div>\n          </div>\n        </div>\n      </div>\n    </a>\n\n    <a routerLink=\"/representatives\" class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pr-sm-2 pb-2\" style=\"text-decoration: none;\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-white sub-page\">\n            <div class=\"col-12\">Voting power online</div>\n          </div>\n          <div class=\"row qlc-table-row-white sub-page pb-0\">\n            <div class=\"col-12 text-wrap pb-1\"><span class=\"row-text-big\" style=\"color: #000000;\">{{ votingPower | qlc | number }}</span></div>\n          </div>\n          <div class=\"row qlc-table-row-white sub-page pt-0\">\n            <div class=\"col-12 text-wrap pt-1\"><span class=\"text-blue\">{{ votingPowerPercent }} % of total voting power</span></div>\n          </div>\n        </div>\n      </div>\n    </a>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pb-2 pr-sm-2 pl-sm-3\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-white sub-page\">\n            <div class=\"col-12\">Avg. tx / block</div>\n          </div>\n          <div class=\"row qlc-table-row-white sub-page pb-0\">\n            <div class=\"col-12 text-wrap pb-1\"><span class=\"row-text-big\">{{ povInfo.AvgTxPerBlock }}</span></div>\n          </div>\n          <div class=\"row qlc-table-row-white sub-page pt-0\">\n            <div class=\"col-12 text-wrap pt-1\"><span class=\"text-blue\">{{ povInfo.AllTxNum }} tx in last 24 hours</span></div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-white sub-page\">\n            <div class=\"col-12\">Nodes online</div>\n          </div>\n          <div class=\"row qlc-table-row-white sub-page pb-0\">\n            <div class=\"col-12 text-wrap pb-1\"><span class=\"row-text-big\">{{ nodesOnline | currency:'':'':'1.0-0' }}</span></div>\n          </div>\n          <div class=\"row qlc-table-row-white sub-page pt-0\">\n            <div class=\"col-12 text-wrap pt-1\"><span class=\"text-blue\">{{ nodesTotal | currency:'':'':'1.0-0' }} total nodes</span></div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n  </div>\n</div>\n\n<!-- POV GRAPHS -->\n\n<div class=\"container\">\n    <div class=\"row equal\">\n\n      \n      <div class=\"col-lg-6 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n        <div class=\"content-box-white\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-white sub-page\">\n              <div class=\"col-12\">\n                <div class=\"content-title\" style=\"text-transform: none;\">\n                  <h1>24h Mining Rewards (QGAS)</h1>\n                </div>\n              </div>\n            </div>\n            <div class=\"row qlc-table-row-white sub-page pb-0\">\n              <div class=\"col-12\">\n                <ngx-chartjs [data]=\"miningRewardsGraphData\" [options]=\"graphOptions\" [redraw]=\"true\" type=\"line\" class=\"w-100\"></ngx-chartjs>\n              </div>\n            </div>\n            <div class=\"row qlc-table-row-white sub-page pt-0\">\n              <div class=\"col-6 pt-4\">\n                  <span>24h avg. mining reward: </span><span class=\"text-blue\">{{ totalMiningReward/24 | currency:'':'':'1.2-2'}} QGAS</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  \n      <div class=\"col-lg-6 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n        <div class=\"content-box-white\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-white sub-page\">\n              <div class=\"col-12\">\n                <div class=\"content-title\" style=\"text-transform: none;\">\n                  <h1>24h Transactions</h1>\n                </div>\n              </div>\n            </div>\n            <div class=\"row qlc-table-row-white sub-page pb-0\">\n              <div class=\"col-12\">\n                <ngx-chartjs [data]=\"transactionsGraphData\" [options]=\"transactionsgraphOptions\" redraw=\"true\" type=\"line\" class=\"w-100\"></ngx-chartjs>\n              </div>\n            </div>\n            <div class=\"row qlc-table-row-white sub-page pt-0\">\n              <div class=\"col-6 pt-4\">\n                <span>24h avg. transactions: </span><span class=\"text-blue\">{{ povInfo.AvgTxPerBlock }}</span>\n              </div>\n              <div class=\"col-6 pt-4\">\n                <span>Max transactions in block: </span><span class=\"text-blue\">{{ povInfo.MaxTxPerBlock }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    </div>\n  </div>\n<div class=\"container\">\n    <div class=\"row equal\">\n\n      \n      <div class=\"col-lg-6 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n        <div class=\"content-box-white\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-white sub-page\">\n              <div class=\"col-12\">\n                <div class=\"content-title\" style=\"text-transform: none;\">\n                  <h1>Blocks Last 2 Hours</h1>\n                </div>\n              </div>\n            </div>\n            <div class=\"row qlc-table-row-white sub-page pb-0\">\n              <div class=\"col-12\">\n                <ngx-chartjs [data]=\"blockHashData\" [options]=\"pieChartOptions\" [redraw]=\"true\" type=\"pie\" class=\"w-100\"></ngx-chartjs>\n              </div>\n            </div>\n            <div class=\"row qlc-table-row-white sub-page pt-0\">\n              <div class=\"col-12 pt-4\">\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  \n      <div class=\"col-lg-6 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n        <div class=\"content-box-white\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-white sub-page\">\n              <div class=\"col-12\">\n                <div class=\"content-title\" style=\"text-transform: none;\">\n                  <h1>Blocks Last 24 Hours</h1>\n                </div>\n              </div>\n            </div>\n            <div class=\"row qlc-table-row-white sub-page pb-0\">\n              <div class=\"col-12\">\n                <ngx-chartjs [data]=\"blockHashData24\" [options]=\"pieChartOptions\" redraw=\"true\" type=\"pie\" class=\"w-100\"></ngx-chartjs>\n              </div>\n            </div>\n            <div class=\"row qlc-table-row-white sub-page pt-0\">\n              <div class=\"col-12 pt-4\">\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    </div>\n  </div>\n<!-- NEWS -->\n<div class=\"container mt-4 mb-4\">\n  <div class=\"row\">\n\n    <!-- TITLE -->\n    <div class=\"col-lg-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\">\n      <div class=\"content-title\">\n        <h1>News</h1>\n      </div>\n    </div>\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\" *ngFor=\"let news of newsList\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-12 pt-4 pb-4 pl-4 pr-4\">\n              <p class=\"date-mini\">{{ news.date | date: 'MM/dd/yyyy' }}</p>\n              <a href=\"{{ news.link }}\" target=\"_blank\" style=\"text-decoration: none !important;\"><h3 class=\"pb-4 link-blue\">{{ news.title }}</h3></a>\n              <p>{{ news.content }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- BUTTON -->\n    <div class=\"col-lg-12 pt-2 pb-5 mb-0 mt-2 pl-md-2 pr-md-2 text-center\">\n      <a routerLink=\"/news\" class=\"btn btn-primary btn-blue\">ALL NEWS</a>\n    </div>\n\n  </div>\n</div>\n\n<div class=\"container mt-4 mb-4\">\n  <div class=\"row\">\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ChildActivationEnd } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { NodeService } from 'src/app/services/node.service';\nimport { timer, interval } from 'rxjs';\nimport BigNumber from 'bignumber.js';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport { QLCWebSocketService } from 'src/app/services/qlc-websocket.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  \ttransactions: any[] = [];\n\tpendingBlocks = [];\n\tpageSize = 25;\n\taccountsCreated = 0;\n\t//transactionsCount = { count: 0, unchecked: 0 };\n\trepresentativeOnline = 0;\n\trepresentativesCount = 0;\n\tnodesOnline = 0;\n\tnodesTotal = 0;\n\t\n\tvotingPower = new BigNumber(0);\n\tvotingPowerPercent = '0';\n\ttokensCount = 0;\n\n\tlatestPovHeight = 0;\n\tpovHeaders = [];\n\tminerOnline = 0;\n\tminerCount = 0;\n\n\tnewsList = [];\n\t\n\trouterSub = null;\n\n\tminingRewardsGraphData = {\n\t\tlabels: ['-24','-22','-20','-18','-16','-14','-12','-10','-8','-6','-4','-2'],\n\t\tdatasets: [\n\t\t  {\n\t\t\tlabel: 'Mining Rewards',\n\t\t\tdata: [10, 50, 40, 80, 20, 60, 5, 35, 45, 55 ,8, 2],\n\t\t\tfill: false,\n\t\t\tbackgroundColor: \"#2069c2\",\n\t\t\tborderColor: \"#2069c2\",\n\t\t\tpointBackgroundColor: \"#2069c2\",\n   \t\t\tpointBorderColor: \"#2069c2\",\n   \t\t\tpointHoverBackgroundColor: \"#ffffff\",\n   \t\t\tpointHoverBorderColor: \"#2069c2\",\n\t\t\tborderDash: [3, 3],\n\t\t\tborderWidth: 2\n\t\t  },\n\t\t  {\n\t\t\tlabel: 'Rep Rewards',\n\t\t\tdata: [10, 50, 40, 80, 20, 60, 5, 35, 45, 55 ,8, 2],\n\t\t\tfill: false,\n\t\t\tbackgroundColor: \"#6941b7\",\n\t\t\tborderColor: \"#6941b7\",\n\t\t\tpointBackgroundColor: \"#6941b7\",\n   \t\t\tpointBorderColor: \"#6941b7\",\n   \t\t\tpointHoverBackgroundColor: \"#ffffff\",\n   \t\t\tpointHoverBorderColor: \"#6941b7\",\n\t\t\tborderDash: [3, 3],\n\t\t\tborderWidth: 2\n\t\t  }\n\t\t],\n\t};\n\n\ttransactionsGraphData = {\n\t\tlabels: ['-24','-22','-20','-18','-16','-14','-12','-10','-8','-6','-4','-2'],\n\t\tdatasets: [\n\t\t  {\n\t\t\tlabel: 'Transactions',\n\t\t\tdata: [10, 50, 40, 80, 20, 60, 5, 35, 45, 55 ,8, 2],\n\t\t\tfill: false,\n\t\t\tbackgroundColor: \"#56af08\",\n\t\t\tborderColor: \"#56af08\",\n\t\t\tpointBackgroundColor: \"#56af08\",\n   \t\t\tpointBorderColor: \"#56af08\",\n   \t\t\tpointHoverBackgroundColor: \"#ffffff\",\n   \t\t\tpointHoverBorderColor: \"#56af08\",\n\t\t\tborderDash: [3, 3],\n\t\t\tborderWidth: 2,\n            yAxisID: \"y-axis-1\"\n\t\t  },\n\t\t  {\n\t\t\tlabel: 'Blocks',\n\t\t\tdata: [10, 50, 40, 80, 20, 60, 5, 35, 45, 55 ,8, 2],\n\t\t\tfill: false,\n\t\t\tbackgroundColor: \"#2069c2\",\n\t\t\tborderColor: \"#2069c2\",\n\t\t\tpointBackgroundColor: \"#2069c2\",\n   \t\t\tpointBorderColor: \"#2069c2\",\n   \t\t\tpointHoverBackgroundColor: \"#ffffff\",\n   \t\t\tpointHoverBorderColor: \"#2069c2\",\n\t\t\tborderDash: [3, 3],\n\t\t\tborderWidth: 2,\n            yAxisID: \"y-axis-2\"\n\t\t  }\n\t\t],\n\t};\n\n\tgraphOptions = {\n\t\tlegend: {\n\t\t\tdisplay: true,\n\t\t\tlabels: {\n\t\t\t\tpadding: 30\n\t\t\t},\n\t\t}\n\t}\n\n\ttransactionsgraphOptions = {\n\t\tlegend: {\n\t\t\tdisplay: true,\n\t\t\tlabels: {\n\t\t\t\tpadding: 30\n\t\t\t},\n\t\t},\n\t\tscales: {\n\t\t\tyAxes: [{\n\t\t\t\ttype: \"linear\", // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n\t\t\t\tdisplay: \"auto\",\n\t\t\t\tposition: \"left\",\n\t\t\t\tid: \"y-axis-1\",\n\t\t\t}, {\n\t\t\t\ttype: \"linear\", // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n\t\t\t\tdisplay: \"auto\",\n\t\t\t\tposition: \"right\",\n\t\t\t\tid: \"y-axis-2\",\n\n\t\t\t\t// grid line settings\n\t\t\t\tgridLines: {\n\t\t\t\t\tdrawOnChartArea: false, // only want the grid lines for one axis to show up\n\t\t\t\t},\n\t\t\t}],\n\t\t}\n\t}\n\n\tblockHashData = {\n\t\tlabels: ['SHA256D', 'SCRYPT', 'X11'],\n\t\tdatasets: [\n\t\t  {\n\t\t\tdata: [0, 0, 0],\n\t\t\tbackgroundColor: ['#6941b7', '#2069c2', '#56af08', 'rgb(75, 192, 192)'],\n\t\t\thoverBackgroundColor: ['#6941b7', '#2069c2', '#56af08', 'rgba(75, 192, 192, 0.2)'],\n\t\t  },\n\t\t],\n\t};\n\ttotalHashesPerSecond2Hours = 0;\n\n\tblockHashData24 = {\n\t\tlabels: ['SHA256D', 'SCRYPT', 'X11'],\n\t\tdatasets: [\n\t\t  {\n\t\t\tdata: [0, 0, 0],\n\t\t\tbackgroundColor: ['#6941b7', '#2069c2', '#56af08', 'rgb(75, 192, 192)'],\n\t\t\thoverBackgroundColor: ['#6941b7', '#2069c2', '#56af08', 'rgba(75, 192, 192, 0.2)'],\n\t\t  },\n\t\t],\n\t};\n\ttotalHashesPerSecond24Hours = 0;\n\n\tpieChartOptions = {\n\t\tlegend: {\n\t\t\tdisplay: true,\n\t\t\tlabels: {\n\t\t\t\tpadding: 30\n\t\t\t},\n\t\t}\n\t}\n\n\tpovInfo = {\n\t\t\"MaxTxPerBlock\": 0,\n\t\t\"MinTxPerBlock\": 0,\n\t\t\"AvgTxPerBlock\": 0,\n\t\t\"MaxTxPerHour\": 0,\n\t\t\"MinTxPerHour\": 0,\n\t\t\"AvgTxPerHour\": 0,\n\t\t\"MaxBlockPerHour\": 0,\n\t\t\"MinBlockPerHour\": 0,\n\t\t\"AvgBlockPerHour\": 0,\n\t\t\"AllBlockNum\": 0,\n\t\t\"AllTxNum\": 0,\n\t\t\"HourItemList\": [\n\t\t]\n\t};\n\n\ttotalMiningReward = 0;\n\ttotalRepReward = 0;\n\t\n\tprivate latestTransactionsInterval$ = interval(60000);\n\n\tconstructor(\n\t\t\tprivate route: Router,\n\t\t\tprivate api: ApiService,\n\t\t\tprivate node: NodeService,\n\t\t\tpublic wallet: WalletService,\n\t\t\tpublic ws: QLCWebSocketService\n\t) { }\n\n  \tasync ngOnInit() {\n   \t \tthis.routerSub = this.route.events.subscribe(event => {\n\t\t\tif (event instanceof ChildActivationEnd) {\n\t\t\t\tthis.loadTransactions(); // Reload the state when navigating to itself from the transactions page\n\t\t\t}\n\t\t});\n\t\tthis.load();\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.routerSub) {\n\t\t\tthis.routerSub.unsubscribe();\n\t\t}\n  \t}\n\n\tload() {\n\t\tif (this.node.status === true) {\n\t\t\tthis.loadStatuses();\n\t\t\tthis.loadTransactions();\n\t\t} else {\n\t\t\tthis.reload();\n\t\t}\n\t}\n\n\tasync reload() {\n\t\tconst source = timer(500);\n\t\tconst abc =  source.subscribe(async val => {\n\t\t\t\tthis.load();\n\t\t});\n\t}\n\n\tasync loadNews() {\n\t\tconst news = await this.api.news();\n\t\tif (!news.error) {\n\t\t\tthis.newsList = news.result;\n\t\t}\n\t}\n\t\n\tasync loadStatuses() {\n\t\tconst accountsCreated = await this.api.accountsCount();\n\t\tif (!accountsCreated.error) {\n\t\t\tthis.accountsCreated = accountsCreated.result;\n\t\t}\n\t\tthis.loadNews();\n\t\tconst povInfoQuery = await this.api.getLastNHourInfo();\n\t\tlet graphMiningRewards = [];\n\t\tlet graphRepRewards = [];\n\t\tlet graphTransactions = [];\n\t\tlet graphBlocks = [];\n\t\t\n\t\tlet hashInfoData = [];\n\t\tlet sha256d_2h = 0;\n\t\tlet x11_2h = 0;\n\t\tlet scrypt_2h = 0;\n\t\tlet hashInfoData24 = [];\n\t\tlet sha256d_24h = 0;\n\t\tlet x11_24h = 0;\n\t\tlet scrypt_24h = 0;\n\n\t\tif (povInfoQuery.result) {\n\t\t\tthis.povInfo = povInfoQuery.result;\n\t\t\tthis.totalMiningReward = 0;\n\t\t\tthis.totalRepReward = 0;\n\t\t\t\n\t\t\t//console.log(povInfoQuery.result)\n\t\t\tfor (const hourInfo of this.povInfo.HourItemList) {\n\t\t\t\tif (hourInfo.Hour % 2 === 0) {\n\t\t\t\t\tgraphMiningRewards.push(hourInfo.AllMinerReward/100000000);\n\t\t\t\t\tgraphRepRewards.push(hourInfo.AllRepReward/100000000);\n\t\t\t\t\tgraphTransactions.push(hourInfo.AllTxNum);\n\t\t\t\t\tgraphBlocks.push(hourInfo.AllBlockNum);\n\t\t\t\t}\n\t\t\t\tthis.totalMiningReward += hourInfo.AllMinerReward/100000000;\n\t\t\t\tthis.totalRepReward += hourInfo.AllRepReward/100000000;\n\t\t\t\tif (hourInfo.Hour < 2) {\n\t\t\t\t\tsha256d_2h += hourInfo.Sha256dBlockNum;\n\t\t\t\t\tx11_2h += hourInfo.X11BlockNum;\n\t\t\t\t\tscrypt_2h += hourInfo.ScryptBlockNum;\n\t\t\t\t}\n\t\t\t\tsha256d_24h += hourInfo.Sha256dBlockNum;\n\t\t\t\tx11_24h += hourInfo.X11BlockNum;\n\t\t\t\tscrypt_24h += hourInfo.ScryptBlockNum;\n\t\t\t}\n\t\t\thashInfoData = [sha256d_2h,scrypt_2h,x11_2h];\n\t\t\t\n\t\t\thashInfoData24 = [sha256d_24h,scrypt_24h,x11_24h];\n\t\t}\n\n\t\t//console.log(hashInfoData);\n\t\t//console.log(hashInfoData24);\n\n\n/**\n * \n * \"Sha256dBlockNum\": 24,\n        \"X11BlockNum\": 18,\n        \"ScryptBlockNum\": 16,\n */\n\t\tgraphMiningRewards.reverse();\n\t\tgraphRepRewards.reverse();\n\t\tgraphTransactions.reverse();\n\t\tgraphBlocks.reverse();\n\n\t\tconst oldDataSet = this.miningRewardsGraphData.datasets[0];\n\t\tconst oldDataSet2 = this.miningRewardsGraphData.datasets[1];\n\t\n\t\tconst newDataSet = {\n\t\t\t...oldDataSet,\n\t\t};\n\n\t\tconst newDataSet2 = {\n\t\t\t...oldDataSet2,\n\t\t};\n\t\n\t\tnewDataSet.data = graphMiningRewards;\n\t\tnewDataSet2.data = graphRepRewards;\n\n\n\t\tconst newState = {\n\t\t\t...this.miningRewardsGraphData,\n\t\t\tdatasets: [newDataSet, newDataSet2],\n\t\t};\n\t\n\t\tthis.miningRewardsGraphData = newState;\n\n\t\tconst transactionsOldDataSet = this.transactionsGraphData.datasets[0];\n\t\tconst transactionsOldDataSet2 = this.transactionsGraphData.datasets[1];\n\t\n\t\tconst transactionsNewDataSet = {\n\t\t\t...transactionsOldDataSet,\n\t\t};\n\n\t\tconst transactionsNewDataSet2 = {\n\t\t\t...transactionsOldDataSet2,\n\t\t};\n\t\n\t\ttransactionsNewDataSet.data = graphTransactions;\n\t\ttransactionsNewDataSet2.data = graphBlocks;\n\t\n\t\tconst transactionsNewState = {\n\t\t\t...this.transactionsGraphData,\n\t\t\tdatasets: [transactionsNewDataSet,transactionsNewDataSet2],\n\t\t};\n\t\n\t\tthis.transactionsGraphData = transactionsNewState;\n\n\t\tthis.minerCount = 0;\n\t\tthis.minerOnline = 0;\n\t\tconst minerStatsQuery = await this.api.getMinerStats();\n\t\tif (!minerStatsQuery.error) {\n\t\t\tthis.minerCount = minerStatsQuery.result.minerCount;\n\t\t\tthis.minerOnline = minerStatsQuery.result.dayOnlineCount;\n\t\t}\n\t\t\n\t\t//hash info\n\t\t//const hashInfoQuery = await this.api.getHashInfo(0,120);\n\n\t\t/*if (hashInfoQuery.result) {\n\t\t\tfor (const [key, value] of Object.entries(hashInfoQuery.result)) {\n\t\t\t\t//console.log(key, value);\n\t\t\t\tif (key == 'chainHashPS')\n\t\t\t\t\tthis.totalHashesPerSecond2Hours = <number> value;\n\t\t\t\telse \n\t\t\t\t\thashInfoData.push(value);\n\t\t\t}\n\t\t}*/\n\n\t\tconst hashOldDataSet = this.blockHashData.datasets[0];\n\t\n\t\tconst hashNewDataSet = {\n\t\t\t...hashOldDataSet,\n\t\t};\n\t\n\t\thashNewDataSet.data = hashInfoData;\n\t\n\t\tconst hashNewState = {\n\t\t\t...this.blockHashData,\n\t\t\tdatasets: [hashNewDataSet],\n\t\t};\n\t\n\t\tthis.blockHashData = hashNewState;\n\n\t\t//hash info 24 h\n\t\t//const hashInfoQuery24 = await this.api.getHashInfo(0,1440);\n\n\t\t/*if (hashInfoQuery24.result) {\n\t\t\tfor (const [key, value] of Object.entries(hashInfoQuery24.result)) {\n\t\t\t\t//console.log(key, value);\n\t\t\t\tif (key == 'chainHashPS')\n\t\t\t\t\tthis.totalHashesPerSecond24Hours = <number> value;\n\t\t\t\telse \n\t\t\t\t\thashInfoData24.push(value);\n\t\t\t}\n\t\t}*/\n\n\t\tconst hashOldDataSet24 = this.blockHashData24.datasets[0];\n\t\n\t\tconst hashNewDataSet24 = {\n\t\t\t...hashOldDataSet24,\n\t\t};\n\t\n\t\thashNewDataSet24.data = hashInfoData24;\n\t\n\t\tconst hashNewState24 = {\n\t\t\t...this.blockHashData24,\n\t\t\tdatasets: [hashNewDataSet24],\n\t\t};\n\t\n\t\tthis.blockHashData24 = hashNewState24;\n\n\n\t\t\n\t\t//const transactionsCount = await this.api.blocksCount();\n\t\t//console.log(transactionsCount);\n\t\t//if (!transactionsCount.error) {\n\t\t//\tthis.transactionsCount = transactionsCount.result; // transactionsCount.unchecked == pending transactions ??\n\t\t//}\n\t\tthis.wallet.refreshBlocks();\n\n\t\tconst tokensCount = await this.api.tokens();\n\t\tif (!tokensCount.error) {\n\t\t\tthis.tokensCount = tokensCount.result.length;\n\t\t}\n\n\t\tconst representatives = await this.api.representatives();\n\t\tif (representatives.result) {\n\t\t\tthis.representativesCount = representatives.result.length;\n\t\t\tconst onlineRepresentatives = await this.api.onlineRepresentatives();\n\t\t\tconst onlineReps = onlineRepresentatives.result;\n\t\t\tthis.representativeOnline = onlineReps.length; \n\t\t\tconst tokens = await this.api.tokenInfoByName('QLC');\n\t\t\tlet votingOnline = new BigNumber(0);\n      \t\tonlineReps.forEach(async rep => {\n\t\t\t\tconst representative = Array.isArray(representatives.result) ? representatives.result.filter(repMeta => repMeta.address === rep)[0] : null;\n\t\t\t\tconst total = representative != null ? representative.total : 0;\n\t\t\t\tvotingOnline = new BigNumber(total).plus(votingOnline);\n\t\t\t\tthis.votingPower = votingOnline;\n\t\t\t\tthis.votingPowerPercent = new BigNumber(votingOnline).dividedBy(tokens.result.totalSupply).multipliedBy(100).toFixed(2); \n\t\t\t});\n\t\t}\n\t\t\n\t\tconst nodesInfoQuery = await this.api.peersCount();\n\t\tif (nodesInfoQuery.result) {\n\t\t\tthis.nodesOnline = nodesInfoQuery.result.online;\n\t\t\tthis.nodesTotal = nodesInfoQuery.result.all;\n\t\t}\n\n\n\t}\n\n\tasync loadTransactions() {\n\t\tthis.getTransactions();\n\t\tthis.latestTransactionsInterval$.subscribe(async () => {\n\t\t\tthis.getTransactions();\n\t\t});\n\t}\n\n\tasync getTransactions() {\n\t\tthis.latestPovHeight = 0;\n\t\tconst latesPovHeader = await this.api.getLatestHeader();\n\t\tif (!latesPovHeader.error) {\n\t\t\tthis.latestPovHeight = latesPovHeader.result.basHdr.height;\n\t\t}\n\t\t\n\t\tconst povHeadersQuery = await this.api.batchGetHeadersByHeight(this.latestPovHeight , 5);\n\t\t\n\t\tlet newPovHeaders = [];\n\t\tif (!povHeadersQuery.error) {\n\t\t\tconst povHeaders = povHeadersQuery.result.headers;\n\t\t\tfor (const header of povHeaders) {\n\t\t\t\tnewPovHeaders.push(header);\n\t\t\t}\n\t\t\tthis.povHeaders = newPovHeaders;\n    \t}\n\n\t\tconst transactions = await this.api.blocks(5);\n\t\t\n\t\tif (!transactions.error) {\n\t\t\tthis.transactions = await this.wallet.prepareQLCBlockView(transactions.result);\n    \t}\n\t}\n\n}\n","<div class=\"container mt-0 qlc-content-first\">\n    <div class=\"row\">\n        <div class=\"col-12 pl-0 pr-0 pb-2\">\n            \n            <!-- TITLE -->\n            <div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n                <div class=\"content-title\">\n                    <h1>{{ 'IMPORT_ADDRESS_BOOK.import_address_book_title' | translate }}</h1>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n</div>\n\n<div class=\"container addressbook\">\n\t<div class=\"row\">\n\t\t<div class=\"col-12 pl-0 pr-0\">\n\t\t\t<h1>{{ 'IMPORT_ADDRESS_BOOK.import_address_book_title' | translate }}</h1>\n\t\t</div>\n\t</div>\n\t<div *ngIf=\"activePanel == 'error'\" class=\"row defaultTable content\">\n\t\t<div class=\"col-12 text-center\">\n\t\t\t<b>{{ 'IMPORT_ADDRESS_BOOK.error_title' | translate }}</b\n\t\t\t><br />\n\t\t\t{{ 'IMPORT_ADDRESS_BOOK.error_text' | translate }}\n\t\t</div>\n\t</div>\n\n\t<div *ngIf=\"activePanel == 'imported'\" class=\"row defaultTable content\">\n\t\t<div class=\"col-12 text-center\">\n\t\t\t<b>{{ 'IMPORT_ADDRESS_BOOK.imported_title' | translate }}</b\n\t\t\t><br />\n\t\t\t{{ 'IMPORT_ADDRESS_BOOK.imported_text' | translate }}\n\t\t</div>\n\t\t<div class=\"col-12 px-0 \">\n\t\t\t<div class=\"row justify-content-center buttons\">\n\t\t\t\t<div class=\"col-xl-3 col-lg-4 col-10\">\n\t\t\t\t\t<a routerLink=\"/address-book\"\n\t\t\t\t\t\t><button type=\"submit\" class=\"btn btn-primary\">\n\t\t\t\t\t\t\t{{ 'IMPORT_ADDRESS_BOOK.imported_button' | translate }}\n\t\t\t\t\t\t</button></a\n\t\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"row defaultTable content\" *ngIf=\"activePanel == 'import'\">\n\t\t<div class=\"col-12\">\n\t\t\t<div class=\"row align-items-center rowDefault\">\n\t\t\t\t<div class=\"col-12 text-center\">\n\t\t\t\t\t<span class=\"import-warning\" *ngIf=\"conflictingEntries\">\n\t\t\t\t\t\t{{ conflictingEntries }} {{ 'IMPORT_ADDRESS_BOOK.label_exist' | translate }}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"import-warning\" *ngIf=\"newEntries\">\n\t\t\t\t\t\t{{ newEntries }} {{ 'IMPORT_ADDRESS_BOOK.label_new' | translate }}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"import-warning\" *ngIf=\"existingEntries\">\n\t\t\t\t\t\t{{ existingEntries }} {{ 'IMPORT_ADDRESS_BOOK.label_modified' | translate }}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row align-items-center rowTitles\">\n\t\t\t\t<div class=\"col-3 pl-0\">{{ 'IMPORT_ADDRESS_BOOK.new_label' | translate }}</div>\n\t\t\t\t<div class=\"col-3 pr-2 pr-md-0\">{{ 'IMPORT_ADDRESS_BOOK.current_label' | translate }}</div>\n\t\t\t\t<div class=\"col-6 px-0 \">{{ 'IMPORT_ADDRESS_BOOK.account' | translate }}</div>\n\t\t\t</div>\n\t\t\t<div class=\"row align-items-center rowContent\" *ngFor=\"let entry of importData\">\n\t\t\t\t<div class=\"col-3 pl-0 text-truncate name\">{{ entry.name }}</div>\n\t\t\t\t<div class=\"col-3 pr-2 pr-md-0 text-truncate name\">{{ entry.originalName }}</div>\n\t\t\t\t<div class=\"col-6 px-0 text-truncate\">{{ entry.account }}</div>\n\t\t\t</div>\n\t\t\t<div class=\"row align-items-center align-items-center rowButtons\">\n\t\t\t\t<div class=\"col-md-2 px-0 text-truncate dataName\"></div>\n\t\t\t\t<div class=\"col-lg-2 col-md-4 col-sm-6 col-12 px-0 pr-md-2 text-center text-truncate mobile-break\">\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-danger\" routerLink=\"/manage-wallet\">{{ 'CANCEL' | translate }}</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-lg-3 col-md-4 col-sm-6 col-12 px-0 pl-md-2 text-left text-truncate\">\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary\" (click)=\"confirmImport()\">\n\t\t\t\t\t\t{{ 'IMPORT_ADDRESS_BOOK.import' | translate }}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NotificationService } from '../../services/notification.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AddressBookService } from '../../services/address-book.service';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-import-address-book',\n  templateUrl: './import-address-book.component.html',\n  styleUrls: ['./import-address-book.component.scss']\n})\nexport class ImportAddressBookComponent implements OnInit {\n  activePanel = 'error';\n\n  msg1 = '';\n  msg2 = '';\n  msg3 = '';\n  msg4 = '';\n  msg5 = '';\n\n  validImportData = false;\n  importData: any = null;\n\n  conflictingEntries = 0;\n  newEntries = 0;\n  existingEntries = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private notifications: NotificationService,\n    private addressBook: AddressBookService,\n    private trans: TranslateService\n  ) {\n    this.loadLang();\n  }\n\n  ngOnInit() {\n    const importData = this.route.snapshot.fragment;\n    if (!importData || !importData.length) {\n      return this.importDataError(this.msg1);\n    }\n\n    const decodedData = atob(importData);\n\n    try {\n      const importBlob = JSON.parse(decodedData);\n      if (!importBlob || !importBlob.length) {\n        return this.importDataError(this.msg2);\n      }\n      this.validImportData = true;\n      this.importData = importBlob;\n      this.activePanel = 'import';\n\n      // Now, find conflicting accounts\n      for (const entry of importBlob) {\n        if (!entry.account || !entry.name) {\n          continue; // Data missing?\n        }\n        entry.originalName = this.addressBook.getAccountName(entry.account);\n        if (!entry.originalName) {\n          this.newEntries++;\n        } else if (entry.originalName === entry.name) {\n          this.existingEntries++;\n        } else {\n          this.conflictingEntries++;\n        }\n      }\n\n    } catch (err) {\n      return this.importDataError(this.msg3);\n    }\n    this.trans.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.loadLang();\n    });\n  }\n\n  loadLang() {\n    this.trans.get('IMPORT_ADDRESS_BOOK_WARNINGS.msg1').subscribe((res: string) => { this.msg1 = res; });\n    this.trans.get('IMPORT_ADDRESS_BOOK_WARNINGS.msg2').subscribe((res: string) => { this.msg2 = res; });\n    this.trans.get('IMPORT_ADDRESS_BOOK_WARNINGS.msg3').subscribe((res: string) => { this.msg3 = res; });\n    this.trans.get('IMPORT_ADDRESS_BOOK_WARNINGS.msg4').subscribe((res: string) => { this.msg4 = res; });\n    this.trans.get('IMPORT_ADDRESS_BOOK_WARNINGS.msg5').subscribe((res: string) => { this.msg5 = res; });\n  }\n\n  async confirmImport() {\n    // Go through our address book and see which ones need to be saved\n    let importedCount = 0;\n    for (const entry of this.importData) {\n      if (!entry.originalName) {\n        await this.addressBook.saveAddress(entry.account, entry.name);\n        importedCount++;\n      } else if (entry.originalName && entry.originalName !== entry.name) {\n        await this.addressBook.saveAddress(entry.account, entry.name);\n        importedCount++;\n      }\n    }\n\n    this.notifications.sendSuccess(this.msg4 + ` ${importedCount} ` + this.msg5);\n    this.activePanel = 'imported';\n  }\n\n  importDataError(message) {\n    this.activePanel = 'error';\n    return this.notifications.sendError(message);\n  }\n\n}\n","<div class=\"container mt-0 mb-3 qlc-content-first\">\n  <div class=\"row\">\n    \n    <div class=\"col-12 pl-0 pr-0\">\n      \n      <!-- TITLE -->\n      <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>Import account</h1>\n        </div>\n      </div>\n      \n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n        <div class=\"content-box-white\">\n            <div class=\"row align-items-center rowContent autoHP\">\n                <div class=\"col-12 px-0 py-3 text-center\" *ngIf=\"activePanel == 'error'\">\n                    {{ 'IMPORT_WALLET.error' | translate }}\n                </div>\n                <div class=\"col-12 px-0 py-3 text-center\" *ngIf=\"activePanel == 'import'\">\n                    {{ 'IMPORT_WALLET.import' | translate }}\n                  </div>\n                  <div class=\"col-12 px-0 py-3 text-center\" *ngIf=\"activePanel == 'imported'\">\n                      {{ 'IMPORT_WALLET.imported' | translate }}\n                    </div>\n                \n              </div>\n              <div class=\"row align-items-center rowContent autoHP\">\n                <div class=\"col-md-12 px-0\" *ngIf=\"activePanel == 'import'\">\n                  <div class=\"row align-items-center justify-content-center rowDefault autoHP\">\n                    <div class=\"col-6 px-0 py-3 text-truncate dataName\">\n                        {{ 'IMPORT_WALLET.confirm' | translate }}\n                    </div>\n                  </div>\n                  <div class=\"row align-items-center justify-content-center rowDefault autoHP\">\n                    <div class=\"col-6 px-0 pb-3 text-left text-truncate\">\n                      <div class=\"form-group\">\n                        <div class=\"input-group\">\n                          <input type=\"password\" class=\"form-control\" [(ngModel)]=\"walletPassword\" placeholder=\"{{ 'IMPORT_WALLET.confirm_placeholder' | translate }}\" type=\"password\" onfocus=\"this.placeholder = ''\">\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div class=\"row align-items-center justify-content-center rowDefault rowButtons\" >\n                <div class=\"col-lg-3 col-md-5 col-sm-6 col-12 px-0 px-sm-2 pb-3 text-left text-truncate mobile-break\">\n                  <button (click)=\"decryptWallet()\" type=\"submit\" class=\"btn btn-primary\" *ngIf=\"activePanel == 'import'\">{{ 'IMPORT_WALLET.import_wallet' | translate }}</button>\n                  <button routerLink=\"/myaccount\" type=\"submit\" class=\"btn btn-primary\" *ngIf=\"activePanel == 'imported'\">View my account</button>\n                </div>\n              </div>\n        </div>\n      </div>\n      \n    </div>\n  </div>\n  \n</div>\n\n\n<div class=\"container mt-4 mb-4\">\n  <div class=\"row\">\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NotificationService } from '../../services/notification.service';\nimport * as CryptoJS from 'crypto-js';\nimport { WalletService } from '../../services/wallet.service';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-import-wallet',\n  templateUrl: './import-wallet.component.html',\n  styleUrls: ['./import-wallet.component.scss']\n})\nexport class ImportWalletComponent implements OnInit {\n\n  activePanel = 'error';\n\n  msg1 = '';\n  msg2 = '';\n  msg3 = '';\n  msg4 = '';\n\n  walletPassword = '';\n  validImportData = false;\n  importData: any = null;\n\n  constructor(\n    private route: ActivatedRoute,\n    private notifications: NotificationService,\n    private wallet: WalletService,\n    private trans: TranslateService\n  ) {\n    this.loadLang();\n  }\n\n  ngOnInit() {\n    const importData = this.route.snapshot.fragment;\n    if (!importData || !importData.length) {\n      return this.importDataError(this.msg1);\n    }\n    const decodedData = atob(importData);\n\n    try {\n      const importBlob = JSON.parse(decodedData);\n      if (!importBlob || !importBlob.seed) {\n        return this.importDataError(this.msg2);\n      }\n      this.validImportData = true;\n      this.importData = importBlob;\n      this.activePanel = 'import';\n    } catch (err) {\n      return this.importDataError(this.msg3);\n    }\n    this.trans.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.loadLang();\n    });\n  }\n\n  loadLang() {\n    this.trans.get('IMPORT_WALLET_WARNINGS.msg1').subscribe((res: string) => { this.msg1 = res; });\n    this.trans.get('IMPORT_WALLET_WARNINGS.msg2').subscribe((res: string) => { this.msg2 = res; });\n    this.trans.get('IMPORT_WALLET_WARNINGS.msg3').subscribe((res: string) => { this.msg3 = res; });\n    this.trans.get('IMPORT_WALLET_WARNINGS.msg4').subscribe((res: string) => { this.msg4 = res; });\n  }\n\n  importDataError(message) {\n    this.activePanel = 'error';\n    return this.notifications.sendError(message);\n  }\n\n  async decryptWallet() {\n    // Attempt to decrypt the seed value using the password\n    try {\n      const decryptedBytes = CryptoJS.AES.decrypt(this.importData.seed, this.walletPassword);\n      const decryptedSeed = decryptedBytes.toString(CryptoJS.enc.Utf8);\n      if (!decryptedSeed || decryptedSeed.length !== 64) {\n        this.walletPassword = '';\n        return this.notifications.sendError(this.msg4);\n      }\n\n      await this.wallet.loadImportedWallet(decryptedSeed, this.walletPassword, this.importData.accountsIndex || 0);\n      this.activePanel = 'imported';\n\n    } catch (err) {\n      this.walletPassword = '';\n      return this.notifications.sendError(this.msg4);\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  wallet = this.walletService.wallet;\n\n  unlockPassword = '';\n\n  msg1 = '';\n\tmsg2 = '';\n\tmsg3 = '';\n\tmsg4 = '';\n\tmsg5 = '';\n\tmsg6 = '';\n\tmsg7 = '';\n\n  constructor(\n    public walletService: WalletService,\n    private notificationService: NotificationService,\n    private trans: TranslateService,\n    private router: Router\n  ) \n  { \n    this.loadLang();\n  }\n\n  ngOnInit() {\n  }\n\n  async unlockWalletConfirm() {\n\t\tconst unlocked = await this.walletService.unlockWallet(this.unlockPassword);\n\t\tthis.unlockPassword = '';\n\n\t\tif (unlocked) {\n\t\t\tthis.notificationService.sendSuccess(this.msg1);\n\t\t} else {\n\t\t\tthis.notificationService.sendError(this.msg2);\n\t\t}\n\n    this.unlockPassword = '';\n    this.router.navigate(['/wallets']);\n  }\n  \n  loadLang() {\n\t\tthis.trans.get('WALLET_WARNINGS.msg1').subscribe((res: string) => { this.msg1 = res; });\n\t\tthis.trans.get('WALLET_WARNINGS.msg2').subscribe((res: string) => { this.msg2 = res; });\n\t\tthis.trans.get('WALLET_WARNINGS.msg3').subscribe((res: string) => { this.msg3 = res; });\n\t\tthis.trans.get('WALLET_WARNINGS.msg4').subscribe((res: string) => { this.msg4 = res; });\n\t\tthis.trans.get('WALLET_WARNINGS.msg5').subscribe((res: string) => { this.msg5 = res; });\n\t\tthis.trans.get('WALLET_WARNINGS.msg6').subscribe((res: string) => { this.msg6 = res; });\n\t\tthis.trans.get('WALLET_WARNINGS.msg7').subscribe((res: string) => { this.msg7 = res; });\n\t}\n}\n","<!-- SIGN IN -->\n<div class=\"container mt-0 pt-0 mt-0 mb-2 qlc-content-first\">\n  <div class=\"row pt-0 mt-0\">\n\n    <!-- SIGN IN -->\n    <div class=\"col-lg-12 pl-0 pr-0 pt-0\">\n              \n              <!-- SUMMARY -->\n              <div class=\"container mt-0 mb-4\">\n                  <div class=\"row\">\n\n                      <!-- TITLE -->\n                      <div class=\"col-lg-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\">\n                          <div class=\"content-title\">\n                              <h1>Sign in</h1>\n                          </div>\n                      </div>\n\n                      <div class=\"col-lg-12 mt-2 mb-4 pl-md-2 pr-md-2\">\n                          <div class=\"content-box-white\">\n                              \n                                  <div class=\"container\">\n          \n                                      <div class=\"row qlc-table-header-white pb-4 pt-5\">\n                                          <div class=\"col-lg-6 offset-lg-3 content-title\"><h2 class=\"title-grey\">Unlock wallet</h2></div>\n                                          \n                                          <div class=\"col-lg-6 offset-lg-3 mt-4\"><input type=\"password\" class=\"form-control mt-1\" appAutofocus [(ngModel)]=\"unlockPassword\" (keyup.enter)=\"unlockWalletConfirm()\" placeholder=\"Enter your password\" /></div>\n                                      </div>\n                                      \n                                      <div class=\"row qlc-table-row-white\">\n                                          <div class=\"col-12 pl-4 pb-3 pr-3 pt-2 text-center\">\n                                              <a (click)=\"unlockWalletConfirm()\" class=\"btn btn-primary btn-blue mt-1\">SIGN IN</a>\n                                          </div>\n                                      </div>\n\n                                  </div>\n                          </div>\n                      </div>\n\n                  </div>\n              </div>\n\n          </div>\n\n\n<div class=\"container mt-4 mb-4\">\n  <div class=\"row\">\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-modal-unlock',\n  templateUrl: './modal-unlock.component.html',\n  styleUrls: ['./modal-unlock.component.scss']\n})\nexport class ModalUnlockComponent implements OnInit {\n\n  modalRef: BsModalRef;\n\n  \n  unlockPassword = '';\n\n  msg1 = '';\n\tmsg2 = '';\n\tmsg3 = '';\n\tmsg4 = '';\n\tmsg5 = '';\n\n  constructor(\n    private walletService: WalletService,\n    private notificationService: NotificationService,\n    private trans: TranslateService, \n    private _bsModalRef: BsModalRef\n  ) { \n    this.modalRef = _bsModalRef;\n  }\n\n  ngOnInit() {\n    this.loadLang();\n  }\n\n  loadLang() {\n    this.trans.get('WALLET_WARNINGS.msg1').subscribe((res: string) => { this.msg1 = res; });\n\t\tthis.trans.get('WALLET_WARNINGS.msg2').subscribe((res: string) => { this.msg2 = res; });\n\t\tthis.trans.get('WALLET_WARNINGS.msg3').subscribe((res: string) => { this.msg3 = res; });\n\t\tthis.trans.get('WALLET_WARNINGS.msg4').subscribe((res: string) => { this.msg4 = res; });\n\t\tthis.trans.get('WALLET_WARNINGS.msg5').subscribe((res: string) => { this.msg5 = res; });\n\t}\n\n  async unlockWalletConfirm() {\n\t\tconst unlocked = await this.walletService.unlockWallet(this.unlockPassword);\n\t\tthis.unlockPassword = '';\n\n\t\tif (unlocked) {\n      this.notificationService.sendSuccess(this.msg1);\n      this.modalRef.hide();\n\t\t} else {\n\t\t\tthis.notificationService.sendError(this.msg2);\n\t\t}\n\n    this.unlockPassword = '';\n  }\n\n}\n","<div class=\"modal-body\">\n  <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div class=\"row text-center\">\n      <div class=\"col-12 col-sm-10 offset-sm-1\">\n          <div class=\"form-group text-center\">\n            <img src=\"assets/img/qlc-icon-lock-red.svg\" style=\"width:80px;height:auto;\" class=\"pt-4\">\n            <h1 class=\"pt-4\">Unlock Account</h1>\n            <div class=\"input-group pt-3 pb-3 w-100\">\n              <input class=\"form-control pass-field text-center w-100\" type=\"password\" [(ngModel)]=\"unlockPassword\" (keyup.enter)=\"unlockWalletConfirm()\" placeholder=\"Enter your password\" appAutofocus>\n            </div>\n            <button class=\"btn btn-primary mb-4 w-100 pl-0 pr-0\" style=\"min-width: 0px !important;\" type=\"button\" (click)=\"unlockWalletConfirm()\">UNLOCK</button>\n          </div>\n    </div>\n  </div>\n  \n</div>","<app-user-submenu></app-user-submenu>\n\n<!-- LATEST TRANSACTIONS -->\n<div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n    <div class=\"row\">\n        <div class=\"col-12 pl-0 pr-0 pb-2\">\n            <!-- LATEST TRANSACTIONS -->\n            <div class=\"container\">\n                    <div class=\"row\">\n                        <!-- TITLE -->\n                        <div class=\"col-md-6 col-12 mt-2 pl-2 pr-2\">\n                            <div class=\"content-title\">\n                                <h1>Wallet Details</h1>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3 col-12 pl-md-2 pr-md-0 pl-3 pr-3 pb-3\">\n\t\t\t\t\t\t\t<!--<button routerLink=\"/wallets\" type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 mr-xl-2 mr-lg-4 mr-md-5 ml-0 w-100\">\n                                Back to my Wallets\n\t\t\t\t\t\t\t</button>-->\n\t\t\t\t\t\t</div>\n                        <div class=\"col-md-3 col-12 pl-2 pr-2\">\n                            <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0\" (click)=\"loadAccount()\" >\n                                REFRESH\n                            </button>\n                        </div>\n                    </div>\n                </div>\n        </div>\n    </div>\n</div>\n\n\n<div class=\"container pb-2\">\n    <div class=\"row\">\n        <!-- LEFT -->\n        <div class=\"col-lg-9 col-md-12 col-sm-12 order-lg-1 order-2 pl-0 pr-0 mb-3\">\n            \n            <div class=\"container\">\n                \n                <div class=\"row\">\n                    <div class=\"col-12 pb-2 pl-2 pr-2\">\n                        <div class=\"content-box-blue h-auto pb-3\">\n                            <div class=\"container\">\n                                <div class=\"row qlc-table-header-blue\">\n                                    <div class=\"col-12\">Address</div>\n                                </div>\n                                <div class=\"row qlc-table-row-blue row-text-mid mt-3\">\n                                    <div class=\"col-12 text-break pr-3\"><span *ngIf=\"addressBookModel != ''\" class=\"force-wrap\">{{ addressBookModel }} - </span>{{ accountId }} <a ngxClipboard [cbContent]=\"accountId\"><img src=\"assets/img/icons/copy.svg\" class=\"img-copy\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Copy to clipboard\"></a></div>\n                                    <div class=\"col-12 px-0\" *ngIf=\"showEditName\">\n                                        <div class=\"editNameButtons\">\n                                            <div class=\"row pl-3 pr-3\">\n                                                <div class=\"col-md-12 col-12 py-3\">\n                                                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"addressBookModel\" />\n                                                </div>\n                                                <div class=\"col-md-4 col-12 \">\n                                                    <button class=\"btn btn-primary\" type=\"button\" (click)=\"editNameCancel()\">\n                                                        {{ 'CANCEL' | translate }}\n                                                    </button>\n                                                </div>\n                                                <div class=\"col-md-4 col-12 py-3 py-md-0 \">\n                                                    <button class=\"btn btn-primary\" type=\"button\" (click)=\"editNameSave()\">\n                                                        {{ 'OK' | translate }}\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                \n                <div class=\"row\">\n                    <!-- BALANCE QLC -->\n                    <div class=\"col-md-4 col-sm-6 col-12 pl-2 pr-2\">\n                        <div class=\"content-box-white h-auto mt-2 pb-2\">\n                            <div class=\"container\">\n                                <div class=\"row qlc-table-header-white\">\n                                    <div class=\"col-12\">QLC Balance</div>\n                                </div>\n                            </div>\n                            <div class=\"container\">\n                                <div class=\"row\">\n                                    <div class=\"col-3 mt-3\">\n                                        <img src=\"assets/img/token-qlc.png\" class=\"w-100 icon-token\">\n                                    </div>\n                                    <div class=\"col-9 pr-0 pl-0\">\n                                        <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                                            <div class=\"col-12 pb-0\" *ngIf=\"walletAccount && walletAccount.balances != null && walletAccount.balances['QLC']\">{{ walletAccount.balances['QLC'].balance | qlc:8 | currency:'':'':'1.2-8' }}</div>\n                                            <div class=\"col-12 pb-0\" *ngIf=\"walletAccount && walletAccount.balances == null || (walletAccount && walletAccount.balances != null && !walletAccount.balances['QLC'])\">0</div>\n                                        </div>\n                                        <div class=\"row qlc-table-row-white sub-page pt-0\">\n                                            <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"container mt-3\">\n                            <div class=\"row\">\n                                <div class=\"col-12 pl-0 pr-0\">\n                                    <button type=\"submit\" class=\"btn btn-primary btn-purple btn-icon-receiveXX w-100 pl-2 pr-2\"><span class=\"superlight\">\n                                        (<span *ngIf=\"checkIfPending('QLC')\">\n                                            {{ walletAccount.pendingPerTokenCount['QLC'] }}\n                                        </span>\n                                        <span *ngIf=\"!checkIfPending('QLC')\">0</span> Pending)</span></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    \n                    <!-- BALANCE QGAS -->\n                    <div class=\"col-md-4 col-sm-6 col-12 pl-2 pr-2\">\n                        <div class=\"content-box-white h-auto mt-2 pb-2\">\n                            <div class=\"container\">\n                                <div class=\"row qlc-table-header-white\">\n                                    <div class=\"col-12\">QGAS Balances</div>\n                                </div>\n                            </div>\n                            <div class=\"container\">\n                                <div class=\"row\">\n                                    <div class=\"col-3 mt-3\">\n                                        <img src=\"assets/img/token-qgas.png\" class=\"w-100 icon-token\">\n                                    </div>\n                                    <div class=\"col-9 pr-0 pl-0\">\n                                        <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                                            <div class=\"col-12 pb-0\" *ngIf=\"walletAccount && walletAccount.balances != null && walletAccount.balances['QGAS']\">{{ walletAccount.balances['QGAS'].balance | qlc:8 | currency:'':'':'1.2-8' }}</div>\n                                            <div class=\"col-12 pb-0\" *ngIf=\"walletAccount && walletAccount.balances == null || (walletAccount && walletAccount.balances != null && !walletAccount.balances['QGAS'])\">0</div>\n                                        </div>\n                                        <div class=\"row qlc-table-row-white sub-page pt-0\">\n                                            <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"container mt-3\">\n                            <div class=\"row\">\n                                <div class=\"col-12 pl-0 pr-0\">\n                                    <button type=\"submit\" class=\"btn btn-primary btn-darkgrey btn-icon-receiveXX w-100 pl-2 pr-2\"><span class=\"superlight\">(<span *ngIf=\"checkIfPending('QGAS')\">{{ walletAccount.pendingPerTokenCount['QGAS'] }}</span><span *ngIf=\"!checkIfPending('QGAS')\">0</span> Pending)</span></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <!-- BALANCE OTHERS -->\n                    <div class=\"col-md-4 col-sm-6 col-12 pl-2 pr-2\" *ngIf=\"walletAccount && walletAccount.otherTokens.length > 0\">\n                        <div class=\"content-box-white h-auto mt-2 pb-3\">\n                            <div class=\"container\">\n                                <div class=\"row qlc-table-header-white\">\n                                    <div class=\"col-12\">Other Balances ({{ walletAccount.otherTokens.length }})</div>\n                                </div>\n                            </div>\n                            <div class=\"container\">\n                                <div class=\"row\">\n\n                                        <carousel [interval]=\"3000\" class=\"w-100\">\n                                            \n                                            <slide *ngFor=\"let token of walletAccount.otherTokens\">\n                                                <div class=\"row pt-3 pl-3 pr-3 mb-2 pb-1\">\n                                                    <div class=\"col-3 pr-3 pt-1\">\n                                                        <img src=\"assets/img/token-none.png\" class=\"w-100 icon-token\">\n                                                    </div>\n                                                    <div class=\"col-9 pr-0 pl-0 mb-2 pb-0\">\n                                                        <div class=\"row qlc-table-row-white row-text-mid mt-0 pb-1\">\n                                                            <div class=\"col-12 pb-0 mb-0\"><span style=\"color: #a8a6ae;font-size: 12px;text-transform: uppercase;font-weight: 700; line-height:14px;\">{{ token.tokenInfo.tokenSymbol }} ({{ token.tokenInfo.tokenName }})</span></div>\n                                                            <div class=\"col-12 pb-0 pt-0 mt-0\" style=\"color: #595757;font-size: 14px;text-transform: uppercase;font-weight: 700; line-height:16px;\">{{ token.balance | qlc: token.tokenInfo.decimals | currency:'':'':'1.0-'+token.tokenInfo.decimals}}</div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </slide>\n                                            \n                                        </carousel>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"container mt-3\">\n                            <div class=\"row\">\n                                <div class=\"col-12 pl-0 pr-0\">\n                                    <button type=\"submit\" class=\"btn btn-primary btn-blue2 btn-icon-receiveXX w-100 pl-2 pr-2\"><span class=\"superlight\">(<span *ngIf=\"checkIfPending('OTHER')\">{{ walletAccount.pendingPerTokenCount['OTHER'] }}</span><span *ngIf=\"!checkIfPending('OTHER')\">0</span> Pending)</span></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <!-- BALANCE OTHERS EMPTY -->\n                    <div class=\"col-md-4 col-sm-6 col-12 pl-2 pr-2\" *ngIf=\"walletAccount && walletAccount.otherTokens.length == 0\">\n                        <div class=\"content-box-white h-auto mt-2 pb-2\">\n                            <div class=\"container\">\n                                <div class=\"row qlc-table-header-white\">\n                                    <div class=\"col-12\">Other Balances (0)</div>\n                                </div>\n                            </div>\n                            <div class=\"container\">\n                                <div class=\"row\">\n                                    <div class=\"col-3 mt-3\">\n                                        <img src=\"assets/img/token-none.png\" class=\"w-100 icon-token\">\n                                    </div>\n                                    <div class=\"col-9 pr-0 pl-0\">\n                                        <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                                            <div class=\"col-12 pb-0\">0</div>\n                                        </div>\n                                        <div class=\"row qlc-table-row-white sub-page pt-0\">\n                                            <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"container mt-3\">\n                            <div class=\"row\">\n                                <div class=\"col-12 pl-0 pr-0\">\n                                    <button type=\"submit\" class=\"btn btn-primary btn-blue btn-icon-receiveXX w-100 pl-2 pr-2\"><span class=\"superlight\">(<span *ngIf=\"checkIfPending('OTHER')\">{{ walletAccount.pendingPerTokenCount['OTHER'] }}</span><span *ngIf=\"!checkIfPending('OTHER')\">0</span> Pending)</span></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- BALANCE OTHERS EMPTY -->\n                    <div class=\"col-12 pl-2 pr-2 mt-2\">\n                        <div class=\"content-box-white h-auto mt-2\">\n                            <div class=\"container\">\n                                <div class=\"row\">\n                                    <div class=\"col-12 text-center pt-4 pb-1\">\n                                        <p *ngIf=\"walletAccount && walletAccount.pendingBlocks.length > 0 && this.settings.settings.receive == 'auto' && walletService.isLocked()\">To receive your <span class=\"text-bold\">{{ walletAccount.pendingBlocks.length }} pending transactions</span> just <a (click)=\"showUnlock()\" style=\"text-decoration:underline;\">unlock your wallet</a></p>\n                                        <p *ngIf=\"walletAccount && walletAccount.pendingBlocks.length > 0 && this.settings.settings.receive != 'auto' && walletService.isLocked()\">To receive your <span class=\"text-bold\">{{ walletAccount.pendingBlocks.length }} pending transactions</span>&nbsp;<u class=\"text-bold\">first</u>&nbsp;<a (click)=\"showUnlock()\" style=\"text-decoration:underline;\">unlock your wallet</a></p>\n                                        <p *ngIf=\"walletAccount && walletAccount.pendingBlocks.length > 0 && this.settings.settings.receive == 'auto' && !walletService.isLocked()\">Receiving <span class=\"text-bold\">{{ walletAccount.pendingBlocks.length }} pending transactions</span> . Please wait a moment.</p>\n                                        <p *ngIf=\"walletAccount && walletAccount.pendingBlocks.length > 0 && this.settings.settings.receive != 'auto' && !walletService.isLocked()\">Click on RECEIVE to receive your <span class=\"text-bold\">{{ walletAccount.pendingBlocks.length }} pending transaction<span *ngIf=\"walletAccount.pendingBlocks.length > 1\">s</span></span>.</p>\n                                        <p *ngIf=\"walletAccount && walletAccount.pendingBlocks.length == 0\">You have no pending transactions.</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    \n\n                </div>\n            </div>\n            \n            \n        </div>\n        \n        <!-- RIGHT -->\n        <div class=\"col-lg-3 col-md-12 col-sm-12 order-lg-2 order-1 pl-0 pr-0 mb-xs-3 mb-3\">\n            \n            <div class=\"col-12 pl-2 pr-2 h-100\">\n                <div class=\"content-box-darkblue h-100 pb-4 pr-0\">\n                    \n                    <div class=\"container\">\n                        <div class=\"row qlc-table-header-blue\">\n                            <div class=\"col-12\">Account Actions</div>\n                        </div>\n                        <div class=\"row pt-3 pr-0\">\n                            <div class=\"col-12 pr-0\">\n                                <a routerLink=\"/wallets/qlc/send/{{ accountId }}\" class=\"menu-myaccount menu-icon-send pr-0\">Send Tokens</a>\n                                <a (click)=\"openModal(qrCode)\" class=\"menu-myaccount menu-icon-qrcode pr-0\">Show QR Code</a>\n                                <a (click)=\"editName()\" class=\"menu-myaccount menu-icon-rename pr-0\">Rename Account</a>\n                                <a routerLink=\"/account/{{ accountId }}\" class=\"menu-myaccount menu-icon-details pr-0\">Account Details</a>\n                            </div>\n                        </div>\n                        \n                    </div>\n                    \n                </div>\n            </div>\n            \n        </div>\n        \n    </div>\n</div>\n\n\n<!-- PENDING TRANSACTIONS -->\n<div class=\"container mt-3 mb-0\" *ngIf=\"walletAccount && walletAccount.pendingBlocks.length > 0\">\n  <div class=\"row\">\n    \n    <div class=\"col-12 pl-0 pr-0\">\n      \n      <!-- TITLE -->\n      <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>Pending Transactions</h1>\n        </div>\n      </div>\n\n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n        <div class=\"content-box-white\">\n\n\n          <div class=\"container\">\n\n            <div class=\"row qlc-table-header\" *ngIf=\"this.settings.settings.receive == 'auto'\">\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">Type</div>\n              <div class=\"col-xl-6 col-lg-5 col-md-5 col-sm-5 col-7 text-truncate\">Address / Transaction ID</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Amount</div>\n              <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 d-none d-sm-block col-6 pr-4 text-right\">Time</div>\n            </div>\n            <div class=\"row qlc-table-header\" *ngIf=\"this.settings.settings.receive != 'auto'\">\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">Type</div>\n                <div class=\"col-xl-4 col-lg-4 col-md-5 col-sm-5 col-7 text-truncate\">Address / Transaction ID</div>\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Amount</div>\n                <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-3 d-sm-inline-block col-2 d-none pr-4 text-right\">Time</div>\n                <div class=\"col-xl-2 col-lg-2 d-lg-inline-block col-md-3 d-md-none col-sm-3 d-sm-none d-none col-2 pr-4 text-right\"></div>\n            </div>\n            <div class=\"row qlc-table-row qlc-table-row-twolines closed pb-3 \" *ngFor=\"let pending of walletAccount.pendingBlocks\">\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">\n                  <span class=\"qlc-icon icon-Receive\" title=\"Receive\"></span>\n                  <span class=\"d-none d-sm-none d-md-inline-block txState\">\n                    <span class=\"text-color-lightgrey\">State</span><br>\n                    <span class=\"text-bold-grey\">Receive</span>\n                  </span>\n                </div>\n                <div class=\"d-none d-xl-block col-xl-6 pb-0\" *ngIf=\"this.settings.settings.receive == 'auto'\">\n                    <span class=\"text-color-lightgrey\">From:</span> \n                    <a [routerLink]=\"'/account/' + (pending.account)\">{{ pending.account }}</a><br>\n                    <span class=\"text-color-lightgrey\">Hash:</span>\n                    <a [routerLink]=\"'/transaction/' + pending.hash\"><span class=\"text-tiny\">{{ pending.hash }}</span></a>\n                </div>\n                <div class=\"d-none d-lg-block d-xl-none col-lg-7 pb-0\" *ngIf=\"this.settings.settings.receive == 'auto'\">\n                    <span class=\"text-color-lightgrey\">From:</span> \n                    <a [routerLink]=\"'/account/' + (pending.account)\">{{ pending.account | squeeze : '23,23' }}</a><br>\n                    <span class=\"text-color-lightgrey\">Hash:</span>\n                    <a [routerLink]=\"'/transaction/' + pending.hash\"><span class=\"text-tiny\">{{ pending.hash | squeeze : '22,22' }}</span></a>\n                </div>\n                <div class=\"d-none d-md-block d-lg-none col-md-5 pb-0\" *ngIf=\"this.settings.settings.receive == 'auto'\">\n                    <span class=\"text-color-lightgrey\">From:</span> \n                    <a [routerLink]=\"'/account/' + (pending.account)\">{{ pending.account | squeeze : '18,18' }}</a><br>\n                    <span class=\"text-color-lightgrey\">Hash:</span>\n                    <a [routerLink]=\"'/transaction/' + pending.hash\"><span class=\"text-tiny\">{{ pending.hash | squeeze : '18,18' }}</span></a>\n                </div>\n                <div class=\"d-none d-sm-block d-md-none col-sm-5 pb-0\" *ngIf=\"this.settings.settings.receive == 'auto'\">\n                    <span class=\"text-color-lightgrey\">From:</span> \n                    <a [routerLink]=\"'/account/' + (pending.account)\">{{ pending.account | squeeze : '10,10' }}</a><br>\n                    <span class=\"text-color-lightgrey\">Hash:</span>\n                    <a [routerLink]=\"'/transaction/' + pending.hash\"><span class=\"text-tiny\">{{ pending.hash | squeeze : '10,10' }}</span></a>\n                </div>\n                <div class=\"d-block d-sm-none col-7 pb-0\" *ngIf=\"this.settings.settings.receive == 'auto'\">\n                    <span class=\"text-color-lightgrey\">From:</span> \n                    <a [routerLink]=\"'/account/' + (pending.account)\">{{ pending.account | squeeze : '10,10' }}</a><br>\n                    <span class=\"text-color-lightgrey\">Hash:</span>\n                    <a [routerLink]=\"'/transaction/' + pending.hash\"><span class=\"text-tiny\">{{ pending.hash | squeeze : '10,10' }}</span></a>\n                </div>\n                <div class=\"d-none d-xl-block col-xl-4 pb-0\" *ngIf=\"this.settings.settings.receive != 'auto'\">\n                    <span class=\"text-color-lightgrey\">From:</span> \n                    <a [routerLink]=\"'/account/' + (pending.account)\">{{ pending.account | squeeze : '25,25' }}</a><br>\n                    <span class=\"text-color-lightgrey\">Hash:</span>\n                    <a [routerLink]=\"'/transaction/' + pending.hash\"><span class=\"text-tiny\">{{ pending.hash | squeeze : '25,25' }}</span></a>\n                </div>\n                <div class=\"d-none d-lg-block d-xl-none col-lg-4 pb-0\" *ngIf=\"this.settings.settings.receive != 'auto'\">\n                    <span class=\"text-color-lightgrey\">From:</span> \n                    <a [routerLink]=\"'/account/' + (pending.account)\">{{ pending.account | squeeze : '25,25' }}</a><br>\n                    <span class=\"text-color-lightgrey\">Hash:</span>\n                    <a [routerLink]=\"'/transaction/' + pending.hash\"><span class=\"text-tiny\">{{ pending.hash | squeeze : '25,25' }}</span></a>\n                </div>\n                <div class=\"d-none d-md-block d-lg-none col-md-5 pb-0\" *ngIf=\"this.settings.settings.receive != 'auto'\">\n                    <span class=\"text-color-lightgrey\">From:</span> \n                    <a [routerLink]=\"'/account/' + (pending.account)\">{{ pending.account | squeeze : '18,18' }}</a><br>\n                    <span class=\"text-color-lightgrey\">Hash:</span>\n                    <a [routerLink]=\"'/transaction/' + pending.hash\"><span class=\"text-tiny\">{{ pending.hash | squeeze : '18,18' }}</span></a>\n                </div>\n                <div class=\"d-none d-sm-block d-md-none col-sm-5 pb-0\" *ngIf=\"this.settings.settings.receive != 'auto'\">\n                    <span class=\"text-color-lightgrey\">From:</span> \n                    <a [routerLink]=\"'/account/' + (pending.account)\">{{ pending.account | squeeze : '10,10' }}</a><br>\n                    <span class=\"text-color-lightgrey\">Hash:</span>\n                    <a [routerLink]=\"'/transaction/' + pending.hash\"><span class=\"text-tiny\">{{ pending.hash | squeeze : '10,10' }}</span></a>\n                </div>\n                <div class=\"d-block d-sm-none col-7 pb-0\" *ngIf=\"this.settings.settings.receive != 'auto'\">\n                    <span class=\"text-color-lightgrey\">From:</span> \n                    <a [routerLink]=\"'/account/' + (pending.account)\">{{ pending.account | squeeze : '10,10' }}</a><br>\n                    <span class=\"text-color-lightgrey\">Hash:</span>\n                    <a [routerLink]=\"'/transaction/' + pending.hash\"><span class=\"text-tiny\">{{ pending.hash | squeeze : '10,10' }}</span></a>\n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pb-0 pr-sm-0 pr-4 text-right {{\n                  pending.type == 'Send' ? 'text-color-red' : 'text-color-green'\n                }}\">\n                  <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">{{pending.type == 'Send' ? '-' : '+'}} {{ pending.amount | qlc: pending.tokenInfo.decimals | currency:'':'':'1.0-'+pending.tokenInfo.decimals }}</span>\n                  <br><span class=\"text-color-grey\">{{ pending.tokenInfo.tokenSymbol }}</span>\n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-3 col-12 pr-4 text-right\">\n                  {{ pending.timestamp * 1000 | date: 'short' }}\n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-12 pr-4 text-right pb-0 mb-0\" *ngIf=\"this.settings.settings.receive != 'auto'\">\n                    <button type=\"submit\" class=\"btn btn-primary mb-0 ml-0 mr-1 pl-3 pr-3 pt-2 pb-1\" (click)=\"receive(pending)\" style=\"height:auto; min-height:auto; min-width:auto !important; margin-top:-6px;\"  [disabled]=\"walletService.processingPending\">\n                        RECEIVE\n                    </button>\n                </div>\n                <div class=\"container transaction-details\">\n  \n                </div>\n              </div>\n\n\n          </div>\n\n\n        </div>\n      </div>\n\n    </div>\n    \n  </div>\n</div>\n\n<!-- LATEST TRANSACTIONS -->\n<div class=\"container mt-0 mb-3\">\n  <div class=\"row\">\n    \n    <div class=\"col-12 pl-0 pr-0\">\n      \n      <!-- TITLE -->\n      <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>Latest Transactions</h1>\n        </div>\n      </div>\n\n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\" *ngIf=\"walletAccount && walletAccount.latestTransactions\">\n        <div class=\"content-box-white\">\n\n\n          <div class=\"container\">\n\n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">Type</div>\n              <div class=\"col-xl-6 col-lg-5 col-md-5 col-sm-5 col-7 text-truncate\">Address / Transaction ID</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Amount</div>\n              <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 d-none d-sm-block col-6 pr-4 text-right\">Time</div>\n            </div>\n\n            <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let history of walletAccount.latestTransactions\">\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">\n                <span class=\"qlc-icon icon-{{ history.type }}\" title=\"{{ history.type }}\"></span>\n                <span class=\"d-none d-sm-none d-md-inline-block txState\">\n                  <span class=\"text-color-lightgrey\">State</span><br>\n                  <span class=\"text-bold-grey\">{{ history.type }}</span>\n                </span>\n              </div>\n              <div class=\"d-none d-xl-block col-xl-6 pb-0\">\n                <span class=\"text-color-lightgrey text-tiny\">{{history.type == 'Send' || history.type == 'ContractSend' ? 'To' : 'From'}}: </span> \n                <a [routerLink]=\"'/account/' + (history.link_as_account || history.address)\">{{ history.link_as_account || history.address }}</a><br>\n                <span class=\"text-color-lightgrey text-tiny\">Hash: </span> \n                <a [routerLink]=\"'/transaction/' + history.hash\"><span>{{ history.hash }}</span></a><br>\n                <span *ngIf=\"history.povConfirmHeight > 0\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm height: </span> \n                  <a [routerLink]=\"'/pov/height/' + history.povConfirmHeight\">{{ history.povConfirmHeight }}</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br class=\"d-inline-block d-sm-inline-block d-md-inline-block d-lg-none d-xl-none\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm count: </span> {{ history.povConfirmCount }}\n                </span>\n              </div>\n              <div class=\"d-none d-lg-block d-xl-none col-lg-5 pb-0\">\n                <span class=\"text-color-lightgrey text-tiny\">{{history.type == 'Send' || history.type == 'ContractSend' ? 'To' : 'From'}}: </span> \n                <a [routerLink]=\"'/account/' + (history.link_as_account || history.address)\">{{ history.link_as_account || history.address | squeeze : '23,23' }}</a><br>\n                <span class=\"text-color-lightgrey text-tiny\">Hash: </span> \n                <a [routerLink]=\"'/transaction/' + history.hash\"><span>{{ history.hash | squeeze : '22,22' }}</span></a><br>\n                <span *ngIf=\"history.povConfirmHeight > 0\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm height: </span> \n                  <a [routerLink]=\"'/pov/height/' + history.povConfirmHeight\">{{ history.povConfirmHeight }}</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br class=\"d-inline-block d-sm-inline-block d-md-inline-block d-lg-none d-xl-none\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm count: </span> {{ history.povConfirmCount }}\n                </span>\n              </div>\n              <div class=\"d-none d-md-block d-lg-none col-md-5 pb-0\">\n                <span class=\"text-color-lightgrey text-tiny\">{{history.type == 'Send' || history.type == 'ContractSend' ? 'To' : 'From'}}: </span> \n                <a [routerLink]=\"'/account/' + (history.link_as_account || history.address)\">{{ history.link_as_account || history.address | squeeze : '15,15' }}</a><br>\n                <span class=\"text-color-lightgrey text-tiny\">Hash: </span> \n                <a [routerLink]=\"'/transaction/' + history.hash\"><span>{{ history.hash | squeeze : '15,15' }}</span></a><br>\n                <span *ngIf=\"history.povConfirmHeight > 0\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm height: </span> \n                  <a [routerLink]=\"'/pov/height/' + history.povConfirmHeight\">{{ history.povConfirmHeight }}</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br class=\"d-inline-block d-sm-inline-block d-md-inline-block d-lg-none d-xl-none\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm count: </span> {{ history.povConfirmCount }}\n                </span>\n              </div>\n              <div class=\"d-none d-sm-block d-md-none col-sm-5 pb-0\">\n                <span class=\"text-color-lightgrey text-tiny\">{{history.type == 'Send' || history.type == 'ContractSend' ? 'To' : 'From'}}: </span> \n                <a [routerLink]=\"'/account/' + (history.link_as_account || history.address)\">{{ history.link_as_account || history.address | squeeze : '10,10' }}</a><br>\n                <span class=\"text-color-lightgrey text-tiny\">Hash: </span> \n                <a [routerLink]=\"'/transaction/' + history.hash\"><span>{{ history.hash | squeeze : '9,9' }}</span></a><br>\n                <span *ngIf=\"history.povConfirmHeight > 0\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm height: </span> \n                  <a [routerLink]=\"'/pov/height/' + history.povConfirmHeight\">{{ history.povConfirmHeight }}</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br class=\"d-inline-block d-sm-inline-block d-md-inline-block d-lg-none d-xl-none\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm count: </span> {{ history.povConfirmCount }}\n                </span>\n              </div>\n              <div class=\"d-block d-sm-none col-7 pb-0\">\n                <span class=\"text-color-lightgrey text-tiny\">{{history.type == 'Send' || history.type == 'ContractSend' ? 'To' : 'From'}}: </span> \n                <a [routerLink]=\"'/account/' + (history.link_as_account || history.address)\">{{ history.link_as_account || history.address | squeeze : '13,13' }}</a><br>\n                <span class=\"text-color-lightgrey text-tiny\">Hash: </span> \n                <a [routerLink]=\"'/transaction/' + history.hash\"><span>{{ history.hash | squeeze : '13,13' }}</span></a><br>\n                <span *ngIf=\"history.povConfirmHeight > 0\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm height: </span> \n                  <a [routerLink]=\"'/pov/height/' + history.povConfirmHeight\">{{ history.povConfirmHeight }}</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br class=\"d-inline-block d-sm-inline-block d-md-inline-block d-lg-none d-xl-none\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm count: </span> {{ history.povConfirmCount }}\n                </span>\n              </div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pb-0 pr-sm-0 pr-4 text-right pl-0 {{\n                history.type == 'Send' || history.type == 'ContractSend' ? 'text-color-red' : 'text-color-green'\n              }}\">\n                <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">{{history.type == 'Send' || history.type == 'ContractSend' ? '-' : '+'}} {{ history.amount | qlc: history.tokenInfo.decimals | currency:'':'':'1.0-'+history.tokenInfo.decimals }}</span>\n                <br><span class=\"text-color-grey\">{{ history.tokenInfo.tokenSymbol }}</span>\n              </div>\n              <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 col-12 pr-4 text-right\">\n                {{ history.timestamp * 1000 | date: 'short' }}\n              </div>\n              <div class=\"container transaction-details\">\n\n              </div>\n            </div>\n\n\n            \n          </div>\n\n        </div>\n      </div>\n\n      <!-- BUTTON -->\n      <div class=\"col-lg-12 mb-0 mt-2 pl-md-2 pr-md-2 text-center\" *ngIf=\"accountBlocksCount>pageSize\">\n        <a [routerLink]=\"'/transactions/1/' + accountId\" class=\"btn btn-primary btn-blue\">ALL TRANSACTIONS</a>\n      </div>\n\n    </div>\n    \n  </div>\n</div>\n\n\n\n\n\n<ng-template #qrCode>\n  <div class=\"modal-body\">\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n        <div class=\"qrcode\"><img *ngIf=\"qrCodeImage\" [src]=\"qrCodeImage\" /></div>\n    \n  </div>\n</ng-template>\n\n\n\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { NodeService } from 'src/app/services/node.service';\nimport { Router, ChildActivationEnd, ActivatedRoute } from '@angular/router';\nimport { timer } from 'rxjs';\nimport { RepresentativeService } from 'src/app/services/representative.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { WalletService, WalletAccount } from 'src/app/services/wallet.service';\nimport { UtilService } from 'src/app/services/util.service';\nimport { AppSettingsService } from 'src/app/services/app-settings.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport BigNumber from 'bignumber.js';\nimport { AddressBookService } from 'src/app/services/address-book.service';\nimport * as QRCode from 'qrcode';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ModalUnlockComponent } from '../modal-unlock/modal-unlock.component';\n\n@Component({\n  selector: 'app-myaccount',\n  templateUrl: './myaccount.component.html',\n  styleUrls: ['./myaccount.component.scss']\n})\nexport class MyaccountComponent implements OnInit {\n\n \twallet = this.walletService.wallet;\n\n  \taccountHistory: any[] = [];\n\tsuccessfulBlocks = [];\n  \tpageSize = 10;\n  \taccountBlocksCount = 0;\n\tmaxPageSize = 200;\n\n  \trouterSub = null;\n\n  \trepLabel: any = '';\n\taddressBookEntry: any = null;\n\t//accountMeta: any = {};\n\t//otherTokens: any = [];\n\taccountId = '';\n\n  \twalletAccount:WalletAccount ;\n  \n\tmodalRef: BsModalRef;\n  \n  \tqrCodeImage = null;\n  \n  \tshowEditName = false;\n\taddressBookTempName = '';\n\taddressBookModel = '';\n\tshowEditRepresentative = false;\n\trepresentativeModel = '';\n\t//representativeResults$ = new BehaviorSubject([]);\n\tshowRepresentatives = false;\n\trepresentativeListMatch = '';\n  \tisNaN = isNaN;\n\n  \tprocessingPending = false;\n  \n  \tmsg1 = '';\n\tmsg2 = '';\n\tmsg3 = '';\n\tmsg4 = '';\n\tmsg5 = '';\n\tmsgEdit1 = '';\n  \tmsgEdit2 = '';\n  \n  \tconstructor(\n\t\tprivate router: ActivatedRoute,\n\t\tprivate route: Router,\n\t\tprivate api: ApiService,\n\t\tprivate repService: RepresentativeService,\n\t\tprivate notifications: NotificationService,\n\t\tpublic walletService: WalletService,\n    \tprivate util: UtilService,\n    \tprivate node: NodeService,\n\t\tpublic settings: AppSettingsService,\n\t\tprivate trans: TranslateService,\n\t\tprivate notificationService: NotificationService,\n\t\tprivate addressBook: AddressBookService,\n\t\tprivate modalService: BsModalService\n  \t) {  }\n\n  \tasync ngOnInit() {\n\t\tthis.routerSub = this.route.events.subscribe(event => {\n\t\t\t\tif (event instanceof ChildActivationEnd) {\n\t\t\t\t\tthis.load(); // Reload the state when navigating to itself from the transactions page\n\t\t\t\t}\n\t\t\t});\n\t\tthis.load();\n\t\t\tthis.loadLang();\n\t}\n  \n\tngOnDestroy() {\n\t\tif (this.routerSub) {\n\t\t\tthis.routerSub.unsubscribe();\n\t\t}\n\t}\n  \n  \tloadLang() {\n\t\tthis.trans.get('RECEIVE_WARNINGS.msg1').subscribe((res: string) => { this.msg1 = res;\t});\n\t\tthis.trans.get('RECEIVE_WARNINGS.msg2').subscribe((res: string) => { this.msg2 = res;\t});\n\t\tthis.trans.get('RECEIVE_WARNINGS.msg3').subscribe((res: string) => { this.msg3 = res;\t});\n\t\tthis.trans.get('RECEIVE_WARNINGS.msg4').subscribe((res: string) => { this.msg4 = res;\t});\n\t\tthis.trans.get('RECEIVE_WARNINGS.msg5').subscribe((res: string) => { this.msg5 = res;\t});\n\t\tthis.trans.get('ACCOUNT_DETAILS_WARNINGS.msg5').subscribe((res: string) => {\tthis.msgEdit1 = res; });\n\t\tthis.trans.get('ACCOUNT_DETAILS_WARNINGS.msg6').subscribe((res: string) => {\tthis.msgEdit2 = res; });\n\t}\n\n\tshowUnlock() {\n\t\tthis.modalRef = this.modalService.show(ModalUnlockComponent, {class: 'modal-lg'}); \n\t}\n\n\tload() {\n\t\tif (this.node.status === true) {\n\t\t\tthis.loadAccount();\n\t\t} else {\n\t\t\tthis.reload();\n\t\t}\n\t}\n\n\tasync reload() {\n\t\tconst source = timer(200);\n\t\tconst abc =  source.subscribe(async val => {\n\t\t\t\tthis.load();\n\t\t});\n  \t}\n  \n  \tasync loadAccount() {\n\t\tthis.accountId = this.router.snapshot.params.account;\n\t\tif (this.accountId == undefined || this.accountId == '')\n\t\tthis.accountId = this.wallet.accounts[0].accountMeta.account;\n\n\t\tthis.walletAccount = this.wallet.accounts.find(a => a.id === this.accountId);\n\t\tthis.walletService.loadPending();\n\t\tthis.addressBookEntry = this.addressBook.getAccountName(this.accountId);\n\t\tthis.addressBookModel = this.addressBookEntry || '';\n\t\tconst tokenMap = {};\n\t\tconst tokens = await this.api.tokens();\n\t\tif (!tokens.error) {\n\t\t\ttokens.result.forEach(token => {\n\t\t\t\ttokenMap[token.tokenId] = token;\n\t\t\t});\n\t\t}\n\n\t\t// fill account meta\n\t\tconst accountInfo = await this.api.accountInfo(this.accountId);\n\t\tif (!accountInfo.error) {\n\t\t\tconst am = accountInfo.result;\n\t\t\tfor (const token of am.tokens) {\n\t\t\t\tif (tokenMap.hasOwnProperty(token.type)) {\n\t\t\t\t\ttoken.tokenInfo = tokenMap[token.type];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.walletAccount.accountMeta = am;\n    \t}\n    \n\t\tlet accountMeta = [];\n\t\tthis.walletAccount.otherTokens = [];\n    \tif (accountInfo.result && accountInfo.result.tokens && Array.isArray(accountInfo.result.tokens)) {\n      \t\taccountInfo.result.tokens.forEach(token => {\n\t\t\t\taccountMeta[token.tokenName] = token;\n\t\t\t\tif (token.tokenInfo.tokenSymbol != 'QLC' && token.tokenInfo.tokenSymbol != 'QGAS') {\n\t\t\t\t\tthis.walletAccount.otherTokens.push(token);\n\t\t\t\t}\n      \t\t});\n    \t}\n\t\tthis.walletAccount.balances = accountMeta;\n\n\t\t/*if (this.walletAccount.accountMeta && this.walletAccount.accountMeta.tokens) {\n\t\t\tthis.repLabel = null;\n\t\t\tconst filter = this.walletAccount.accountMeta.tokens.filter(token => {\n\t\t\t\treturn token.type === this.api.qlcTokenHash;\n\t\t\t});\n\t\t\tif (filter.length > 0) {\n\t\t\t\tconst knownRepresentative = this.repService.getRepresentative(filter.rep);\n\t\t\t\tthis.repLabel = knownRepresentative ? knownRepresentative.name : null;\n\t\t\t}\n\t\t}*/\n\n\t\t/*if (this.walletAccount.accountMeta.error) {\n\t\t\tconst pendingRaw = this.pendingBlocks.reduce(\n\t\t\t\t(prev: BigNumber, current: any) => prev.plus(new BigNumber(current.amount)),\n\t\t\t\tnew BigNumber(0)\n\t\t\t);\n\t\t\tthis.walletAccount.accountMeta.pending = pendingRaw;\n\t\t}*/\n\n\t\tawait this.getAccountHistory(this.accountId);\n\n\t\tconst qrCode = await QRCode.toDataURL(`${this.accountId}`);\n\t\tthis.qrCodeImage = qrCode;\n\n\t\t\n\t\tconst accountBlocksCount = await this.api.accountBlocksCount(this.accountId);\n\t\tif (typeof(accountBlocksCount.result) == 'number')\n\t\t\tthis.accountBlocksCount = accountBlocksCount.result;\n  \t}\n\n  checkIfPending(token) {\n    if (typeof(this.walletAccount) != 'undefined' && typeof(this.walletAccount.pendingPerTokenCount) != 'undefined' && typeof(this.walletAccount.pendingPerTokenCount[token]) != 'undefined')\n      return true;\n    else\n      return false;\n\n  }\n\n\n  async getAccountHistory(account, resetPage = true) {\n\n\t\tif (resetPage) {\n\t\t\tthis.pageSize = 25;\n\t\t}\n\t\tconst accountHistory = await this.api.accountHistory(account, this.pageSize);\n\t\t// const additionalBlocksInfo = [];\n\n\t\tthis.walletAccount.latestTransactions = [];\n\t\tif (!accountHistory.error) {\n\t\t\tconst tokenMap = {};\n\t\t\tconst tokens = await this.api.tokens();\n\t\t\tif (!tokens.error) {\n\t\t\t\ttokens.result.forEach(token => {\n\t\t\t\t\ttokenMap[token.tokenId] = token;\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst historyResult = accountHistory.result;\n\t\t\tfor (const block of historyResult) {\n\t\t\t\t// For Open and receive blocks, we need to look up block info to get originating account\n\t\t\t\tif (block.type === 'Open' || block.type === 'Receive' || block.type === 'ContractReward') {\n\t\t\t\t\tconst preBlock = await this.api.blocksInfo([block.link]);\n\t\t\t\t\tif (!preBlock.error) {\n\t\t\t\t\t\tblock.link_as_account = preBlock.result[0].address;\n\t\t\t\t\t}\n\t\t\t\t} else if (block.type === 'ContractSend') {\n\t\t\t\t\tblock.link_as_account = block.address;\n\t\t\t\t} else {\n\t\t\t\t\tblock.link_as_account = this.util.account.getPublicAccountID(this.util.hex.toUint8(block.link));\n\t\t\t\t}\n\t\t\t\tif (tokenMap.hasOwnProperty(block.token)) {\n\t\t\t\t\tblock.tokenInfo = tokenMap[block.token];\n\t\t\t\t}\n\t\t\t\tthis.walletAccount.latestTransactions.push(block);\n\t\t\t}\n\t\t\t//this.walletAccount.latestTransactions = this.walletAccount.latestTransactions.filter(h => h.type !== 'Change');\n\t\t}\n  }\n\n  editName() {\n\t\tthis.showEditName = true;\n\t\tthis.addressBookTempName = this.addressBookModel;\n\t}\n\teditNameCancel() {\n\t\tthis.showEditName = false;\n\t\tthis.addressBookModel = this.addressBookTempName;\n\t\tthis.addressBookTempName = '';\n\t}\n\tasync editNameSave() {\n\t\tconst addressBookName = this.addressBookModel.trim();\n\t\tif (!addressBookName) {\n\t\t\tthis.addressBook.deleteAddress(this.accountId);\n\t\t\tthis.notificationService.sendSuccess(this.msgEdit1);\n\t\t\tthis.showEditName = false;\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.addressBook.saveAddress(this.accountId, addressBookName);\n\t\t} catch (err) {\n\t\t\tthis.notificationService.sendError(err.message);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notificationService.sendSuccess(this.msgEdit2);\n\t\tthis.showEditName = false;\n  }\n  \n  openModal(template: TemplateRef<any>) {\n\t\tthis.modalRef = this.modalService.show(template);\n  }\n  \n  claim(token) {\n\n  }\n\n  async receive(pending) {\n\t\tif (this.walletService.walletIsLocked()) {\n\t\t\treturn this.modalRef = this.modalService.show(ModalUnlockComponent, {class: 'modal-lg'}); \n\t\t}\n\t\tthis.notifications.sendSuccess(\n\t\t\t`Receiving ${pending.amount == 0 ? '' : new BigNumber(pending.amount).dividedBy(Math.pow(10,pending.tokenInfo.decimals)).toFixed(pending.tokenInfo.decimals)} ${pending.tokenInfo.tokenSymbol}!`\n\t\t);\n\t\tawait this.walletService.processPendingBlock(pending);\n  }\n\n\n}\n","<app-user-submenu></app-user-submenu>\n\n<!-- WALLETS -->\n<div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n  <div class=\"row pl-md-0 pr-md-0 pl-2 pr-2\">\n    <div class=\"col-12 pl-0 pr-0\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <!-- TITLE -->\n          <div class=\"col-lg-6 col-md-7 col-12 mt-2 pl-2 pr-2\">\n            <div class=\"content-title\">\n              <h1 style=\"display:inline-block;\">My Wallets</h1>\n              <span style=\"width:16px;height:16px;background:#2069c2;margin-left:26px;margin-right:8px;\" class=\"d-none d-sm-inline-block\"></span>\n              <span style=\"width:16px;height:16px;background:#2069c2;margin-left:16px;margin-right:8px;\" class=\"d-inline-block d-sm-none\"></span>\n              <span style=\"display:inline-block;vertical-align:top;height:16px;margin-top:3px;\">QLC<span class=\"d-none d-sm-inline d-md-none d-lg-inline\"> Chain</span></span> \n              <span style=\"width:16px;height:16px;background:#8BC34A;display:inline-block;margin-left:16px;margin-right:8px;\"></span>\n              <span style=\"display:inline-block;vertical-align:top;height:16px;margin-top:3px;\">NEO<span class=\"d-none d-sm-inline d-md-none d-lg-inline\">/NEP-5</span></span>\n              <span style=\"width:16px;height:16px;display:inline-block;margin-left:16px;margin-right:8px;\" class=\"eth-background-light\"></span>\n              <span style=\"display:inline-block;vertical-align:top;height:16px;margin-top:3px;\">ETH<span class=\"d-none d-sm-inline d-md-none d-lg-inline\">/ERC20</span></span> \n              <!--<span style=\"width:16px;height:16px;background:#caa847;display:inline-block;margin-left:16px;margin-right:8px;\"></span>\n              <span style=\"display:inline-block;vertical-align:top;height:16px;margin-top:3px;\">ChainX</span>-->\n            </div>\n          </div>\n          <div class=\"col-lg-3 col-md-2 col-12 pl-md-3 pr-md-0 pl-3 pr-3 pb-3\">\n            <!--<button (click)=\"loadBalances()\" type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 mr-xl-2 mr-lg-4 mr-md-5 ml-0 w-100\">\n              \n            </button>-->\n          </div>\n          <div class=\"col-md-3 col-12 pl-2 pr-2 pb-md-2 pb-3\">\n            <button (click)=\"loadBalances()\" type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0\">\n              REFRESH\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"container accounts pb-5 mb-5\">\n  <div *ngIf=\"!accounts.length\" class=\"row defaultTable content\">\n    <div class=\"col-12 text-center\">\n      {{ 'NO_WALLET_CONFIGURED' | translate    }}<a routerLink=\"/createwallet\">{{ 'NO_WALLET_CONFIGURED_CLICK' | translate }}</a>\n    </div>\n  </div>\n  <div class=\"row pl-md-0 pr-md-0 pl-sm-2 pl-0 pr-0\">\n    <!-- ADDRESS -->\n    <div class=\"col-xl-3 col-lg-4 col-md-6 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2 mb-4\" *ngFor=\"let account of accounts\">\n      <div class=\"content-box-blue h-auto pb-3\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">Address <span *ngIf=\"account.addressBookName\" class=\"force-wrap\">({{ account.addressBookName }})</span></div>\n          </div>\n          <div class=\"row qlc-table-row-blue row-text-mid mt-3 cursor-pointer\">\n            <div class=\"col-12 text-break pr-3\"\n              [routerLink]=\"'/wallets/qlc/' + account.id\"\n              tooltip=\"{{ 'ACCOUNTS.wallet_details' | translate }}\"\n            >{{ account.id }}</div>\n          </div>\n        </div>\n      </div>\n      <!-- BALANCES -->\n      <div class=\"content-box-white h-auto mt-2 pb-2\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-white\">\n            <div class=\"col-12\">Balances</div>\n          </div>\n        </div>\n        <!-- QLC -->\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-3 mt-3\">\n              <img src=\"assets/img/token-qlc.png\" class=\"w-100 icon-token\">\n            </div>\n            <div class=\"col-9 pr-0 pl-0\">\n              <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                <div class=\"col-12 pb-0\" *ngIf=\"account.balances != null && account.balances['QLC']\">{{ account.balances['QLC'].balance | qlc:8 | squeezeNumber: '8,2' | currency:'':'':'1.2-8' }} QLC</div>\n                <div class=\"col-12 pb-0\" *ngIf=\"account.balances == null || (account.balances != null && !account.balances['QLC'])\">NaN QLC</div>\n              </div>\n              <div class=\"row qlc-table-row-white sub-page pt-0\">\n                <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- QGAS -->\n        <div class=\"container pb-0 mb-0\">\n          <div class=\"row pb-0 mb-0\">\n            <div class=\"col-3 mt-3\">\n              <img src=\"assets/img/token-qgas.png\" class=\"w-100 icon-token\">\n            </div>\n            <div class=\"col-9 pr-0 pl-0\">\n              <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                <div class=\"col-12 pb-0\" *ngIf=\"account.balances != null && account.balances['QGAS']\">{{ account.balances['QGAS'].balance | qlc:8 | squeezeNumber: '8,2' | currency:'':'':'1.2-8' }} QGAS</div>\n                <div class=\"col-12 pb-0\" *ngIf=\"account.balances == null || (account.balances != null && !account.balances['QGAS'])\">NaN QGAS</div>\n              </div>\n              <div class=\"row qlc-table-row-white sub-page pt-0\">\n                <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- OTHERS -->\n        <div class=\"container\" *ngIf=\"account.otherTokens.length > 0\">\n          <div class=\"row mt-0 pt-0\">\n            <div class=\"col-12 mt-0 pl-0 pr-0 ml-0 mr-0\">\n              <div class=\"container pt-0 mt-0\">\n                <div class=\"row qlc-table-header-white pt-0 mt-0\">\n                  <div class=\"col-12 pt-0 mt-0\">Other Balances ({{ account.otherTokens.length }})</div>\n                </div>\n              </div>\n              <div class=\"container\">\n                <div class=\"row\">\n                  <carousel [interval]=\"3000\" class=\"w-100\">\n                    <slide *ngFor=\"let token of account.otherTokens\">\n                      <div class=\"row pt-3 pl-3 pr-3 mb-2 pb-1\">\n                        <div class=\"col-3 pr-3 pt-1\">\n                          <img src=\"assets/img/token-none.png\" class=\"w-100 icon-token\" style=\"padding-right:2px;\">\n                        </div>\n                        <div class=\"col-9 pr-0 pl-0 mb-2 pb-0\">\n                          <div class=\"row qlc-table-row-white row-text-mid mt-0 pb-1\">\n                            <div class=\"col-12 pb-0 mb-0\"><span style=\"color: #a8a6ae;font-size: 12px;text-transform: uppercase;font-weight: 700; line-height:14px;\">{{ token.tokenInfo.tokenSymbol }} ({{ token.tokenInfo.tokenName }})</span></div>\n                            <div class=\"col-12 pb-0 pt-0 mt-0\" style=\"color: #595757;font-size: 14px;text-transform: uppercase;font-weight: 700; line-height:16px;\">{{ token.balance | qlc: token.tokenInfo.decimals | squeezeNumber: '8,2' | currency:'':'':'1.0-'+token.tokenInfo.decimals}}</div>\n                          </div>\n                        </div>\n                      </div>\n                    </slide>\n                  </carousel>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- OTHERS EMPTY -->\n        <div class=\"container\" *ngIf=\"account.otherTokens.length == 0\">\n          <div class=\"row mt-0 pt-0\">\n            <div class=\"col-12 mt-0 pl-0 pr-0 ml-0 mr-0\">\n              <div class=\"container pt-0 mt-0\">\n                <div class=\"row qlc-table-header-white pt-0 mt-0\">\n                  <div class=\"col-12 pt-0 mt-0\">Other Balances (0)</div>\n                </div>\n              </div>\n              <div class=\"container\" style=\"padding-bottom:1px !important;\">\n                <div class=\"row pt-1\">\n                  <div class=\"col-3 mt-3\">\n                    <img src=\"assets/img/token-none.png\" class=\"w-100 icon-token\">\n                  </div>\n                  <div class=\"col-9 pr-0 pl-0\">\n                    <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                      <div class=\"col-12 pb-0\">NaN</div>\n                    </div>\n                    <div class=\"row qlc-table-row-white sub-page pt-0 pb-2 mb-2\">\n                      <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"container mt-2\">\n        <div class=\"row\">\n          <div class=\"col-12 pl-0 pr-0\">\n            <button [routerLink]=\"'/wallets/qlc/' + account.id\" type=\"submit\" class=\"btn btn-primary w-100 pl-2 pr-2\"><span class=\"superlight\">({{ account.pendingCount }} Pending)</span></button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- // END ADDRESS -->\n    <!-- NEW WALLET BUTTON -->\n    <div class=\"col-xl-3 col-lg-4 col-md-6 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 mb-4 pt-0 pb-0  pl-md-0 pr-md-0 pl-sm-2 pl-3 pr-3\">\n      <button type=\"submit\" class=\"btn btn-primary button-newaccount\" (click)=\"createAccount()\" *ngIf=\"accounts.length\">\n        {{ 'ACCOUNTS.title_button_wallet' | translate }}\n      </button>\n      <button type=\"submit\" class=\"btn btn-primary button-newstaking mt-2 w-100 pl-0 pr-0\" routerLink=\"/staking/qlc\" *ngIf=\"accounts.length\">\n        MY QLC STAKINGS\n      </button>\n    </div>\n    <!-- // END NEW WALLET BUTTON -->\n    <!-- NEO START -->\n    <!-- ADDRESS -->\n    <div class=\"col-xl-3 col-lg-4 col-md-6 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2 mb-4\" *ngFor=\"let neowallet of neowallets\">\n      <div class=\"content-box-blue h-auto pb-3 neo-background-light\" style=\"min-height: 172px;\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue neo-background-light\">\n            <div class=\"col-12 white\">Address <span *ngIf=\"neowallet.addressBookName\" class=\"force-wrap\">({{ neowallet.addressBookName }})</span></div>\n          </div>\n          <div class=\"row qlc-table-row-blue row-text-mid mt-3 cursor-pointer neo-background-light\">\n            <div class=\"col-12 text-break pr-3\"\n              [routerLink]=\"'/wallets/neo/' + neowallet.id\"\n              tooltip=\"{{ 'ACCOUNTS.wallet_details' | translate }}\"\n            >{{ neowallet.id }}</div>\n          </div>\n        </div>\n      </div>\n      <!-- BALANCES -->\n      <div class=\"content-box-white h-auto mt-2 pb-2\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-white\">\n            <div class=\"col-12\">Balances</div>\n          </div>\n        </div>\n        <!-- NEO -->\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-3 mt-3\">\n              <img src=\"assets/img/token-neo.png\" class=\"w-100 icon-token\">\n            </div>\n            <div class=\"col-9 pr-0 pl-0\">\n              <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                <div class=\"col-12 pb-0\" *ngIf=\"neowallet.balances != null && neowallet.balances[neoService.tokenList['NEO'].networks['1'].hash]\">{{ neowallet.balances[neoService.tokenList['NEO'].networks['1'].hash].amount | currency:'':'':'1.2-8' }} NEO</div>\n                <div class=\"col-12 pb-0\" *ngIf=\"neowallet.balances == null || (neowallet.balances != null && !neowallet.balances[neoService.tokenList['NEO'].networks['1'].hash])\">NaN NEO</div>\n              </div>\n              <div class=\"row qlc-table-row-white sub-page pt-0\">\n                <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- NEO GAS -->\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-3 mt-3\">\n              <img src=\"assets/img/token-gas.png\" class=\"w-100 icon-token\">\n            </div>\n            <div class=\"col-9 pr-0 pl-0\">\n              <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                <div class=\"col-12 pb-0\" *ngIf=\"neowallet.balances != null && neowallet.balances[neoService.tokenList['GAS'].networks['1'].hash]\">{{ neowallet.balances[neoService.tokenList['GAS'].networks['1'].hash].amount | currency:'':'':'1.2-8' }} GAS</div>\n                <div class=\"col-12 pb-0\" *ngIf=\"neowallet.balances == null || (neowallet.balances != null && !neowallet.balances[neoService.tokenList['GAS'].networks['1'].hash])\">NaN GAS</div>\n              </div>\n              <div class=\"row qlc-table-row-white sub-page pt-0\">\n                <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- NEO QLC -->\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-3 mt-3\">\n              <img src=\"assets/img/token-qlc.png\" class=\"w-100 icon-token\">\n            </div>\n            <div class=\"col-9 pr-0 pl-0\">\n              <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                <div class=\"col-12 pb-0\" *ngIf=\"neowallet.balances != null && neowallet.balances[neoService.tokenList['QLC'].networks['1'].hash]\">{{ neowallet.balances[neoService.tokenList['QLC'].networks['1'].hash].amount | currency:'':'':'1.2-8' }} QLC</div>\n                <div class=\"col-12 pb-0\" *ngIf=\"neowallet.balances == null || (neowallet.balances != null && !neowallet.balances[neoService.tokenList['QLC'].networks['1'].hash])\">NaN QLC</div>\n              </div>\n              <div class=\"row qlc-table-row-white sub-page pt-0\">\n                <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- // END ADDRESS -->\n    <div class=\"col-xl-3 col-lg-4 col-md-6 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 mb-4 pt-0 pb-0 pl-3 pr-3\">\n      <button type=\"submit\" class=\"btn btn-primary button-newaccount neo-background\" [routerLink]=\"'/wallets/neo/create'\">\n        Add New NEO Wallet\n      </button>\n    </div>\n    <!-- NEO END -->\n    <!-- ERC20 START -->\n    <div class=\"col-xl-3 col-lg-4 col-md-6 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2 mb-4\" *ngIf=\"etherService.selectedAddress && etherService.selectedAddress !== ''\">\n      <div class=\"content-box-blue h-auto pb-3 eth-background-light\" style=\"min-height: 172px;\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue eth-background-light\">\n            <div class=\"col-12 white\">Address</div>\n          </div>\n          <div class=\"row qlc-table-row-blue row-text-mid mt-3 cursor-pointer eth-background-light\">\n            <div class=\"col-12 text-break pr-3\"\n              [routerLink]=\"'/wallets/erc20/' + etherService.selectedAddress\"\n              tooltip=\"{{ 'ACCOUNTS.wallet_details' | translate }}\"\n            >{{ etherService.selectedAddress }}</div>\n          </div>\n        </div>\n      </div>\n      <!-- BALANCES -->\n      <div class=\"content-box-white h-auto mt-2 pb-2\" style=\"min-height: 172px;\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-white\">\n            <div class=\"col-12\">Balances</div>\n          </div>\n        </div>\n        <!-- PCX -->\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-3 mt-3\">\n              <img src=\"assets/img/swap/token-eth.png\" class=\"w-100 icon-token\">\n            </div>\n            <div class=\"col-9 pr-0 pl-0\">\n              <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                <ng-container *ngIf=\"!loading; else showLoadingTemplate\">\n                  <div class=\"col-12 pb-0\" >{{ etherService?.balances?.ETH | currency:'':'':'1.2-8' }} ETH</div>\n                </ng-container>\n              </div>\n              <div class=\"row qlc-table-row-white sub-page pt-0\">\n                <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-3 mt-3\">\n              <img src=\"assets/img/token-qlc.png\" class=\"w-100 icon-token\">\n            </div>\n            <div class=\"col-9 pr-0 pl-0\">\n              <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                <ng-container *ngIf=\"!loading; else showLoadingTemplate\">\n                  <div class=\"col-12 pb-0\" >{{ etherService?.balances?.QLC | currency:'':'':'1.2-8' }} QLC</div>\n                </ng-container>\n              </div>\n              <div class=\"row qlc-table-row-white sub-page pt-0\">\n                <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xl-3 col-lg-4 col-md-6 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 mb-4 pt-0 pb-0 pl-3 pr-3\">\n      <button type=\"submit\" class=\"btn btn-primary button-newaccount eth-background\" [routerLink]=\"'/wallets/erc20'\" *ngIf=\"!etherService.selectedAddress\">\n        Connect ERC20 Wallet\n      </button>\n    </div>\n    <!-- ERC20 END -->\n    <!-- ChainX START \n    \n    <div class=\"col-xl-3 col-lg-4 col-md-6 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2 mb-4\" *ngFor=\"let chainxAccount of chainxAccounts\">\n      <div class=\"content-box-blue h-auto pb-3 chainx-background-light\" style=\"min-height: 172px;\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue chainx-background-light\">\n            <div class=\"col-12 white\">Address <span *ngIf=\"chainxAccount.addressBookName\" class=\"force-wrap\">({{ chainxAccount.addressBookName }})</span></div>\n          </div>\n          <div class=\"row qlc-table-row-blue row-text-mid mt-3 cursor-pointer chainx-background-light\">\n            <div class=\"col-12 text-break pr-3\"\n              [routerLink]=\"'/wallets/chainx/account/' + chainxAccount.id\"\n              tooltip=\"{{ 'ACCOUNTS.wallet_details' | translate }}\"\n            >{{ chainxAccount.id }}</div>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"content-box-white h-auto mt-2 pb-2\" style=\"min-height: 172px;\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-white\">\n            <div class=\"col-12\">Balances</div>\n          </div>\n        </div>\n        \n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-3 mt-3\">\n              <img src=\"assets/img/token-pcx.png\" class=\"w-100 icon-token\">\n            </div>\n            <div class=\"col-9 pr-0 pl-0\">\n              <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                <ng-container *ngIf=\"!loading; else showLoadingTemplate\">\n                  <div class=\"col-12 pb-0\" *ngIf=\"chainxAccount.balances != null; else nanTemplate\">{{ (chainxAccount.balances.Free / chainxAccountService.divisor) | currency:'':'':'1.2-8' }} PCX</div>\n                </ng-container>\n              </div>\n              <div class=\"row qlc-table-row-white sub-page pt-0\">\n                <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"col-xl-3 col-lg-4 col-md-6 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 mb-4 pt-0 pb-0 pl-3 pr-3\">\n      <button type=\"submit\" class=\"btn btn-primary button-newaccount chainx-background\" [routerLink]=\"'/wallets/chainx/account/create'\">\n        Add New ChainX Account\n      </button>\n      <button type=\"submit\" class=\"btn btn-primary button-newstaking chainx-background mt-2 w-100 pl-0 pr-0\" routerLink=\"/staking/chainx\" *ngIf=\"chainxAccounts.length > 0\" style=\"min-height: 172px;\">\n        MY CHAINX STAKINGS\n      </button>\n    </div>\n     ChainX END -->\n  </div>\n</div>\n<ng-template #nanTemplate>\n  <div class=\"col-12 pb-0\">NaN</div>\n</ng-template>\n<ng-template #showLoadingTemplate>\n  <div class=\"col-12 pb-0\">\n    <!--<div class=\"lds-dual-ring\"></div>-->\n    <img src=\"assets/img/preloaders/preloader-black-38px.svg\" style=\"margin-top:-2px;width:24px;height:auto;opacity:0.65;\">\n  </div>\n</ng-template>\n\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { WalletService } from '../../services/wallet.service';\nimport { ApiService } from '../../services/api.service';\nimport { NotificationService } from '../../services/notification.service';\nimport { AddressBookService } from '../../services/address-book.service';\nimport { AppSettingsService } from '../../services/app-settings.service';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { NeoWalletService } from 'src/app/services/neo-wallet.service';\nimport BigNumber from 'bignumber.js';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ModalUnlockComponent } from '../modal-unlock/modal-unlock.component';\nimport { ChainxAccountService } from '../../services/chainx-account.service';\nimport { EtherWalletService } from 'src/app/services/ether-wallet.service';\n\n@Component({\n  selector: 'app-myaccounts',\n  templateUrl: './myaccounts.component.html',\n  styleUrls: ['./myaccounts.component.scss']\n})\nexport class MyaccountsComponent implements OnInit {\n  accounts = this.walletService.wallet.accounts;\n  neowallets = this.walletService.wallet.neowallets;\n  chainxAccounts = this.walletService.wallet.chainxAccounts;\n  wallet = this.walletService.wallet;\n  loading = true;\n  isLedgerWallet = this.walletService.isLedgerWallet();\n  activeSlideIndex = 0;\n\n  pendingBlocks = [];\n  successfulBlocks = [];\n  processingPending = false;\n\n  modalRef: BsModalRef;\n\n  msg1 = '';\n  msg2 = '';\n  msg3 = '';\n  msg4 = '';\n  msg5 = '';\n  msg6 = '';\n  msg7 = '';\n  msg8 = '';\n  msg9 = '';\n  msg10 = '';\n  msg11 = '';\n  msg12 = '';\n  msgEdit1 = '';\n  msgEdit2 = '';\n\n  msgLocked = '';\n\n  constructor(\n    private walletService: WalletService,\n    private chainxAccountService: ChainxAccountService,\n    public neoService: NeoWalletService,\n    private api: ApiService,\n    private notificationService: NotificationService,\n    private addressBook: AddressBookService,\n    public settings: AppSettingsService,\n    private trans: TranslateService,\n    private modalService: BsModalService,\n    public etherService: EtherWalletService\n  ) {\n    this.loadLang();\n  }\n\n  async ngOnInit() {\n    this.trans.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.loadLang();\n    });\n    this.loadBalances();\n  }\n\n  loadLang() {\n    this.trans.get('ACCOUNTS_WARNINGS.msg1').subscribe((res: string) => {\tthis.msg1 = res; });\n    this.trans.get('ACCOUNTS_WARNINGS.msg2').subscribe((res: string) => {\tthis.msg2 = res; });\n    this.trans.get('ACCOUNTS_WARNINGS.msg3').subscribe((res: string) => {\tthis.msg3 = res; });\n    this.trans.get('ACCOUNTS_WARNINGS.msg4').subscribe((res: string) => {\tthis.msg4 = res; });\n    this.trans.get('ACCOUNTS_WARNINGS.msg5').subscribe((res: string) => {\tthis.msg5 = res; });\n    this.trans.get('ACCOUNTS_WARNINGS.msg6').subscribe((res: string) => {\tthis.msg6 = res; });\n    this.trans.get('ACCOUNTS_WARNINGS.msg7').subscribe((res: string) => {\tthis.msg7 = res; });\n    this.trans.get('ACCOUNTS_WARNINGS.msg8').subscribe((res: string) => {\tthis.msg8 = res; });\n    this.trans.get('ACCOUNTS_WARNINGS.msg9').subscribe((res: string) => {\tthis.msg9 = res; });\n    this.trans.get('ACCOUNTS_WARNINGS.msg10').subscribe((res: string) => {\tthis.msg10 = res; });\n    this.trans.get('ACCOUNTS_WARNINGS.msg11').subscribe((res: string) => {\tthis.msg11 = res; });\n    this.trans.get('ACCOUNTS_WARNINGS.msg12').subscribe((res: string) => {\tthis.msg12 = res; });\n    this.trans.get('ACCOUNT_DETAILS_WARNINGS.msg5').subscribe((res: string) => {\tthis.msgEdit1 = res; });\n    this.trans.get('ACCOUNT_DETAILS_WARNINGS.msg6').subscribe((res: string) => {\tthis.msgEdit2 = res; });\n    this.trans.get('RECEIVE_WARNINGS.msg2').subscribe((res: string) => {\tthis.msgLocked = res; });\n  }\n\n  async loadBalances() {\n    await this.walletService.loadTokens();\n\n    /*const tokenMap = {};\n    const tokens = await this.api.tokens();\n    if (!tokens.error) {\n      tokens.result.forEach(token => {\n        tokenMap[token.tokenId] = token;\n      });\n    }*/\n    for (let i = 0; i < this.accounts.length; i++) {\n      const am = await this.api.accountInfo(this.accounts[i].id);\n      if (!am.error) {\n        let accountMeta = [];\n        let otherTokens = [];\n        if (am.result.tokens && Array.isArray(am.result.tokens)) {\n          am.result.tokens.forEach(token => {\n            accountMeta[token.tokenName] = token;\n            if (this.walletService.tokenMap.hasOwnProperty(token.type)) {\n              token.tokenInfo = this.walletService.tokenMap[token.type];\n            }\n            if (token.tokenInfo.tokenSymbol != 'QLC' && token.tokenInfo.tokenSymbol != 'QGAS') {\n              otherTokens.push(token);\n            }\n          });\n        }\n        this.accounts[i].balances = accountMeta;\n        this.accounts[i].otherTokens = otherTokens;\n      }\n      /*const pending = await this.api.accountsPending([this.accounts[i].id]);\n      let pendingCount = 0;\n      const pendingResult = pending.result;\n      for (const account in pendingResult) {\n        if (!pendingResult.hasOwnProperty(account)) {\n          continue;\n        }\n        pendingCount += pendingResult[account].length;\n      }\n      this.accounts[i].pendingCount = pendingCount;*/\n      \n    }\n    this.walletService.loadPending();\n    // console.log(this.accounts);\n    for (let i = 0; i < this.neowallets.length; i++) {\n      this.neowallets[i].balances = [];\n      this.neowallets[i].addressBookName = this.addressBook.getAccountName(this.neowallets[i].id);\n\n      const balance: any = await this.neoService.getNeoScanBalance(this.neowallets[i].id);\n      for (const asset of balance) {\n        this.neowallets[i].balances[asset.asset_hash] = {\n          amount: new BigNumber(asset.amount).toFixed(),\n          asset: asset.asset,\n          asset_symbol: asset.asset_symbol\n        }\n      }\n\n    }\n\n    for (const chainxAccount of this.chainxAccounts) {\n      chainxAccount.balances = null;\n\n      const assets = await this.chainxAccountService.getAssetsByAccount(chainxAccount.id);\n\n      for (const asset of assets.data) {\n        chainxAccount.balances = asset.details;\n      }\n    }\n\n    this.loading = false\n  }\n\n  async createAccount() {\n    if (this.walletService.isLocked()) {\n      return this.notificationService.sendError(this.msg1);\n    }\n    if (!this.walletService.isConfigured()) {\n      return this.notificationService.sendError(this.msg2);\n    }\n    if (this.walletService.wallet.accounts.length >= 20) {\n      return this.notificationService.sendWarning(this.msg3);\n    }\n    try {\n      const newAccount = await this.walletService.addWalletAccount();\n      this.notificationService.sendSuccess(this.msg4 + ` ${newAccount.id}`);\n    } catch (err) {\n    }\n  }\n\n  copied() {\n    this.notificationService.sendSuccess(this.msg5);\n  }\n\n  async deleteAccount(account) {\n    if (this.walletService.walletIsLocked()) {\n      return this.notificationService.sendWarning(this.msg6);\n    }\n    try {\n      await this.walletService.removeWalletAccount(account.id);\n      this.notificationService.sendSuccess(this.msg7 + ` ${account.id}`);\n    } catch (err) {\n      this.notificationService.sendError(this.msg8 + ` ${err.message}`);\n    }\n  }\n\n  editName(account) {\n    account.editName = true;\n    account.tempBookName = account.addressBookName;\n  }\n\n  editNameCancel(account) {\n    account.editName = false;\n    account.addressBookName = account.tempBookName;\n    account.tempBookName = '';\n  }\n\n  async editNameSave(account) {\n    const addressBookName = account.addressBookName.trim();\n    if (!addressBookName) {\n      this.addressBook.deleteAddress(account.id);\n      this.notificationService.sendSuccess(this.msgEdit1);\n      account.editName = false;\n      return;\n    }\n\n    try {\n      await this.addressBook.saveAddress(account.id, addressBookName);\n    } catch (err) {\n      this.notificationService.sendError(err.message);\n      return;\n    }\n\n    this.notificationService.sendSuccess(this.msgEdit2);\n    account.editName = false;\n  }\n\n  async receive(account) {\n    if (this.walletService.walletIsLocked()) {\n      this.modalRef = this.modalService.show(ModalUnlockComponent, { class: 'modal-lg' });\n    }\n  }\n\n}\n","<app-user-submenu></app-user-submenu>\n<!-- STAKINGS LIST -->\n<div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\" *ngIf=\"step == 0\">\n  <div class=\"row\">\n    <div class=\"col-12 pl-0 pr-0\">\n        <div class=\"container\">\n                <div class=\"row\">\n                  <!-- TITLE -->\n                  <div class=\"col-md-6 col-12 mt-2 pl-2 pr-2\">\n                    <div class=\"content-title\">\n                      <h1 style=\"display:inline-block;\">My QLC Stakings</h1>\n                    </div>\n                  </div>\n                  <div class=\"col-md-3 col-12 pl-md-2 pr-md-2 pl-3 pr-3 pb-3\">\n                    <!--<button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 mr-xl-2 mr-lg-4 mr-md-5 ml-0 w-100\" routerLink=\"/wallets\">\n                      BACK TO MY WALLETS\n                    </button>-->\n                  </div>\n                  <div class=\"col-md-3 col-12 pl-md-2 pr-md-2 pl-3 pr-3 pb-3\">\n                    <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 ml-xl-2 ml-lg-4 ml-md-5 ml-0 w-100\" routerLink=\"/staking/qlc/create\">\n                      INVOKE NEW STAKING\n                    </button>\n                  </div>\n            </div>\n        </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n      \n      <div class=\"col-12 pl-0 pr-0 pt-2\">\n        \n        <!-- LIST -->\n        <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n          <div class=\"content-box-white\">\n            \n            \n            <div class=\"container\">\n              \n              <div class=\"row qlc-table-header pr-4\">\n                <div class=\"col-xl-2 col-lg-2 order-lg-1 col-md-4 order-md-1 col-sm-3 order-sm-3 col-6 order-1 pl-4\">Staking<br>Type</div>\n                <div class=\"col-xl-4 col-lg-4 order-lg-2 d-lg-block col-md-9 d-md-none col-sm-12 order-sm-5 d-sm-none col-7 d-none order-6 text-truncate\">Accounts /<br>Invocation Hash</div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-3 col-md-2 order-md-2 col-sm-3 order-sm-3 col-4 pr-sm-0 order-3 text-left text-sm-right pl-4\">Staking<br>Amount</div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-4 col-md-2 order-md-3 col-sm-3 order-sm-3 col-4 pr-sm-0 order-4 text-right\">Earnings<br>(VOTING)</div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-5 col-md-2 order-md-4 col-sm-3 order-sm-3 col-4 pr-sm-0 order-5 text-right pr-0\">Earnings<br>(MINING)</div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-5 col-md-2 order-md-4 d-md-block col-sm-3 order-sm-3 d-sm-none col-6 pr-sm-0 order-2 text-right pr-0\">Option to<br>Revoke on</div>\n                <div class=\"col-xl-2 col-lg-2 order-lg-6 d-lg-block col-md-3 order-md-5 d-md-none col-sm-6 order-sm-4 d-sm-none col-12 d-none order-7 pr-sm-0 pr-0 text-right\">Revoke<br>Staking</div>                \n              </div>\n\n              <div class=\"row qlc-table-row qlc-table-row-twolines closed pr-4\" *ngFor=\"let pledge of pledges;let i = index\">\n                <div class=\"col-xl-2 col-lg-2 order-lg-1 col-md-4 order-md-1 col-sm-3 order-sm-1 col-8 order-1 pl-4 pb-0 pr-0\">\n                  <span class=\"qlc-icon icon-Staking d-sm-none d-md-inline-block\" title=\"Staking\"></span>\n                  <span class=\"d-inline-block\">\n                    <span class=\"text-bold-grey\" *ngIf=\"pledge.pType == 'vote'\">Voting/<br>Mining Node</span>\n                    <span class=\"text-bold-grey\" *ngIf=\"pledge.pType == 'network'\">Confidant</span>\n                    <span class=\"text-bold-grey\" *ngIf=\"pledge.pType == 'mintage'\">Mintage</span>\n                    \n                  </span>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 order-lg-2 pl-lg-2 col-md-8 order-md-6 pl-md-4 col-sm-8 order-sm-5 pl-sm-4 col-12 pl-4 order-6 pb-0\">\n                  <span class=\"text-color-lightgrey\" >From: </span> \n                  <a href=\"{{ neoService.getExplorer() }}/address/{{pledge.multiSigAddress}}\" target=\"_blank\" >{{ pledge.multiSigAddress }}</a><br>\n                  <span class=\"text-color-lightgrey\" >To: </span> \n                  <a routerLink=\"/wallets/qlc/{{ pledge.beneficial }}\" >{{ pledge.beneficial | squeeze : '20,20' }}</a><br>\n                  <!-- <a (click)=\"neoService.contractGetLockInfo(pledge.nep5TxId)\">Check</a>-->\n                  <a href=\"{{ neoService.getExplorer() }}/transaction/{{pledge.nep5TxId}}\" target=\"_blank\">\n                    <span class=\"text-tiny\">{{ pledge.nep5TxId | squeeze : '25,25' }}</span> \n                  </a>\n                </div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-3 col-md-2 order-md-2 col-sm-3 order-sm-2 col-4 order-3 pb-0 pr-sm-0 pl-4 pr-0 text-sm-right text-left text-blue\">\n                  <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">{{ pledge.amount | qlc:8 | currency:'':'':'1.2-8' }}</span>\n                  <br><span class=\"text-color-grey\">QLC</span>\n                </div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-4 col-md-2 order-md-3 col-sm-3 order-sm-3 col-4 order-4 pb-0 pr-sm-0 pr-0 text-right text-color-green\">\n                  <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">{{ pledge.earnings | qlc:8 | currency:'':'':'1.2-8' }}</span>\n                  <br><span class=\"text-color-grey\">QGAS</span>\n                </div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-5 col-md-2 order-md-4 col-sm-3 order-sm-4 col-4 order-5 pb-0 pr-sm-0 pr-0 text-right text-color-green\">\n                  <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">/</span>\n                  <br><span class=\"text-color-grey\">QGAS</span>\n                </div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-5 col-md-2 order-md-5 col-sm-4 order-sm-6 col-4 order-2 pb-0 pr-sm-0 pr-0 text-right\">\n                  <span>\n                    {{ pledge.withdrawTime * 1000 | date: 'dd/MM/yy' }}<br>{{ pledge.withdrawTime * 1000 | date: 'H:mm:ss' }}<br>\n                    <span class=\"text-color-lightgrey\" >-</span>\n                  </span>\n                </div>\n                <div class=\"col-xl-2 col-lg-2 order-lg-6 col-md-4 order-md-7 offset-md-0 col-sm-4 offset-sm-8 order-sm-7 col-12 order-7 pb-0 pr-sm-0 pr-0 text-right\">\n                  <span *ngIf=\"pledge.state == 'WithdrawDone'\">\n                      <div style=\"display:inline-block;vertical-align: top;padding:0px;padding-right:8px;\"><img src=\"assets/img/qlc-icon-staking-success-green.svg\" style=\"height:20px;margin-top:-2px;margin-right:0px;\"></div>\n                      <div style=\"display:inline-block;vertical-align:top;padding:0px;font-family: 'Lato', Gotham, 'Helvetica Neue', Helvetica, Arial, 'sans-serif'; font-size: 12px; text-transform: uppercase; font-weight: 700;\">WITHDRAW<br>COMPLETE</div>\n                  </span>\n                  <span *ngIf=\"pledge.state == 'WithdrawProcess'\">\n                    <button (click)=\"continueRevoke(i)\" type=\"submit\" class=\"btn btn-primary w-75 float-right pl-0 pr-0\" style=\"min-width:auto !important;\">\n                      CONTINUE REVOKE\n                    </button>\n                  </span>\n                  <span *ngIf=\"pledge.state == 'WithdrawStart'\">\n                    <button (click)=\"continueRevoke(i)\" type=\"submit\" class=\"btn btn-primary w-75 float-right pl-0 pr-0\" style=\"min-width:auto !important;\">\n                      CONTINUE REVOKE\n                    </button>\n                  </span>\n                  <!--<div *ngIf=\"dateNow >= pledge.withdrawTime * 1000\">-->\n                    <button *ngIf=\"dateNow >= pledge.withdrawTime * 1000 && pledge.state != 'WithdrawDone' && pledge.state != 'WithdrawProcess' && pledge.state != 'WithdrawStart' && pledge.state != 'PledgeProcess' && pledge.state != 'PledgeStart'\" (click)=\"revoke(i)\" type=\"submit\" class=\"btn btn-primary w-75 float-right pl-0 pr-0\" style=\"min-width:auto !important;\">\n                      REVOKE\n                    </button>\n                    <button *ngIf=\"dateNow < pledge.withdrawTime * 1000 && pledge.state != 'WithdrawDone' && pledge.state != 'PledgeProcess' && pledge.state != 'PledgeStart'\" disabled type=\"submit\" class=\"btn btn-primary w-75 float-right pl-0 pr-0\" style=\"min-width:auto !important;\">\n                      REVOKE\n                    </button>\n                    <button *ngIf=\"pledge.state == 'PledgeProcess' || pledge.state == 'PledgeStart'\" (click)=\"continueInvoke(i)\" type=\"submit\" class=\"btn btn-primary w-75 float-right pl-0 pr-0\" style=\"min-width:auto !important;\">\n                      CONTINUE INVOKE\n                    </button>\n                  <!--</div>-->\n                </div>\n              \n               </div>\n      \n\n          </div>\n          \n          \n        </div>\n      </div>\n      \n    </div>\n    \n  </div>\n\n  <div class=\"row pb-4\">\n\n    <div class=\"col-lg-4 col-md-4 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-tokens\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">TOTAL STAKING VOLUME</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\">{{ totalPledgeAmount | qlc:8 | currency:'':'':'1.2-8' }} QLC</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-4 col-md-4 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-tokens\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">YOUR CURRENT STAKING VOLUME</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\">{{ myStakingVolume | qlc:8 | currency:'':'':'1.2-8' }} QLC</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-4 col-md-4 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-voting\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">YOUR TOTAL STAKING EARNINGS</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\">{{ myStakingEarnings | qlc:8 | currency:'':'':'1.2-8' }} QGAS</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n\n\n\n</div>\n\n\n\n\n<!-- STAKINGS EARNINGS -->\n<div class=\"container\" *ngIf=\"step == 0\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0\">\n          <div class=\"container\">\n                  <div class=\"row\">\n                    <!-- TITLE -->\n                    <div class=\"col-md-9 col-12 mt-2 pl-2 pr-2\">\n                      <div class=\"content-title pb-2\">\n                        <h1>My Rewards</h1>\n                      </div>\n                    </div>\n                    <div class=\"col-md-3 col-12 pl-2 pr-2 pb-3\">\n                      \n                    </div>\n              </div>\n          </div>\n      </div>\n    </div>\n  \n    <div class=\"row\">\n        \n        <div class=\"col-12 pl-0 pr-0 pt-2\">\n          \n          <!-- LIST -->\n          <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n            <div class=\"content-box-white\">\n              \n              \n              <div class=\"container\">\n                \n                <div class=\"row qlc-table-header pr-4\">\n                  <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-4 col-5 pl-4\">Type</div>\n                  <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-4 col-4 pr-sm-0\">Account/Wallet</div>\n                  <div class=\"col-xl-4 col-lg-4 col-md-3 col-sm-4 col-3 pr-sm-0 text-right\">Amount</div>\n                </div>\n                \n                <div class=\"row qlc-table-row qlc-table-row-twolines closed pr-4\" *ngFor=\"let reward of rewards\">\n                    <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-4 col-5 pl-4 pb-0\">\n                      <span class=\"qlc-icon icon-Reward\" title=\"Reward\"></span>\n                      <span class=\"d-inline-block\">\n                        <span class=\"text-bold-grey\">Confidant ISO</span>\n                      </span>\n                    </div>\n                    <div class=\"col-xl-6 col-lg-6 col-md-6 pl-md-2 col-sm-5 col-4 pb-0 pl-sm-4 pr-sm-0 pl-4 text-left\" style=\"word-break: break-all\">\n                      <!--From: <a routerLink=\"/account/{{ reward.from }}\" >{{ reward.from }}</a><br>\n                      To: <a routerLink=\"/account/{{ reward.to }}\" >{{ reward.to }}</a>-->\n                      <a routerLink=\"/wallets/qlc/{{ reward.account }}\" >{{ reward.account | squeeze : '25,25' }}</a>\n                    </div>\n                    <div class=\"col-xl-4 col-lg-4 col-md-3 col-sm-3 col-3 pb-0 pr-sm-0 text-right text-color-green\">\n                      <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"+9.00 $\">+{{ reward.amount | qlc | currency:'':'':'1.2-8' }}</span>\n                      <br><span class=\"text-color-grey\">QGAS</span>\n                    </div>\n                </div>\n  \n            </div>\n            \n            \n          </div>\n        </div>\n        \n      </div>\n      \n    </div>\n</div>\n\n<!-- STAKINGS EARNINGS -->\n<div class=\"container\" *ngIf=\"step == 0 && pledgesCompleted.length > 0\">\n  <div class=\"row\">\n    <div class=\"col-12 pl-0 pr-0\">\n        <div class=\"container\">\n                <div class=\"row\">\n                  <!-- TITLE -->\n                  <div class=\"col-md-9 col-12 mt-2 pl-2 pr-2\">\n                    <div class=\"content-title pb-2\">\n                      <h1>Completed Stakings</h1>\n                    </div>\n                  </div>\n                  <div class=\"col-md-3 col-12 pl-2 pr-2 pb-3\">\n                    \n                  </div>\n            </div>\n        </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n      \n    <div class=\"col-12 pl-0 pr-0 pt-2\">\n      \n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n        <div class=\"content-box-white\">\n          \n          \n          <div class=\"container\">\n            \n            <div class=\"row qlc-table-header pr-4\">\n              <div class=\"col-xl-2 col-lg-2 order-lg-1 col-md-4 order-md-1 col-sm-3 order-sm-3 col-6 order-1 pl-4\">Staking<br>Type</div>\n              <div class=\"col-xl-4 col-lg-4 order-lg-2 d-lg-block col-md-9 d-md-none col-sm-12 order-sm-5 d-sm-none col-7 d-none order-6 text-truncate\">Accounts /<br>Invocation Hash</div>\n              <div class=\"col-xl-1 col-lg-1 order-lg-3 col-md-2 order-md-2 col-sm-3 order-sm-3 col-4 pr-sm-0 order-3 text-left text-sm-right pl-4\">Staking<br>Amount</div>\n              <div class=\"col-xl-1 col-lg-1 order-lg-4 col-md-2 order-md-3 col-sm-3 order-sm-3 col-4 pr-sm-0 order-4 text-right\">Earnings<br>(VOTING)</div>\n              <div class=\"col-xl-1 col-lg-1 order-lg-5 col-md-2 order-md-4 col-sm-3 order-sm-3 col-4 pr-sm-0 order-5 text-right pr-0\">Earnings<br>(MINING)</div>\n              <div class=\"col-xl-1 col-lg-1 order-lg-5 col-md-2 order-md-4 d-md-block col-sm-3 order-sm-3 d-sm-none col-6 pr-sm-0 order-2 text-right pr-0\">Time of Withdraw</div>\n              <div class=\"col-xl-2 col-lg-2 order-lg-6 d-lg-block col-md-3 order-md-5 d-md-none col-sm-6 order-sm-4 d-sm-none col-12 d-none order-7 pr-sm-0 pr-0 text-right\">Revoke<br>Staking</div>                \n            </div>\n\n            <div class=\"row qlc-table-row qlc-table-row-twolines closed pr-4\" *ngFor=\"let pledge of pledgesCompleted;let i = index\">\n              <div class=\"col-xl-2 col-lg-2 order-lg-1 col-md-4 order-md-1 col-sm-3 order-sm-1 col-8 order-1 pl-4 pb-0 pr-0\">\n                <span class=\"qlc-icon icon-Staking d-sm-none d-md-inline-block\" title=\"Staking\"></span>\n                <span class=\"d-inline-block\">\n                  <span class=\"text-bold-grey\" *ngIf=\"pledge.pType == 'vote'\">Voting/<br>Mining Node</span>\n                  <span class=\"text-bold-grey\" *ngIf=\"pledge.pType == 'network'\">Confidant</span>\n                  <span class=\"text-bold-grey\" *ngIf=\"pledge.pType == 'mintage'\">Mintage</span>\n                  \n                </span>\n              </div>\n              <div class=\"col-xl-4 col-lg-4 order-lg-2 pl-lg-2 col-md-8 order-md-6 pl-md-4 col-sm-8 order-sm-5 pl-sm-4 col-12 pl-4 order-6 pb-0 text-truncate\">\n                <span class=\"text-color-lightgrey\" >From: </span> \n                <a href=\"{{ neoService.getExplorer() }}/address/{{pledge.multiSigAddress}}\" target=\"_blank\" >{{ pledge.multiSigAddress }}</a><br>\n                <span class=\"text-color-lightgrey\" >To: </span> \n                <a routerLink=\"/wallets/qlc/{{ pledge.beneficial }}\" >{{ pledge.beneficial | squeeze : '20,20' }}</a><br>\n                <!-- <a (click)=\"neoService.contractGetLockInfo(pledge.nep5TxId)\">Check</a>-->\n                <a href=\"{{ neoService.getExplorer() }}/transaction/{{pledge.nep5TxId}}\" target=\"_blank\">\n                  <span class=\"text-tiny\">{{ pledge.nep5TxId | squeeze : '25,25' }}</span> \n                </a>\n              </div>\n              <div class=\"col-xl-1 col-lg-1 order-lg-3 col-md-2 order-md-2 col-sm-3 order-sm-2 col-4 order-3 pb-0 pr-sm-0 pl-4 pr-0 text-sm-right text-left text-blue\">\n                <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">{{ pledge.amount | qlc:8 | currency:'':'':'1.2-8' }}</span>\n                <br><span class=\"text-color-grey\">QLC</span>\n              </div>\n              <div class=\"col-xl-1 col-lg-1 order-lg-4 col-md-2 order-md-3 col-sm-3 order-sm-3 col-4 order-4 pb-0 pr-sm-0 pr-0 text-right text-color-green\">\n                <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">{{ pledge.earnings | qlc:8 | currency:'':'':'1.2-8' }}</span>\n                <br><span class=\"text-color-grey\">QGAS</span>\n              </div>\n              <div class=\"col-xl-1 col-lg-1 order-lg-5 col-md-2 order-md-4 col-sm-3 order-sm-4 col-4 order-5 pb-0 pr-sm-0 pr-0 text-right text-color-green\">\n                <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">/</span>\n                <br><span class=\"text-color-grey\">QGAS</span>\n              </div>\n              <div class=\"col-xl-1 col-lg-1 order-lg-5 col-md-2 order-md-5 col-sm-4 order-sm-6 col-4 order-2 pb-0 pr-sm-0 pr-0 text-right\">\n                <span>\n                  {{ pledge.lastModifyTime * 1000 | date: 'dd/MM/yy' }}<br>{{ pledge.lastModifyTime * 1000 | date: 'H:mm:ss' }}<br>\n                  <span class=\"text-color-lightgrey\" >-</span>\n                </span>\n              </div>\n              <div class=\"col-xl-2 col-lg-2 order-lg-6 col-md-4 order-md-7 offset-md-0 col-sm-4 offset-sm-8 order-sm-7 col-12 order-7 pb-0 pr-sm-0 pr-0 text-right\">\n                <span>\n                    <div style=\"display:inline-block;vertical-align: top;padding:0px;padding-right:8px;\"><img src=\"assets/img/qlc-icon-staking-success-green.svg\" style=\"height:20px;margin-top:-2px;margin-right:0px;\"></div>\n                    <div style=\"display:inline-block;vertical-align:top;padding:0px;font-family: 'Lato', Gotham, 'Helvetica Neue', Helvetica, Arial, 'sans-serif'; font-size: 12px; text-transform: uppercase; font-weight: 700;\">WITHDRAW<br>COMPLETE</div>\n                </span>\n              </div>\n            \n             </div>\n    \n\n        </div>\n        \n        \n      </div>\n    </div>\n    \n  </div>\n  \n</div>\n</div>\n\n\n<!-- REVOKE STEP 1 -->\n\n<div class=\"stake-screen-1\" *ngIf=\"step == 1\">\n\n\n\n  <!-- LOADING -->\n  <div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2\">\n        <div class=\"container\">\n            <div class=\"row\">\n              <!-- TITLE -->\n              <div class=\"col-md-9 col-12 mt-2 pl-md-2 pr-md-2\">\n                <div class=\"content-title\">\n                  <h1>Revoking in progress</h1>\n                </div>\n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n  </div>\n  \n\n  <div class=\"container accounts\">\n    <div class=\"row\">\n\n      <!-- INFO -->\n      <div class=\"col-12 pb-3\">\n          <div class=\"container pl-0 pr-0\">\n            <div class=\"row pl-0 pr-0\">\n\n\n            <div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n              <div class=\"content-box-white h-auto mt-2 pl-5 pr-5 text-center pt-5 pb-5\">\n\n                <h3>Please wait</h3>\n                <h5 class=\"pt-3\">The revoking process can take up to a couple of minutes.</h5>\n\n                <div class=\"container\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6 offset-md-3 mt-5 mb-5\">\n                      \n                      <div id=\"noTrespassingOuterBarG\">\n                        <div id=\"noTrespassingFrontBarG\" class=\"noTrespassingAnimationG\">\n                          <div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div>\n                          <div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div>\n                        </div>\n                      </div>\n\n                    </div>\n                  </div>\n                </div>\n\n                <p style=\"color:#c10f0f;\" class=\"pb-3\"><strong>Important:</strong> Don't leave or close this page!</p>\n\n                <p class=\"pt-0 pb-0\" *ngFor=\"let step of revokeSteps\"><span style=\"display:block;width:100%;margin-bottom:10px;margin-top:-5px;\" *ngIf=\"step.checkimg == 1\"><img src=\"assets/img/qlc-icon-staking-success-green.svg\" style=\"width:20px;height:auto;\"></span>{{ step.msg }}</p>\n\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n      \n\n\n    </div>\n  </div>\t\t\n\n\n\n</div>\n\n<!-- REVOKE STEP 2 -->\n<div class=\"revoke-screen-2\" *ngIf=\"step == 2\">\n\n  <!-- COMPLETE -->\n  <div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2\">\n        <div class=\"container\">\n            <div class=\"row\">\n              <!-- TITLE -->\n              <div class=\"col-md-9 col-12 mt-2 pl-md-2 pr-md-2\">\n                <div class=\"content-title\">\n                  <h1>Revoking complete</h1>\n                </div>\n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n  </div>\n\n\n  <div class=\"container accounts\">\n    <div class=\"row\">\n\n      <!-- INFO -->\n      <div class=\"col-12 pb-3\">\n          <div class=\"container pl-0 pr-0\">\n            <div class=\"row pl-0 pr-0\">\n\n\n            <div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n              <div class=\"content-box-white h-auto mt-2 pl-5 pr-5 text-center pt-5 pb-5\">\n\n                <h3>Congratulations!</h3>\n                <h5 class=\"pt-3\">The revoking of your staking was successful.</h5>\n\n                <div class=\"container\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6 offset-md-3 mt-5 mb-4\">\n\n                      <img src=\"assets/img/qlc-icon-staking-success-green.svg\" style=\"height:128px;width:128px;\">\n\n                    </div>\n                  </div>\n                </div>\n\n                <p class=\"pt-3 mb-5\"><strong>QGAS will soon be rewarded to your wallet:</strong><br><a href=\"#\">{{ unlockPledge.beneficial }}</a></p>\n\n                <div class=\"container\">\n                    <div class=\"row\">\n                      <div class=\"col-md-4 offset-md-4 mb-4\">\n\n                        <button (click)=\"backToOverview()\" type=\"submit\" class=\"btn btn-primary\" style=\"min-width:100%;\">\n                          BACK TO MY STAKINGS\n                        </button>\n\n                      </div>\n                    </div>\n                  </div>\n\n                \n\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n\n    </div>\n  </div>\t\t\n\n\n</div>\n\n\n<!-- CONTINUE INVOKE -->\n<div class=\"stake-screen-1\"  *ngIf='step == 3'>\n  <!-- LOADING -->\n  <div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2\">\n        <div class=\"container\">\n            <div class=\"row\">\n              <!-- TITLE -->\n              <div class=\"col-md-9 col-12 mt-2 pl-md-2 pr-md-2\">\n                <div class=\"content-title\">\n                  <h1>Invoking in progress</h1>\n                </div>\n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n  </div>\n  \n\n  <div class=\"container accounts\">\n    <div class=\"row\">\n\n      <!-- INFO -->\n      <div class=\"col-12 pb-3\">\n          <div class=\"container pl-0 pr-0\">\n            <div class=\"row pl-0 pr-0\">\n\n\n            <div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n              <div class=\"content-box-white h-auto mt-2 pl-5 pr-5 text-center pt-5 pb-5\">\n\n                <h3>Please wait</h3>\n                <h5 class=\"pt-3\">The invoking process can take up to a couple of minutes.</h5>\n\n                <div class=\"container\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6 offset-md-3 mt-5 mb-5\">\n\n                      <div id=\"noTrespassingOuterBarG\">\n                        <div id=\"noTrespassingFrontBarG\" class=\"noTrespassingAnimationG\">\n                          <div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div>\n                          <div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div>\n                        </div>\n                      </div>\n\n                    </div>\n                  </div>\n                </div>\n\n                <p style=\"color:#c10f0f;\" class=\"pb-3\"><strong>Important:</strong> Don't leave or close this page!</p>\n\n                <p class=\"pt-0 pb-0\" *ngFor=\"let step of invokeSteps\"><span style=\"display:block;width:100%;margin-bottom:10px;margin-top:-5px;\" *ngIf=\"step.checkimg == 1\"><img src=\"assets/img/qlc-icon-staking-success-green.svg\" style=\"width:20px;height:auto;\"></span>{{ step.msg }}<a routerLink=\"{{ step.link }}\" *ngIf=\"step.link\"> {{ step.linkText }}</a></p>\n\n\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n      \n\n\n    </div>\n  </div>\t\t\n\n\n\n</div>\n\n\n\n\n<!-- FINISH INVOKE -->\n<div class=\"stake-screen-1\" *ngIf=\"step == 4\">\n\n\n\n  <!-- COMPLETE -->\n  <div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2\">\n        <div class=\"container\">\n            <div class=\"row\">\n              <!-- TITLE -->\n              <div class=\"col-md-9 col-12 mt-2 pl-md-2 pr-md-2\">\n                <div class=\"content-title\">\n                  <h1>Invoking complete</h1>\n                </div>\n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n  </div>\n  \n\n  <div class=\"container accounts\">\n    <div class=\"row\">\n\n      <!-- INFO -->\n      <div class=\"col-12 pb-3\">\n          <div class=\"container pl-0 pr-0\">\n            <div class=\"row pl-0 pr-0\">\n\n\n            <div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n              <div class=\"content-box-white h-auto mt-2 pl-5 pr-5 text-center pt-5 pb-5\">\n\n                <h3>Woohoo!</h3>\n                <h5 class=\"pt-3\">The invoking of your staking was successful.</h5>\n\n                <div class=\"container\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6 offset-md-3 mt-5 mb-5\">\n\n                      <img src=\"assets/img/qlc-icon-staking-success-green.svg\" style=\"height:128px;width:128px;\">\n\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"container\">\n                    <div class=\"row\">\n                      <div class=\"col-md-4 offset-md-4 mb-4\">\n  \n                        <button type=\"submit\" (click)=\"backToOverview()\" class=\"btn btn-primary\" style=\"min-width:100%;\" >\n                          BACK TO MY STAKINGS\n                        </button>\n\n                      </div>\n                    </div>\n                  </div>\n\n                \n\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n      \n\n\n    </div>\n  </div>\t\t\n\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport { NeoWalletService } from 'src/app/services/neo-wallet.service';\nimport { ApiNEP5Service } from 'src/app/services/api-nep5.service';\nimport { ApiService } from 'src/app/services/api.service';\nimport { UtilService } from 'src/app/services/util.service';\nimport { WorkPoolService } from 'src/app/services/work-pool.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { timer } from 'rxjs';\nimport { QLCBlockService } from 'src/app/services/qlc-block.service';\n\nconst nacl = window['nacl'];\n\n@Component({\n  selector: 'app-mystakings',\n  templateUrl: './mystakings.component.html',\n  styleUrls: ['./mystakings.component.scss']\n})\n\nexport class MystakingsComponent implements OnInit {\n  zeroHash = '0000000000000000000000000000000000000000000000000000000000000000';\n\n  accounts = this.walletService.wallet.accounts;\n  pledges = [];\n  pledgesCompleted = [];\n  rewards = [];\n  dateNow;\n  step = 0;\n  unlockPledge;\n\n  myStakingVolume = 0;\n  myStakingEarnings = 0;\n\n\n  totalPledgeAmount = 0;\n\n  revokeSteps = [];\n  invokeSteps = [];\n\n  constructor(\n    private walletService: WalletService,\n    private neoService: NeoWalletService,\n    private nep5api: ApiNEP5Service,\n    private api: ApiService,\n\t\tprivate util: UtilService,\n\t\tprivate workPool: WorkPoolService,\n\t\tprivate notifications: NotificationService,\n\t\tprivate trans: TranslateService,\n    private blockService: QLCBlockService\n  ) {\n\n  }\n\n  msg3 = '';\n\n  async ngOnInit() {\n    this.getStakings();\n    this.loadLang();\n  }\n\n  \n  loadLang() {\n\t\tthis.trans.get('SERVICE_WARNINGS_QLC_SERVICE.msg3').subscribe((res: string) => {\n\t\t\tthis.msg3 = res;\n\t\t});\n\t}\n\n  async getStakings() {\n    this.pledges = [];\n    this.pledgesCompleted = [];\n    this.rewards = [];\n    this.myStakingEarnings = 0;\n    this.myStakingVolume = 0;\n    const totalPledgeAmount = await this.api.getTotalPledgeAmount();\n    this.totalPledgeAmount = totalPledgeAmount.result;\n    this.dateNow = Date.now();\n    this.accounts.forEach(async (account) => {\n      //console.log(account);\n      const pledges = await this.nep5api.pledgeInfoByBeneficial(account.id);\n      if (pledges.result) {\n        for(let element of pledges.result) {\n          if (element.nep5TxId) {\n            const rewardsResult = await this.api.getTotalRewards(element.nep5TxId);\n            element.earnings = rewardsResult.result;\n            this.myStakingEarnings += element.earnings;\n            //const lockInfo = await this.nep5api.getLockInfo(element.nep5TxId);\n            //console.log(lockInfo.result);\n            //console.log(lockInfo.result.unLockTimestamp*1000);\n            if (element.state == 'PledgeDone') {\n              this.myStakingVolume += Number(element.amount);\n            }\n            \n            if (element.state == 'WithdrawDone') {\n              this.pledgesCompleted.push(element);\n            } else {\n              this.pledges.push(element);\n            }\n          }\n        }\n      }\n\n      const rewards = await this.api.getConfidantRewards(account.id);\n      //console.log(rewards);\n      const rewardsValues = Object.values(rewards.result);\n\n      let totalAccountReward = 0;\n      for(let reward of rewardsValues) {\n        //console.log(reward);\n        totalAccountReward += Number(reward);\n        /*for(let subreward of Object.values(reward)) {\n        this.rewards.push(subreward);\n        }*/\n      }\n      if (totalAccountReward > 0) {\n        const rewardLine = {\n          amount: totalAccountReward,\n          account: account.id\n        }\n        this.rewards.push(rewardLine);\n      }\n\n    });\n\n  }\n\n  async continueRevoke(index) {\n    this.revokeSteps = [];\n    const pledge = this.pledges[index];\n    console.log(pledge);\n    const walletAccount = await this.walletService.getWalletAccount(pledge.beneficial);\n\t\tif (this.walletService.walletIsLocked()) {\n\t\t\treturn this.notifications.sendWarning('ERROR wallet locked');\n    }\n    this.revokeSteps.push({ msg: 'Continuing revoke.'});\n    this.revoke(index);\n  }\n\n  async continueInvoke(index) {\n    this.invokeSteps = [];\n    const pledge = this.pledges[index];\n    const walletAccount = await this.walletService.getWalletAccount(pledge.beneficial);\n\t\tif (this.walletService.walletIsLocked()) {\n\t\t\treturn this.notifications.sendWarning('ERROR wallet locked');\n    }\n    this.step = 3;\n    this.invokeSteps.push({ msg: 'Continuing invoke.'});\n    this.invokeSteps.push({ msg: 'Checking TXID on NEO network.', checkimg: 1});\n\n    this.confirmInvokeWaitForTXIDConfirm(pledge,walletAccount);\n\n  }\n\n  async confirmInvokeWaitForTXIDConfirm(pledge,walletAccount) {\n    const txid = pledge.nep5TxId;\n    const transaction = await this.neoService.getTransaction(txid);\n    console.log('txid is ');\n    console.log(txid);\n\n    const pType = pledge.pType;\n    \n    if (transaction.txid) {\n      const waitTimer = timer(20000).subscribe( async (data) => {\n      console.log(transaction);\n      console.log('txid confirmed');\n      this.invokeSteps.push({ msg: 'TXID confirmed. Preparing QLC Chain pledge.', checkimg: 1});\n\n      const pledgeResult = (pType == 'mintage') \n                            ? await this.nep5api.mintagePledge(txid)\n                            : await this.nep5api.benefitPledge(txid)\n                            ;\n      if (!pledgeResult.result) {\n        this.invokeSteps.push({ msg: 'Pledge ERROR.', link: '/staking/qlc/create', linkText: 'Please use RECOVER to recover a failed TX.'});\n        return;\n      }\n      const preparedPledge = pledgeResult.result;\n      \n      \n      this.invokeSteps.push({ msg: 'Pledge prepared. Processing ...', checkimg: 1});\n      const pledgetxid = await this.processInvokeBlock(preparedPledge,walletAccount.keyPair,txid);\n      \n      this.invokeSteps.push({ msg: 'Pledge succesfully processed. Txid on QLC Chain is: ' + pledgetxid.result, checkimg: 1 });\n      this.step = 4;\n      });\n    } else {\n      //console.log('error repeating');\n      // wait for neoscan to confirm transaction\n      const waitTimer = timer(5000).subscribe( (data) => {\n        this.confirmInvokeWaitForTXIDConfirm(pledge,walletAccount);\n      });\n    }\n  }\n\n  async revoke(index) {\n    this.revokeSteps = [];\n    const pledge = this.pledges[index];\n    const walletAccount = await this.walletService.getWalletAccount(pledge.beneficial);\n\t\tif (this.walletService.walletIsLocked()) {\n\t\t\treturn this.notifications.sendWarning('ERROR wallet locked');\n    }\n\n    this.step = 1;\n    this.unlockPledge = pledge;\n    \n//console.log('call contractUnlockPrepare');\n    this.revokeSteps.push({ msg: 'Preparing revoke.'});\n    const txData = await this.neoService.contractUnlockPrepare(pledge);\n    if (txData === false) {\n      this.revokeSteps.push({ msg: 'ERROR - Connected NEO wallet was not found.'});\n      this.step = 0;\n      return this.notifications.sendWarning('ERROR - Connected NEO wallet was not found.');\n    }\n    this.revokeSteps.push({ msg: 'Revoke prepared.', checkimg: 1});\n\n    //console.log(txData);\n    //console.log('call contractUnlockPrepare end');\n    //console.log('call getWithdraw');\n    \n    if (pledge.pType == 'mintage') {\n      this.revokeSteps.push({ msg: 'Calling withdraw.'});\n      const withdrawBlock = await this.getMintageWithdraw(pledge,txData);\n      this.revokeSteps.push({ msg: 'Revoke processed.', checkimg: 1});\n      this.step = 2;\n      return;\n    }\n    this.revokeSteps.push({ msg: 'Preparing revoke block.', checkimg: 1});\n\n    const withdrawBlock = await this.getWithdraw(pledge);\n    //console.log(withdrawBlock);\n    //console.log('call getWithdraw end');\n    this.revokeSteps.push({ msg: 'Revoke block prepared. Processing ...', checkimg: 1});\n\n    const txid = await this.processBlock(withdrawBlock.result,walletAccount.keyPair,pledge.nep5TxId,txData);\n    this.revokeSteps.push({ msg: 'Revoke processed. Waiting for TXID confirmation.', checkimg: 1});\n\n    this.confirmRevokeWaitForTXIDConfirm(txData.unlockTxId);\n  }\n\n  async confirmRevokeWaitForTXIDConfirm(txid) {\n\n    const transaction = await this.neoService.getTransaction(txid);\n    console.log('txid is ');\n    console.log(txid);\n    \n    if (transaction.txid) {\n      this.revokeSteps.push({ msg: 'TXID confirmed.', checkimg: 1});\n      this.step = 2;\n    } else {\n      //console.log('error repeating');\n      // wait for neoscan to confirm transaction\n      const waitTimer = timer(5000).subscribe( (data) => {\n        this.confirmRevokeWaitForTXIDConfirm(txid);\n      });\n    }\n  }\n  \n\n  backToOverview() {\n    this.step = 0;\n    this.getStakings();\n  }\n\n  async getMintageWithdraw(pledge, unlockTxParams) {\n    const tokens = await this.api.tokens();\n    let tokenId = '';\n\n\t\tif (!tokens.error) {\n      const findToken = tokens.result.find((token) => token.NEP5TxId == pledge.nep5TxId)\n\t\t\ttokenId = findToken.tokenId;\n    }\n    /*if (tokenId == '') {\n      return false;\n    }*/\n    return await this.nep5api.mintageWithdraw(tokenId, pledge.nep5TxId, unlockTxParams);\n  }\n   \n  async getWithdraw(pledge) {\n    const request1 = {\n      beneficial: pledge.beneficial,\n      amount: pledge.amount,\n      pType: pledge.pType\n    }\n    return await this.nep5api.benefitWithdraw(request1,pledge.nep5TxId);\n  }\n\n  async processBlock(block, keyPair, txid, txData) {\n    const povFittest = await this.api.getFittestHeader();\n    if (povFittest.error || !povFittest.result) {\n      console.log('ERROR - no fittest header');\n      return;\n    }\n    block.poVHeight = povFittest.result.height;\n\t\tconst blockHash = await this.api.blockHash(block);\n\t\tconst signed = nacl.sign.detached(this.util.hex.toUint8(blockHash.result), keyPair.secretKey);\n\t\tconst signature = this.util.hex.fromUint8(signed);\n\n\t\tblock.signature = signature;\n\t\tlet generateWorkFor = block.previous;\n\t\tif (block.previous === this.zeroHash) {\n\t\t\tconst publicKey = await this.api.accountPublicKey(block.address);\n\t\t\tgenerateWorkFor = publicKey.result;\n\t\t}\n\n\t\tif (!this.workPool.workExists(generateWorkFor)) {\n\t\t\tthis.notifications.sendInfo(this.msg3);\n\t\t}\n\t\t//console.log('generating work');\n\t\tconst work = await this.workPool.getWork(generateWorkFor);\n\t\t//console.log('work >>> ' + work);\n\t\tblock.work = work;\n\n    const processResponse = await this.nep5api.process(block,txid,txData);\n\n\t\tif (processResponse && processResponse.result) {\n\t\t\tthis.workPool.addWorkToCache(processResponse.result); // Add new hash into the work pool\n\t\t\tthis.workPool.removeFromCache(generateWorkFor);\n\t\t\treturn processResponse;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n  }\n  \n  async processInvokeBlock(block, keyPair, txid) {\n    const povFittest = await this.api.getFittestHeader();\n    if (povFittest.error || !povFittest.result) {\n      console.log('ERROR - no fittest header');\n      return;\n    }\n    block.poVHeight = povFittest.result.height;\n\t\tconst blockHash = await this.api.blockHash(block);\n\t\tconst signed = nacl.sign.detached(this.util.hex.toUint8(blockHash.result), keyPair.secretKey);\n\t\tconst signature = this.util.hex.fromUint8(signed);\n\n\t\tblock.signature = signature;\n\t\tlet generateWorkFor = block.previous;\n\t\tif (block.previous === this.zeroHash) {\n\t\t\tconst publicKey = await this.api.accountPublicKey(block.address);\n\t\t\tgenerateWorkFor = publicKey.result;\n\t\t}\n\n\t\tif (!this.workPool.workExists(generateWorkFor)) {\n\t\t\tthis.notifications.sendInfo(this.msg3);\n\t\t}\n\t\t//console.log('generating work');\n\t\tconst work = await this.workPool.getWork(generateWorkFor);\n\t\t//console.log('work >>> ' + work);\n    block.work = work;\n    \n    const processResponse = await this.nep5api.process(block,txid);\n\n\t\tif (processResponse && processResponse.result) {\n\t\t\tthis.workPool.addWorkToCache(processResponse.result); // Add new hash into the work pool\n\t\t\tthis.workPool.removeFromCache(generateWorkFor);\n\t\t\treturn processResponse;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  isCollapsed = true;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-user-submenu></app-user-submenu>\n\n<!-- LATEST TRANSACTIONS -->\n<div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n    <div class=\"row\">\n        <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n            <!-- LATEST TRANSACTIONS -->\n            <div class=\"container\">\n                    <div class=\"row\">\n                        <!-- TITLE -->\n                        <div class=\"col-md-6 col-12 mt-2 pl-2 pr-2\">\n                            <div class=\"content-title\">\n                                <h1 class=\"neo\">NEO Wallet Details - {{ neoService.getNetwork() }}</h1>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3 col-12 pl-md-2 pr-md-2 pl-2 pr-2\">\n                            <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 neo-background-light\" (click)=\"loadWallet()\">\n                                Refresh\n                            </button>\n                        </div>\n                        <div class=\"col-md-3 col-12 pl-2 pr-2 pt-md-0 pt-2\">\n                            <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 neo-background-light\" routerLink=\"/wallets\">\n                                Back to my Wallets\n                            </button>\n                        </div>\n                    </div>\n                </div>\n        </div>\n    </div>\n</div>\n\n\n<div class=\"container pb-2\">\n    <div class=\"row pl-md-0 pr-md-0 pl-2 pr-2\">\n        <!-- LEFT -->\n        <div class=\"col-lg-9 col-md-12 col-sm-12 order-lg-1 order-2 pl-0 pr-0 mb-3\">\n            \n            <div class=\"container\">\n                \n                <div class=\"row\">\n                    <div class=\"col-12 pb-2 pl-2 pr-2\">\n                        <div class=\"content-box-blue h-auto pb-3 neo-background-light\">\n                            <div class=\"container\">\n                                <div class=\"row qlc-table-header-blue neo-background-light\">\n                                    <div class=\"col-12 white\">Address</div>\n                                </div>\n                                <div class=\"row qlc-table-row-blue row-text-mid mt-3 neo-background-light\">\n                                    <div class=\"col-12 text-break pr-3\"><span *ngIf=\"addressBookModel != ''\" class=\"force-wrap\">{{ addressBookModel }} - </span>{{ walletId }} <a ngxClipboard [cbContent]=\"walletId\"><img src=\"assets/img/icons/copy.svg\" class=\"img-copy\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Copy to clipboard\"></a></div>\n                                    <div class=\"col-12 px-0\" *ngIf=\"showEditName\">\n                                        <div class=\"editNameButtons\">\n                                            <div class=\"row pl-3 pr-3\">\n                                                <div class=\"col-md-12 col-12 py-3\">\n                                                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"addressBookModel\" />\n                                                </div>\n                                                <div class=\"col-md-4 col-12 \">\n                                                    <button class=\"btn btn-primary neo-background\" type=\"button\" (click)=\"editNameCancel()\">\n                                                        {{ 'CANCEL' | translate }}\n                                                    </button>\n                                                </div>\n                                                <div class=\"col-md-4 col-12 py-3 py-md-0 \">\n                                                    <button class=\"btn btn-primary neo-background\" type=\"button\" (click)=\"editNameSave()\">\n                                                        {{ 'OK' | translate }}\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                \n                <div class=\"row\">\n                    <!-- BALANCE QLC -->\n                    <div class=\"col-md-4 col-sm-6 col-12 pl-2 pr-2\">\n                        <div class=\"content-box-white h-auto mt-2 pb-2\">\n                            <div class=\"container\">\n                                <div class=\"row qlc-table-header-white\">\n                                    <div class=\"col-12\">NEO Balance</div>\n                                </div>\n                            </div>\n                            <div class=\"container\">\n                                <div class=\"row\">\n                                    <div class=\"col-3 mt-3\">\n                                        <img src=\"assets/img/token-neo.png\" class=\"w-100 icon-token\">\n                                    </div>\n                                    <div class=\"col-9 pr-0 pl-0\">\n                                        <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                                            <div class=\"col-12 pb-0\" *ngIf=\"walletAccount.balances != null && walletAccount.balances[neoService.tokenList['NEO'].networks['1'].hash]\">{{ walletAccount.balances[neoService.tokenList['NEO'].networks['1'].hash].amount | currency:'':'':'1.0-0' }}</div>\n                                            <div class=\"col-12 pb-0\" *ngIf=\"walletAccount.balances == null || (walletAccount.balances != null && !walletAccount.balances[neoService.tokenList['NEO'].networks['1'].hash])\">NaN</div>\n                                        </div>\n                                        <div class=\"row qlc-table-row-white sub-page pt-0\">\n                                            <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    \n                    <!-- BALANCE QLC -->\n                    <div class=\"col-md-4 col-sm-6 col-12 pl-2 pr-2\">\n                        <div class=\"content-box-white h-auto mt-2 pb-2\">\n                            <div class=\"container\">\n                                <div class=\"row qlc-table-header-white\">\n                                    <div class=\"col-12\">QLC Balance</div>\n                                </div>\n                            </div>\n                            <div class=\"container\">\n                                <div class=\"row\">\n                                    <div class=\"col-3 mt-3\">\n                                        <img src=\"assets/img/token-qlc.png\" class=\"w-100 icon-token\">\n                                    </div>\n                                    <div class=\"col-9 pr-0 pl-0\">\n                                        <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                                            <div class=\"col-12 pb-0\" *ngIf=\"walletAccount.balances != null && walletAccount.balances[neoService.tokenList['QLC'].networks['1'].hash]\">{{ walletAccount.balances[neoService.tokenList['QLC'].networks['1'].hash].amount | currency:'':'':'1.2-8' }}</div>\n                                            <div class=\"col-12 pb-0\" *ngIf=\"walletAccount.balances == null || (walletAccount.balances != null && !walletAccount.balances[neoService.tokenList['QLC'].networks['1'].hash])\">NaN</div>\n                                        </div>\n                                        <div class=\"row qlc-table-row-white sub-page pt-0\">\n                                            <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>     \n                    \n                    <!-- BALANCE QGAS -->\n                    <div class=\"col-md-4 col-sm-6 col-12 pl-2 pr-2\">\n                        <div class=\"content-box-white h-auto mt-2 pb-2\">\n                            <div class=\"container\">\n                                <div class=\"row qlc-table-header-white\">\n                                    <div class=\"col-12\">GAS Balance</div>\n                                </div>\n                            </div>\n                            <div class=\"container\">\n                                <div class=\"row\">\n                                    <div class=\"col-3 mt-3\">\n                                        <img src=\"assets/img/token-gas.png\" class=\"w-100 icon-token\">\n                                    </div>\n                                    <div class=\"col-9 pr-0 pl-0\">\n                                        <div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n                                            <div class=\"col-12 pb-0\" *ngIf=\"walletAccount.balances != null && walletAccount.balances[neoService.tokenList['GAS'].networks['1'].hash]\">{{ walletAccount.balances[neoService.tokenList['GAS'].networks['1'].hash].amount | currency:'':'':'1.2-8' }}</div>\n                                            <div class=\"col-12 pb-0\" *ngIf=\"walletAccount.balances == null || (walletAccount.balances != null && !walletAccount.balances[neoService.tokenList['GAS'].networks['1'].hash])\">NaN</div>\n                                        </div>\n                                        <div class=\"row qlc-table-row-white sub-page pt-0\">\n                                            <div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"container mt-3\">\n                            <div class=\"row\">\n                                <div class=\"col-12 pl-0 pr-0\">\n                                    <button (click)=\"claim()\" type=\"submit\" class=\"btn btn-primary btn-green btn-icon-qlc w-100 pl-2 pr-0 neo-background-light\">CLAIM GAS <span class=\"superlight\">({{ claimableGas }})</span></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>  \n                </div>\n            </div>\n            \n            \n        </div>\n        \n        <!-- RIGHT -->\n        <div class=\"col-lg-3 col-md-12 col-sm-12 order-lg-2 order-1 pl-0 pr-0 mb-xs-3 mb-3\">\n            \n            <div class=\"col-12 pl-2 pr-2\">\n                <div class=\"content-box-darkblue h-100 pb-4 pr-0 neo-background\">\n                    \n                    <div class=\"container\">\n                        <div class=\"row qlc-table-header-blue neo-background\">\n                            <div class=\"col-12 white\">Account Actions</div>\n                        </div>\n                        <div class=\"row pt-3 pr-0\">\n                            <div class=\"col-12 pr-0\">\n                                <a routerLink=\"/wallets/neo/send/{{ walletId }}\" class=\"menu-myaccount menu-icon-send pr-0\">Send</a>\n                                <a (click)=\"openModal(qrCode)\" class=\"menu-myaccount menu-icon-qrcode pr-0\">Show QR Code</a>\n                                <a (click)=\"editName()\" class=\"menu-myaccount menu-icon-rename pr-0\">Rename Account</a>\n                                <a href=\"{{ neoService.getExplorer() }}/address/{{ walletId }}\" class=\"menu-myaccount menu-icon-details pr-0\" target=\"_blank\">Account Details</a>\n                                <a (click)=\"deleteWallet()\" class=\"menu-myaccount menu-icon-delete pr-0\" target=\"_blank\">Delete wallet</a>\n                            </div>\n                        </div>\n                        \n                    </div>\n                    \n                </div>\n            </div>\n            <div class=\"col-12 pl-2 pr-2 mt-2\">\n                <div class=\"content-box-darkblue pb-2 pr-0 neo-background\">\n                    \n                    <div class=\"container\">\n                        \n                        <div class=\"row pt-3 pr-0\">\n                            <div class=\"col-12 pr-0\">\n                                <a (click)=\"recoverPrivateKey(recover)\" class=\"menu-myaccount menu-icon-recoverkey pr-0\" target=\"_blank\">{{ neoPrivateCodeButton }}</a>\n                                <a routerLink=\"/wallets/neo/settings\" class=\"menu-myaccount menu-icon-details pr-0\">Neo Node Settings</a>\n                            </div>\n                        </div>\n                        \n                    </div>\n                    \n                </div>\n            </div>\n            \n        </div>\n        \n    </div>\n</div>\n\n\n<!-- LATEST SWAP TRANSACTIONS -->\n<div class=\"container mt-0 mb-3\">\n  <div class=\"row\">\n    \n    <div class=\"col-12 pl-0 pr-0\">\n      \n      <!-- TITLE -->\n      <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>Latest Swap Transactions</h1>\n        </div>\n      </div>\n\n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n        <div class=\"content-box-white\">\n\n\n          <div class=\"container\">\n\n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-2 col-lg-3 pr-lg-4 col-md-3 col-4 text-left pr-sm-4 pr-md-0 pr-lg-0 pr-4\">TYPE</div>\n              <div class=\"col-xl-1 d-none d-xl-block text-color-lightgrey text-left text-tiny\">STATUS</div>\n              <div class=\"col-xl-2 col-lg-6 pr-lg-4 col-md-4 col-5 text-left pr-sm-4 pr-md-0 pr-lg-0 pr-4\">SENDER</div>\n              <div class=\"col-xl-2 d-none d-xl-block text-left pr-sm-4 pr-md-0 pr-lg-0 pr-4\">RECIPIENT</div>\n              <div class=\"col-xl-2 d-none d-xl-block text-left pr-sm-4 pr-md-0 pr-lg-0 pr-4\">SWAPID</div>\n              <div class=\"col-xl-1 col-lg-1 col-md-2 col-3 text-color-lightgrey text-right text-tiny\">AMOUNT</div>\n              <div class=\"col-xl-2 col-lg-2 pr-lg-4 col-md-3 d-none d-md-block text-right pr-sm-4 pr-4\">TIME</div>\n            </div>\n\n            <div class=\"row qlc-table-row neo-table-row closed row-anim-in\" *ngFor=\"let history of swapHistory\">\n              <div class=\"col-xl-2 col-lg-3 pr-lg-4 col-md-3 col-4 text-left text-color-lightgrey text-tiny\">\n                <span>\n                    <span *ngIf=\"(history.state ==2)\" class=\"qlc-icon-swap-red d-none d-md-inline-block\" title=\"{{history.stateStr}}\"></span>\n                    <span *ngIf=\"(history.state ==1 || history.state ==3)\" class=\"qlc-icon-swap-green d-none d-md-inline-block\" title=\"{{history.stateStr}}\"></span>\n                    <span *ngIf=\"(history.state ==0)\" class=\"qlc-icon-swap-blue d-none d-md-inline-block\" title=\"{{history.stateStr}}\"></span>\n                    <span *ngIf=\"(history.state ==0 || history.state ==1)\"><span class=\"text-color-lightgrey\">Swap</span>  <span class=\"text-color-grey\"> NEP5</span> <span class=\"text-color-lightgrey\"> to </span> <span class=\"text-color-grey\">ERC20</span></span>\n                    <span *ngIf=\"(history.state ==2 || history.state ==3 || history.state ==4)\"><span class=\"text-color-lightgrey\">Swap</span>  <span class=\"text-color-grey\"> ERC20</span> <span class=\"text-color-lightgrey\"> to </span> <span class=\"text-color-grey\">NEP5</span></span>\n                </span>\n                <span class=\"d-xl-none\">\n                  <br>\n                  <br>\n                  Status: \n                  <span *ngIf=\"(history.state ==1 || history.state ==3)\" class=\"text-color-green\">Completed</span>\n                  <span *ngIf=\"(history.state ==0 || history.state ==2)\" class=\"text-blue\">Pending</span>\n                  <span *ngIf=\"(history.state ==4)\" class=\"text-color-red\">Failed</span>\n                </span>\n              </div>\n              <div class=\"col-xl-1 d-none d-xl-block text-color-lightgrey text-left text-tiny\">\n                <span>\n                  <span *ngIf=\"(history.state ==1 || history.state ==3)\" class=\"text-color-green\">Completed</span>\n                  <span *ngIf=\"(history.state ==0 || history.state ==2)\" class=\"text-blue\">Pending</span>\n                  <span *ngIf=\"(history.state ==4)\" class=\"text-color-red\">Failed</span>\n                </span>\n              </div>\n              <div class=\"col-xl-2 col-lg-6 pr-lg-4 col-md-4 col-5 text-left text-color-lightgrey text-tiny\">\n                <span class=\"d-xl-none\">Sender: </span>\n                <a *ngIf=\"(history.state== 0 || history.state ==1)\" href=\"{{ neotubeSite }}address/{{history.neoUserAddr}}/page/1\" target=\"_blank\" >{{history.neoUserAddr | squeeze : '10,9'}}</a>\n                <a *ngIf=\"(history.state== 2 || history.state ==3)\" href=\"{{ etherscan }}address/{{history.ethUserAddr}}\" target=\"_blank\" >{{history.ethUserAddr | squeeze : '10,9'}}</a>\n\n                <span class=\"d-xl-none\"><br>Recipient: </span>\n                <a class=\"d-xl-none\" *ngIf=\"(history.state== 2 || history.state ==3 || history.state ==4)\" href=\"{{ neotubeSite }}address/{{history.neoUserAddr}}/page/1\" target=\"_blank\" >{{history.neoUserAddr | squeeze : '10,9'}}</a>\n                <a class=\"d-xl-none\" *ngIf=\"(history.state== 0 || history.state ==1)\" href=\"{{ etherscan }}address/{{history.ethUserAddr}}\" target=\"_blank\" >{{history.ethUserAddr | squeeze : '10,9'}}</a>\n\n                <span class=\"d-xl-none\"><br>Swapid: </span>\n                <a class=\"d-xl-none\" *ngIf=\"(history.state== 0 || history.state ==1)\" href=\"{{ neotubeSite }}/transaction/{{history.neoTxHash}}\" target=\"_blank\" >\n                  {{history.neoTxHash | squeeze : '10,9'}}\n                </a>\n                <a class=\"d-xl-none\" *ngIf=\"(history.state== 2 || history.state ==3 || history.state ==4)\" href=\"{{ etherscan }}/tx/{{history.ethTxHash}}\" target=\"_blank\" >\n                  {{history.ethTxHash | squeeze : '10,9'}}\n                </a>\n                \n                <span class=\"d-md-none\"><br>Time:<br class=\"d-sm-none\"> {{ history.lastModifyTime | date: 'short' }}</span>\n              </div>\n              <div class=\"col-xl-2 d-none d-xl-block text-left text-color-lightgrey text-tiny\">\n                <a *ngIf=\"(history.state== 2 || history.state ==3 || history.state ==4)\" href=\"{{ neotubeSite }}address/{{history.neoUserAddr}}/page/1\" target=\"_blank\" >{{history.neoUserAddr | squeeze : '11,10'}}</a>\n                <a *ngIf=\"(history.state== 0 || history.state ==1)\" href=\"{{ etherscan }}address/{{history.ethUserAddr}}\" target=\"_blank\" >{{history.ethUserAddr | squeeze : '11,10'}}</a>\n\n              </div>\n              <div class=\"col-xl-2 d-none d-xl-block text-left text-color-lightgrey text-tiny\">\n                <a *ngIf=\"(history.state== 0 || history.state ==1)\" href=\"{{ neotubeSite }}/transaction/{{history.neoTxHash}}\" target=\"_blank\" >\n                  {{history.neoTxHash | squeeze : '11,10'}}\n                </a>\n                <a *ngIf=\"(history.state== 2 || history.state ==3 || history.state ==4)\" href=\"{{ etherscan }}/tx/{{history.ethTxHash}}\" target=\"_blank\" >\n                  {{history.ethTxHash | squeeze : '11,10'}}\n                </a>\n              </div>\n              <div class=\"col-xl-1 col-lg-1 col-md-2 col-3 text-color-lightgrey text-right text-tiny\">\n                <span [ngClass]=\"{\n                  'text-blue': (history.state ==0 || history.state ==2),\n                  'text-color-green': (history.state ==1 || history.state ==3),\n                  'text-color-red': history.state == 4\n                }\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"-\">{{ history.amount | qlc | currency:'':'':'1.2-8' }} QLC</span>\n              </div>\n              <div class=\"col-xl-2 col-lg-2 col-md-3 d-none d-md-block pr-4 text-tiny text-right\">\n                <span>{{ history.lastModifyTime | date: 'short' }}</span>\n              </div>\n              <!-- <div class=\"container transaction-details\">\n\n              </div> -->\n            </div>\n\n\n            \n          </div>\n\n        </div>\n      </div>\n\n      <!-- BUTTON -->\n      <!--\n      <div class=\"col-lg-12 mb-0 mt-2 pl-md-2 pr-md-2 text-center\" *ngIf=\"accountBlocksCount>pageSize\">\n        <a [routerLink]=\"'/transactions/1/' + accountId\" class=\"btn btn-primary btn-blue\">ALL TRANSACTIONS</a>\n      </div>\n        -->\n    </div>\n    \n  </div>\n</div>\n\n\n<!-- LATEST TRANSACTIONS -->\n<div class=\"container mt-0 mb-3\">\n    <div class=\"row\">\n      \n      <div class=\"col-12 pl-0 pr-0\">\n        \n        <!-- TITLE -->\n        <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n          <div class=\"content-title\">\n            <h1>Latest Transactions</h1>\n          </div>\n        </div>\n  \n        <!-- LIST -->\n        <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n          <div class=\"content-box-white\">\n  \n  \n            <div class=\"container\">\n  \n              <div class=\"row qlc-table-header\">\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">Type</div>\n                <div class=\"col-xl-6 col-lg-5 col-md-5 col-sm-5 col-7 text-truncate\">Address / Transaction ID</div>\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Amount</div>\n                <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 d-none d-sm-block col-6 pr-4 text-right\">Time</div>\n              </div>\n  \n              <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let history of walletHistory\">\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">\n                  <span class=\"qlc-icon icon-{{ history.type }}\" title=\"{{ history.type }}\"></span>\n                  <span class=\"d-none d-sm-none d-md-inline-block txState\">\n                    <span class=\"text-color-lightgrey\">State</span><br>\n                    <span class=\"text-bold-grey\">{{ history.type }}</span>\n                  </span>\n                </div>\n                <div class=\"col-xl-6 col-lg-5 col-md-5 col-sm-5 col-7 pb-0 text-truncate\">\n                  <span class=\"text-color-lightgrey\">{{history.type == 'Send' ? 'to' : 'from'}}: </span> \n                  <a href=\"{{ neoService.getExplorer() }}/address/{{history.account}}\" target=\"_blank\" >{{ history.account }}</a>\n                  <a href=\"{{ neoService.getExplorer() }}/transaction/{{history.txid}}\" target=\"_blank\" ><br>\n                    <span class=\"text-tiny\">{{ history.txid }}</span>\n                  </a>\n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pb-0 pr-sm-0 pr-4 text-right {{\n                  history.type == 'Send' ? 'text-color-red' : 'text-color-green'\n                }}\">\n                  <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"-\">{{history.type == 'Send' ? '-' : '+'}} {{ history.amount | currency:'':'':'1.2-8' }}</span>\n                  <br><span class=\"text-color-grey\">{{ history.tokenName }}</span>\n                </div>\n                <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 col-12 pr-4 text-right\">\n                  {{ history.time * 1000 | date: 'short' }}\n                </div>\n                <div class=\"container transaction-details\">\n  \n                </div>\n              </div>\n  \n  \n              \n            </div>\n  \n          </div>\n        </div>\n  \n        <!-- BUTTON -->\n        <!--\n        <div class=\"col-lg-12 mb-0 mt-2 pl-md-2 pr-md-2 text-center\" *ngIf=\"accountBlocksCount>pageSize\">\n          <a [routerLink]=\"'/transactions/1/' + accountId\" class=\"btn btn-primary btn-blue\">ALL TRANSACTIONS</a>\n        </div>\n          -->\n      </div>\n      \n    </div>\n  </div>\n\n\n<ng-template #qrCode>\n  <div class=\"modal-body\">\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n        <div class=\"qrcode\"><img *ngIf=\"qrCodeImage\" [src]=\"qrCodeImage\" /></div>\n    \n  </div>\n</ng-template>\n\n\n<ng-template #recover>\n    <div class=\"modal-body\">\n\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <div class=\"row text-center\">\n        <div class=\"col-12\">\n            <h1 class=\"pt-5\">Your NEO private code is</h1>\n            <p class=\"pb-5\">{{ neoPrivateCode }}</p>\n        </div>\n        </div>\n\n    </div>\n</ng-template>","import {\n  Component,\n  OnInit,\n  TemplateRef,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { ActivatedRoute, Router, ChildActivationEnd } from '@angular/router';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport { UtilService } from 'src/app/services/util.service';\nimport { NodeService } from 'src/app/services/node.service';\nimport { AppSettingsService } from 'src/app/services/app-settings.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AddressBookService } from 'src/app/services/address-book.service';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { timer, Subscription, combineLatest } from 'rxjs';\nimport { NeoWalletService } from 'src/app/services/neo-wallet.service';\nimport * as QRCode from 'qrcode';\nimport BigNumber from 'bignumber.js';\nimport { EtherWalletService } from 'src/app/services/ether-wallet.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-myneowallet',\n  templateUrl: './myneowallet.component.html',\n  styleUrls: ['./myneowallet.component.scss'],\n})\nexport class MyneowalletComponent implements OnInit {\n  neotubeSite = environment.neotubeSite[environment.neoNetwork];\n  etherscan = environment.etherscan[environment.neoNetwork];\n  wallet = this.walletService.wallet;\n  walletAccount = {\n    balances: [],\n    encryptedwif: '',\n  };\n  claimableGas = '0';\n\n  walletHistory: any[] = [];\n  swapHistory: any[] = [];\n  pageSize = 15;\n  accountBlocksCount = 0;\n  maxPageSize = 200;\n\n  reloadTimer = null;\n  routerSub = null;\n\n  addressBookEntry: any = null;\n  accountMeta: any = {};\n  walletId = '';\n\n  modalRef: BsModalRef;\n\n  qrCodeImage = null;\n\n  showEditName = false;\n  addressBookTempName = '';\n  addressBookModel = '';\n\n  subscriptions: Subscription[] = [];\n  neoPrivateCode = '';\n  neoPrivateCodeButton = 'Recover private key';\n  neoPrivateCodeRecoverStatus = 0;\n\n  isNaN = isNaN;\n\n  msg1 = '';\n  msg2 = '';\n  msg3 = '';\n  msg4 = '';\n  msg5 = '';\n  msgEdit1 = '';\n  msgEdit2 = '';\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    // private api: ApiService,\n    private notifications: NotificationService,\n    private walletService: WalletService,\n    public neoService: NeoWalletService,\n    private util: UtilService,\n    private node: NodeService,\n    public settings: AppSettingsService,\n    // private qlcBlock: QLCBlockService,\n    private trans: TranslateService,\n    private notificationService: NotificationService,\n    private addressBook: AddressBookService,\n    private modalService: BsModalService,\n    private changeDetection: ChangeDetectorRef,\n    private etherService: EtherWalletService\n  ) {}\n\n  ngOnInit() {\n    this.routerSub = this.router.events.subscribe((event) => {\n      if (event instanceof ChildActivationEnd) {\n        this.load(); // Reload the state when navigating to itself from the transactions page\n      }\n    });\n    this.load();\n\n    this.loadLang();\n  }\n\n  // tslint:disable-next-line: use-lifecycle-interface\n  ngOnDestroy() {\n    if (this.reloadTimer) {\n      this.reloadTimer.unsubscribe();\n    }\n    if (this.routerSub) {\n      this.routerSub.unsubscribe();\n    }\n  }\n\n  loadLang() {\n    this.trans.get('RECEIVE_WARNINGS.msg1').subscribe((res: string) => {\n      this.msg1 = res;\n    });\n    this.trans.get('RECEIVE_WARNINGS.msg2').subscribe((res: string) => {\n      this.msg2 = res;\n    });\n    this.trans.get('RECEIVE_WARNINGS.msg3').subscribe((res: string) => {\n      this.msg3 = res;\n    });\n    this.trans.get('RECEIVE_WARNINGS.msg4').subscribe((res: string) => {\n      this.msg4 = res;\n    });\n    this.trans.get('RECEIVE_WARNINGS.msg5').subscribe((res: string) => {\n      this.msg5 = res;\n    });\n    this.trans.get('ACCOUNT_DETAILS_WARNINGS.msg5').subscribe((res: string) => {\n      this.msgEdit1 = res;\n    });\n    this.trans.get('ACCOUNT_DETAILS_WARNINGS.msg6').subscribe((res: string) => {\n      this.msgEdit2 = res;\n    });\n  }\n\n  load() {\n    if (this.node.status === true) {\n      this.loadWallet();\n    } else {\n      this.reload();\n    }\n  }\n\n  async reload() {\n    const source = timer(200);\n    this.reloadTimer = source.subscribe(async (val) => {\n      this.load();\n    });\n  }\n\n  async loadWallet() {\n    this.walletId = this.route.snapshot.params.wallet;\n    // tslint:disable-next-line: triple-equals\n    if (this.walletId == undefined || this.walletId == '') {\n      this.walletId = this.wallet.accounts[0].accountMeta.account;\n    }\n\n    const swaptransactions: any = await this.etherService.swapInfosByAddress(\n      this.walletId,\n      1,\n      20\n    );\n    this.swapHistory = swaptransactions.data.infos;\n\n    this.walletAccount = this.wallet.neowallets.find(\n      (a) => a.id === this.walletId\n    );\n\n    this.addressBookEntry = this.addressBook.getAccountName(this.walletId);\n    this.addressBookModel = this.addressBookEntry || '';\n\n    const balance: any = await this.neoService.getNeoScanBalance(this.walletId);\n\n    for (const asset of balance) {\n      this.walletAccount.balances[asset.asset_hash] = {\n        amount: new BigNumber(asset.amount).toFixed(),\n        asset: asset.asset,\n        asset_symbol: asset.asset_symbol,\n      };\n    }\n    this.claimableGas = await this.neoService.getClaimAmount(this.walletId);\n    const transactions = await this.neoService.getLastTransactions(\n      this.walletId\n    );\n    this.walletHistory = transactions.entries;\n    const qrCode = await QRCode.toDataURL(`${this.walletId}`);\n    this.qrCodeImage = qrCode;\n  }\n\n  editName() {\n    this.showEditName = true;\n    this.addressBookTempName = this.addressBookModel;\n  }\n  editNameCancel() {\n    this.showEditName = false;\n    this.addressBookModel = this.addressBookTempName;\n    this.addressBookTempName = '';\n  }\n  async editNameSave() {\n    const addressBookName = this.addressBookModel.trim();\n    if (!addressBookName) {\n      this.addressBook.deleteAddress(this.walletId);\n      this.notificationService.sendSuccess(this.msgEdit1);\n      this.showEditName = false;\n      return;\n    }\n\n    try {\n      await this.addressBook.saveAddress(this.walletId, addressBookName);\n    } catch (err) {\n      this.notificationService.sendError(err.message);\n      return;\n    }\n\n    this.notificationService.sendSuccess(this.msgEdit2);\n    this.showEditName = false;\n  }\n\n  openModal(template: TemplateRef<any>) {\n    const _combine = combineLatest(\n      this.modalService.onShow,\n      this.modalService.onShown,\n      this.modalService.onHide,\n      this.modalService.onHidden\n    ).subscribe(() => this.changeDetection.markForCheck());\n    this.subscriptions.push(\n      this.modalService.onHide.subscribe((reason: string) => {\n        this.neoPrivateCode = '';\n        this.neoPrivateCodeRecoverStatus = 0;\n        this.neoPrivateCodeButton = 'Recover private key';\n      })\n    );\n\n    this.modalRef = this.modalService.show(template);\n  }\n\n  async claim() {\n    await this.neoService.claimGas(this.walletId);\n    this.loadWallet();\n  }\n\n  deleteWallet() {\n    const existingAccountIndex = this.wallet.neowallets.findIndex(\n      (a) => a.id === this.walletId\n    );\n    if (existingAccountIndex === -1) {\n      return;\n    }\n\n    this.wallet.neowallets.splice(existingAccountIndex, 1);\n\n    this.walletService.saveWalletExport();\n    this.router.navigate(['/wallets/']);\n  }\n\n  async recoverPrivateKey(recover) {\n    if (this.walletService.walletIsLocked()) {\n      return this.notifications.sendWarning('ERROR wallet locked');\n    }\n    if (this.neoPrivateCodeRecoverStatus == 1) {\n      return this.notifications.sendInfo('Preparing, please wait a moment.');\n    }\n\n    this.neoPrivateCodeRecoverStatus = 1;\n    this.neoPrivateCodeButton = 'Preparing, please wait.';\n\n    const wif = await this.neoService.decrypt(\n      this.walletAccount.encryptedwif,\n      this.wallet.password\n    );\n    if (wif != false) {\n      this.neoPrivateCode = wif;\n      this.openModal(recover);\n    } else {\n      this.neoPrivateCodeButton = 'ERROR - Wrong password';\n    }\n  }\n}\n","<div class=\"container mt-0 qlc-content-first\">\n  <div class=\"row\" *ngIf=\"activePanel==0\">\n    <div class=\"col-12 pl-0 pr-0\">\n      <div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>Create/Import NEO Wallet</h1>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-12 mt-2 mb-4 pl-md-2 pr-md-2\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n\n          <div class=\"row qlc-table-header-white pb-4 pt-5\">\n            <div class=\"col-lg-6 offset-lg-3 content-title\"><h2 class=\"title-grey\">How would you like to access your wallet?</h2></div>\n            <div class=\"col-lg-6 offset-lg-3 mt-4\">\n\n              <div class=\"custom-control custom-radio custom-control-inline\">\n                <input type=\"radio\" id=\"signinType1\" name=\"signinType\" class=\"custom-control-input\" value=\"new\" checked [(ngModel)]=\"selectedImportOption\">\n                <label class=\"custom-control-label\" for=\"signinType1\">Create new wallet</label>\n              </div>\n              <div class=\"custom-control custom-radio custom-control-inline\">\n                <input type=\"radio\" id=\"signinType2\" name=\"signinType\" class=\"custom-control-input\" value=\"private\" [(ngModel)]=\"selectedImportOption\">\n                <label class=\"custom-control-label\" for=\"signinType2\">Private key</label>\n              </div>\n\n              <div class=\"custom-control custom-radio custom-control-inline\">\n                <input type=\"radio\" id=\"signinType3\" name=\"signinType\" class=\"custom-control-input\" value=\"encrypted\" [(ngModel)]=\"selectedImportOption\">\n                <label class=\"custom-control-label\" for=\"signinType3\">Encrypted key</label>\n              </div>\n\n              <div class=\"row justify-content-center rowContent autoHP pt-2 pl-3 pr-3\" *ngIf=\"selectedImportOption === 'new'\">\n                <div class=\"col-12 px-0 py-3 text-truncate dataName\">Enter your wallet name - Optional</div>\n                <div class=\"col-12 px-0 pb-3 text-left text-truncate\">\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"walletNameModel\" placeholder=\"Wallet name\" onfocus=\"this.placeholder = ''\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row justify-content-center rowContent autoHP pt-2 pl-3 pr-3\" *ngIf=\"selectedImportOption === 'private'\">\n                <div class=\"col-12 px-0 py-3 text-truncate dataName\">Enter your private key</div>\n                <div class=\"col-12 px-0 pb-3 text-left text-truncate\">\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <input type=\"text\" class=\"form-control\" (keyup.enter)=\"importFromPrivateKey()\" [(ngModel)]=\"importPrivateKeyModel\" placeholder=\"Private key\" onfocus=\"this.placeholder = ''\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row justify-content-center rowContent autoHP pt-2 pl-3 pr-3\" *ngIf=\"selectedImportOption === 'encrypted'\">\n                <div class=\"col-12 px-0 py-3 text-truncate dataName\">Enter your encrypted key</div>\n                <div class=\"col-12 px-0 pb-3 text-left text-truncate\">\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <input type=\"text\" class=\"form-control\" (keyup.enter)=\"importFromEncryptedKey()\" [(ngModel)]=\"importEncryptedKeyModel\" placeholder=\"Encrypted key\" onfocus=\"this.placeholder = ''\">\n                    </div>\n                    <div class=\"input-group pt-2\">\n                        <input type=\"password\" class=\"form-control\" (keyup.enter)=\"importFromEncryptedKey()\" [(ngModel)]=\"importEncryptedKeyPasswordModel\" placeholder=\"Password\" onfocus=\"this.placeholder = ''\">\n                      </div>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          <div class=\"row qlc-table-row-white\">\n            <div class=\"col-12 pl-4 pb-3 pr-3 pt-2 text-center\">\n              <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"selectedImportOption === 'new'\" [disabled]=\"alreadyImporting\" (click)=\"createWallet()\" [disabled]=\"creating\">Create new wallet</button>\n              <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"selectedImportOption === 'private'\" [disabled]=\"alreadyImporting\" (click)=\"importFromPrivateKey()\">Import with private key</button>\n              <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"selectedImportOption === 'encrypted'\" [disabled]=\"alreadyImporting\" (click)=\"importFromEncryptedKey()\">Import with encrypted key</button>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"activePanel == 1\">\n      <div class=\"col-lg-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\">\n          <div class=\"content-title\">\n              <h1>New NEO wallet created!</h1>\n          </div>\n      </div>\n      <div class=\"col-lg-12 mt-2 mb-4 pl-md-2 pr-md-2\">\n          <div class=\"content-box-white\" *ngIf=\"newWalletPrivateKey == '' && newWalletEncryptedKey == ''\">\n            <div class=\"col-12 text-center pt-5\">\n              <h3>Generating key. Please wait.</h3>\n\n              <div class=\"container\">\n                <div class=\"row\">\n                  <div class=\"col-md-6 offset-md-3 mt-5 mb-5\">\n\n                    <div id=\"noTrespassingOuterBarG\">\n                      <div id=\"noTrespassingFrontBarG\" class=\"noTrespassingAnimationG\">\n                        <div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div>\n                        <div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div>\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"content-box-white\" *ngIf=\"newWalletPrivateKey != '' && newWalletEncryptedKey != ''\">\n              <div class=\"col-12 px-0 text-center py-3 pt-5 pb-4\">\n                  <strong>Below is your private key and encrypted key for your new wallet</strong>\n              </div>\n\n              <div class=\"row align-items-top pl-5 pr-5\">\n                  <div class=\"col-xl-6 pr-md-3\">\n                      <div class=\"col-12 defaultTable tableQLC content\">\n                          <div class=\"row align-items-center rowTitles\">\n                              <div class=\"col-12 pb-3\">\n                                  Private key\n                              </div>\n                          </div>\n                          <div class=\"row align-items-center rowDefault\">\n                              <div class=\"col-12 pb-3 seed-txt\" style=\"word-wrap: break-word;\">\n                                  {{ newWalletPrivateKey }}\n                              </div>\n                          </div>\n                          <div class=\"row align-items-center rowButtons\">\n                              <div class=\"col-12\">\n                                  <a tooltip=\"Copy private key\" ngxClipboard [cbContent]=\"newWalletPrivateKey\" (cbOnSuccess)=\"copied()\" class=\"icon-text-link\"><span class=\"icon copy light\"></span> {{ 'COPY_TO_CLIPBOARD' | translate }}</a>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n                  <div class=\"col-xl-6 pl-md-3\">\n                      <div class=\"col-12 defaultTable tableQLC content\">\n                          <div class=\"row align-items-center rowTitles\">\n                              <div class=\"col-12 pb-3\">\n                                  Encrypted key\n                              </div>\n                          </div>\n                          <div class=\"row align-items-center rowDefault\">\n                              <div class=\"col-12 pb-3 seed-txt\" style=\"word-wrap: break-word;\">\n                                  {{ newWalletEncryptedKey }}\n                              </div>\n                          </div>\n                          <div class=\"row align-items-center rowButtons\">\n                              <div class=\"col-12\">\n                                  <a tooltip=\"Copy encrypted key\" ngxClipboard [cbContent]=\"newWalletEncryptedKey\" (cbOnSuccess)=\"copied()\" class=\"icon-text-link\"><span class=\"icon copy light\"></span> {{ 'COPY_TO_CLIPBOARD' | translate }}</a>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n\n              <div class=\"row defaultTable content pt-5\">\n                  <div class=\"col-12 pb-3\">\n                      <div class=\"row align-items-center rowContent autoHP\">\n                          <div class=\"col-12 px-0 pb-1 text-center boldbig text-color-red\" style=\"font-weight: bold;\">\n                              Make sure to write down your private key and encrypted key or save it somewhere safe, and never share it with anyone!\n                          </div>\n                          <div class=\"col-12 px-0 pb-3 text-center boldbig pt-4\">\n                              It is the only way to recover your funds in an emergency. There is no way to recover a private key if you loose it.\n                          </div>\n                      </div>\n\n                      <div class=\"row align-items-center justify-content-center rowDefault rowButtons pt-4\">\n                          <div class=\"col-xl-4 col-lg-4 col-md-6 col-sm-8 col-12 px-0 px-sm-2 text-left text-truncate mobile-break mb-5\">\n                              <a (click)=\"confirmNewWallet()\"><button type=\"submit\" [disabled]=\"alreadyImporting\" class=\"btn btn-primary pl-0 pr-0 btn-danger w-100\">I have saved my private/encrypted key</button></a>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { AddressBookService } from 'src/app/services/address-book.service';\nimport { ApiService } from 'src/app/services/api.service';\nimport { NeoWalletService } from 'src/app/services/neo-wallet.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-neo-create',\n  templateUrl: './neo-create.component.html',\n  styleUrls: ['./neo-create.component.scss']\n})\nexport class NeoCreateComponent implements OnInit {\n  wallet = this.walletService.wallet;\n  activePanel = 0;\n  \n  walletNameModel = '';\n  importPrivateKeyModel = '';\n  importEncryptedKeyModel = '';\n  importEncryptedKeyPasswordModel = '';\n  walletPasswordModel = '';\n  walletPasswordConfirmModel = '';\n  agree = false;\n  newWalletPrivateKey = '';\n  newWalletEncryptedKey = '';\n  newWallet = null;\n\n  alreadyImporting = false;\n  \n  selectedImportOption = 'new';\n  importOptions = [\n    { name: 'new', value: 'new' },\n    { name: 'private', value: 'private' },\n    { name: 'encrypted', value: 'encrypted' }\n  ];\n  \n  constructor(\n    private walletService: WalletService,\n    private api: ApiService,\n    private notifications: NotificationService,\n    private addressBook: AddressBookService,\n    private neoWallet: NeoWalletService,\n\t\tprivate router: Router\n  ) { \n    \n  }\n  //\n  ngOnInit() {\n  }\n\n  async importFromPrivateKey() {\n    if (this.walletService.isLocked()){\n      this.notifications.sendError('Wallet must be unlocked.');\n      return;\n    }\n    this.notifications.sendInfo('Importing wallet, please wait.');\n    this.alreadyImporting = true;\n    const wip = this.importPrivateKeyModel;\n    \n    if (!await this.neoWallet.checkPrivateKey(wip)){\n      this.notifications.sendError('Please enter a valid private key.');\n      return;\n    }\n    const account = await this.neoWallet.createWallet(wip);\n    this.importPrivateKeyModel = '';\n    this.notifications.sendSuccess('Wallet was imported.');\n    this.alreadyImporting = false;\n    this.router.navigate(['/wallets/neo/'+account.id]);\n  }\n\n  async importFromEncryptedKey() {\n    if (this.walletService.isLocked()){\n      this.notifications.sendError('Wallet must be unlocked.');\n      return;\n    }\n    this.notifications.sendInfo('Importing wallet, please wait.');\n    this.alreadyImporting = true;\n    \n    const wip = await this.neoWallet.decrypt(this.importEncryptedKeyModel,this.importEncryptedKeyPasswordModel);\n    if (!this.neoWallet.checkPrivateKey(wip)){\n      this.notifications.sendError('Please enter a valid private key.');\n      return;\n    }\n    const account = await this.neoWallet.createWallet(wip);\n    this.importEncryptedKeyModel = '';\n    this.importEncryptedKeyPasswordModel = '';\n    this.notifications.sendSuccess('Wallet was imported.');\n    this.alreadyImporting = false;\n    this.router.navigate(['/wallets/neo/'+account.id]);\n  }\n\n  async createWallet() {\n    if (this.walletService.isLocked()){\n      this.notifications.sendError('Wallet must be unlocked.',);\n      return;\n    }\n    this.activePanel = 1;\n    this.notifications.sendInfo('Creating wallet, please wait.');\n    this.alreadyImporting = true;\n    const account = await this.neoWallet.createWallet('new',this.walletNameModel.trim());\n    this.newWalletEncryptedKey = account.encryptedwif;\n\n    const wif = await this.neoWallet.decrypt(account.encryptedwif,this.wallet.password);\n    if (wif != false) {\n      this.newWalletPrivateKey = wif;\n      this.newWallet = account;\n      this.notifications.sendSuccess('Wallet created. Please save your key in a safe space.');\n      this.alreadyImporting = false;\n    } else {\n      this.newWalletPrivateKey = 'ERROR - Please don\\'t use this wallet. There was an encryption error.';\n      this.newWalletEncryptedKey = 'ERROR - Please don\\'t use this wallet. There was an encryption error.';\n    }\n    \n  }\n\n  confirmNewWallet() {\n    const address = this.newWallet.id;\n    this.newWallet = null;\n    this.newWalletEncryptedKey = '';\n    this.newWalletPrivateKey = '';\n\n    this.router.navigate(['/wallets/neo/'+address]);\n  }\n  \n}\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-neo-import',\n  templateUrl: './neo-import.component.html',\n  styleUrls: ['./neo-import.component.scss']\n})\nexport class NeoImportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  neo-import works!\n</p>\n","<!-- LATEST TRANSACTIONS -->\n<div class=\"container mt-0 qlc-content-first\">\n  <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n          <!-- LATEST TRANSACTIONS -->\n          <div class=\"container\">\n                  <div class=\"row\">\n                      <!-- TITLE -->\n                      <div class=\"col-md-9 col-12 mt-2 pl-2 pr-2\">\n                          <div class=\"content-title\">\n                              <h1 class=\"neo\">NEO Node Settings - {{ neoService.getNetwork() }}</h1>\n                          </div>\n                      </div>\n                      <div class=\"col-md-3 col-12 pl-2 pr-2 pt-md-0 pt-2\">\n                          <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 neo-background-light\" routerLink=\"/wallets\">\n                              Back to my Wallets\n                          </button>\n                      </div>\n                  </div>\n              </div>\n      </div>\n  </div>\n</div>\n\n\n<div class=\"container pb-2\">\n  <div class=\"row pl-md-0 pr-md-0 pl-2 pr-2\">\n      <!-- LEFT -->\n      <div class=\"col-lg-9 col-md-12 col-sm-12 order-lg-1 order-2 pl-0 pr-0 mb-3\">\n        <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-12 pb-2 pl-2 pr-2\">\n              <div class=\"content-box-blue h-auto pb-3 neo-background-light\">\n                  <div class=\"container\">\n                      <div class=\"row qlc-table-header-blue neo-background-light\">\n                          <div class=\"col-12 white\">Selected NEO node</div>\n                      </div>\n                      <div class=\"row qlc-table-row-blue row-text-mid mt-3 neo-background-light\">\n                          <div class=\"col-12 text-break pr-3\" *ngIf=\"neoService.selectedNode != ''\">{{ neoService.selectedNode }}<a ngxClipboard [cbContent]=\"walletId\"><img src=\"assets/img/icons/copy.svg\" class=\"img-copy\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Copy to clipboard\"></a></div>\n                          <div class=\"col-12 text-break pr-3\" *ngIf=\"neoService.selectedNode === ''\">Automatic</div>\n\n                      </div>\n                  </div>\n              </div>\n          </div>\n        </div>\n      </div>\n          \n      </div>\n      \n      <!-- RIGHT -->\n      <div class=\"col-lg-3 col-md-12 col-sm-12 order-lg-2 order-1 pl-0 pr-0 mb-xs-3 mb-3\">\n          \n          \n          <div class=\"col-12 pl-2 pr-2 mt-0\">\n              <div class=\"content-box-darkblue pb-4 pr-0 neo-background\">\n                  \n                  <div class=\"container\">\n                      \n                      <div class=\"row pt-3 pr-0\">\n                          <div class=\"col-12 pr-0\">\n                              <a (click)=\"getNodes()\" class=\"menu-myaccount menu-icon-details pr-0\" target=\"_blank\">Get NEO nodes</a>\n                          </div>\n                      </div>\n                      \n                  </div>\n                  \n              </div>\n          </div>\n          \n      </div>\n      \n  </div>\n</div>\n\n<!-- NODES TRANSACTIONS -->\n<div class=\"container mt-0 mb-3\">\n  <div class=\"row\">\n    \n    <div class=\"col-12 pl-0 pr-0\">\n      \n      <!-- TITLE -->\n      <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>NEO Nodes</h1>\n        </div>\n      </div>\n\n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n        <div class=\"content-box-white\">\n\n\n          <div class=\"container\">\n\n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-6 col-lg-5 col-md-5 col-sm-5 col-7 text-truncate\">URL</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">Height</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\"></div>\n              <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 d-none d-sm-block col-6 pr-4 text-right\">Options</div>\n            </div>\n            <div class=\"row qlc-table-row qlc-table-row-twolines closed\">\n              <div class=\"col-xl-6 col-lg-5 col-md-5 col-sm-5 col-7 pb-0 text-truncate\">\n                Automatic (Best option for most users)\n              </div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">\n              </div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pb-0 pr-sm-0 pr-4 text-right\">\n\n              </div>\n              <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 col-12 pr-4 text-right\">\n                <button (click)=\"neoService.selectedNode = ''\" type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 neo-background-light\" *ngIf=\"neoService.selectedNode != ''\">\n                    Select\n                </button>\n                <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 neo-background\" *ngIf=\"neoService.selectedNode === ''\">\n                    Selected\n                </button>\n              </div>\n            </div>\n            <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let node of neoNodes\">\n              <div class=\"col-xl-6 col-lg-5 col-md-5 col-sm-5 col-7 pb-0 text-truncate\">\n                {{ node.url }}\n              </div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">\n                {{ node.height }}\n              </div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pb-0 pr-sm-0 pr-4 text-right\">\n\n              </div>\n              <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 col-12 pr-4 text-right\">\n                <button (click)=\"neoService.selectedNode = node.url\" *ngIf=\"neoService.selectedNode != node.url\" type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 neo-background-light\" >\n                    Select\n                </button>\n                <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 neo-background\" *ngIf=\"neoService.selectedNode === node.url\">\n                    Selected\n                </button>\n              </div>\n            </div>\n\n\n            \n          </div>\n\n        </div>\n      </div>\n\n\n    </div>\n    \n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NeoWalletService, myProvider } from 'src/app/services/neo-wallet.service';\n\n@Component({\n  selector: 'app-neo-settings',\n  templateUrl: './neo-settings.component.html',\n  styleUrls: ['./neo-settings.component.scss']\n})\nexport class NeoSettingsComponent implements OnInit {\n\n  neoNodes = [];\n\n  constructor(\n    public neoService: NeoWalletService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async getNodes() {\n    const api = new myProvider();\n    const nodes = await api.getGoodNodes();\n    console.log(nodes);\n    this.neoNodes = nodes;\n  }\n\n}\n","<app-user-submenu></app-user-submenu>\n<div class=\"send-screen-1 qlc-content-home qlc-after-submenu\" *ngIf=\"activePanel == 'send'\">\n\n\n\n\t<!-- SEND FORM -->\n\t<div class=\"container mt-0 qlc-content-first\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-12 pl-0 pr-0 pb-2\">\n\t\t\t\t<!-- LATEST TRANSACTIONS -->\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<!-- TITLE -->\n\t\t\t\t\t\t\t<div class=\"col-md-6 col-12 mt-2 pl-md-2 pr-md-2\">\n\t\t\t\t\t\t\t\t<div class=\"content-title\">\n\t\t\t\t\t\t\t\t\t<h1 class=\"neo\">Send from NEO wallet - {{ neoService.getNetwork() }}</h1>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-md-3 col-12 pl-md-2 pr-md-2\">\n\t\t\t\t\t\t\t\t<!--<button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 neo-background-light\" routerLink=\"/wallets\">\n\t\t\t\t\t\t\t\t\tBack to my Wallets\n\t\t\t\t\t\t\t\t</button>-->\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-md-3 col-12 pl-md-2 pr-md-2\">\n\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 neo-background-light\"  (click)=\"loadBalances()\">\n\t\t\t\t\t\t\t\t\tRefresh\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"container accounts\">\n\t\t<div class=\"row\">\n\n\t\t\t<!-- ADDRESS -->\n\t\t\t<div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n\t\t\t\t<div class=\"content-box-blue h-100 pb-3 neo-background\">\n\t\t\t\t\t<div class=\"container\">\n\n\t\t\t\t\t<div class=\"row qlc-table-header-blue neo-background\">\n\t\t\t\t\t\t<div class=\"col-12 white\">Address</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row qlc-table-row-blue row-text-mid mt-3 neo-background\">\n\t\t\t\t\t\t<div class=\"col-12 text-break pr-3\">{{ fromAccountID }}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\n\t\t\t<!-- BALANCES -->\n\t\t\t<div class=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 pb-3\">\n\t\t\t\t\t<div class=\"container pl-0 pr-0\">\n\t\t\t\t\t\t<div class=\"row pl-0 pr-0\">\n\n\t\t\t\t\t\t<!-- BALANCES -->\n\t\t\t\t\t\t<div class=\"col-md-4 col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 mb-0 order-md-1 order-2\">\n\t\t\t\t\t\t\t<div class=\"content-box-white h-auto mt-2 pb-2 balance-box\" [class.active]=\"selectedToken.asset_symbol == 'NEO'\" (click)=\"selectTokenIcon('NEO')\">\n\t\t\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t\t\t<div class=\"row qlc-table-header-white\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-12\">NEO Balance</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<!-- QLC -->\n\t\t\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-3 mt-3\">\n\t\t\t\t\t\t\t\t\t\t\t<img src=\"assets/img/token-neo.png\" class=\"w-100 icon-token\">\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-9 pr-0 pl-0\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 pb-0\">{{ tokenBalance('NEO') | currency:'':'':'1.2-8' }}</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row qlc-table-row-white sub-page pt-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<!-- BALANCES -->\n\t\t\t\t\t\t<div class=\"col-md-4 col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 mb-0 order-md-2 order-3\">\n\t\t\t\t\t\t\t<div class=\"content-box-white h-auto mt-2 pb-2 balance-box\" [class.active]=\"selectedToken.asset_symbol == 'GAS'\" (click)=\"selectTokenIcon('GAS')\">\n\t\t\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t\t\t<div class=\"row qlc-table-header-white\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-12\">GAS Balance</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<!-- QLC -->\n\t\t\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-3 mt-3\">\n\t\t\t\t\t\t\t\t\t\t\t<img src=\"assets/img/token-gas.png\" class=\"w-100 icon-token\">\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-9 pr-0 pl-0\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 pb-0\">{{ tokenBalance('GAS') | currency:'':'':'1.2-8' }}</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row qlc-table-row-white sub-page pt-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<!-- BALANCES -->\n\t\t\t\t\t\t<div class=\"col-md-4 col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 mb-0 order-md-3 order-4\">\n\t\t\t\t\t\t\t<div class=\"content-box-white h-auto mt-2 pb-2 balance-box\" [class.active]=\"selectedToken.asset_symbol == 'QLC'\" (click)=\"selectTokenIcon('QLC')\">\n\t\t\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t\t\t<div class=\"row qlc-table-header-white\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-12\">QLC Balance</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<!-- QLC -->\n\t\t\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-3 mt-3\">\n\t\t\t\t\t\t\t\t\t\t\t<img src=\"assets/img/token-qlc.png\" class=\"w-100 icon-token\">\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-9 pr-0 pl-0\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 pb-0\">{{ tokenBalance('QLC') | currency:'':'':'1.2-8' }}</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row qlc-table-row-white sub-page pt-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t<!-- SEND FORM -->\n\t\t\t\t\t\t<div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n\t\t\t\t\t\t\t<div class=\"content-box-white h-auto mt-2 pb-2 pl-2 pr-2\">\n\n\t\t\t\t\t\t\t\t<div class=\"container ml-1 pr-3 pl-3\">\n\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"!neowallets.length\" class=\"row defaultTable content\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 text-center\">\n\t\t\t\t\t\t\t\t\t\t\t{{ 'NO_WALLET_CONFIGURED' | translate\n\t\t\t\t\t\t\t\t\t\t\t}}<a routerLink=\"/createwallet\">{{ 'NO_WALLET_CONFIGURED_CLICK' | translate }}</a>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"neowallets.length\" class=\"row defaultTable sendTokens\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-12\">\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row rowContent mb-5\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-2 dataName pb-3 pb-md-0 form-label-custom-2\">{{ 'SEND_TOKENS_TAB.amount' | translate }}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-10\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row align-items-top\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6 pb-3 pb-md-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-text \">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ selectedToken.asset_symbol ? selectedToken.asset_symbol : '' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control inlineForm\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"amount\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"{{ 'SEND_TOKENS_TAB.amount_placeholder' | translate }}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonfocus=\"this.placeholder = ''\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(change)=\"checkAmount()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle=\"height: 42.5px !important;\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-append\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a (click)=\"setMaxAmount()\" class=\"neo\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-text maxLink neo\">{{ 'SEND_TOKENS_TAB.max' | translate }}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6 d-block d-md-none pb-3 pb-md-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-prepend\"><div class=\"input-group-text\">USD/$</div></div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input disabled\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control inlineForm2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"amountFiat\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"{{ 'SEND_TOKENS_TAB.amount_placeholder' | translate }}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonfocus=\"this.placeholder = ''\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6 pt-2 pt-md-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row align-items-top\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">{{ 'TOKEN' | translate }}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-9\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select class=\"custom-select\" [(ngModel)]=\"selectedTokenHash\" (change)=\"selectToken()\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let token of selectedWalletBalances\" [value]=\"token.asset_hash\">{{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoken.asset_symbol\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row align-items-top pt-3 pt-md-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6 d-none d-md-block\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-prepend\"><div class=\"input-group-text\">USD/$</div></div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control inlineForm2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"{{ 'SEND_TOKENS_TAB.amount_placeholder' | translate }}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row align-items-top\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">{{ 'BALANCE' | translate }}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-9 \">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-6 pr-0 balance\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ selectedToken.amount | currency:'':'':'1.2-8' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-6 pl-0 text-right fiat\">(-)</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-2 dataName pb-3 pb-md-0 form-label-custom-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ 'SEND_TOKENS_TAB.from_account' | translate }}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-10\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select class=\"custom-select\" [(ngModel)]=\"fromAccountID\" (change)=\"selectAccount()\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let account of neowallets\" [value]=\"account.id\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>{{ account.addressBookName ? account.addressBookName + ' - ' : '' }} {{ account.id }}</option\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-2 dataName pb-3 pb-md-0 form-label-custom-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ 'SEND_TOKENS_TAB.to_account' | translate }}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-10 text-left text-truncate\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"custom-select contacts\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"bookContact\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(change)=\"selectFromBook()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{ success: toAccountStatus === 2, dangerRight: toAccountStatus === 0 }\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let book of (addressBookResults$ | async)\" [value]=\"book.account\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>{{ book.name }} {{ book.account }}</option\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control toaccount\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"{{ 'SEND_TOKENS_TAB.to_account_placeholder' | translate }}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonfocus=\"this.placeholder = ''\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(blur)=\"validateDestination()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"toAccountID\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{ success: toAccountStatus === 2, dangerLeft: toAccountStatus === 0 }\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row rowAmount pl-3 pl-sm-3 pl-sm-3 pr-3 pr-sm-3 pr-sm-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-2\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-lg-5 col-md-4 col-sm-12 col-12 pl-0 pr-0 pl-md-2 pr-md-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary neo-background-light\" (click)=\"sendTransaction()\" style=\"min-width:100%;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ 'SEND_TOKENS_TAB.send' | translate }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\n\t\t</div>\n\t</div>\t\t\n\n</div>\n<!-- END SEND FORM-->\n\n\n\n\n\n\n\n\n\n<div class=\"send-screen-2 qlc-content-home qlc-after-submenu\" *ngIf=\"activePanel == 'confirm'\">\n\t\t<!-- SEND FORM -->\n\t\t<div class=\"container mt-0 qlc-content-first\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-12 pl-0 pr-0\">\n\t\t\t\t\t\n\t\t\t\t\t<!-- TITLE -->\n\t\t\t\t\t<div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n\t\t\t\t\t\t<div class=\"content-title\">\n\t\t\t\t\t\t\t<h1>{{ 'SEND_TOKENS_TAB.confirm_transaction' | translate }}</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\n\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row confirmTransaction\">\n\t\n\t\t\t\t<!-- ADDRESS -->\n\t\t\t\t<div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n\t\t\t\t\t<div class=\"content-box-white h-auto pb-5\">\n\t\t\t\t\t\t<div class=\"container mb-3\">\n\t\n\n\t\t\t\t\t\t\t\t\t<div class=\"row align-items-center fromText pt-5\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 text-label\">{{ 'SEND_TOKENS_TAB.you_are_about_to_send' | translate }}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"row align-items-center \">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 sum\">\n\t\t\t\t\t\t\t\t\t\t\t<span>{{ amount }} {{ selectedToken.asset_symbol }}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"row align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<!--<div class=\"col-12 \">\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"fiatsum\">{{ amountFiat | fiat: settings.settings.displayCurrency }}</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"fiatrate\"\n\t\t\t\t\t\t\t\t\t\t\t\t> @ {{ price.price.lastPrice | fiat: settings.settings.displayCurrency }} / {{ selectedToken.asset_symbol }}</span\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"row transfer\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-lg-6 text-center pt-4 pb-4\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"text-label pb-2\">{{ 'SEND_TOKENS_TAB.from_account' | translate }}</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"pl-5 pr-5 text-truncate pt-1 pb-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t<a [routerLink]=\"'/account/' + fromAccountID\" class=\"name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t><span *ngIf=\"fromAddressBook\">{{ fromAddressBook }}</span\n\t\t\t\t\t\t\t\t\t\t\t\t\t><span *ngIf=\"!fromAddressBook\">{{ fromAccountID }}</span></a\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"pl-5 pr-5 pb-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t<a [routerLink]=\"'/account/' + fromAccountID\" class=\"address\">{{ fromAccountID }}</a>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"pt-2 text-bold negative_change\">-{{ amount }} {{ selectedToken.asset_symbol }}</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"text-label pb-3\">{{ 'SEND_TOKENS_TAB.amount_to_send' | translate }}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-lg-6 text-center pt-4 pb-4\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"text-label pb-2\">{{ 'SEND_TOKENS_TAB.to_account' | translate }}</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"pl-5 pr-5 text-truncate pt-1 pb-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t<a [routerLink]=\"'/account/' + toAccountID\" class=\"name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t><span *ngIf=\"toAddressBook\">{{ toAddressBook }}</span\n\t\t\t\t\t\t\t\t\t\t\t\t\t><span *ngIf=\"!toAddressBook\">{{ toAccountID }}</span></a\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"pl-5 pr-5 pb-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t<a [routerLink]=\"'/account/' + toAccountID\" class=\"address\">{{ toAccountID }}</a>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"pt-2 text-bold positive_change\">+{{ amount }} {{ selectedToken.asset_symbol }}</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"text-label pb-3\">{{ 'SEND_TOKENS_TAB.amount_to_receive' | translate }}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"row align-items-center justify-content-center rowDefault rowButtons pl-4 pr-4\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-lg-2 col-md-4 col-sm-5 col-12 px-0 pr-sm-2 text-left text-truncate mobile-break mb-2\">\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn-primary btn-red btn-danger w-100\" style=\"min-width:auto; padding-left:0px; padding-right:0px;\" (click)=\"activePanel = 'send'\">\n\t\t\t\t\t\t\t\t\t\t\t\t{{ 'CANCEL' | translate }}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-lg-2 col-md-4 col-sm-5 col-12 px-0 px-sm-2 text-left text-truncate mobile-break mb-2\">\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary btn-blue w-100\" style=\"min-width:auto; padding-left:0px; padding-right:0px;\" *ngIf=\"!confirmingTransaction\" (click)=\"confirmTransaction()\">\n\t\t\t\t\t\t\t\t\t\t\t\t{{ 'SEND_TOKENS_TAB.confirm_send' | translate }}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary btn-blue w-100\" style=\"min-width:auto; padding-left:0px; padding-right:0px;\" *ngIf=\"confirmingTransaction\">\n\t\t\t\t\t\t\t\t\t\t\t\t{{ 'LOADING' | translate }}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\n\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n</div>\n\n<div class=\"send-screen-2 qlc-content-home qlc-after-submenu\" *ngIf=\"activePanel == 'success'\">\n\t<!-- SEND FORM -->\n\t<div class=\"container mt-0 qlc-content-first\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-12 pl-0 pr-0\">\n\t\t\t\t\n\t\t\t\t<!-- TITLE -->\n\t\t\t\t<div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n\t\t\t\t\t<div class=\"content-title\">\n\t\t\t\t\t\t<h1>Transaction successful</h1>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\n\t<div class=\"container\">\n\t\t<div class=\"row confirmTransaction\">\n\n\t\t\t<!-- ADDRESS -->\n\t\t\t<div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n\t\t\t\t<div class=\"content-box-white h-auto pb-5\">\n\t\t\t\t\t<div class=\"container mb-3\">\n\n\n\t\t\t\t\t\t\t\t<div class=\"row align-items-center fromText pt-5\">\n\t\t\t\t\t\t\t\t\t<div class=\"col-12 text-label\">Transaction hash</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"row align-items-center \">\n\t\t\t\t\t\t\t\t\t<div class=\"col-12 sum\">\n\t\t\t\t\t\t\t\t\t\t<span><a href=\"https://neoscan.io/transaction/{{newHashId}}\" target=\"_blank\" >{{ newHashId }}</a></span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"row align-items-center justify-content-center rowDefault rowButtons pl-4 pr-4 mt-5\">\n\t\t\t\t\t\t\t\t\t<div class=\"col-lg-2 col-md-4 col-sm-5 col-12 px-0 pr-sm-2 text-left text-truncate mobile-break mb-2\">\n\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn-primary btn-blue w-100\" style=\"min-width:auto; padding-left:0px; padding-right:0px;\" (click)=\"activePanel = 'send'\">\n\t\t\t\t\t\t\t\t\t\t\tBack to send\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"col-lg-2 col-md-4 col-sm-5 col-12 px-0 px-sm-2 text-left text-truncate mobile-break mb-2\">\n\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary btn-blue w-100\" style=\"min-width:auto; padding-left:0px; padding-right:0px;\" routerLink=\"/wallets\">\n\t\t\t\t\t\t\t\t\t\t\tMy wallets\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\n\n\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { BigNumber } from 'bignumber.js';\nimport { BehaviorSubject, timer } from 'rxjs';\nimport { AddressBookService } from '../../../services/address-book.service';\nimport { ApiService } from '../../../services/api.service';\nimport { AppSettingsService } from '../../../services/app-settings.service';\nimport { NotificationService } from '../../../services/notification.service';\nimport { PriceService } from '../../../services/price.service';\nimport { QLCBlockService } from '../../../services/qlc-block.service';\nimport { UtilService } from '../../../services/util.service';\nimport { WalletService } from '../../../services/wallet.service';\nimport { WorkPoolService } from '../../../services/work-pool.service';\nimport { NodeService } from '../../../services/node.service';\nimport { NeoWalletService } from 'src/app/services/neo-wallet.service';\n\n@Component({\n\tselector: 'app-sendneo',\n\ttemplateUrl: './sendneo.component.html',\n\tstyleUrls: ['./sendneo.component.scss']\n})\nexport class SendneoComponent implements OnInit {\n\tqlc = 100000000;\n\n\tactivePanel = 'send';\n\n  neowallets = this.walletService.wallet.neowallets;\n  selectedWallet = {\n    id: '',\n    balances: []\n  };\n\taccountTokens: any = [];\n\tselectedToken: any = [];\n\tselectedTokenHash = '';\n\tselectedWalletBalances = [];\n\taddressBookResults$ = new BehaviorSubject([]);\n\tshowAddressBook = false;\n\taddressBookMatch = '';\n\n\tnewHashId = '';\n\n\tmsg1 = '';\n\tmsg2 = '';\n\tmsg3 = '';\n\tmsg4 = '';\n\tmsg5 = '';\n\tmsg6 = '';\n\tmsg7 = '';\n\tmsg8 = '';\n\tmsg9 = '';\n\tmsg10 = '';\n\tmsg11 = '';\n\tmsg12 = '';\n\tmsg13 = '';\n\n\tamounts = [\n\t\t{ name: 'QLC', shortName: 'QLC', value: 'QLC' },\n\t\t{ name: 'kqlc (0.001 QLC)', shortName: 'kqlc', value: 'kqlc' },\n\t\t{ name: 'qlc (0.000001 QLC)', shortName: 'qlc', value: 'qlc' }\n\t];\n\n\tselectedAmount = this.amounts[0];\n\n\tamount = null;\n\tamountRaw = new BigNumber(0);\n\tamountFiat: number | null = null;\n\trawAmount: BigNumber = new BigNumber(0);\n\tfromAccount: any = {};\n\tfromAccountID: any = '';\n\tfromAddressBook = '';\n\t// toAccount: any = false;\n\ttoAccountID = '';\n\tbookContact = '';\n\ttoAddressBook = '';\n\ttoAccountStatus = null;\n  confirmingTransaction = false;\n  \n  reloadTimer = null;\n\n\tconstructor(\n\t\tprivate router: ActivatedRoute,\n\t\tprivate walletService: WalletService,\n\t\tprivate addressBookService: AddressBookService,\n\t\tprivate notificationService: NotificationService,\n\t\tprivate api: ApiService,\n\t\tprivate qlcBlock: QLCBlockService,\n\t\tpublic price: PriceService,\n\t\tprivate workPool: WorkPoolService,\n\t\tpublic settings: AppSettingsService,\n\t\tprivate util: UtilService,\n\t\tprivate trans: TranslateService,\n\t\tprivate node: NodeService,\n    private neoService: NeoWalletService\n\t) {\n\t\tthis.loadLang();\n\t\tthis.load();\n  }\n  ngOnDestroy() {\n\t\tif (this.reloadTimer) {\n\t\t\tthis.reloadTimer.unsubscribe();\n\t\t}\n\t}\n\tload() {\n\t\tif (this.node.status === true) {\n\t\t\tif (this.neowallets !== undefined && this.neowallets.length > 0) {\n\t\t\t\tthis.searchAddressBook();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.reload();\n\t\t}\n\t}\n\n\tasync reload() {\n\t\tconst source = timer(200);\n\t\tthis.reloadTimer = source.subscribe(async val => {\n\t\t\tthis.load();\n\t\t});\n\t}\n\tloadLang() {\n\t\tthis.trans.get('SEND_WARNINGS.msg1').subscribe((res: string) => {\tthis.msg1 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg2').subscribe((res: string) => {\tthis.msg2 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg3').subscribe((res: string) => {\tthis.msg3 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg4').subscribe((res: string) => {\tthis.msg4 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg5').subscribe((res: string) => {\tthis.msg5 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg6').subscribe((res: string) => {\tthis.msg6 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg7').subscribe((res: string) => {\tthis.msg7 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg8').subscribe((res: string) => {\tthis.msg8 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg9').subscribe((res: string) => {\tthis.msg9 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg10').subscribe((res: string) => {\tthis.msg10 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg11').subscribe((res: string) => {\tthis.msg11 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg12').subscribe((res: string) => {\tthis.msg12 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg13').subscribe((res: string) => {\tthis.msg13 = res; });\n\t}\n\tasync loadBalances() {\n\t\tfor (let i = 0; i < this.neowallets.length; i++) {\n\t\t\tthis.neowallets[i].balances = [];\n\t\t\tthis.neowallets[i].addressBookName = this.addressBookService.getAccountName(this.neowallets[i].id);\n\t\t\t/*const balance:any = await this.neoService.getBalance(this.neowallets[i].id);\n\t\t\tfor (const asset of balance.assetSymbols) {\n\t\t\t\tthis.neowallets[i].balances[asset] = new BigNumber(balance.assets[asset].balance).toFixed();\n      }\n\t\t\tfor (const token of balance.tokenSymbols) {\n\t\t\t\tlet newTokenBalance = new BigNumber(balance.tokens[token]).toFixed();\n\t\t\t\tif (newTokenBalance == 'NaN')\n\t\t\t\t\tnewTokenBalance = '0';\n        this.neowallets[i].balances[token] = newTokenBalance;\n\t\t\t}*/\n\t\t\tconst balance:any = await this.neoService.getNeoScanBalance(this.neowallets[i].id);\n\t\t\t//console.log('balance');\n\t\t\t//console.log(balance);\n\t\t\tfor (const asset of balance) {\n\t\t\t\tthis.neowallets[i].balances[asset.asset_hash] = { \n\t\t\t\t\tamount : new BigNumber(asset.amount).toFixed(),\n\t\t\t\t\tasset: asset.asset,\n\t\t\t\t\tasset_symbol: asset.asset_symbol,\n\t\t\t\t\tasset_hash: asset.asset_hash\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.selectAccount();\n\t}\n\n\tasync ngOnInit() {\n\t\tconst params = this.router.snapshot.queryParams;\n\t\tconst wallet = this.router.snapshot.params.wallet;\n\t\tif (params && params.amount) {\n\t\t\tthis.amount = params.amount;\n\t\t}\n\t\tif (params && params.to) {\n\t\t\tthis.toAccountID = params.to;\n\t\t\tthis.validateDestination();\n\t\t}\n\n\t\tthis.addressBookService.loadAddressBook();\n\t\t// Look for the first account that has a balance\n\t\tconst accountIDWithBalance = this.neowallets.reduce((previous, current) => {\n\t\t\tif (previous) {\n\t\t\t\treturn previous;\n\t\t\t}\n\t\t\tconst tokens = current.balances;\n\t\t\tif (tokens) {\n\t\t\t\tconst filter = tokens.filter(tokenMeta => {\n\t\t\t\t\treturn tokenMeta.balance > 0;\n\t\t\t\t});\n\n\t\t\t\tif (filter && filter.length > 0) {\n\t\t\t\t\treturn current.id;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}, null);\n\t\tif (wallet !== undefined) {\n\t\t\tthis.fromAccountID = wallet;\n\t\t} else if (accountIDWithBalance) {\n\t\t\tthis.fromAccountID = accountIDWithBalance;\n\t\t} else {\n\t\t\tthis.fromAccountID = this.neowallets.length ? this.neowallets[0].id : '';\n\t\t}\n\t\tthis.trans.onLangChange.subscribe((event: LangChangeEvent) => {\n\t\t\tthis.loadLang();\n\t\t});\n\t\tthis.loadBalances();\n\t}\n\n\t// An update to the QLC amount, sync the fiat value\n\tsyncFiatPrice() {\n\t\tconst rawAmount = this.getAmountBaseValue(this.amount || 0).plus(this.amountRaw);\n\t\tif (rawAmount.lte(0)) {\n\t\t\tthis.amountFiat = 0;\n\t\t\treturn;\n\t\t}\n\n\t\t// This is getting hacky, but if their currency is bitcoin, use 6 decimals, if it is not, use 2\n\t\tconst precision = this.settings.settings.displayCurrency === 'BTC' ? 1000000 : 100;\n\n\t\t// Determine fiat value of the amount\n\t\tconst fiatAmount = this.util.qlc\n\t\t\t.rawToMqlc(rawAmount)\n\t\t\t.times(this.price.price.lastPrice)\n\t\t\t.times(precision)\n\t\t\t.div(precision)\n\t\t\t.toNumber();\n\t\tthis.amountFiat = fiatAmount;\n\t}\n\n\t// An update to the fiat amount, sync the QLC value based on currently selected denomination\n\tsyncQlcPrice() {\n\t\tconst fiatAmount = this.amountFiat || 0;\n\t\tconst rawAmount = this.util.qlc.mqlcToRaw(new BigNumber(fiatAmount).div(this.price.price.lastPrice));\n\t\tconst qlcVal = this.util.qlc.rawToQlc(rawAmount);\n\t\tconst qlcAmount = this.getAmountValueFromBase(this.util.qlc.qlcToRaw(qlcVal));\n\n\t\tthis.amount = qlcAmount.toNumber();\n\t}\n\n\tsearchAddressBook() {\n\t\tconst unSelectedAccount = this.neowallets.filter(a => a.id !== this.fromAccountID);\n\t\t\n\t\tlet addresses = [];\n\t\tfor (const account of unSelectedAccount) {\n\t\t\taddresses.push({\n\t\t\t\tname: account.addressBookName ? account.addressBookName + ' - ' : '',\n\t\t\t\taccount: account.id\n\t\t\t})\n\t\t}\n\t\tthis.addressBookResults$.next(addresses);\n\t\t/*this.showAddressBook = true;\n\t\tconst search = this.toAccountID || '';\n\t\tconst addressBook = this.addressBookService.addressBook;\n\n\t\tconst matches = addressBook.filter(a => a.name.toLowerCase().indexOf(search.toLowerCase()) !== -1);\n\n\t\tthis.addressBookResults$.next(matches);*/\n\t}\n\n\tselectBookEntry(account) {\n\t\tthis.showAddressBook = false;\n\t\tthis.toAccountID = account;\n\t\tthis.searchAddressBook();\n\t\tthis.validateDestination();\n\t}\n\n\tasync validateDestination() {\n\t\t// The timeout is used to solve a bug where the results get hidden too fast and the click is never registered\n\t\tsetTimeout(() => (this.showAddressBook = false), 400);\n\n\t\t// Remove spaces from the account id\n\t\tthis.toAccountID = this.toAccountID.replace(/ /g, '');\n\n\t\tthis.addressBookMatch = this.addressBookService.getAccountName(this.toAccountID);\n\n\t\t// const accountInfo = await this.walletService.walletApi.accountInfo(this.toAccountID);\n\t\tconst accountInfo = await this.api.accountInfo(this.toAccountID);\n\t\tif (accountInfo.error) {\n\t\t\tif (accountInfo.error === this.msg1) {\n\t\t\t\tthis.toAccountStatus = 1;\n\t\t\t} else {\n\t\t\t\tthis.toAccountStatus = 0;\n\t\t\t}\n\t\t} else if (accountInfo.result && accountInfo.result.tokens) {\n\t\t\tthis.toAccountStatus = 2;\n\t\t}\n\t}\n\n\tasync sendTransaction() {\n\t\t/*const isValid = await this.api.validateAccountNumber(this.toAccountID);\n\t\tif (!isValid.result) {\n\t\t\treturn this.notificationService.sendWarning(this.msg2);\n\t\t}*/\n\t\tif (!this.fromAccountID || !this.toAccountID) {\n\t\t\treturn this.notificationService.sendWarning(this.msg3);\n\t\t}\n\n\t\t//const from = await this.api.accountInfoByToken(this.fromAccountID, this.selectedToken.type);\n\t\t// let to = await this.api.accountInfoByToken(this.toAccountID, this.selectedToken.token_hash);\n\t\t//if (!from) {\n\t\t//\treturn this.notificationService.sendError(this.msg4);\n\t\t//}\n\t\tif (this.fromAccountID === this.toAccountID) {\n\t\t\treturn this.notificationService.sendWarning(this.msg5);\n\t\t}\n\n\t\t//from.balanceBN = new BigNumber(from.balance || 0);\n\t\t// to.balanceBN = new BigNumber(to.balance || 0);\n\t\t//this.fromAccount = from;\n\t\t// this.toAccount = to;\n\n\t\t// to be transfered amount\n\t\tconst rawAmount = this.getAmountBaseValue(this.amount || 0);\n\t\tthis.rawAmount = rawAmount.plus(this.amountRaw);\n\n\t\tconst qlcAmount = this.rawAmount.div(this.qlc);\n\n\t\t/*if (from.balanceBN.minus(rawAmount).isLessThan(0)) {\n\t\t\treturn this.notificationService.sendError(this.msg8 + `${this.selectedToken.tokenInfo.tokenName}`);\n\t\t}*/\n\n\t\t// Determine a proper raw amount to show in the UI, if a decimal was entered\n\t\t//this.amountRaw = this.rawAmount.mod(this.qlc);\n\n\t\t// Determine fiat value of the amount\n\t\t/*this.amountFiat = this.util.qlc\n\t\t\t.rawToMqlc(rawAmount)\n\t\t\t.times(this.price.price.lastPrice)\n\t\t\t.toNumber();*/\n\n\t\t// Start precopmuting the work...\n\t\tthis.fromAddressBook = this.addressBookService.getAccountName(this.fromAccountID);\n\t\tthis.toAddressBook = this.addressBookService.getAccountName(this.toAccountID);\n\t\t//this.workPool.addWorkToCache(this.fromAccount.header);\n\t\tthis.activePanel = 'confirm';\n\t}\n\n\tasync confirmTransaction() {\n\t\t\n\t\tif (this.walletService.walletIsLocked()) {\n\t\t\treturn this.notificationService.sendWarning(this.msg10);\n\t\t}\n\n\t\tthis.confirmingTransaction = true;\n\n\t\ttry {\n\t\t\tconst newHash = await this.neoService.send(\n\t\t\t\tthis.fromAccountID,\n\t\t\t\tthis.toAccountID,\n\t\t\t\tthis.selectedToken.asset_hash,\n\t\t\t\tthis.amount\n\t\t\t);\n\n\t\t\tif (newHash.error) {\n\t\t\t\tconst errMessage = this.msg13 + ` ${newHash.error}`;\n\t\t\t\tthis.notificationService.sendError(errMessage);\n\t\t\t\tthis.confirmingTransaction = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//console.log('hash >>>> ');\n\t\t\t//console.log(newHash);\n\t\t\tif (newHash) {\n\t\t\t\tthis.newHashId = newHash.txid;\n\t\t\t\tthis.activePanel = 'success';\n\t\t\t\tthis.notificationService.sendSuccess(this.msg11 + ` ${this.amount} ${this.selectedToken.asset_symbol}!`);\n\t\t\t\tthis.amount = null;\n\t\t\t\tthis.amountFiat = null;\n\t\t\t\tthis.resetRaw();\n\t\t\t\tthis.toAccountID = '';\n\t\t\t\tthis.toAccountStatus = null;\n\t\t\t\tthis.fromAddressBook = '';\n\t\t\t\tthis.toAddressBook = '';\n\t\t\t\tthis.addressBookMatch = '';\n\t\t\t} \n\t\t\t\n\t\t} catch (err) {\n\t\t\tconst errMessage = this.msg13 + ` ${err.message}`;\n\t\t\tthis.notificationService.sendError(errMessage);\n\t\t}\n\n\t\tthis.confirmingTransaction = false;\n\n\t\tawait this.walletService.reloadBalances();\n\t}\n\n\tsetMaxAmount() {\n\t\tconst walletAccount = this.walletService.wallet.neowallets.find(a => a.id === this.fromAccountID);\n\t\tif (!walletAccount) {\n\t\t\treturn;\n\t\t}\n\t\tconst maxAmount = this.selectedToken.amount;\n\t\tthis.amount = maxAmount;\n\t\t//this.syncFiatPrice();\n\t}\n\n\tresetRaw() {\n\t\tthis.amountRaw = new BigNumber(0);\n\t\tthis.amount = '';\n\t}\n\n\tselectToken() {\n\t\tif (this.selectedWallet.balances !== undefined && Object.values(this.selectedWallet.balances).length > 0) {\n\t\t\tthis.selectedToken = Object.values(this.selectedWallet.balances).find(a => a.asset_hash === this.selectedTokenHash);\n\t\t} else {\n\t\t\tthis.selectedToken = '';\n\t\t}\n\t\tthis.resetRaw();\n  }\n  tokenBalance(token) {\n    //console.log(token + this.selectedWallet.balances.length);\n    if (this.selectedWallet !== undefined && this.selectedWallet.balances) {\n      /*if (this.selectedWallet.balances[token])\n        return this.selectedWallet.balances[token];\n      else\n\t\t\t\treturn 0.00;*/\n//console.log(token);\n\t\t\tif (this.selectedWallet.balances[this.neoService.tokenList[token].networks['1'].hash])\n        return this.selectedWallet.balances[this.neoService.tokenList[token].networks['1'].hash].amount;\n      else\n\t\t\t\treturn 0.00;\n\t\t\t\t\n\t\t} else {\n\t\t\treturn 0.00;\n\t\t}\n  }\n  selectTokenIcon(token) {\n\t\tif (this.selectedWallet.balances !== undefined) {\n\t\t\tconst selectedToken = Object.values(this.selectedWallet.balances).find(a => a.asset_hash === this.neoService.tokenList[token].networks['1'].hash);\n      if (selectedToken) {\n        this.selectedTokenHash = selectedToken.asset_hash;\n        this.selectedToken = selectedToken;\n      }\n\t\t} \n\t\tthis.resetRaw();\n\t}\n\n\tasync selectAccount() {\n    const selectedWallet = this.neowallets.find(a => a.id === this.fromAccountID);\n    this.selectedWallet = selectedWallet;\n    this.accountTokens = [];\n    /*const balance:any = await this.neoService.getBalance(this.selectedWallet.id);\n    for (const token of balance.tokenSymbols) {\n      let newTokenBalance = new BigNumber(balance.tokens[token]).toFixed();\n      if (newTokenBalance == 'NaN')\n        newTokenBalance = '0';\n      this.selectedWallet.balances[token] = newTokenBalance;\n      let tokenSymbol = token;\n      if (tokenSymbol === 'QLINK TOKEN') {\n        tokenSymbol = 'QLC';\n      }\n      this.accountTokens.push({ tokenSymbol: tokenSymbol, balance: newTokenBalance });\n    }\n    for (const token of balance.assetSymbols) {\n      let newTokenBalance = new BigNumber(balance.assets[token].balance).toFixed();\n      if (newTokenBalance == 'NaN')\n        newTokenBalance = '0';\n      this.selectedWallet.balances[token] = newTokenBalance;\n      const tokenSymbol = token;\n      this.accountTokens.push({ tokenSymbol: tokenSymbol, balance: newTokenBalance });\n\t\t}*/\n\t\tconst balance:any = await this.neoService.getNeoScanBalance(this.selectedWallet.id);\n\t\tfor (const asset of balance) {\n\t\t\tthis.selectedWallet.balances[asset.asset_hash] = { \n\t\t\t\tamount : new BigNumber(asset.amount).toFixed(),\n\t\t\t\tasset: asset.asset,\n\t\t\t\tasset_symbol: asset.asset_symbol,\n\t\t\t\tasset_hash: asset.asset_hash\n\t\t\t}\n\t\t}\n\t\tthis.selectedWalletBalances = this.selectedWallet.balances !== undefined && Object.values(this.selectedWallet.balances).length > 0 ? Object.values(this.selectedWallet.balances) : [];\n\t\t//this.selectedToken = this.accountTokens !== undefined && this.accountTokens.length > 0 ? this.accountTokens[0] : [];\n\t\tthis.selectedToken = this.selectedWallet.balances !== undefined && Object.values(this.selectedWallet.balances).length > 0 ? Object.values(this.selectedWallet.balances)[0] : [];\n\t\t/*this.selectedTokenHash =\n\t\t\tthis.selectedToken !== undefined && this.selectedToken.tokenSymbol !== undefined\n\t\t\t\t? this.selectedToken.tokenSymbol\n\t\t\t\t: '';*/\n\t\tthis.selectedTokenHash =\n\t\tthis.selectedToken !== undefined && this.selectedToken.asset_hash !== undefined\n\t\t\t? this.selectedToken.asset_hash\n\t\t\t: '';\t\n\n\t\tthis.resetRaw();\n\t}\n\n\tselectFromBook() {\n\t\tthis.toAccountID = this.bookContact;\n\t}\n\n\tgetAmountBaseValue(value) {\n\t\tswitch (this.selectedAmount.value) {\n\t\t\tdefault:\n\t\t\tcase 'QLC':\n\t\t\t\treturn this.util.qlc.qlcToRaw(value);\n\t\t\tcase 'kqlc':\n\t\t\t\treturn this.util.qlc.kqlcToRaw(value);\n\t\t\tcase 'mqlc':\n\t\t\t\treturn this.util.qlc.mqlcToRaw(value);\n\t\t}\n\t}\n\n\tgetAmountValueFromBase(value) {\n\t\tswitch (this.selectedAmount.value) {\n\t\t\tdefault:\n\t\t\tcase 'QLC':\n\t\t\t\treturn this.util.qlc.rawToQlc(value);\n\t\t\tcase 'kqlc':\n\t\t\t\treturn this.util.qlc.rawToKqlc(value);\n\t\t\tcase 'mqlc':\n\t\t\t\treturn this.util.qlc.rawToMqlc(value);\n\t\t}\n\t}\n\n\tcheckAmount() {\n\t\tif (this.amount < 0)\n\t\t\tthis.amount = 0;\n\n\t\tif (Number(this.amount) > Number(this.selectedToken.balance))\n\t\t\tthis.amount = Number(this.selectedToken.balance);\n\t\t\n\t\tthis.rawAmount = new BigNumber(this.amount);\n\t}\n}\n","<!-- NEWS TOP 4 -->\n<div class=\"container mt-4 mb-4 qlc-content-home\">\n  <div class=\"row\">\n\n    <!-- TITLE -->\n    <div class=\"col-lg-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\">\n      <div class=\"content-title\">\n        <h1>News</h1>\n      </div>\n    </div>\n    \n    <div class=\"col-xl-3 col-lg-6 col-md-6 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\" *ngFor=\"let news of newsList\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-12 pt-4 pb-4 pl-4 pr-4\">\n              <p class=\"date-mini\">{{ news.date | date: 'MM/dd/yyyy' }}</p>\n              <a href=\"{{ news.link }}\" target=\"_blank\" class=\"link-blue\"><h3 class=\"pb-4 link-blue\">{{ news.title }}</h3></a>\n              <p>{{ news.content }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<!-- NEWS ARCHIVE (NEXT 20) -->\n<div class=\"container mt-0 mb-3\">\n    <div class=\"row\">\n      \n      <div class=\"col-12 pl-0 pr-0\">\n\n        <!-- TITLE -->\n        <div class=\"col-lg-12 mb-0 pb-2 mt-2 pl-md-2 pr-md-2\">\n          <div class=\"content-title\">\n            <h1>Archive</h1>\n          </div>\n        </div>\n  \n        <!-- LIST -->\n        <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n          <div class=\"content-box-white\">\n  \n  \n            <div class=\"container\">\n  \n              <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let news of archiveList\">\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-3 col-3 pl-4 pb-0\">\n                  {{ news.date | date: 'MM/dd/yyyy' }}\n                </div>\n                <div class=\"col-xl-10 col-lg-10 col-md-10 col-sm-9 col-9 pb-0 text-truncate\">\n                  <a href=\"{{ news.link }}\" target=\"_blank\" class=\"text-blue\">{{ news.title }}</a>\n                </div>\n              </div>\n  \n  \n            </div>\n  \n  \n          </div>\n        </div>\n  \n        <!-- BUTTON -->\n        <!--\n        <div class=\"col-lg-12 mb-0 mt-2 pl-md-2 pr-md-2 text-center\">\n          <a routerLink=\"/news\" class=\"btn btn-primary btn-blue\">ALL NEWS</a>\n        </div>\n        -->\n      \n      </div>\n      \n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.scss']\n})\nexport class NewsComponent implements OnInit {\n\n  newsList = [];\n  archiveList = [];\n\n  constructor(\n    private api: ApiService\n  ) { }\n\n  ngOnInit() {\n    this.loadNews();\n  }\n\n  \n\tasync loadNews() {\n\t\tconst news = await this.api.news();\n\t\tif (!news.error) {\n\t\t\tthis.newsList = news.result;\n    }\n    const archive = await this.api.newsArchive();\n\t\tif (!archive.error) {\n\t\t\tthis.archiveList = archive.result;\n\t\t}\n\t}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NotificationService } from '../../services/notification.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n  notificationLength = 5000;\n\n  notifications: any[] = [];\n\n  constructor(private notificationService: NotificationService) { }\n\n  ngOnInit() {\n    this.notificationService.notifications$.subscribe(notification => {\n      if (!notification) {\n        return; // Default value\n      }\n      // Check the options\n      const length = notification.options.hasOwnProperty('length')\n        ? notification.options.length\n        : this.notificationLength;\n      const identifier = notification.options.identifier || null;\n\n      // Stop duplicates\n      if (identifier) {\n        const existingNotification = this.notifications.find(\n          n => n.identifier === identifier\n        );\n        if (existingNotification) {\n          return;\n        }\n      }\n\n      const newNotification = {\n        type: notification.type,\n        message: notification.message,\n        cssClass: this.getCssClass(notification.type),\n        identifier: identifier,\n        length: length\n      };\n\n      this.notifications.push(newNotification);\n      if (length) {\n        setTimeout(() => this.removeNotification(newNotification), length);\n      }\n    });\n\n    this.notificationService.removeNotification$.subscribe(identifier => {\n      if (!identifier) {\n        return;\n      }\n      const existingNotification = this.notifications.find(\n        n => n.identifier === identifier\n      );\n      if (existingNotification) {\n        this.removeNotification(existingNotification);\n      }\n    });\n  }\n\n  onClosed(notification: any): void {\n    this.notifications = this.notifications.filter(alert => alert !== notification);\n  }\n\n  private removeNotification(notification) {\n    const existingNotification = this.notifications.findIndex(\n      n => n === notification\n    );\n    if (existingNotification !== -1) {\n      this.notifications.splice(existingNotification, 1);\n    }\n  }\n\n  private getCssClass(type) {\n    switch (type) {\n      default:\n      case 'info':\n        return 'uk-alert-primary';\n      case 'success':\n        return 'uk-alert-success';\n      case 'warning':\n        return 'uk-alert-warning';\n      case 'error':\n        return 'uk-alert-danger';\n    }\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-12 pl-2 pr-2\">\n        <div *ngFor=\"let notification of notifications\">\n            <alert [type]=\"notification.type\" [dismissible]=\"true\" (onClosed)=\"onClosed(notification)\">{{ notification.message }}</alert>\n          </div>\n    </div>\n  </div>\n</div>\n","<div class=\"container mt-4 mb-4 qlc-content-home\">\n    <div class=\"row\">\n        \n        <!-- TITLE -->\n        <div class=\"col-lg-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\">\n            <div class=\"content-title\">\n                <h1>Application portal</h1>\n            </div>\n        </div>\n        <!--\n            <div class=\"col-xl-3 col-lg-6 col-md-6 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\" *ngFor=\"let news of newsList\">\n                <div class=\"content-box-white\">\n                    <div class=\"container\">\n                        <div class=\"row\">\n                            <div class=\"col-12 pt-4 pb-4 pl-4 pr-4\">\n                                <p class=\"date-mini\">{{ news.date | date: 'MM/dd/yyyy' }}</p>\n                                <a href=\"{{ news.link }}\" target=\"_blank\" class=\"link-blue\"><h3 class=\"pb-4 link-blue\">{{ news.title }}</h3></a>\n                                <p>{{ news.content }}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        -->\n    </div>\n    \n    <div class=\"container accounts\" >\n        <div class=\"row\">\n            <!-- FORM -->\n            <div class=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 pb-3 ng-invalid-ignore\" [formGroup]=\"applicationForm\" *ngIf=\"sending_status === 2\">\n                <div class=\"container pl-0 pr-0\">\n                    <div class=\"row pl-0 pr-0\">\n                        <div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n                            <div class=\"content-box-white h-auto mt-2 pb-2 pl-2 pr-2\">\n                                <div class=\"row\">\n                                    <div class=\"col-12 pt-3 text-center\">\n                                        <h1>Application sent!</h1>\n                                    </div>\n                                </div>\n                                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 pb-3 ng-invalid-ignore\" [formGroup]=\"applicationForm\" *ngIf=\"sending_status !== 2\">\n                <div class=\"container pl-0 pr-0\">\n                    <div class=\"row pl-0 pr-0\">\n                        \n                        \n                        <div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n                            <div class=\"content-box-white h-auto mt-2 pb-2 pl-2 pr-2\">\n                                \n                                <div class=\"container ml-1 pr-3 pl-3\">\n                                    \n                                    <div class=\"row defaultTable sendTokens\">\n                                        <div class=\"col-12\">\n                                            \n                                            <div class=\"row pt-0\" style=\"border-bottom: 1px solid #edeef4;\">\n                                                <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\" style=\"margin-top:-14px;\">\n                                                    APPLICATION TYPE\n                                                </div>\n                                                <div class=\"col-md-9 text-left\">\n                                                    <div class=\"form-group\">\n                                                        <input type=\"radio\" name=\"applicationType\" formControlName=\"applicationType\" value=\"1\" id=\"s1\"><label for=\"s1\" style=\"padding-left:10px;padding-right:30px;\"> Voting Node</label>\n                                                        <input type=\"radio\" name=\"applicationType\" formControlName=\"applicationType\" value=\"2\" id=\"s2\"><label for=\"s2\" style=\"padding-left:10px;padding-right:30px;\"> Mining node</label>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"row pt-3\" style=\"border-bottom: 1px solid #edeef4;\">\n                                                <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                                                    TELEGRAM HANDLE\n                                                </div>\n                                                <div class=\"col-md-9 text-left\">\n                                                    <div class=\"form-group\">\n                                                        <input\n                                                        type=\"text\"\n                                                        formControlName=\"telegram\"\n                                                        class=\"form-control form-my-border\"\n                                                        placeholder=\"Telegram handle\"\n                                                        onfocus=\"this.placeholder = ''\"\n                                                        style=\"height: 42px !important;\"\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"row pt-3\" style=\"border-bottom: 1px solid #edeef4;\">\n                                                <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                                                    EMAIL ADDRESS\n                                                </div>\n                                                <div class=\"col-md-9 text-left\">\n                                                    <div class=\"form-group\">\n                                                        <div class=\"form-group\">\n                                                            <input\n                                                            type=\"text\"\n                                                            formControlName=\"email_address\"\n                                                            class=\"form-control form-my-border\"\n                                                            placeholder=\"Email address\"\n                                                            onfocus=\"this.placeholder = ''\"\n                                                            style=\"height: 42px !important;\"\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"row pt-3\" style=\"border-bottom: 1px solid #edeef4;\">\n                                                <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                                                    QLC Address\n                                                </div>\n                                                <div class=\"col-md-9 text-left\">\n                                                    <div class=\"form-group\">\n                                                        <div class=\"form-group\">\n                                                            <input\n                                                            type=\"text\"\n                                                            formControlName=\"qlc_address\"\n                                                            class=\"form-control form-my-border\"\n                                                            placeholder=\"Your activated QLC Chain-based wallet address\"\n                                                            onfocus=\"this.placeholder = ''\"\n                                                            style=\"height: 42px !important;\"\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            \n                                            <div *ngIf=\"this.applicationForm.value.applicationType == 1\">\n                                                \n                                                \n                                                <div class=\"row pt-3\" style=\"border-bottom: 1px solid #edeef4;\">\n                                                    <div class=\"col-md-3 dataName pb-2 pb-md-0 form-label-custom-2\" style=\"margin-top:-10px;\">\n                                                        HARDWARE DEVICE\n                                                    </div>\n                                                    <div class=\"col-md-9 text-left\">\n                                                        <div class=\"form-group mb-1\">\n                                                                <input type=\"radio\" name=\"hardwareType\" formControlName=\"hardwareType\" value=\"1\" id=\"hard1\"><label for=\"hard1\" style=\"padding-left:10px;padding-right:30px;\"> Home computer</label>\n                                                                <input type=\"radio\" name=\"hardwareType\" formControlName=\"hardwareType\" value=\"2\" id=\"hard2\"><label for=\"hard2\" style=\"padding-left:10px;padding-right:30px;\"> VPS (atleast min configuration)</label>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"row pt-3\" style=\"border-bottom: 1px solid #edeef4;\">\n                                                    <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                                                        OPERATION SYSTEM\n                                                    </div>\n                                                    <div class=\"col-md-9 text-left\">\n                                                        <div class=\"form-group\">\n                                                            <div class=\"form-group\">\n                                                                <input\n                                                                type=\"text\"\n                                                                formControlName=\"os\"\n                                                                class=\"form-control form-my-border\"\n                                                                placeholder=\"Operation system (Windows, Linux, Mac, ...)\"\n                                                                onfocus=\"this.placeholder = ''\"\n                                                                style=\"height: 42px !important;\"\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row pt-3\" style=\"border-bottom: 1px solid #edeef4;\">\n                                                    <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                                                        CPU capacity\n                                                    </div>\n                                                    <div class=\"col-md-9 text-left\">\n                                                        <div class=\"form-group\">\n                                                            <div class=\"form-group\">\n                                                                <input\n                                                                type=\"text\"\n                                                                formControlName=\"cpu\"\n                                                                class=\"form-control form-my-border\"\n                                                                placeholder=\"CPU capacity (4x 2Ghz, 6x 2Ghz, ...)\"\n                                                                onfocus=\"this.placeholder = ''\"\n                                                                style=\"height: 42px !important;\"\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row pt-3\" style=\"border-bottom: 1px solid #edeef4;\">\n                                                    <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                                                        MEMORY\n                                                    </div>\n                                                    <div class=\"col-md-9 text-left\">\n                                                        <div class=\"form-group\">\n                                                            <div class=\"form-group\">\n                                                                <input\n                                                                type=\"text\"\n                                                                formControlName=\"memory\"\n                                                                class=\"form-control form-my-border\"\n                                                                placeholder=\"8GB, 10GB\"\n                                                                onfocus=\"this.placeholder = ''\"\n                                                                style=\"height: 42px !important;\"\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row pt-3\" style=\"border-bottom: 1px solid #edeef4;\">\n                                                    <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                                                        STORAGE\n                                                    </div>\n                                                    <div class=\"col-md-9 text-left\">\n                                                        <div class=\"form-group\">\n                                                            <div class=\"form-group\">\n                                                                <input\n                                                                type=\"text\"\n                                                                formControlName=\"storage\"\n                                                                class=\"form-control form-my-border\"\n                                                                placeholder=\"Storage (40gb, 60gb, ...)\"\n                                                                onfocus=\"this.placeholder = ''\"\n                                                                style=\"height: 42px !important;\"\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row pt-3\" style=\"border-bottom: 1px solid #edeef4;\">\n                                                    <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                                                        BANDWIDTH\n                                                    </div>\n                                                    <div class=\"col-md-9 text-left\">\n                                                        <div class=\"form-group\">\n                                                            <div class=\"form-group\">\n                                                                <input\n                                                                type=\"text\"\n                                                                formControlName=\"bandwidth\"\n                                                                class=\"form-control form-my-border\"\n                                                                placeholder=\"Bandwidth (100Mbs, 200Mbs, ...)\"\n                                                                onfocus=\"this.placeholder = ''\"\n                                                                style=\"height: 42px !important;\"\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"row pt-3\" style=\"border-bottom: 1px solid #edeef4;\">\n                                                    <div class=\"col-md-3 dataName pb-2 pb-md-0 form-label-custom-2\" style=\"margin-top:-10px;\">\n                                                        STATIC IP ADDRESS\n                                                    </div>\n                                                    <div class=\"col-md-9 text-left\">\n                                                        <div class=\"form-group mb-1\">\n                                                                <input type=\"radio\" name=\"ipAddress\" formControlName=\"ipAddress\" value=\"1\" id=\"ip1\"><label for=\"ip1\" style=\"padding-left:10px;padding-right:30px;\"> Yes</label>\n                                                                <input type=\"radio\" name=\"ipAddress\" formControlName=\"ipAddress\" value=\"2\" id=\"ip2\"><label for=\"ip2\" style=\"padding-left:10px;padding-right:30px;\"> No</label>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div *ngIf=\"this.applicationForm.value.applicationType == 2\">\n                                                \n                                                \n                                                <div class=\"row pt-3\" style=\"border-bottom: 1px solid #edeef4;\">\n                                                    <div class=\"col-md-3 dataName pb-2 pb-md-0 form-label-custom-2\" style=\"margin-top:-10px;\">\n                                                        HARDWARE MODEL\n                                                    </div>\n                                                    <div class=\"col-md-9 text-left\">\n                                                        <div class=\"form-group mb-1\">\n                                                                <input type=\"radio\" name=\"hardwareModel\" formControlName=\"hardwareModel\" value=\"1\" id=\"hardmodel1\"><label for=\"hardmodel1\" style=\"padding-left:10px;padding-right:30px;\"> CPU</label>\n                                                                <input type=\"radio\" name=\"hardwareModel\" formControlName=\"hardwareModel\" value=\"2\" id=\"hardmodel2\"><label for=\"hardmodel2\" style=\"padding-left:10px;padding-right:30px;\"> GPU</label>\n                                                                <input type=\"radio\" name=\"hardwareModel\" formControlName=\"hardwareModel\" value=\"3\" id=\"hardmodel3\"><label for=\"hardmodel3\" style=\"padding-left:10px;padding-right:30px;\"> ASIC</label>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"row pt-3\" style=\"border-bottom: 1px solid #edeef4;\">\n                                                    <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                                                        MINING ALGORITHM\n                                                    </div>\n                                                    <div class=\"col-md-9 text-left\">\n                                                        <div class=\"form-group\">\n                                                            <div class=\"form-group\">\n                                                                <input type=\"radio\" name=\"miningAlgo\" formControlName=\"miningAlgo\" value=\"1\" id=\"miningalgo1\"><label for=\"miningalgo1\" style=\"padding-left:10px;padding-right:30px;\"> SHA256D</label>\n                                                                <input type=\"radio\" name=\"miningAlgo\" formControlName=\"miningAlgo\" value=\"2\" id=\"miningalgo2\"><label for=\"miningalgo2\" style=\"padding-left:10px;padding-right:30px;\"> SCRYPT</label>\n                                                                <input type=\"radio\" name=\"miningAlgo\" formControlName=\"miningAlgo\" value=\"3\" id=\"miningalgo3\"><label for=\"miningalgo3\" style=\"padding-left:10px;padding-right:30px;\"> X11</label>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row pt-3\" style=\"border-bottom: 1px solid #edeef4;\">\n                                                    <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                                                        COMPUTATIONAL POWER\n                                                    </div>\n                                                    <div class=\"col-md-9 text-left\">\n                                                        <div class=\"form-group\">\n                                                            <div class=\"form-group\">\n                                                                <input\n                                                                type=\"text\"\n                                                                formControlName=\"computational_power\"\n                                                                class=\"form-control form-my-border\"\n                                                                placeholder=\"Computational power\"\n                                                                onfocus=\"this.placeholder = ''\"\n                                                                style=\"height: 42px !important;\"\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                \n                                            </div>\n                                            \n                                            <div class=\"row rowAmount pl-3 pl-sm-3 pl-sm-3 pr-3 pr-sm-3 pr-sm-3 pt-0 mt-0 pb-3 pt-4\">\n                                                <div class=\"col-md-3\"></div>\n                                                <div class=\"col-lg-4 col-md-4 col-sm-12 col-12 pl-0 pr-0 pl-md-2 pr-md-2\">\n                                                    <button (click)=\"checkForm()\" type=\"submit\" class=\"btn btn-primary\" style=\"min-width:100%;\" [disabled]=\"sending_status !== 0\" >\n                                                        {{ button_text }}\n                                                    </button>\n                                                </div>\n                                            </div>\n\n                                        </div>\n\n                                        \n\n                                        \n                                        \n                                        \n                                        \n                                        \n                                        \n                                        \n                                        \n                                        \n                                        \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- EXPLAINER -->\n            <div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n                <div class=\"content-box-blue h-100 pb-3\">\n                    <div class=\"container\">\n                        \n                        <div class=\"row qlc-table-header-blue\">\n                            <div class=\"col-12\">RECOMMENDED CONFIGURATION</div>\n                        </div>\n                        <div class=\"row qlc-table-row-blue mt-3 qlc-stake-explainer pr-3\">\n                            <hr style=\"height:1px;width:100%;border:none;background:#7ca7e5;display:block;\" />\n                            \n                            <p style=\"width:100%;\" class=\"mt-2\"><strong>FOR VOTING NODE (Minimum)</strong></p>\n                            <p>\n                                <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">CPU:</span> 4 cores<br>\n                                <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Memory:</span> 8 G<br>\n                                <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Storage:</span> 80G SSD<br>\n                                <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Bandwidth:</span> <br>100Mbs with public IP address<br>\n                            </p>\n                            \n                            <hr style=\"height:1px;width:100%;border:none;background:#7ca7e5;display:block;\" />\n                            \n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-portal',\n  templateUrl: './portal.component.html',\n  styleUrls: ['./portal.component.scss']\n})\nexport class PortalComponent implements OnInit {\n\n  applicationForm = new FormGroup({\n    telegram: new FormControl('',Validators.compose([\n      Validators.required,\n      Validators.minLength(1)\n    ])),\n    email_address: new FormControl('',Validators.compose([\n      Validators.required,\n      Validators.maxLength(240),\n      Validators.minLength(5)\n    ])),\n    qlc_address: new FormControl('',Validators.compose([\n      Validators.required,\n      Validators.maxLength(64),\n      Validators.minLength(64)\n    ])),\n    applicationType: new FormControl('1'),\n    ipAddress: new FormControl('1'),\n    hardwareType: new FormControl('1'),\n    bandwidth: new FormControl('',Validators.required),\n    storage: new FormControl('',Validators.required),\n    memory: new FormControl('',Validators.required),\n    cpu: new FormControl('',Validators.required),\n    os: new FormControl('',Validators.required),\n    hardwareModel: new FormControl('1'),\n    miningAlgo: new FormControl('1'),\n    computational_power: new FormControl('',Validators.required),\n    \n  });\n\n  button_text = 'SEND APPLICATION';\n  sending_status = 0;\n\n  constructor(\n    private api:ApiService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  checkForm() {\n    this.markFormGroupTouched(this.applicationForm);\n    if (this.applicationForm.value.applicationType == 1) {\n      if (this.applicationForm.get('telegram').status == 'VALID' &&\n          this.applicationForm.get('email_address').status == 'VALID' &&\n          this.applicationForm.get('qlc_address').status == 'VALID' &&\n          this.applicationForm.get('bandwidth').status == 'VALID' &&\n          this.applicationForm.get('storage').status == 'VALID' &&\n          this.applicationForm.get('memory').status == 'VALID' &&\n          this.applicationForm.get('cpu').status == 'VALID' &&\n          this.applicationForm.get('os').status == 'VALID' \n      ) {\n        window.scrollTo(0, 0);\n        this.apply();\n        return;\n      } \n    } else if (this.applicationForm.value.applicationType == 2) {\n      if (this.applicationForm.get('telegram').status == 'VALID' &&\n          this.applicationForm.get('email_address').status == 'VALID' &&\n          this.applicationForm.get('qlc_address').status == 'VALID' &&\n          this.applicationForm.get('hardwareModel').status == 'VALID' &&\n          this.applicationForm.get('miningAlgo').status == 'VALID' &&\n          this.applicationForm.get('computational_power').status == 'VALID'\n      ) {\n        window.scrollTo(0, 0);\n        this.apply();\n        return;\n      }\n    }\n    if (this.applicationForm.status === 'VALID') {\n      window.scrollTo(0, 0);\n      return;\n    }\n  }\n\n  async apply() {\n    this.button_text = 'SENDING, PLEASE WAIT....';\n    this.sending_status = 1;\n    const response = await this.api.portalApply(this.applicationForm.value);\n    if (response.status) {\n      if (response.status == 1) {\n        this.button_text = 'SUCCESSFUL SENT';\n        this.sending_status = 2;\n      } else {\n        this.button_text = 'ERROR - PLEASE TRY AGAIN';\n        this.sending_status = 0;\n      }\n    } else {\n      this.button_text = 'ERROR - PLEASE TRY AGAIN';\n      this.sending_status = 0;\n    }\n\n  }\n\n  private markFormGroupTouched(formGroup: FormGroup) {\n    (<any>Object).values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n\n      if (control.controls) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n\n}\n","<div class=\"container mt-0 qlc-content-first\">\n  <div class=\"row\">\n    <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <!-- TITLE -->\n          <div class=\"col-md-9 col-12 mt-2 pl-2 pr-2\">\n            <div class=\"content-title\">\n              <h1 class=\"neo\">POV Explorer</h1>\n            </div>\n          </div>\n          \n          <div class=\"col-md-3 col-12 pl-2 pr-2 pt-md-0 pt-2\">\n            <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 \" (click)=\"refresh()\">\n              {{ refreshButton }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-blocks\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">Latest POV Height</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12\">{{ povHeadersCount | currency:'':'':'1.0-0' }} </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-miners\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">Number of miners</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12\">{{ minersNum | currency:'':'':'1.0-0' }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-signatures\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">Difficulty</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12 text-truncate\">{{ prepareDifficulty(povLatestHeader.normDifficulty) }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-transactions\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">Total mined Qgas</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12\">{{ totalQgasMined | qlc: 8 | currency:'':'':'1.2-2' }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"container pl-2 pr-2 mt-3\">\n  <div class=\"content-box-white\">\n    \n    \n    \n    <div class=\"container\">\n      \n      <div class=\"row qlc-table-header\">\n        <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-3 col-3 pl-4\">Height</div>\n        <div class=\"col-xl-4 col-lg-4 col-md-6 col-sm-7 col-6 text-truncate\">Hash / Miner Account</div>\n        <div class=\"col-xl-1 col-lg-1 col-md-2 text-md-center pr-md-3 col-sm-2 col-3 text-right pr-4\">Tx Num</div>\n        <div class=\"col-xl-1 d-lg-block col-lg-1 d-none col-md-2 col-sm-2 col-2 text-center\">Algo<span class=\"d-none d-xl-inline\">rithm</span></div>\n        <div class=\"col-xl-1 d-lg-block col-lg-1 d-none col-md-2 col-sm-2 col-2 text-center\">Difficulty</div>\n        <div class=\"col-xl-1 d-lg-block col-lg-1 d-none col-md-2 col-sm-2 col-2 text-right\">AuxPow</div>\n        <div class=\"col-xl-2 col-lg-2 d-none d-md-block col-md-2 col-sm-3 col-6 pr-4 text-right\">Time</div>\n      </div>\n      \n      <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let povHeader of povHeaders\">\n        <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-3 col-3 pl-4 pb-0 pr-0\">\n          <span class=\"\">\n            <span class=\"qlc-icon icon-block\" title=\"Block {{ povHeader.basHdr.height | currency:'':'':'1.0-0' }}\"></span>\n            <span class=\"text-bold-grey\"><a [routerLink]=\"'/pov/height/' + povHeader.basHdr.height\">{{ povHeader.basHdr.height | currency:'':'':'1.0-0' }}</a></span>\n          </span>\n        </div>\n        <div class=\"d-none d-xl-block col-xl-4 pb-0\">\n            <span class=\"text-color-lightgrey text-tiny\">Hash: </span><a [routerLink]=\"'/pov/hash/' + povHeader.basHdr.hash\">{{ povHeader.basHdr.hash  | squeeze : '20,20' }}</a> <br>\n            <span class=\"text-color-lightgrey text-tiny\">Miner: </span><a [routerLink]=\"'/account/' + povHeader.cbtx.txOuts[0].address\">{{ povHeader.cbtx.txOuts[0].address  | squeeze : '20,20' }}</a>\n        </div>\n        <div class=\"d-none d-lg-block d-xl-none col-lg-4 pb-0\">\n            <span class=\"text-color-lightgrey text-tiny\">Hash: </span><a [routerLink]=\"'/pov/hash/' + povHeader.basHdr.hash\">{{ povHeader.basHdr.hash  | squeeze : '16,16' }}</a> <br>\n            <span class=\"text-color-lightgrey text-tiny\">Miner: </span><a [routerLink]=\"'/account/' + povHeader.cbtx.txOuts[0].address\">{{ povHeader.cbtx.txOuts[0].address  | squeeze : '16,16' }}</a>\n        </div>\n        <div class=\"d-none d-md-block d-lg-none col-md-6 pb-0\">\n            <span class=\"text-color-lightgrey text-tiny\">Hash: </span><a [routerLink]=\"'/pov/hash/' + povHeader.basHdr.hash\">{{ povHeader.basHdr.hash  | squeeze : '18,18' }}</a> <br>\n            <span class=\"text-color-lightgrey text-tiny\">Miner: </span><a [routerLink]=\"'/account/' + povHeader.cbtx.txOuts[0].address\">{{ povHeader.cbtx.txOuts[0].address  | squeeze : '20,20' }}</a> <br>\n            <span class=\"text-color-lightgrey text-tiny\">Algorithm: </span>{{ povHeader.algoName }} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <span class=\"text-color-lightgrey text-tiny\">AuxPOW: </span>{{ (povHeader.auxHdr != null ? 'Yes' : 'No' ) }} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <span class=\"text-color-lightgrey text-tiny\">Difficulty: </span>{{ prepareDifficulty(povHeader.normDifficulty) }}\n        </div>\n        <div class=\"d-none d-sm-block d-md-none col-sm-7 pb-0\">\n            <span class=\"text-color-lightgrey text-tiny\">Hash: </span><a [routerLink]=\"'/pov/hash/' + povHeader.basHdr.hash\">{{ povHeader.basHdr.hash  | squeeze : '15,15' }}</a> <br>\n            <span class=\"text-color-lightgrey text-tiny\">Miner: </span><a [routerLink]=\"'/account/' + povHeader.cbtx.txOuts[0].address\">{{ povHeader.cbtx.txOuts[0].address  | squeeze : '15,15' }}</a> <br>\n            <span class=\"text-color-lightgrey text-tiny\">Algorithm: </span>{{ povHeader.algoName }} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <span class=\"text-color-lightgrey text-tiny\">AuxPOW: </span>{{ (povHeader.auxHdr != null ? 'Yes' : 'No' ) }}<br>\n            <span class=\"text-color-lightgrey text-tiny\">Difficulty: </span>{{ prepareDifficulty(povHeader.normDifficulty) }}\n        </div>\n        <div class=\"d-block d-sm-none col-6 pb-0\">\n            <span class=\"text-color-lightgrey text-tiny\">Hash: </span><a [routerLink]=\"'/pov/hash/' + povHeader.basHdr.hash\">{{ povHeader.basHdr.hash  | squeeze : '8,8' }}</a> <br>\n            <span class=\"text-color-lightgrey text-tiny\">Miner: </span><a [routerLink]=\"'/account/' + povHeader.cbtx.txOuts[0].address\">{{ povHeader.cbtx.txOuts[0].address  | squeeze : '8,8' }}</a> <br>\n            <span class=\"text-color-lightgrey text-tiny\">Algorithm: </span>{{ povHeader.algoName }}<br>\n            <span class=\"text-color-lightgrey text-tiny\">AuxPOW: </span>{{ (povHeader.auxHdr != null ? 'Yes' : 'No' ) }}<br>\n            <span class=\"text-color-lightgrey text-tiny\">Difficulty: </span>{{ prepareDifficulty(povHeader.normDifficulty) }}\n        </div>\n        <div class=\"col-xl-1 col-lg-1 col-md-2 text-md-center pr-md-2 col-sm-2 col-3 pb-0 text-truncate pr-4 text-right\">\n          {{ povHeader.cbtx.txNum }}\n        </div>\n        <div class=\"col-xl-1 col-lg-1 d-lg-block col-sm-2 d-none col-2 text-center\">{{ povHeader.algoName }}</div>\n        <div class=\"col-xl-1 col-lg-1 d-lg-block col-md-2 d-none col-sm-2 col-2 text-center text-truncate\">{{ prepareDifficulty(povHeader.normDifficulty) }}</div>\n        <div class=\"col-xl-1 col-lg-1 d-lg-block col-md-2 d-none col-sm-2 col-2 text-center\">{{ (povHeader.auxHdr != null ? 'Yes' : 'No' ) }}</div>\n        \n        <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-12 col-12 pr-4 text-right\">\n          {{ povHeader.basHdr.timestamp * 1000 | date: 'short' }}\n        </div>\n      </div>\n    </div>\n    \n    \n  </div>\n  <div class=\"col-lg-12 mb-0 mt-4 pl-md-2 pr-md-2 text-center\" *ngIf=\"pages.length > 1\">\n    <a class=\"btn btn-primary btn-blue btn-box\" *ngIf=\"activePage != 1\" (click)=\"goTo(activePage-1)\">&lt;</a>\n    <span *ngFor=\"let page of pages\">\n      <a class=\"btn btn-primary btn-white btn-box\" [ngClass]=\"{'active' : page == activePage}\" (click)=\"goTo(page)\" *ngIf=\"page != '...'\">{{ page }}</a>\n      <span *ngIf=\"page == '...'\">&nbsp;...&nbsp;</span>\n    </span>\n    <a class=\"btn btn-primary btn-blue btn-box\" *ngIf=\"activePage < allPages\" (click)=\"goTo(activePage+1)\">&gt;</a>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, ChildActivationEnd } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { NodeService } from 'src/app/services/node.service';\nimport { timer } from 'rxjs';\nimport BigNumber from 'bignumber.js';\n\n@Component({\n  selector: 'app-pov-explorer',\n  templateUrl: './pov-explorer.component.html',\n  styleUrls: ['./pov-explorer.component.scss']\n})\nexport class PovExplorerComponent implements OnInit {\n\n  povHeaders: any[] = [];\n  povHeadersCount = 0;\n  povLatestHeader = {\n\t\"basHdr\": {\n\t  \"version\": 0,\n\t  \"previous\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n\t  \"merkleRoot\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n\t  \"timestamp\": 0,\n\t  \"bits\": 0,\n\t  \"nonce\": 0,\n\t  \"hash\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n\t  \"height\": 0\n\t},\n\t\"auxHdr\": null,\n\t\"cbtx\": {\n\t  \"version\": 0,\n\t  \"txIns\": [\n\t  ],\n\t  \"txOuts\": [\n\t  ],\n\t  \"stateHash\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n\t  \"txNum\": 0,\n\t  \"hash\": \"0000000000000000000000000000000000000000000000000000000000000000\"\n\t},\n\t\"algoName\": \"\",\n\t\"algoEfficiency\": 0,\n\t\"normBits\": 0,\n\t\"normDifficulty\": 0,\n\t\"algoDifficulty\": 0\n  };\n  refreshButton = 'Refresh';\n  minersNum = 0;\n  totalQgasMined = 0;\n\n  routerSub = null;\n  \n  pageSize = 10;\n\tpages = [];\n\tallPages = 0;\n\tactivePage = 0;\n\toffSet = 0;\n\n  constructor(\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router,\n\t\tprivate api: ApiService,\n    private node: NodeService\n  ) { }\n\n  ngOnInit() {\n    this.routerSub = this.router.events.subscribe(event => {\n\t\t\tif (event instanceof ChildActivationEnd) {\n\t\t\t\tthis.load(); // Reload the state when navigating to itself from the transactions page\n\t\t\t}\n\t\t});\n\t\tthis.load();\n  }\n\n  load() {\n\t\tif (this.node.status === true) {\n\t\t\tvar page = this.route.snapshot.params.page;\n\t\t\tif (page == undefined || page == 0)\n\t\t\t\tpage = 1;\n\n\t\t\tthis.setPage(page);\n\t\t} else {\n\t\t\tthis.reload();\n\t\t}\n\t}\n\n\tasync reload() {\n\t\tconst source = timer(200);\n\t\tconst abc = source.subscribe(async val => {\n\t\t\tthis.load();\n\t\t});\n  }\n  \n  goTo(page) {\n\t\tthis.router.navigate(['/pov-explorer/' + page], { relativeTo: this.route });\n\t}\n\n  setPage(page) {\n\t\tthis.activePage = page;\n\t\tthis.offSet = page * this.pageSize - this.pageSize;\n\t\tthis.getPovHeaders();\n\t}\n\n\tsetPages() {\n\t\tthis.activePage = Math.floor((this.offSet + this.pageSize) / this.pageSize);\n\t\tvar displayPages = 7;\n\n\t\tvar pages = this.povHeadersCount / this.pageSize;\n\t\tif (this.povHeadersCount % this.pageSize != 0) {\n\t\t\tpages = Math.floor(this.povHeadersCount / this.pageSize) + 1;\n\t\t}\n\t\tthis.allPages = pages;\n\t\tif (pages < 7)\n\t\t\tdisplayPages = pages;\n\n\t\tthis.pages = Array(displayPages).fill(0).map((pages, i) => i + 1);\n\n\t\tif (pages > 5 && this.activePage > 3 && this.activePage < pages - 3) {\n\t\t\tthis.pages[1] = this.activePage - 2;\n\t\t\tthis.pages[2] = this.activePage - 1;\n\t\t\tthis.pages[3] = this.activePage;\n\t\t\tthis.pages[4] = this.activePage + 1;\n\t\t\tthis.pages[5] = this.activePage + 2;\n\t\t} else if (pages > 5 && this.activePage > 3 && this.activePage >= pages - 3) {\n\t\t\tthis.pages[1] = pages - 5;\n\t\t\tthis.pages[2] = pages - 4;\n\t\t\tthis.pages[3] = pages - 3;\n\t\t\tthis.pages[4] = pages - 2;\n\t\t\tthis.pages[5] = pages - 1;\n\t\t}\n\n\t\tthis.pages[displayPages - 1] = pages;\n\t\tthis.pages[0] = 1;\n\t\tif (this.pages[displayPages - 2] != pages - 1) {\n\t\t\tthis.pages[displayPages - 2] = '...';\n\t\t}\n\n\t\tif (this.pages[1] && this.pages[1] != 2) {\n\t\t\tthis.pages[1] = '...';\n\t\t}\n  }\n  \n\tasync refresh() {\n\t\tthis.refreshButton = 'Refreshing ...';\n\t\tawait this.getPovHeaders();\n\t\tthis.refreshButton = 'Refresh';\n\t}\n\n\tasync getPovHeaders() {\n\t\tlet povHeadersCount = null;\n\t\t\n\t\tconst latesPovHeader = await this.api.getLatestHeader();\n\t\tif (!latesPovHeader.error) {\n\t\tthis.povHeadersCount = latesPovHeader.result.basHdr.height;\n\t\tthis.povLatestHeader = latesPovHeader.result;\n\t\tthis.setPages();\n\t\t}\n\n\t\tconst startHeight =this.povHeadersCount - (this.activePage*this.pageSize-this.pageSize);\n\t\tlet maxPageSize = this.pageSize;\n\t\tif (maxPageSize > startHeight) {\n\t\tmaxPageSize = startHeight;\n\t\t}\n\n\t\tthis.minersNum = 0;\n\t\tthis.totalQgasMined = 0;\n\t\tconst minerStatsQuery = await this.api.getMinerStats();\n\t\tif (!minerStatsQuery.error) {\n\t\t\tthis.minersNum = minerStatsQuery.result.minerCount;\n\t\t\tthis.totalQgasMined = minerStatsQuery.result.totalMinerReward;\n\t\t}\n\t\t\n\t\tconst povHeadersQuery = await this.api.batchGetHeadersByHeight(startHeight , maxPageSize);\n\t\t\n\t\t//transactions = await this.api.Headers(this.pageSize,this.offSet);\n\t\t// const additionalHeadersInfo = [];\n\n\t\tthis.povHeaders = [];\n\t\tif (!povHeadersQuery.error) {\n\t\t\t/*const tokenMap = {};\n\t\t\tconst tokens = await this.api.tokens();\n\t\t\tif (!tokens.error) {\n\t\t\t\ttokens.result.forEach(token => {\n\t\t\t\t\ttokenMap[token.tokenId] = token;\n\t\t\t\t});\n      }*/\n\t\t\tconst povHeaders = povHeadersQuery.result.headers;\n      //console.log(povHeaders);\n\t\t\tfor (const header of povHeaders) {\n\t\t\t\t\n\t\t\t\tthis.povHeaders.push(header);\n\t\t\t}\n\t\t\t//this.transactions = this.transactions.filter(h => h.type !== 'change');\n    }\n    //console.log(this.povHeaders);\n    return true;\n\t}\n\n\tprepareDifficulty(normDifficulty) {\n\t\tconst bigNorm = new BigNumber(normDifficulty);\n\t\tif (bigNorm.dividedBy(1000000000000).isGreaterThan(1))  {\n\t\t\treturn bigNorm.dividedBy(1000000000000).toFormat(2) + ' T';\n\t\t}\n\t\tif (bigNorm.dividedBy(1000000000).isGreaterThan(1))  {\n\t\t\treturn bigNorm.dividedBy(1000000000).toFormat(2) + ' G';\n\t\t}\n\t\tif (bigNorm.dividedBy(1000000).isGreaterThan(1))  {\n\t\t\treturn bigNorm.dividedBy(1000000).toFormat(2) + ' M';\n\t\t}\n\t\tif (bigNorm.dividedBy(1000).isGreaterThan(1))  {\n\t\t\treturn bigNorm.dividedBy(1000).toFormat(2) + ' K';\n\t\t}\n\t\treturn bigNorm.toFormat(2);\n\t}\n\n}\n","<div class=\"container mt-0 qlc-content-first\">\n  <div class=\"row\">\n    <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n      <div class=\"container\">\n        <div class=\"row\">\n            <!-- TITLE -->\n            <div class=\"col-md-6 col-12 mt-2 pl-2 pr-2\">\n                <div class=\"content-title\">\n                    <h1 class=\"neo\">POV Details</h1>\n                </div>\n            </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"container pl-2 pr-2 pb-0 mb-0\" *ngIf=\"block != null\">\n  <!-- TX HASH -->\n  <div class=\"col-lg-12 col-md-12 col-sm-12 mt-0 mb-0 pl-0 pr-0 pb-0\">\n    <div class=\"content-box-blue\">\n      <div class=\"container\">\n        <div class=\"row qlc-table-header-blue\">\n          <div class=\"col-12\">Pov hash</div>\n        </div>\n        <div class=\"row qlc-table-row-blue row-text-mid mt-2 mb-2 pb-4\">\n          <div class=\"col-12 text-break\">{{ block.header.basHdr.hash }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"container mt-0 pt-0\" *ngIf=\"block != null\">\n        \n  <div class=\"row equal\">\n    \n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-white sub-page\">\n            <div class=\"col-12\">Height</div>\n          </div>\n          <div class=\"row qlc-table-row-white sub-page pb-1\">\n            <div class=\"col-12 text-wrap pb-4\">{{ block.header.basHdr.height }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-white sub-page\">\n              <div class=\"col-12\">Number of transactions</div>\n          </div>\n          <div class=\"row qlc-table-row-white sub-page pb-1\">\n              <div class=\"col-12 text-wrap pb-4\">{{ block.header.cbtx.txNum }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n            <div class=\"row qlc-table-header-white sub-page\">\n                <div class=\"col-12\">Bits</div>\n            </div>\n            <div class=\"row qlc-table-row-white sub-page pb-1\">\n                <div class=\"col-12 text-wrap pb-4\">{{ block.header.basHdr.bits }}</div>\n            </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n            <div class=\"row qlc-table-header-white sub-page\">\n                <div class=\"col-12\">Time</div>\n            </div>\n            <div class=\"row qlc-table-row-white sub-page pb-1\">\n                <div class=\"col-12 text-wrap pb-4\">{{ block.header.basHdr.timestamp * 1000 | date: 'short' }}</div>\n            </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-white sub-page\">\n            <div class=\"col-12\">Previous</div>\n          </div>\n          <div class=\"row qlc-table-row-white sub-page pb-1\">\n            <div class=\"col-12 text-wrap pb-4\"><a routerLink=\"/pov/hash/{{ block.header.basHdr.previous }}\">{{ block.header.basHdr.previous }}</a></div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-white sub-page\">\n              <div class=\"col-12\">Merkle Root</div>\n          </div>\n          <div class=\"row qlc-table-row-white sub-page pb-1\">\n              <div class=\"col-12 text-wrap pb-4\">{{ block.header.basHdr.merkleRoot }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n            <div class=\"row qlc-table-header-white sub-page\">\n                <div class=\"col-12\">Nonce</div>\n            </div>\n            <div class=\"row qlc-table-row-white sub-page pb-1\">\n                <div class=\"col-12 text-wrap pb-4\">{{ block.header.basHdr.nonce }}</div>\n            </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n            <div class=\"row qlc-table-header-white sub-page\">\n                <div class=\"col-12\">Algorithm</div>\n            </div>\n            <div class=\"row qlc-table-row-white sub-page pb-1\">\n                <div class=\"col-12 text-wrap pb-4\">{{ block.algoName }}</div>\n            </div>\n        </div>\n      </div>\n    </div>\n    \n  </div>\n  </div>\n\n  <!-- MINER -->    \n  <div class=\"container mt-0\" *ngIf=\"block != null\">\n    <div class=\"row equal\">\n\n        <div class=\"col-12 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n            <div class=\"content-box-white\">\n                <div class=\"container\">\n                    <div class=\"row qlc-table-header-white sub-page\">\n                        <div class=\"col-12\">Miner</div>\n                    </div>\n                    <div class=\"row qlc-table-row-white sub-page\">\n                        <div class=\"col-12\">\n                            <a routerLink=\"/account/{{ block.header.cbtx.txOuts[0].address }}\">{{ block.header.cbtx.txOuts[0].address }}</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n  <!-- TRANSACTIONS -->    \n  <div class=\"container mt-0\" *ngIf=\"block != null\">\n      <div class=\"row equal\">\n\n          <div class=\"col-12 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n              <div class=\"content-box-white\">\n                  <div class=\"container\">\n                      <div class=\"row qlc-table-header-white sub-page\">\n                          <div class=\"col-12\">Transactions</div>\n                      </div>\n                      <div class=\"row qlc-table-row-white sub-page\">\n                          <div class=\"col-12\" *ngFor=\"let transaction of block.body.txs\">\n                              <a routerLink=\"/transaction/{{ transaction.hash }}\">{{ transaction.hash }}</a>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n  \n  <!-- RAW BLOCK -->    \n  <div class=\"container mt-0\" *ngIf=\"block != null\">\n      <div class=\"row equal\">\n\n          <div class=\"col-12 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n              <div class=\"content-box-white\">\n                  <div class=\"container\">\n                      <div class=\"row qlc-table-header-white sub-page\">\n                          <div class=\"col-12\">Raw Block Data</div>\n                      </div>\n                      <div class=\"row qlc-table-row-white sub-page\">\n                          <div class=\"col-12\">\n                              <code><pre>{{ blockJSON }}</pre></code>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n\n\n<div class=\"container mt-4 mb-4\">\n  <div class=\"row\">\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, ChildActivationEnd } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { NodeService } from 'src/app/services/node.service';\nimport { timer } from 'rxjs';\nimport { BlockingProxy } from 'blocking-proxy';\n\n@Component({\n  selector: 'app-pov-view',\n  templateUrl: './pov-view.component.html',\n  styleUrls: ['./pov-view.component.scss']\n})\nexport class PovViewComponent implements OnInit {\n\n  routerSub = null;\n\n  type = '';\n  param = '';\n  block = {\n    \"header\": {\n      \"basHdr\": {\n        \"version\": 0,\n        \"previous\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"merkleRoot\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"timestamp\": 0,\n        \"bits\": 0,\n        \"nonce\": 0,\n        \"hash\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"height\": 0\n      },\n      \"auxHdr\": null,\n      \"cbtx\": {\n        \"version\": 0,\n        \"txIns\": [\n        ],\n        \"txOuts\": [\n        ],\n        \"stateHash\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"txNum\": 0,\n        \"hash\": \"0000000000000000000000000000000000000000000000000000000000000000\"\n      }\n    },\n    \"body\": {\n      \"txs\": [\n      ]\n    },\n    \"algoName\": \"\",\n    \"algoEfficiency\": 0,\n    \"normBits\": 0,\n    \"normDifficulty\": 0,\n    \"algoDifficulty\": 0\n  };\n  blockJSON = '';\n\n  constructor(\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router,\n\t\tprivate api: ApiService,\n    private node: NodeService\n  ) { }\n\n  ngOnInit() {\n    this.routerSub = this.router.events.subscribe(event => {\n\t\t\tif (event instanceof ChildActivationEnd) {\n\t\t\t\tthis.load(); // Reload the state when navigating to itself from the transactions page\n\t\t\t}\n\t\t});\n\t\tthis.load();\n  }\n\n  \n  load() {\n    this.type = '';\n    this.param = '';\n\t\tif (this.node.status === true) {\n      this.type = this.route.snapshot.params.type;\n      this.param = this.route.snapshot.params.hash;\n      \n      //console.log('type');\n      //console.log(this.type);\n      //console.log('param');\n      //console.log(this.param);\n      this.loadBlock();\n\t\t} else {\n\t\t\tthis.reload();\n\t\t}\n\t}\n\n\tasync reload() {\n\t\tconst source = timer(200);\n\t\tconst abc = source.subscribe(async val => {\n\t\t\tthis.load();\n\t\t});\n  }\n\n  async loadBlock() {\n    this.block = null;\n    this.blockJSON = '';\n    if (this.type != 'hash' && this.type != 'height') {\n\n      //console.log('wrong type');\n      return;\n    }\n\n    if (this.type == 'hash') {\n      const blockQuery = await this.api.getBlockByHash(this.param);\n      if (!blockQuery.error) {\n        this.block = blockQuery.result;\n      }\n    }\n    if (this.type == 'height') {\n      const blockQuery = await this.api.getBlockByHeight(this.param);\n      if (!blockQuery.error) {\n        this.block = blockQuery.result;\n      }\n    }\n    this.blockJSON = JSON.stringify(this.block, null, 4);\n    //console.log(this.block);\n\n  }\n\n}\n","<app-user-submenu></app-user-submenu>\n\n<div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n  <div class=\"row\">\n    <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <!-- TITLE -->\n          <div class=\"col-md-6 col-12 mt-2 pl-2 pr-2\">\n            <div class=\"content-title\">\n              <h1 class=\"neo\">My Miners</h1>\n            </div>\n          </div>\n          <div class=\"col-md-3 col-12 pl-2 pr-2\">\n            <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 mr-md-3 \" (click)=\"checkMiners()\">\n              Refresh\n            </button>\n          </div>\n          <div class=\"col-md-3 col-12 pl-2 pr-2 pt-md-0 pt-2\">\n            <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 \"  routerLink=\"/mining\">\n              Mining Status\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"container accounts pt-3\">\n  <div class=\"row\">\n    \n    <!-- LIST -->\n    <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n      <div class=\"content-box-white\">\n        \n        \n        <div class=\"container\">\n          \n          <div class=\"row qlc-table-header\">\n            <div class=\"col-xl-3 col-lg-3 col-md-4 col-sm-4 col-7 text-truncate\">Miner Address</div>\n            <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4\">Status</div>\n            <div class=\"col-xl-1 col-lg-1 pr-sm-0 pr-4 d-none d-lg-block\">Main Block</div>\n            <div class=\"col-xl-1 col-lg-1 pr-sm-0 pr-4 d-none d-lg-block text-center\">Reward</div>\n            <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pr-sm-0 pr-4 text-right\">Blocks height</div>\n            <div class=\"col-xl-3 col-lg-3 col-md-4 col-sm-4 d-none d-sm-block col-5 pr-4 text-right\">Time</div>\n          </div>\n\n          \n          <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngIf=\"minerAccounts.length == 0 && minerAccountsNotStarted.length == 0\">\n            <div class=\"col-12 pb-0 text-center\">\n                <p class=\"text-center pt-2 pb-2\"><span class=\"title-modal-blue mt-0 mb-4\">You are not a miner yet</span><br>\n                  Stake 100k QLC and start mining.</p>\n            </div>\n          </div>\n\n          <div class=\"row qlc-table-row qlc-table-row-twolines closed\"  *ngFor=\"let miner of minerAccountsNotStarted\">\n            <div class=\"col-12\">\n                <a [routerLink]=\"'/wallets/qlc/' + miner.id\">{{ miner.id | squeeze : '25,25' }}</a>\n            </div>\n            <div class=\"col-12 pb-0 text-center\">\n\n                <p class=\"text-center pt-2 pb-2\"><span class=\"title-modal-blue mt-0 mb-4\">You have enough staking to start mining</span><br>\n                  Learn more about how to set up your miner here:<br>\n                  <a href=\"https://docs.qlcchain.online/tutorial/getstarted/#pov-mining\" target=\"_blank\">https://docs.qlcchain.online/tutorial/getstarted/#pov-mining</a></p>\n\n            </div>\n          </div>\n          \n          <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let miner of minerAccounts\">\n            <div class=\"d-none d-xl-block col-xl-3 pb-0\">\n              <a [routerLink]=\"'/wallets/qlc/' + miner.minerInfo.address\">{{ miner.minerInfo.address | squeeze : '18,18' }}</a>\n            </div>\n            <div class=\"d-none d-lg-block d-xl-none col-lg-3 pb-0\">\n              <a [routerLink]=\"'/wallets/qlc/' + miner.minerInfo.address\">{{ miner.minerInfo.address | squeeze : '16,16' }}</a>\n            </div>\n            <div class=\"d-none d-md-block d-lg-none col-md-4 pb-0\">\n              <a [routerLink]=\"'/wallets/qlc/' + miner.minerInfo.address\">{{ miner.minerInfo.address | squeeze : '10,10' }}</a><br>\n              <span><span class=\"text-color-lightgrey text-tiny\">Main Block:</span> {{ miner.minerInfo.mainBlockNum }}</span><br>\n              <span class=\"text-color-lightgrey text-tiny\">Reward: </span>{{ miner.minerInfo.mainRewardAmount | qlc: '8' | squeezeNumber: '8,2' | currency:'':'':'1.2-8' }} QGAS\n            </div>\n            <div class=\"d-none d-sm-block d-md-none col-sm-4 pb-0\">\n              <a [routerLink]=\"'/wallets/qlc/' + miner.minerInfo.address\">{{ miner.minerInfo.address | squeeze : '8,8' }}</a><br>\n              <span><span class=\"text-color-lightgrey text-tiny\">Main Block:</span> {{ miner.minerInfo.mainBlockNum }}</span><br>\n              <span class=\"text-color-lightgrey text-tiny\">Reward: </span>{{ miner.minerInfo.mainRewardAmount | qlc: '8' | squeezeNumber: '8,2' | currency:'':'':'1.2-8' }} QGAS\n            </div>\n            <div class=\"d-block d-sm-none col-5 pb-0\">\n              <a [routerLink]=\"'/wallets/qlc/' + miner.minerInfo.address\">{{ miner.minerInfo.address | squeeze : '8,8' }}</a><br>\n              <span><span class=\"text-color-lightgrey text-tiny\">Main Block:</span> {{ miner.minerInfo.mainBlockNum }}</span><br>\n              <span class=\"text-color-lightgrey text-tiny\">Reward: </span>{{ miner.minerInfo.mainRewardAmount | qlc: '8' | squeezeNumber: '8,2' | currency:'':'':'1.2-8' }} QGAS\n            </div>\n            <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">\n              <span class=\"qlc-icon icon-Online24h-{{ miner.minerInfo.isDayOnline }}\" style=\"height:24px;\" title=\"24 Hours Online: {{ miner.minerInfo.isDayOnline }}\"></span>\n              <span class=\"d-none d-sm-none d-md-inline-block txState\">\n                <span class=\"text-bold-grey\">24h Online</span>\n              </span>\n              <br>\n              <span class=\"qlc-icon icon-Online1h-{{ miner.minerInfo.isHourOnline }}\" style=\"height:24px;\" title=\"Last Hour Online: {{ miner.minerInfo.isHourOnline }}\"></span>\n              <span class=\"d-none d-sm-none d-md-inline-block txState\">\n                <span class=\"text-bold-grey\">1h Online</span>\n              </span>\n            </div>\n            <div class=\"col-xl-1 col-lg-1 d-none d-lg-block pr-sm-0 pr-4\">\n                {{ miner.minerInfo.mainBlockNum }}\n            </div>\n            <div class=\"col-xl-1 col-lg-1 d-none d-lg-block pr-sm-0 pr-4 text-center\">\n              {{ miner.minerInfo.mainRewardAmount | qlc: '8' | squeezeNumber: '8,2' | currency:'':'':'1.2-8' }} <br>QGAS\n            </div>\n            <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-5 pb-0 pr-sm-0 pr-4 text-right\" >\n              <span class=\"text-color-lightgrey text-tiny\">First Block Height:</span> {{ miner.minerInfo.firstBlockHeight }}\n              <br>\n              <span class=\"text-color-lightgrey text-tiny\">Last Block Height:</span> {{ miner.minerInfo.lastBlockHeight }}               \n            </div>\n            <div class=\"col-xl-3 col-lg-3 col-md-4 col-sm-4 col-12 pr-4 text-right\">\n              <span class=\"text-color-lightgrey text-tiny\">First Block Time:</span> {{ miner.minerInfo.firstBlockTime | date: 'short' }}\n              <br>\n              <span class=\"text-color-lightgrey text-tiny\">Last Block Time:</span> {{ miner.minerInfo.lastBlockTime | date: 'short' }}\n            </div>\n          \n          </div>\n\n        </div>\n\n      </div>\n    </div>\n\n  </div>\n</div>\n\n<!-- NO MINER -->\n<div *ngIf=\"minerAccounts.length == 0 && minerAccountsNotStarted.length == 0\">\n  <div class=\"container mt-0\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <!-- TITLE -->\n            <div class=\"col-md-12 col-12 mt-2 pl-2 pr-2\">\n              <div class=\"content-title\">\n                <h1 class=\"neo\"><span >Your Mining Rewards</span></h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container accounts pt-3\">\n    <div class=\"row\">\n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n        <div class=\"content-box-white\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-5 col-lg-4 col-md-4 col-sm-4 col-6 text-truncate\">Miner Address</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4\">Reward</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Info</div>\n              <div class=\"col-xl-3 col-lg-4 col-md-4 col-sm-4 d-none d-sm-block col-5 pr-4 text-right\">Block heights</div>\n            </div>\n            <div class=\"row qlc-table-row qlc-table-row-twolines closed\">\n              <div class=\"col-12 pb-0 text-center\">\n                <p class=\"text-center pt-2 pb-2\"><span class=\"title-modal-blue mt-0 mb-4\">You are not a miner yet</span><br>\n                  Stake 100k QLC and start mining.</p>\n              </div>\n            </div>            \n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container mt-0\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <!-- TITLE -->\n            <div class=\"col-md-12 col-12 mt-2 pl-2 pr-2\">\n              <div class=\"content-title\">\n                <h1 class=\"neo\"><span >Mining Reward History</span></h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row pb-4\">\n      <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n        <div class=\"content-box-blue bg-blue-voting\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">Reward Amount</div>\n            </div>\n            <div class=\"row qlc-table-row-blue\">\n              <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\">0,00 QGAS</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n        <div class=\"content-box-blue bg-blue-blocks\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">Reward Blocks</div>\n            </div>\n            <div class=\"row qlc-table-row-blue\">\n              <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\">/</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n        <div class=\"content-box-blue bg-blue-blocks\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">Last End Height</div>\n            </div>\n            <div class=\"row qlc-table-row-blue\">\n              <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\">/</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n        <div class=\"content-box-blue bg-blue-transactions\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">Last Reward Time</div>\n            </div>\n            <div class=\"row qlc-table-row-blue\">\n              <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\">/</div>\n            </div>\n          </div>\n        </div>\n      </div>     \n    </div>\n  </div>\n</div>\n\n<!-- LOOP ALL REWARDS-->\n\n<!-- NOT STARTED MINERS -->\n\n<div *ngFor=\"let miner of minerAccountsNotStarted\" >\n  <div class=\"container mt-0\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <!-- TITLE -->\n            <div class=\"col-md-12 col-12 mt-2 pl-2 pr-2\">\n              <div class=\"content-title\">\n                <h1 class=\"neo\"><span >Your Mining Rewards</span></h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container accounts pt-3\">\n    <div class=\"row\">\n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n        <div class=\"content-box-white\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-5 col-lg-4 col-md-4 col-sm-4 col-6 text-truncate\">Miner Address</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4\">Reward</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Info</div>\n              <div class=\"col-xl-3 col-lg-4 col-md-4 col-sm-4 d-none d-sm-block col-5 pr-4 text-right\">Block heights</div>\n            </div>\n            <div class=\"row qlc-table-row qlc-table-row-twolines closed\">\n                <div class=\"col-12\">\n                    <a [routerLink]=\"'/wallets/qlc/' + miner.id\">{{ miner.id | squeeze : '25,25' }}</a>\n                </div>\n                <div class=\"col-12 pb-0 text-center\">\n                    <p class=\"text-center pt-2 pb-2\"><span class=\"title-modal-blue mt-0 mb-4\">You have enough staking to start mining</span><br>\n                      Learn more about how to set up your miner here:<br>\n                      <a href=\"https://docs.qlcchain.online/tutorial/getstarted/#pov-mining\" target=\"_blank\">https://docs.qlcchain.online/tutorial/getstarted/#pov-mining</a></p>\n                </div>\n            </div>            \n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container mt-0\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <!-- TITLE -->\n            <div class=\"col-md-12 col-12 mt-2 pl-2 pr-2\">\n              <div class=\"content-title\">\n                <h1 class=\"neo\"><span >Mining Reward History</span></h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row pb-4\">\n      <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n        <div class=\"content-box-blue bg-blue-voting\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">Reward Amount</div>\n            </div>\n            <div class=\"row qlc-table-row-blue\">\n              <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\">0,00 QGAS</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n        <div class=\"content-box-blue bg-blue-blocks\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">Reward Blocks</div>\n            </div>\n            <div class=\"row qlc-table-row-blue\">\n              <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\">/</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n        <div class=\"content-box-blue bg-blue-blocks\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">Last End Height</div>\n            </div>\n            <div class=\"row qlc-table-row-blue\">\n              <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\">/</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n        <div class=\"content-box-blue bg-blue-transactions\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">Last Reward Time</div>\n            </div>\n            <div class=\"row qlc-table-row-blue\">\n              <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\">/</div>\n            </div>\n          </div>\n        </div>\n      </div>     \n    </div>\n  </div>\n</div>\n\n\n<!-- NEW MINING REWARDS -->\n<div *ngFor=\"let miner of minerAccounts\">\n\n    <div class=\"container mt-0\">\n      <div class=\"row\">\n        <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <!-- TITLE -->\n              <div class=\"col-md-12 col-12 mt-2 pl-2 pr-2\">\n                <div class=\"content-title\">\n                  <h1 class=\"neo\"><span *ngIf=\"miner.minerRewards.status == 0\">Checking for Mining Rewards...</span></h1>\n                  <h1 class=\"neo\"><span *ngIf=\"miner.minerRewards.status == -1\">Your Mining Rewards</span></h1>\n                  <h1 class=\"neo\"><span *ngIf=\"miner.minerRewards.status == 1\">Your Mining Rewards</span></h1>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"container accounts pt-3\">\n      <div class=\"row\">\n        \n        <!-- LIST -->\n        <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n          <div class=\"content-box-white\">\n            \n            \n            <div class=\"container\">\n              \n              <div class=\"row qlc-table-header\">\n                <div class=\"col-xl-5 col-lg-4 col-md-4 col-sm-4 col-6 text-truncate\">Miner Address</div>\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4\">Reward</div>\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Info</div>\n                <div class=\"col-xl-3 col-lg-4 col-md-4 col-sm-4 d-none d-sm-block col-5 pr-4 text-right\">Block heights</div>\n              </div>\n              \n              <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngIf=\"miner.minerRewards.status == 1\">\n\n                <div class=\"d-none d-xl-block col-xl-5 pb-0\">\n                  <a [routerLink]=\"'/wallets/qlc/' + miner.minerInfo.address\">{{ miner.minerInfo.address | squeeze : '25,25' }}</a><br>\n                  <span class=\"text-color-lightgrey text-tiny\">Last Claimed At Node Height:</span> {{ miner.minerRewards.data.lastEndHeight }} \n                </div>\n                <div class=\"d-none d-lg-block d-xl-none col-lg-4 pb-0\">\n                  <a [routerLink]=\"'/wallets/qlc/' + miner.minerInfo.address\">{{ miner.minerInfo.address | squeeze : '18,18' }}</a><br>\n                  <span class=\"text-color-lightgrey text-tiny\">Last Claimed At Node Height:</span> {{ miner.minerRewards.data.lastEndHeight }} \n                </div>\n                <div class=\"d-none d-md-block d-lg-none col-md-4 pb-0\">\n                  <a [routerLink]=\"'/wallets/qlc/' + miner.minerInfo.address\">{{ miner.minerInfo.address | squeeze : '10,10' }}</a><br>\n                  <span class=\"text-color-lightgrey text-tiny\">Last Claimed At Node Height:</span> {{ miner.minerRewards.data.lastEndHeight }} \n                </div>\n                <div class=\"d-none d-sm-block d-md-none col-sm-4 pb-0\">\n                  <a [routerLink]=\"'/wallets/qlc/' + miner.minerInfo.address\">{{ miner.minerInfo.address | squeeze : '8,8' }}</a><br>\n                  <span class=\"text-color-lightgrey text-tiny\">Last Claimed At Node Height:</span> {{ miner.minerRewards.data.lastEndHeight }} \n                </div>\n                <div class=\"d-block d-sm-none col-6 pb-0\">\n                  <a [routerLink]=\"'/wallets/qlc/' + miner.minerInfo.address\">{{ miner.minerInfo.address | squeeze : '8,8' }}</a><br>\n                  <span class=\"text-color-lightgrey text-tiny\">Last Claimed At Node Height:</span> {{ miner.minerRewards.data.lastEndHeight }} \n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">\n                  <span class=\"text-color-lightgrey text-tiny\"> </span> <span class=\"text-color-green\">+{{ miner.minerRewards.data.availRewardAmount | qlc : 8 }}</span> QGAS<br>\n                  <span class=\"text-color-lightgrey text-tiny\">Reward Blocks:</span> {{ miner.minerRewards.data.availRewardBlocks }}<br>\n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pb-0 pr-sm-0 pr-4 text-right\" >\n                  <span class=\"text-color-lightgrey text-tiny\">Block Start Height:</span> {{ miner.minerRewards.data.availStartHeight }}<br>\n                  <span class=\"text-color-lightgrey text-tiny\">Block End Height:</span> {{ miner.minerRewards.data.availEndHeight }}\n                </div>\n                <div class=\"col-xl-3 col-lg-4 col-md-4 col-sm-4 col-5 pr-4 text-right\">\n                  <span class=\"text-color-lightgrey text-tiny\">Latest Block Height:</span> {{ miner.minerRewards.data.latestBlockHeight }} <br>\n                  <span class=\"text-color-lightgrey text-tiny\">Latest Node Reward Height:</span> {{ miner.minerRewards.data.nodeRewardHeight }} \n                </div>\n              \n              </div>\n              <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngIf=\"miner.minerRewards.status == -1\">\n                <div class=\"col-12 pb-0 text-center\">\n                  <p class=\"text-center pt-2 pb-2\"><span class=\"title-modal-blue mt-0 mb-4\">You have currently no Rewards</span><br>\n                    The Rewards of the recent 1440 POV blocks are reserved.</p>\n                </div>\n              </div>\n\n              <!-- REWARD CLAIMING -->\n              <div class=\"row rowAmount pl-3 pl-sm-3 pl-sm-3 pr-3 pr-sm-3 pr-sm-3 pt-0 mt-0 pb-3 pt-4\" *ngIf=\"miner.minerRewards.showGetReward == 1\">\n                <div class=\"w-100\">\n                  <div class=\"row pt-1 pb-2\" style=\"border-bottom: none !important;\">\n                    <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2 pl-4\">\n                      Beneficial Address\n                    </div>\n                    <div class=\"col-md-9 text-left\" [formGroup]=\"miningForm\">\n                      <div class=\"form-group\" >\n                        <select class=\"custom-select\" formControlName=\"beneficial\" >\n                          <option *ngFor=\"let account of accounts\" [value]=\"account.id\"\n                          >{{ account.addressBookName ? account.addressBookName + ' - ' : '' }} {{ account.id }}</option>\n                        </select>\n                        <p style=\"max-width:100%;font-size:11px;padding-left:16px;padding-top:8px;\"></p>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-3\">&nbsp;</div>\n                    <div class=\"col-lg-9 col-md-9 col-sm-12 col-12 pr-0 pl-md-2 pr-md-2\">\n                      <button (click)=\"getReward(miner.account.id)\" type=\"submit\" class=\"btn btn-primary ml-2 mb-4\" >\n                        GET REWARD\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div *ngIf=\"miner.minerRewards.showProcessingReward == 1\">\n                \n                <p class=\"text-center pt-5\"><span class=\"title-modal-blue mt-0 mb-4\">Please wait</span><br>\n                  Processing your reward...</p>\n                \n                <div class=\"container\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6 offset-md-3 mt-2 mb-5 pb-3\">\n                      \n                      <div id=\"noTrespassingOuterBarG\">\n                        <div id=\"noTrespassingFrontBarG\" class=\"noTrespassingAnimationG\">\n                          <div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div>\n                          <div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div>\n                        </div>\n                      </div>\n                      \n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\" *ngIf=\"miner.minerRewards.showError == 1\">\n                <div class=\"col-12\">\n                  ERROR - {{ miner.minerRewards.errorTxt }}\n                </div>\n              </div>\n              <div class=\"row\" *ngIf=\"miner.minerRewards.showBlockProcessed == 1\">\n                <div class=\"col-12 mb-5 text-center\">\n                    <p class=\"text-center pt-5\"><span class=\"title-modal-blue mt-0 mb-4\">Reward block processed</span><br>\n                      <span class=\"text-tiny text-color-lightgrey pt-3\">Reward block hash</span><br>\n                      <a routerLink=\"/transaction/{{ miner.minerRewards.rewardProcessHash }}\">{{ miner.minerRewards.rewardProcessHash }}</a></p>\n\n                    <!--Please go to your <a >account</a> to claim the reward.-->\n                    <button (click)=\"checkMiners()\" type=\"submit\" class=\"btn btn-primary mt-3 mr-2 ml-2\" >\n                      CHECK FOR MORE REWARDS\n                    </button>\n                    <button routerLink=\"/wallets/qlc/{{ miner.account.id }}\" type=\"submit\" class=\"btn btn-primary mt-3 mr-2 ml-2\" >\n                      CLAIM YOUR REWARDS\n                    </button>\n                </div>\n              </div>\n\n              \n            </div>\n\n          </div>\n        </div>\n\n      </div>\n    </div>\n\n\n    <!-- REWARDS HISTORY -->\n\n    <div class=\"container mt-0\">\n      <div class=\"row\">\n        <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <!-- TITLE -->\n              <div class=\"col-md-12 col-12 mt-2 pl-2 pr-2\">\n                <div class=\"content-title\">\n                  <h1 class=\"neo\"><span *ngIf=\"miner.minerHistory.status == 0\">Checking for Mining Reward History...</span></h1>\n                  <h1 class=\"neo\"><span *ngIf=\"miner.minerHistory.status == -1\">Mining Reward History</span></h1>\n                  <h1 class=\"neo\"><span *ngIf=\"miner.minerHistory.status == 1\">Mining Reward History</span></h1>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row pb-4\">\n\n        <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n          <div class=\"content-box-blue bg-blue-voting\">\n            <div class=\"container\">\n              <div class=\"row qlc-table-header-blue\">\n                <div class=\"col-12\">Reward Amount</div>\n              </div>\n              <div class=\"row qlc-table-row-blue\">\n                <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\" *ngIf=\"miner.minerHistory.status == 1\">{{ miner.minerHistory.data.rewardAmount | qlc : 8 | number: '1.2-2' }} QGAS</div>\n                <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\" *ngIf=\"miner.minerHistory.status == -1\">0,00 QGAS</div>\n              </div>\n            </div>\n          </div>\n        </div>\n    \n        <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n          <div class=\"content-box-blue bg-blue-blocks\">\n            <div class=\"container\">\n              <div class=\"row qlc-table-header-blue\">\n                <div class=\"col-12\">Reward Blocks</div>\n              </div>\n              <div class=\"row qlc-table-row-blue\">\n                <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\" *ngIf=\"miner.minerHistory.status == 1\">{{ miner.minerHistory.data.rewardBlocks }}</div>\n                <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\" *ngIf=\"miner.minerHistory.status == -1\">/</div>\n              </div>\n            </div>\n          </div>\n        </div>\n    \n        <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n          <div class=\"content-box-blue bg-blue-blocks\">\n            <div class=\"container\">\n              <div class=\"row qlc-table-header-blue\">\n                <div class=\"col-12\">Last End Height</div>\n              </div>\n              <div class=\"row qlc-table-row-blue\">\n                <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\" *ngIf=\"miner.minerHistory.status == 1\">{{ miner.minerHistory.data.lastEndHeight }}</div>\n                <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\" *ngIf=\"miner.minerHistory.status == -1\">/</div>\n              </div>\n            </div>\n          </div>\n        </div>\n    \n        <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n          <div class=\"content-box-blue bg-blue-transactions\">\n            <div class=\"container\">\n              <div class=\"row qlc-table-header-blue\">\n                <div class=\"col-12\">Last Reward Time</div>\n              </div>\n              <div class=\"row qlc-table-row-blue\">\n                <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\" *ngIf=\"miner.minerHistory.status == 1\">{{ miner.minerHistory.data.lastRewardTime * 1000 | date: 'short' }}</div>\n                <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\" *ngIf=\"miner.minerHistory.status == -1\">/</div>\n              </div>\n            </div>\n          </div>\n        </div>        \n    \n      </div>\n    </div>\n\n\n\n\n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport { ApiService } from 'src/app/services/api.service';\nimport { QLCBlockService } from 'src/app/services/qlc-block.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-mining-reward',\n  templateUrl: './mining-reward.component.html',\n  styleUrls: ['./mining-reward.component.scss']\n})\nexport class MiningRewardComponent implements OnInit {\n\n  accounts = this.walletService.wallet.accounts;\n  minerAccounts = [];\n  minerAccountsNotStarted = [];\n  nonMinerAccounts = [];\n\n  minerStats = [];\n\n  miningForm = new FormGroup({\n    qlcAddress: new FormControl('',Validators.required),\n    beneficial: new FormControl('',Validators.required),\n    sentHash: new FormControl('',Validators.required),\n  });\n\n  showGetReward = 0;\n  availRewardAmount = 0;\n  showNoRewardAvailabe = 0;\n  showChecking = 0;\n  showCheckOtherAddress = 0;\n  showError = 0;\n  errorMsg = '';\n  showPreparingBlock = 0;\n  showProcessingBlock = 0;\n  showBlockProcessed = 0;\n  rewardProcessHash = '';\n\n  miningReward = {};\n\n\n  constructor(\n    private walletService: WalletService,\n    private api: ApiService,\n    private blockService: QLCBlockService,\n    private notifications: NotificationService,\n    private route: ActivatedRoute\n  ) { }\n\n  async ngOnInit() {\n    this.miningForm.get('qlcAddress').setValue(this.accounts[0].id);\n    this.miningForm.get('beneficial').setValue(this.accounts[0].id);\n    await this.getMinerStats();\n\n    for (const account of this.accounts) { // check if any account address is a miner\n      const isMiner = this.minerStats.find(o => o.address === account.id);\n      if (isMiner) {\n        this.minerAccounts.push({\n          account , \n          minerInfo : isMiner, \n          minerHistory: {\n            status: 0\n          }, \n          minerRewards: {\n            status: 0,\n            showGetReward: 0,\n            showProcessingReward: 0,\n            showError: 0,\n            errorTxt: '',\n            rewardProcessHash: '',\n            showBlockProcessed: 0\n          } \n        });\n      } else {\n        //console.log('.................checking account state');\n        const repStatus = await this.api.pov_getLatestAccountState(account.id);\n        if (repStatus.result) {\n          //console.log(repStatus);\n          if (repStatus.result.accountState && repStatus.result.accountState != null) {\n            if (repStatus.result.accountState.vote && repStatus.result.accountState.vote >= 10000000000000) {\n              //console.log('found minerAccountsNotStarted');\n              //console.log(account)\n              this.minerAccountsNotStarted.push(account);\n            } else {\n              this.nonMinerAccounts.push(account);\n            }\n          } else {\n            this.nonMinerAccounts.push(account);\n          }\n        } else {\n          this.nonMinerAccounts.push(account);\n        }\n      }\n    }\n    this.checkMiners();\n    //console.log(this.minerAccounts);\n    //console.log(this.nonMinerAccounts);\n  }\n\n  async checkMiners() {\n    for (let miner of this.minerAccounts) {\n      miner.minerRewards.status = 0;\n      miner.minerRewards.data = {};\n      miner.minerRewards.showGetReward = 0;\n      miner.minerRewards.showProcessingReward = 0;\n      miner.minerRewards.showError = 0;\n      miner.minerRewards.errorTxt = '';\n      miner.minerRewards.rewardProcessHash = '';\n      miner.minerRewards.showBlockProcessed = 0;\n      miner.minerHistory.status = 0;\n\n      const availRewardInfoQuery = await this.api.getAvailRewardInfo(miner.account.id);\n      if (availRewardInfoQuery.result) {\n        if (availRewardInfoQuery.result.needCallReward == true) {\n          // reward\n          miner.minerRewards.status = 1;\n          miner.minerRewards.data = availRewardInfoQuery.result;\n          miner.minerRewards.showGetReward = 1;\n        } else {\n          // no reward found\n          miner.minerRewards.status = -1;\n\n        }\n      }\n      const availRewardHistoryInfoQuery = await this.api.miner_getRewardHistory(miner.account.id);\n      if (availRewardHistoryInfoQuery.result) {\n        // reward history\n        miner.minerHistory.status = 1;\n        miner.minerHistory.data = availRewardHistoryInfoQuery.result;\n        //console.log(miner.minerHistory);\n      } else {\n        // no reward found\n        miner.minerHistory.status = -1;\n        \n      }\n      //console.log(this.minerAccounts);\n    }\n  }\n\n  async getMinerStats() {\n    const minerStatsQuery = await this.api.getMinerStats();\n    if (minerStatsQuery.result) {\n      const minerStats = minerStatsQuery.result.minerStats;\n      let displayMinerStats = [];\n      for (var key in minerStats) {\n        //console.log(minerStats[key]);\n        displayMinerStats.push({\n          \"address\" : key,\n          \"mainBlockNum\": minerStats[key].mainBlockNum,\n          \"mainRewardAmount\": minerStats[key].mainRewardAmount,\n          \"firstBlockTime\": minerStats[key].firstBlockTime,\n          \"lastBlockTime\": minerStats[key].lastBlockTime,\n          \"firstBlockHeight\": minerStats[key].firstBlockHeight,\n          \"lastBlockHeight\": minerStats[key].lastBlockHeight,\n          \"isHourOnline\": minerStats[key].isHourOnline,\n          \"isDayOnline\": minerStats[key].isDayOnline\n        });\n      }\n      displayMinerStats.sort(this.compareMinerStats);\n      this.minerStats = displayMinerStats;\n      return true;\n    }\n    return false;\n    //console.log(this.minerStats);\n  }\n\n  compareMinerStats( a, b ) {\n    /*if ( a.isHourOnline > b.isHourOnline ){\n      return -1;\n    }\n    if ( a.isHourOnline < b.isHourOnline ){\n      return 1;\n    }\n    return 0;*/\n    return b.isDayOnline - a.isDayOnline || b.isHourOnline - a.isHourOnline;\n  }\n\n  resetForm() {\n    this.showChecking = 0;\n    this.showGetReward = 0;\n    this.showNoRewardAvailabe = 0;\n    this.showCheckOtherAddress = 0;\n    this.showError = 0;\n    this.errorMsg = '';\n    this.showPreparingBlock = 0;\n    this.showProcessingBlock = 0;\n    this.showBlockProcessed = 0;\n    this.rewardProcessHash = '';\n  }\n\n  async checkForm() {\n    if (this.walletService.walletIsLocked()) {\n\t\t\treturn this.notifications.sendWarning('ERROR wallet locked');\n    }\n    this.showChecking = 1;\n    const qlcAddress = this.miningForm.value.qlcAddress;\n\n    const availRewardInfoQuery = await this.api.getAvailRewardInfo(qlcAddress);\n\n    if (availRewardInfoQuery.result) {\n      if (availRewardInfoQuery.result.needCallReward == true) {\n        //console.log('availRewardInfoQuery.result.needCallReward true');\n        this.showGetReward = 1;\n        this.miningReward = availRewardInfoQuery.result;\n        this.availRewardAmount = availRewardInfoQuery.result.availRewardAmount;\n      } else {\n        this.showGetReward = 0;\n        this.showNoRewardAvailabe = 1;\n      }\n    }\n    \n    this.showCheckOtherAddress = 1;\n\n  }\n\n  async getReward(qlcAddress) {\n    if (this.walletService.walletIsLocked()) {\n\t\t\treturn this.notifications.sendWarning('ERROR wallet locked');\n    }\n    let miner = this.minerAccounts.find(o => o.account.id === qlcAddress);\n    miner.minerRewards.showError = 0;\n    miner.minerRewards.errorTxt = '';\n    miner.minerRewards.showGetReward = 0;\n    miner.minerRewards.showProcessingReward = 1;\n\n    const beneficial = this.miningForm.value.beneficial;\n    //console.log(\"beneficial\");\n    //console.log(beneficial);\n    const availRewardInfoQuery = await this.api.getAvailRewardInfo(qlcAddress);\n\n    if (availRewardInfoQuery.result) {\n      const availRewardInfo = availRewardInfoQuery.result;\n      if (availRewardInfo.needCallReward == true) {\n        const rewardSendBlock = await this.api.getRewardSendBlock(qlcAddress,beneficial,availRewardInfo.availStartHeight,availRewardInfo.availEndHeight,availRewardInfo.availRewardBlocks,availRewardInfo.availRewardAmount);\n        //console.log(\"rewardSendBlock\");\n        //console.log(rewardSendBlock);\n        if (!rewardSendBlock.result) {\n          miner.minerRewards.showProcessingReward = 0;\n          miner.minerRewards.showError = 1;\n          miner.minerRewards.errorTxt = 'Error getting reward block, please try again later.';\n          miner.minerRewards.showGetReward = 1;\n          return;\n        }\n        const walletAccount = await this.walletService.getWalletAccount(qlcAddress);\n        //this.showPreparingBlock = 0;\n        //this.showProcessingBlock = 1;\n        const processRewardSend = await this.blockService.processBlockWithPov(rewardSendBlock.result,walletAccount.keyPair);\n        if (!processRewardSend.result) {\n          miner.minerRewards.showProcessingReward = 0;\n          miner.minerRewards.showError = 1;\n          miner.minerRewards.errorTxt = 'Error processing reward block. (' + processRewardSend.error.message + ')';\n          miner.minerRewards.showGetReward = 1;\n          return;\n        }\n        miner.minerRewards.rewardProcessHash = processRewardSend.result;\n        miner.minerRewards.showProcessingReward = 0;\n        miner.minerRewards.showBlockProcessed = 1;\n        \n        //console.log(processRewardSend);\n      } else {\n        miner.minerRewards.showProcessingReward = 0;\n        miner.minerRewards.showError = 1;\n        miner.minerRewards.errorTxt = 'The reward was already claimed, try again tomorrow.';\n      }\n    }\n\n    return;\n    \n  }\n\n  async receiveReward() {\n    \n    const sentHash = this.miningForm.value.sentHash;\n    //console.log(sentHash);\n    const rewardRecvBlockQuery = await this.api.getRewardRecvBlockBySendHash(sentHash);\n    //console.log(rewardRecvBlockQuery);\n    const qlcAddress = this.miningForm.value.qlcAddress;\n    const walletAccount = await this.walletService.getWalletAccount(qlcAddress);\n    const procesRewardRecv = await this.blockService.processBlockWithPov(rewardRecvBlockQuery.result,walletAccount.keyPair);\n    //console.log(procesRewardRecv);\n  }\n\n}\n","<app-user-submenu></app-user-submenu>\n\n<div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n  <div class=\"row\">\n    <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <!-- TITLE -->\n          <div class=\"col-md-6 col-12 mt-2 pl-2 pr-2\">\n            <div class=\"content-title\">\n              <h1 class=\"neo\">Mining Status</h1>\n            </div>\n          </div>\n          <div class=\"col-md-3 col-12 pl-md-2 pr-md-2 pl-2 pr-2\">\n            <!--<button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 neo-background-light\" routerLink=\"/dashboard\">\n              Back to Dashboard\n            </button>-->\n          </div>\n          <div class=\"col-md-3 col-12 pl-2 pr-2 pt-md-0 pt-2\">\n            <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 \" routerLink=\"/mining/reward\">\n              Check My Miners Rewards\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-blocks\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">Latest POV Height</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12\">{{ povHeadersCount | currency:'':'':'1.0-0' }} </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-miners\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">Number of miners</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12\">{{ minersNum | currency:'':'':'1.0-0' }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-signatures\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">Difficulty</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12 text-truncate\">{{ prepareDifficulty(povLatestHeader.normDifficulty) }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-transactions\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">Total mined Qgas Amount</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12\">{{ totalQgasMined | qlc: 8 | currency:'':'':'1.2-2' }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"container pl-2 pr-2 mt-3\">\n    <div class=\"row\">\n        <div class=\"col-md-12 col-12 mb-0 mt-2 pl-3 pr-3 pb-2\">\n          <div class=\"content-box-white pl-4 pr-4 pt-4 pb-4 ml-2 mr-2 ml-md-0 mr-md-0\">\n    \n              <p class=\"pt-1\"><span class=\"title-modal-blue mt-0 mb-4\">Miner Reward Rules:</span></p>\n              <p></p>\n                \n              <ul style=\"margin-left:-24px;\">\n                <li>Active your QLC Chain account.</li>\n                <li>Got 100K staked voting power.</li>\n                <li>Run a QLC Chain node and Mining service. Recommended Mining Configuration: CPU/GPU/ASIC miner together with gqlc-stratum.</li>\n              </ul>\n            \n              \n          </div>\n        </div>\n    </div>\n</div>\n<div class=\"container pl-2 pr-2 mt-3\">\n  <div class=\"content-box-white\">\n    <div class=\"container\">\n      \n      \n      <div class=\"row qlc-table-header\">\n        <div class=\"col-xl-2 col-lg-2 col-md-1 col-sm-2 col-2 pl-4\">Status</div>\n        <div class=\"col-xl-3 col-lg-2 col-md-3 col-sm-6 col-6 text-truncate\">Miner Address</div>\n        <div class=\"col-xl-1 col-lg-1 pr-sm-0 pr-4 d-none d-lg-block text-center\">Main Block</div>\n        <div class=\"col-xl-1 col-lg-1 pr-sm-0 pr-4 d-none d-lg-block text-center\">Reward</div>\n        <div class=\"col-xl-2 col-lg-2 pr-lg-0 col-md-4 pr-md-5 col-sm-4 col-4 pr-md-0 pr-4 text-right\">Blocks height</div>\n        <div class=\"col-xl-3 col-lg-4 col-md-4 col-sm-4 d-none d-md-block col-5 pr-4 text-right\">Time</div>\n      </div>\n      \n      <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let miner of minerStats\">\n        <div class=\"col-xl-2 col-lg-2 col-md-1 col-sm-2 col-2 pl-4 pb-0\">\n          <span class=\"qlc-icon icon-Online24h-{{ miner.isDayOnline }}\" style=\"height:24px;\" title=\"24 Hours Online: {{ miner.isDayOnline }}\"></span>\n          <span class=\"d-none d-sm-none d-lg-inline-block txState\">\n            <span class=\"text-bold-grey\">24h Online</span>\n          </span>\n          <br>\n          <span class=\"qlc-icon icon-Online1h-{{ miner.isHourOnline }}\" style=\"height:24px;\" title=\"Last Hour Online: {{ miner.isHourOnline }}\"></span>\n          <span class=\"d-none d-sm-none d-lg-inline-block txState\">\n            <span class=\"text-bold-grey\">1h Online</span>\n          </span>\n        </div>\n        <div class=\"d-none d-xl-block col-xl-3 pb-0\">\n          <a [routerLink]=\"'/account/' + miner.address\">{{ miner.address | squeeze : '20,20' }}</a>\n        </div>\n        <div class=\"d-none d-lg-block d-xl-none col-lg-2 pb-0\">\n          <a [routerLink]=\"'/account/' + miner.address\">{{ miner.address | squeeze : '10,10' }}</a>\n        </div>\n        <div class=\"d-none d-md-block d-lg-none col-md-3 pb-0\">\n          <a [routerLink]=\"'/account/' + miner.address\">{{ miner.address | squeeze : '10,10' }}</a><br>\n          <span class=\"text-color-lightgrey text-tiny\">Main Block: </span>{{ miner.mainBlockNum }}<br>\n          <span class=\"text-color-lightgrey text-tiny\">Reward: </span>{{ miner.mainRewardAmount | qlc: '8' | squeezeNumber: '8,2' | currency:'':'':'1.2-8' }} QGAS\n        </div>\n        <div class=\"d-none d-sm-block d-md-none col-sm-6 pb-0\">\n          <a [routerLink]=\"'/account/' + miner.address\">{{ miner.address | squeeze : '16,16' }}</a><br>\n          <span class=\"text-color-lightgrey text-tiny\">Main Block: </span>{{ miner.mainBlockNum }}<br>\n          <span class=\"text-color-lightgrey text-tiny\">Reward: </span>{{ miner.mainRewardAmount | qlc: '8' | squeezeNumber: '8,2' | currency:'':'':'1.2-8' }} QGAS\n        </div>\n        <div class=\"d-block d-sm-none col-5 pb-0\">\n          <a [routerLink]=\"'/account/' + miner.address\">{{ miner.address | squeeze : '8,8' }}</a><br>\n          <span class=\"text-color-lightgrey text-tiny\">Main Block: </span>{{ miner.mainBlockNum }}<br>\n          <span class=\"text-color-lightgrey text-tiny\">Reward: </span>{{ miner.mainRewardAmount | qlc: '8' | squeezeNumber: '8,2' | currency:'':'':'1.2-8' }} QGAS\n        </div>\n        <div class=\"col-xl-1 col-lg-1 d-none d-lg-block pr-sm-0 pr-4 text-center\">\n            {{ miner.mainBlockNum }}\n        </div>\n        <div class=\"col-xl-1 col-lg-1 d-none d-lg-block pr-sm-0 pr-4 text-center\">\n          {{ miner.mainRewardAmount | qlc: '8' | squeezeNumber: '8,2' | currency:'':'':'1.2-8' }} <br>QGAS\n        </div>\n        <div class=\"col-xl-2 col-lg-2 pr-lg-0 col-md-4 pr-md-5 col-sm-4 col-5 pb-0 pr-md-0 pr-4 text-right\" >\n          <span class=\"text-color-lightgrey text-tiny\">First Block Height:</span> {{ miner.firstBlockHeight }}\n          <br>\n          <span class=\"text-color-lightgrey text-tiny\">Last Block Height:</span> {{ miner.lastBlockHeight }}               \n        </div>\n        <div class=\"col-xl-3 col-lg-4 col-md-4 col-sm-12 col-12 pr-4 text-right pl-0\">\n          <span class=\"text-color-lightgrey text-tiny\">First Block Time:</span> {{ miner.firstBlockTime | date: 'short' }}\n          <br>\n          <span class=\"text-color-lightgrey text-tiny\">Last Block Time:</span> {{ miner.lastBlockTime | date: 'short' }}\n        </div>\n      </div>\n    </div>\n    \n    \n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport { ApiService } from 'src/app/services/api.service';\nimport { QLCBlockService } from 'src/app/services/qlc-block.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { ActivatedRoute } from '@angular/router';\nimport BigNumber from 'bignumber.js';\n\n@Component({\n  selector: 'app-mining',\n  templateUrl: './mining.component.html',\n  styleUrls: ['./mining.component.scss']\n})\nexport class MiningComponent implements OnInit {\n  accounts = this.walletService.wallet.accounts;\n\n  minerStats = [];\n\n  miningForm = new FormGroup({\n    qlcAddress: new FormControl('',Validators.required),\n    sentHash: new FormControl('',Validators.required),\n  });\n\n  activeView = 'status';\n\n  showGetReward = 0;\n  availRewardAmount = 0;\n  showNoRewardAvailabe = 0;\n  showChecking = 0;\n  showCheckOtherAddress = 0;\n  showError = 0;\n  errorMsg = '';\n  showPreparingBlock = 0;\n  showProcessingBlock = 0;\n  showBlockProcessed = 0;\n  rewardProcessHash = '';\n\n  miningReward = {};\n\n  povHeadersCount = 0;\n  povLatestHeader = {\n\t\"basHdr\": {\n\t  \"version\": 0,\n\t  \"previous\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n\t  \"merkleRoot\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n\t  \"timestamp\": 0,\n\t  \"bits\": 0,\n\t  \"nonce\": 0,\n\t  \"hash\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n\t  \"height\": 0\n\t},\n\t\"auxHdr\": null,\n\t\"cbtx\": {\n\t  \"version\": 0,\n\t  \"txIns\": [\n\t  ],\n\t  \"txOuts\": [\n\t  ],\n\t  \"stateHash\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n\t  \"txNum\": 0,\n\t  \"hash\": \"0000000000000000000000000000000000000000000000000000000000000000\"\n\t},\n\t\"algoName\": \"\",\n\t\"algoEfficiency\": 0,\n\t\"normBits\": 0,\n\t\"normDifficulty\": 0,\n\t\"algoDifficulty\": 0\n  };\n  refreshButton = 'Refresh';\n  minersNum = 0;\n  totalQgasMined = 0;\n\n\n  constructor(\n    private walletService: WalletService,\n    private api: ApiService,\n    private blockService: QLCBlockService,\n    private notifications: NotificationService,\n    private route: ActivatedRoute\n  ) { }\n\n  async ngOnInit() {\n    this.route.url.subscribe((e)=>{\n      if (typeof e[1] != 'undefined') {\n        //console.log(e[1].path);\n        if (e[1].path == 'claim') {\n          this.activeView = e[1].path;\n        } else {\n          this.activeView = 'status';\n        }\n      }\n    });\n    //this.miningForm.get('qlcAddress').setValue(this.accounts[0].id);\n    this.getMinerStats();\n  }\n\n  async getMinerStats() {\n    const latesPovHeader = await this.api.getLatestHeader();\n\t\tif (!latesPovHeader.error) {\n      this.povHeadersCount = latesPovHeader.result.basHdr.height;\n      this.povLatestHeader = latesPovHeader.result;\n\t\t}\n\t\tthis.minersNum = 0;\n\t\tthis.totalQgasMined = 0;\n    const minerStatsQuery = await this.api.getMinerStats();\n    if (minerStatsQuery.result) {\n\t\t\tthis.minersNum = minerStatsQuery.result.minerCount;\n\t\t\tthis.totalQgasMined = minerStatsQuery.result.totalMinerReward;\n      const minerStats = minerStatsQuery.result.minerStats;\n      let displayMinerStats = [];\n      for (var key in minerStats) {\n        //console.log(minerStats[key]);\n        displayMinerStats.push({\n          \"address\" : key,\n          \"mainBlockNum\": minerStats[key].mainBlockNum,\n          \"mainRewardAmount\": minerStats[key].mainRewardAmount,\n          \"firstBlockTime\": minerStats[key].firstBlockTime,\n          \"lastBlockTime\": minerStats[key].lastBlockTime,\n          \"firstBlockHeight\": minerStats[key].firstBlockHeight,\n          \"lastBlockHeight\": minerStats[key].lastBlockHeight,\n          \"isHourOnline\": minerStats[key].isHourOnline,\n          \"isDayOnline\": minerStats[key].isDayOnline\n        });\n      }\n      displayMinerStats.sort(this.compareMinerStats);\n      this.minerStats = displayMinerStats;\n    }\n    //console.log(this.minerStats);\n  }\n\n  compareMinerStats( a, b ) {\n    /*if ( a.isHourOnline > b.isHourOnline ){\n      return -1;\n    }\n    if ( a.isHourOnline < b.isHourOnline ){\n      return 1;\n    }\n    return 0;*/\n    return b.isDayOnline - a.isDayOnline || b.isHourOnline - a.isHourOnline;\n  }\n\n  resetForm() {\n    this.showChecking = 0;\n    this.showGetReward = 0;\n    this.showNoRewardAvailabe = 0;\n    this.showCheckOtherAddress = 0;\n    this.showError = 0;\n    this.errorMsg = '';\n    this.showPreparingBlock = 0;\n    this.showProcessingBlock = 0;\n    this.showBlockProcessed = 0;\n    this.rewardProcessHash = '';\n  }\n\n  async checkForm() {\n    if (this.walletService.walletIsLocked()) {\n\t\t\treturn this.notifications.sendWarning('ERROR wallet locked');\n    }\n    this.showChecking = 1;\n    const qlcAddress = this.miningForm.value.qlcAddress;\n\n    const availRewardInfoQuery = await this.api.getAvailRewardInfo(qlcAddress);\n\n    if (availRewardInfoQuery.result) {\n      if (availRewardInfoQuery.result.needCallReward == true) {\n        //console.log('availRewardInfoQuery.result.needCallReward true');\n        this.showGetReward = 1;\n        this.miningReward = availRewardInfoQuery.result;\n        this.availRewardAmount = availRewardInfoQuery.result.availRewardAmount;\n      } else {\n        this.showGetReward = 0;\n        this.showNoRewardAvailabe = 1;\n      }\n    }\n    \n    this.showCheckOtherAddress = 1;\n\n  }\n\n  async getReward() {\n    if (this.walletService.walletIsLocked()) {\n\t\t\treturn this.notifications.sendWarning('ERROR wallet locked');\n    }\n    this.showGetReward = 0;\n    this.showCheckOtherAddress = 0;\n    const qlcAddress = this.miningForm.value.qlcAddress;\n    const availRewardInfoQuery = await this.api.getAvailRewardInfo(qlcAddress);\n\n    this.showPreparingBlock = 1;\n    if (availRewardInfoQuery.result) {\n      const availRewardInfo = availRewardInfoQuery.result;\n      if (availRewardInfo.needCallReward == true) {\n        //console.log('availRewardInfo.needCallReward true');\n        const rewardSendBlock = await this.api.getRewardSendBlock(qlcAddress,qlcAddress,availRewardInfo.availStartHeight,availRewardInfo.availEndHeight,availRewardInfo.availRewardBlocks,availRewardInfo.availRewardAmount);\n        //console.log(rewardSendBlock);\n        if (!rewardSendBlock.result) {\n          this.showPreparingBlock = 0;\n          this.showError = 1;\n          this.errorMsg = 'Error getting reward block, please try again later.';\n          this.showCheckOtherAddress = 1;\n          return;\n        }\n        const walletAccount = await this.walletService.getWalletAccount(qlcAddress);\n        this.showPreparingBlock = 0;\n        this.showProcessingBlock = 1;\n        const procesRewardSend = await this.blockService.processBlockWithPov(rewardSendBlock.result,walletAccount.keyPair);\n        if (!procesRewardSend.result) {\n          this.showProcessingBlock = 0;\n          this.showError = 1;\n          this.errorMsg = 'Error processing reward block. (' + procesRewardSend.error.message + ')';\n          this.showCheckOtherAddress = 1;\n          return;\n        }\n        this.rewardProcessHash = procesRewardSend.result;\n        this.showProcessingBlock = 0;\n        this.showBlockProcessed = 1;\n        \n        //console.log(procesRewardSend);\n      } else {\n        this.showError = 1;\n        this.errorMsg = 'The reward was already claimed, try again tomorrow.';\n      }\n    }\n    this.showCheckOtherAddress = 1;\n\n    \n\n\n\n  }\n\n  async receiveReward() {\n    \n    const sentHash = this.miningForm.value.sentHash;\n    //console.log(sentHash);\n    const rewardRecvBlockQuery = await this.api.getRewardRecvBlockBySendHash(sentHash);\n    //console.log(rewardRecvBlockQuery);\n    const qlcAddress = this.miningForm.value.qlcAddress;\n    const walletAccount = await this.walletService.getWalletAccount(qlcAddress);\n    const procesRewardRecv = await this.blockService.processBlockWithPov(rewardRecvBlockQuery.result,walletAccount.keyPair);\n    //console.log(procesRewardRecv);\n  }\n\n  prepareDifficulty(normDifficulty) {\n\t\tconst bigNorm = new BigNumber(normDifficulty);\n\t\tif (bigNorm.dividedBy(1000000000000).isGreaterThan(1))  {\n\t\t\treturn bigNorm.dividedBy(1000000000000).toFormat(2) + ' T';\n\t\t}\n\t\tif (bigNorm.dividedBy(1000000000).isGreaterThan(1))  {\n\t\t\treturn bigNorm.dividedBy(1000000000).toFormat(2) + ' G';\n\t\t}\n\t\tif (bigNorm.dividedBy(1000000).isGreaterThan(1))  {\n\t\t\treturn bigNorm.dividedBy(1000000).toFormat(2) + ' M';\n\t\t}\n\t\tif (bigNorm.dividedBy(1000).isGreaterThan(1))  {\n\t\t\treturn bigNorm.dividedBy(1000).toFormat(2) + ' K';\n\t\t}\n\t\treturn bigNorm.toFormat(2);\n\t}\n\n}\n","<app-user-submenu></app-user-submenu>\n<div class=\"container mt-0 qlc-content-first pl-0 pr-0 mb-5 pb-5 qlc-content-home qlc-after-submenu\" *ngIf=\"activePanel == 0\">\n    <div class=\"row\">\n  \n  \n      <!-- REPRESENTATIVES -->\n      <div class=\"col-12\">\n  \n        <!-- TITLE -->\n        <div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n          <button type=\"submit\" class=\"btn btn-primary content-header float-right\" (click)=\"activePanel = 1;\">\n            {{ 'REPRESENTATIVES_LIST.representatives_list_button' | translate }}\n          </button>\n          <button type=\"submit\" class=\"btn btn-primary content-header float-right mr-3\" routerLink=\"/representation\">\n              My Representatives\n          </button>\n          <div class=\"content-title\">\n            <h1>{{ 'REPRESENTATIVES_LIST.representatives_list_title' | translate }}</h1>\n          </div>\n        </div>\n        \n      </div>\n  \n  \n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-0 mt-2 pl-4 pr-4\">\n\n          <div class=\"container\">\n\n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-3 col-lg-3 col-md-3 col-sm-4 col-2 pl-4\">{{ 'REPRESENTATIVES_LIST.name' | translate }}</div>\n              <div class=\"col-xl-5 col-lg-7 col-md-6 col-sm-5 col-6 text-truncate\">{{ 'REPRESENTATIVES_LIST.account_id' | translate }}</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-3 col-4 text-right\"></div>\n              <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-3 col-4 text-right\">{{ 'REPRESENTATIVES_LIST.options' | translate }}</div>\n            </div>\n\n            <div class=\"row qlc-table-row closed\"  *ngFor=\"let representative of representatives$ | async;\" [attr.data-account]=\"representative.id\">\n              <div class=\"col-xl-3 col-lg-3 col-md-3 col-sm-4 col-2 pl-4\">\n                  <span class=\"icon online\" *ngIf=\"representative.online\" tooltip=\"{{ 'REPRESENTATIVES_LIST.online' | translate }}\" container=\"body\"></span>\n                  <span class=\"icon offline\" *ngIf=\"!representative.online\" tooltip=\"{{ 'REPRESENTATIVES_LIST.offline' | translate }}\" container=\"body\"></span>\n                  <a (click)=\"editEntry(representative)\"  tooltip=\"{{ 'REPRESENTATIVES_LIST.edit_rep' | translate }}\">{{ representative.name }}</a>\n              </div>\n              <div class=\"col-xl-5 col-lg-7 col-md-6 col-sm-5 col-6 text-truncate\">\n                  <span *ngIf=\"representative.trusted\" class=\"icon trusted\" tooltip=\"Representative marked as trusted\" container=\"body\"></span>\n                  <span *ngIf=\"representative.warn\" class=\"icon avoid\" tooltip=\"Representative marked as avoid\" container=\"body\"></span>\n                  <a [routerLink]=\"'/account/' + representative.id\" class=\"address\" tooltip=\"{{ 'VIEW_ACCOUNT_DETAILS' | translate }}\" container=\"body\">{{ representative.id | squeeze : '18,18' }}</a>\n              </div>\n              <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-3 col-4 text-right\">\n                  <a ngxClipboard [cbContent]=\"representative.id\" (cbOnSuccess)=\"copied(representative.id)\" tooltip=\"{{ 'COPY_TO_CLIPBOARD' | translate }}\" class=\"icon copy\"></a>\n              </div>\n              <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-3 col-4 text-right\">\n                  <a (click)=\"deleteRepresentative(representative.id)\" tooltip=\"{{ 'REPRESENTATIVES_LIST.delete_rep' | translate }}\" class=\"icon delete\" container=\"body\"></a>\n                  <div *ngIf=\"!(representatives$ | async).length\" class=\"row align-items-center rowContent\">\n                    <div class=\"col-12 text-center\">\n                      {{ 'REPRESENTATIVES_LIST.no_reps1' | translate }} <a (click)=\"activePanel = 1\">{{ 'REPRESENTATIVES_LIST.no_reps2' | translate }}</a>.\n                    </div>\n                  </div>\n              </div>\n            </div>\n\n          </div>\n\n      </div>\n\n      <!-- CLICK TO CHANGE TEXT -->\n      <div class=\"col-12 mt-0\" *ngIf=\"!(representatives$ | async).length\">\n        <!-- TITLE -->\n        <div class=\"col-lg-12 mt-0 pl-md-4 pr-md-4\">\n\n          <div class=\"row qlc-table-row closed\">\n            <div class=\"col-12\">\n              <div class=\"text-center\">\n                  {{ 'REPRESENTATIVES_LIST.no_reps1' | translate }} <a (click)=\"activePanel = 1\">{{ 'REPRESENTATIVES_LIST.no_reps2' | translate }}</a>.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- TEXT -->\n      <div class=\"col-12 mt-2\">\n        <!-- TITLE -->\n        <div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n            <div class=\"col-12 pt-4 pl-0\">\t\n              <h6>{{ 'REPRESENTATIVES_LIST.representatives_list_text' | translate }}</h6>\n            </div>\n        </div>\n      </div>\n\n      \n\n  </div>\n</div>\n\n\n\n\n<div class=\"container mt-0 qlc-content-first pl-0 mb-5 pb-5 qlc-content-home qlc-after-submenu\" *ngIf=\"activePanel == 1\">\n    <div class=\"row\">\n\n\n        <!-- ADD REP -->\n        <div class=\"col-12\">\n\n          <!-- TITLE -->\n          <div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n            <div class=\"content-title\">\n              <h1>{{ 'REPRESENTATIVES_LIST.create_new_representative' | translate }}</h1>\n            </div>\n          </div>\n\n          <div class=\"col-12 pr-2 pl-2 pt-2\">\n            <div class=\"content-box-white\">\n\n                    <div class=\"col-12 pl-4 pt-4 pb-4 pr-4\">\n                        <div class=\"row align-items-top\">\n                          <div class=\"col-md-2 text-truncate dataName form-label-custom-2 pb-4\">{{ 'REPRESENTATIVES_LIST.account_id' | translate }}</div>\n                          <div class=\"col-md-10 text-left text-truncate pt-1\">\n                            <div class=\"form-group\">\n                              <input type=\"text\" class=\"form-control\" onfocus=\"this.placeholder = ''\" placeholder=\"{{ 'REPRESENTATIVES_LIST.account_id_placeholder' | translate }}\" [(ngModel)]=\"newRepAccount\" >\n                            </div></div>\n                          </div>\n                          <div class=\"row align-items-top\">\n                            <div class=\"col-md-2 text-truncate dataName form-label-custom-2 pb-4\">{{ 'REPRESENTATIVES_LIST.name' | translate }}</div>\n                            <div class=\"col-md-10 text-left text-truncate pt-1\">\n                              <div class=\"form-group\">\n                                  <input type=\"text\" class=\"form-control\" onfocus=\"this.placeholder = ''\" placeholder=\"{{ 'REPRESENTATIVES_LIST.name_placeholder' | translate }}\"  [(ngModel)]=\"newRepName\" (keyup.enter)=\"saveNewRepresentative()\">\n                              </div></div>\n                            </div>\n                            <div class=\"row align-items-top\">\n                              <div class=\"col-md-2 text-truncate dataName form-label-custom-2 pb-4\">{{ 'REPRESENTATIVES_LIST.representative_flags' | translate }}</div>\n                              <div class=\"col-md-10 text-left text-truncate pt-2 pb-5\">\n                                <div class=\"form-group\">\n                                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"trusted_check\" [(ngModel)]=\"newRepTrusted\" style=\"margin-left:0px;\">\n                                  <label class=\"form-check-label\" for=\"trusted_check\" tooltip=\"{{ 'REPRESENTATIVES_LIST.trusted_check_tooltip' | translate }}\" container=\"body\" style=\"margin-left:24px;\">\n                                    {{ 'REPRESENTATIVES_LIST.trusted_check' | translate }}\n                                  </label>\n                                </div>\n                                <div class=\"form-group\">\n                                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"avoid_check\" [(ngModel)]=\"newRepWarn\"style=\"margin-left:0px;\">\n                                  <label class=\"form-check-label\" for=\"avoid_check\" tooltip=\"{{ 'REPRESENTATIVES_LIST.avoid_check_tooltip' | translate }}\" container=\"body\" style=\"margin-left:24px;\">\n                                    {{ 'REPRESENTATIVES_LIST.avoid_check' | translate }}\n                                  </label>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"row align-items-top rowAmount\">\n                                <div class=\"col-md-2 text-truncate dataName\"></div>\n                                <div class=\"col-lg-2 col-md-4 col-sm-6 col-12 pr-md-2 text-center text-truncate mobile-break\">\n                                  <button type=\"submit\" class=\"btn btn-primary btn-danger\" (click)=\"cancelNewRep()\">{{ 'CANCEL' | translate }}</button>\n                                </div>\n                                <div class=\"col-lg-3 col-md-4 col-sm-6 col-12 pl-md-2 text-left text-truncate\">\n                                  <button type=\"submit\" class=\"btn btn-primary\" (click)=\"saveNewRepresentative()\">{{ 'REPRESENTATIVES_LIST.save_new_representative' | translate }}</button>\n                                </div>                              \n                            </div>\n                          </div>\n                  </div>\n            </div>\n\n         </div>\n\n\n\n\n\n\n    </div>\n</div>\n\n\n","import { map } from 'rxjs/operators';\nimport { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { AddressBookService } from '../../../../services/address-book.service';\nimport { WalletService } from '../../../../services/wallet.service';\nimport { NotificationService } from '../../../../services/notification.service';\nimport { ApiService } from '../../../../services/api.service';\nimport { Router } from '@angular/router';\nimport { RepresentativeService } from '../../../../services/representative.service';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-manage-representatives',\n  templateUrl: './manage-representatives.component.html',\n  styleUrls: ['./manage-representatives.component.scss']\n})\nexport class ManageRepresentativesComponent implements OnInit {\n  \tactivePanel = 0;\n\n\tmsg1 = '';\n\tmsg2 = '';\n\tmsg3 = '';\n\tmsg4 = '';\n\tmsg5 = '';\n\tmsg6 = '';\n\tmsg7 = '';\n  \tmsg8 = '';\n\n  \tnewRepAccount = '';\n\tnewRepName = '';\n\tnewRepTrusted = false;\n\tnewRepWarn = false;\n\n\tonlineReps = [];\n  // Set the online status of each representative\n\trepresentatives$ = this.repService.representatives$.pipe(\n\t\tmap(reps => {\n\t\t\treturn reps.map(rep => {\n\t\t\t\trep.online = this.onlineReps.indexOf(rep.id) !== -1;\n\t\t\t\treturn rep;\n\t\t\t});\n\t\t})\n\t);\n\n  constructor(\n\t\tprivate api: ApiService,\n\t\tprivate addressBookService: AddressBookService,\n\t\tprivate walletService: WalletService,\n\t\tprivate notificationService: NotificationService,\n\t\tprivate repService: RepresentativeService,\n\t\tprivate router: Router,\n\t\tprivate nodeApi: ApiService,\n    private trans: TranslateService\n  ) { }\n\n  async ngOnInit() {\n    this.repService.loadRepresentativeList();\n\t\tthis.onlineReps = await this.getOnlineRepresentatives();\n\t\tthis.repService.representatives$.next(this.repService.representatives); // Forcefully repush rep list once we have online status\n\t\tthis.trans.onLangChange.subscribe((event: LangChangeEvent) => {\n\t\t\tthis.loadLang();\n\t\t});\n    this.loadLang();\n  }\n\n  loadLang() {\n\t\tthis.trans.get('MANAGE_REPS_WARNINGS.msg1').subscribe((res: string) => { this.msg1 = res;\t});\n\t\tthis.trans.get('MANAGE_REPS_WARNINGS.msg2').subscribe((res: string) => { this.msg2 = res;\t});\n\t\tthis.trans.get('MANAGE_REPS_WARNINGS.msg3').subscribe((res: string) => { this.msg3 = res;\t});\n\t\tthis.trans.get('MANAGE_REPS_WARNINGS.msg4').subscribe((res: string) => { this.msg4 = res;\t});\n\t\tthis.trans.get('MANAGE_REPS_WARNINGS.msg5').subscribe((res: string) => { this.msg5 = res;\t});\n\t\tthis.trans.get('MANAGE_REPS_WARNINGS.msg6').subscribe((res: string) => { this.msg6 = res;\t});\n\t\tthis.trans.get('MANAGE_REPS_WARNINGS.msg7').subscribe((res: string) => { this.msg7 = res;\t});\n\t\tthis.trans.get('MANAGE_REPS_WARNINGS.msg8').subscribe((res: string) => { this.msg8 = res;\t});\n\t}\n  editEntry(representative) {\n\t\tthis.newRepAccount = representative.id;\n\t\tthis.newRepName = representative.name;\n\t\tthis.newRepTrusted = !!representative.trusted;\n\t\tthis.newRepWarn = !!representative.warn;\n\t\tthis.activePanel = 1;\n\t\tsetTimeout(() => {\n\t\t\tdocument.getElementById('new-address-name').focus();\n\t\t}, 150);\n\t}\n\n\tasync saveNewRepresentative() {\n\t\tif (!this.newRepAccount || !this.newRepName) {\n\t\t\tconst invalidAccountMsg = this.msg1;\n\t\t\treturn this.notificationService.sendError(invalidAccountMsg);\n\t\t}\n\n\t\tthis.newRepAccount = this.newRepAccount.replace(/ /g, ''); // Remove spaces\n\n\t\t// Make sure the address is valid\n\t\tconst valid = await this.nodeApi.validateAccountNumber(this.newRepAccount);\n\t\tif (!valid.result) {\n\t\t\tconst invalidAccountMsg = this.msg2;\n\t\t\treturn this.notificationService.sendWarning(invalidAccountMsg);\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.repService.saveRepresentative(\n\t\t\t\tthis.newRepAccount,\n\t\t\t\tthis.newRepName,\n\t\t\t\tthis.newRepTrusted,\n\t\t\t\tthis.newRepWarn\n\t\t\t);\n\t\t\tthis.notificationService.sendSuccess(this.msg3);\n\n\t\t\tthis.cancelNewRep();\n\t\t} catch (err) {\n\t\t\tthis.notificationService.sendError(this.msg4 + ` ${err.message}`);\n\t\t}\n\t}\n\n\tcancelNewRep() {\n\t\tthis.newRepName = '';\n\t\tthis.newRepAccount = '';\n\t\tthis.newRepTrusted = false;\n\t\tthis.newRepWarn = false;\n\t\tthis.activePanel = 0;\n\t}\n\n\tcopied(accountID) {\n\t\tthis.notificationService.sendSuccess(accountID + ' ' + this.msg5);\n\t}\n\n\tasync getOnlineRepresentatives() {\n\t\tconst representatives = [];\n\t\tconst reps = await this.api.onlineRepresentatives();\n\t\tif (reps.result) {\n\t\t\tfor (const rep of reps.result) {\n\t\t\t\trepresentatives.push(rep);\n\t\t\t}\n\t\t}\n\n\t\treturn representatives;\n\t}\n\n\tasync deleteRepresentative(accountID) {\n\t\ttry {\n\t\t\tthis.repService.deleteRepresentative(accountID);\n\t\t\tthis.notificationService.sendSuccess(this.msg7);\n\t\t} catch (err) {\n\t\t\tthis.notificationService.sendError(this.msg8 + ` ${err.message}`);\n\t\t}\n\t}\n}\n","<app-user-submenu></app-user-submenu>\n\n<div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n\t<div class=\"row\">\n\t\t<div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row\">\n\t\t\t<!-- TITLE -->\n\t\t\t<div class=\"col-lg-5 col-md-6 col-12 mt-2 pl-2 pr-2\">\n\t\t\t\t<div class=\"content-title\">\n\t\t\t\t<h1 class=\"neo\"><!--{{ 'REPRESENTATIVES.representatives_title' | translate }}-->Representatives <span class=\"d-inline d-md-none d-lg-inline\">Overview</span></h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"col-lg-4 col-md-3 col-12 pl-2 pr-md-0 pr-2\">\n\t\t\t\t<button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 mr-md-5 mr-lg-4 mr-xl-3 \" style=\"min-width: 200px;\" routerLink=\"/representation/reward\">\n\t\t\t\t\tCHECK MY <span class=\"d-none d-lg-inline\">REPRESENTATIVES</span> REWARDS\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-3 col-12 pl-md-0 pl-2 pr-2 pr-md-2 pt-md-0 pt-2\">\n\t\t\t\t<button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0\" style=\"min-width: 200px;\"  routerLink=\"/representation/list\">\n\t\t\t\t\tREP List\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"container mt-0 pl-0 pr-0 mb-5 pb-5\">\n\t<div class=\"row\">\n\t\t\n\t\t\n\t\t<!-- REPRESENTATIVES -->\n\t\t\n\t\t<div class=\"col-md-8 col-12 mb-0 mt-2 pl-4 pr-4 pb-2\">\n\t\t\t<div class=\"content-box-white pl-4 pr-4 pt-4 pb-4 ml-2 mr-2 ml-md-0 mr-md-0\">\n\n\t\t\t\t\t<p class=\"pt-1\"><span class=\"title-modal-blue mt-0 mb-4\">Representatives Reward Rules:</span></p>\n\t\t\t\t\t<p></p>\n\t\t\t\t\t\t\n\t\t\t\t\t<ul style=\"margin-left:-24px;\">\n\t\t\t\t\t\t<li>Got 3M voting power: Staking by yourself or Got vote power by other account that set your account as his representatives.</li>\n\t\t\t\t\t\t<li>Run a node with your account and start to vote, check the doc to run a node (Jump to our doc website: <a href=\"https://docs.qlcchain.online/tutorial/node/install.html#start-go-qlc-node\" target=\"_blank\">https://docs.qlcchain.online/tutorial/node/install.html#start-go-qlc-node</a>).</li>\n\t\t\t\t\t\t<li>All Representatives will get 40% of all POV mining Rewards every 120 POV blocks, you can get your part base on the ratio of your voting power and the whole online voting power.</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"col-md-4 col-12 mb-0 mt-2 pl-2 pl-md-0 pr-2 pr-md-0 pb-2\">\n\t\t\t<div class=\"content-box-white pl-4 pr-4 pt-4 pb-4 ml-4 ml-md-0 mr-4\">\n\t\t\t\t<p class=\"pt-1\"><span class=\"title-modal-blue mt-0 mb-4\">Recommended Node Configuration:</span></p>\n\t\t\t\n\t\t\t\t<ul style=\"margin-left:-24px;\">\n\t\t\t\t\t<li>CPU: <strong>4 cores</strong></li>\n\t\t\t\t\t<li>Memory: <strong>8G</strong></li>\n\t\t\t\t\t<li>Storage: <strong>80G SSD</strong></li>\n\t\t\t\t\t<li>Network: <strong>100Mbs with public IP address</strong> </li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\t\t\n\n\t\t<!-- REPRESENTATIVES -->\n\t\t<div class=\"col-12 mt-4\">\n\t\t\t<!-- TITLE -->\n\t\t\t<div class=\"col-12 mt-2 pl-3 pr-3 pl-md-2\">\n\t\t\t\t<div class=\"content-title\">\n\t\t\t\t\t<h1 class=\"neo\">Your Delegations</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"col-lg-12 mt-0 pl-md-2 pr-md-2\">\n\t\t\t\t<div class=\"col-12 pt-1 pb-2 pl-0\">\t\n\t\t\t\t\t<h6>{{ 'REPRESENTATIVES.representatives_text' | translate }}</h6>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<!-- LIST -->\n\t\t<div class=\"col-lg-12 mb-0 mt-2 pl-4 pr-4 pl-md-4 pr-md-4\">\n\t\t\t\n\t\t\t<div class=\"container pr-4 pl-4 pl-md-3 pr-md-3\">\n\t\t\t\t\n\t\t\t\t<div class=\"row qlc-table-header\">\n\t\t\t\t\t<div class=\"col-xl-3 col-lg-3 col-md-3 col-sm-9 col-8 pl-4\">YOUR ACCOUNT <span class=\"d-inline d-md-none\">& YOUR REP</span></div>\n\t\t\t\t\t<div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-4 col-2 d-none d-md-block\">YOUR WEIGHT</div>\n\t\t\t\t\t<div class=\"col-xl-3 col-lg-3 col-md-3 col-sm-5 col-4 d-none d-md-block text-truncate\">YOUR REPRESENTATIVE</div>\n\t\t\t\t\t<div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-3 col-4 d-none d-md-block\">REP {{ 'REPRESENTATIVES.weight' | translate }}</div>\n\t\t\t\t\t<div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-3 col-4 pl-4 text-right\">{{ 'REPRESENTATIVES.status' | translate }}</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div *ngFor=\"let rep of representativeOverview\">\n\t\t\t\t\t<div class=\"row qlc-table-row closed\" *ngFor=\"let account of rep.accounts\">\n\t\t\t\t\t\t<div class=\"col-xl-3 col-lg-3 col-md-3 col-sm-9 col-10 pl-4\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<span class=\"d-inline d-md-none\">\n\t\t\t\t\t\t\t\t<span class=\"text-color-lightgrey text-tiny\" style=\"width:76px; display:inline-block;\">Your Account: </span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<span class=\"d-none d-xl-inline\">\n\t\t\t\t\t\t\t\t\t<a [routerLink]=\"'/wallets/qlc/' + account.id\">{{ account.id | squeeze : '16,16' }}</a>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span class=\"d-none d-lg-inline d-xl-none\">\n\t\t\t\t\t\t\t\t\t<a [routerLink]=\"'/wallets/qlc/' + account.id\">{{ account.id | squeeze : '14,14' }}</a>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span class=\"d-none d-md-inline d-lg-none\">\n\t\t\t\t\t\t\t\t\t<a [routerLink]=\"'/wallets/qlc/' + account.id\">{{ account.id | squeeze : '9,9' }}</a>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span class=\"d-none d-sm-inline d-md-none\">\n\t\t\t\t\t\t\t\t\t<a [routerLink]=\"'/wallets/qlc/' + account.id\">{{ account.id | squeeze : '18,18' }}</a>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span class=\"d-inline d-sm-none\">\n\t\t\t\t\t\t\t\t\t<a [routerLink]=\"'/wallets/qlc/' + account.id\">{{ account.id | squeeze : '11,11' }}</a>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span class=\"d-block d-md-none pt-1 pb-1\">\n\t\t\t\t\t\t\t\t<span class=\"text-color-lightgrey text-tiny\" style=\"width:76px; display:inline-block;\">Your Weight: </span>{{ account.votingWeight | qlc:8 | currency:'':'':'1.2-2' }}\n\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t<span class=\"d-inline d-md-none\">\n\t\t\t\t\t\t\t\t<span class=\"text-color-lightgrey text-tiny\" style=\"width:76px; display:inline-block;\">Your Rep: </span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span class=\"d-inline d-md-none\" (click)=\"addSelectedAccounts(rep.accounts)\" style=\"cursor: pointer;\">\n\t\t\t\t\t\t\t\t<span tooltip=\"{{ 'REPRESENTATIVES.select_accounts' | translate }}\" container=\"body\"> \n\t\t\t\t\t\t\t\t\t<span *ngIf=\"rep.label\">{{ rep.label }}</span> \n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<span *ngIf=\"!rep.label\" class=\"d-none d-xl-inline\">{{ rep.id | squeeze : '15,15' }}</span>\n\t\t\t\t\t\t\t\t\t<span *ngIf=\"!rep.label\" class=\"d-none d-lg-inline d-xl-none\">{{ rep.id | squeeze : '12,12' }}</span>\n\t\t\t\t\t\t\t\t\t<span *ngIf=\"!rep.label\" class=\"d-none d-md-inline d-lg-none\">{{ rep.id | squeeze : '8,8' }}</span>\n\t\t\t\t\t\t\t\t\t<span *ngIf=\"!rep.label\" class=\"d-none d-sm-inline d-md-none\">{{ rep.id | squeeze : '16,16' }}</span>\n\t\t\t\t\t\t\t\t\t<span *ngIf=\"!rep.label\" class=\"d-inline d-sm-none\">{{ rep.id | squeeze : '8,8' }}</span>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span class=\"icon online ml-2\" *ngIf=\"rep.online\" tooltip=\"{{ 'REPRESENTATIVES.online' | translate }}\" container=\"body\"></span>\n\t\t\t\t\t\t\t\t<span class=\"icon offline ml-2\" *ngIf=\"!rep.online\" tooltip=\"{{ 'REPRESENTATIVES.offline' | translate }}\" container=\"body\"></span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span class=\"d-block d-md-none pt-1\">\n\t\t\t\t\t\t\t\t<span class=\"text-color-lightgrey text-tiny\" style=\"width:76px; display:inline-block;\">Rep Weight: </span>{{ rep.delegatedWeight | qlc:8 | currency:'':'':'1.2-2' }}\n\t\t\t\t\t\t\t</span>\n\n\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-4 col-7 d-none d-md-block\">\n\t\t\t\t\t\t\t{{ account.votingWeight | qlc:8 | currency:'':'':'1.2-2' }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div class=\"col-xl-3 col-lg-3 col-md-3 col-sm-5 col-7 d-none d-md-block\" (click)=\"addSelectedAccounts(rep.accounts)\" style=\"cursor: pointer;\">\n\t\t\t\t\t\t\t<span class=\"icon online\" *ngIf=\"rep.online\" tooltip=\"{{ 'REPRESENTATIVES.online' | translate }}\" container=\"body\"></span>\n\t\t\t\t\t\t\t<span class=\"icon offline\" *ngIf=\"!rep.online\" tooltip=\"{{ 'REPRESENTATIVES.offline' | translate }}\" container=\"body\"></span>\n\t\t\t\t\t\t\t<span tooltip=\"{{ 'REPRESENTATIVES.select_accounts' | translate }}\" container=\"body\"> \n\t\t\t\t\t\t\t\t<span *ngIf=\"rep.label\">{{ rep.label }}</span> \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<span *ngIf=\"!rep.label\" class=\"d-none d-xl-inline\">{{ rep.id | squeeze : '15,15' }}</span>\n\t\t\t\t\t\t\t\t<span *ngIf=\"!rep.label\" class=\"d-none d-lg-inline d-xl-none\">{{ rep.id | squeeze : '12,12' }}</span>\n\t\t\t\t\t\t\t\t<span *ngIf=\"!rep.label\" class=\"d-none d-md-inline d-lg-none\">{{ rep.id | squeeze : '8,8' }}</span>\n\t\t\t\t\t\t\t\t<span *ngIf=\"!rep.label\" class=\"d-none d-sm-inline d-md-none\">{{ rep.id | squeeze : '12,12' }}</span>\n\t\t\t\t\t\t\t\t<span *ngIf=\"!rep.label\" class=\"d-inline d-sm-none\">{{ rep.id | squeeze : '8,8' }}</span>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<span class=\"d-block d-md-none\">\n\t\t\t\t\t\t\t\t\t<span class=\"text-color-lightgrey text-tiny\">Your Weight: </span> {{ account.votingWeight | qlc:8 | currency:'':'':'1.2-2' }}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span class=\"d-block d-md-none\">\n\t\t\t\t\t\t\t\t\t<span class=\"text-color-lightgrey text-tiny\">Rep Weight: </span> {{ rep.delegatedWeight | qlc:8 | currency:'':'':'1.2-2' }}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-3 col-7 d-none d-md-block\">\n\t\t\t\t\t\t\t{{ rep.delegatedWeight | qlc:8 | currency:'':'':'1.2-2' }}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-3 col-2 pl-0 pr-xl-3 pr-md-2 pr-3 text-right\">\n\t\t\t\t\t\t\t<span *ngIf=\"rep.status === 'alert'\" tooltip=\"{{ 'REPRESENTATIVES.status_alert' | translate }}\">\n\t\t\t\t\t\t\t\t<span class=\"d-none d-sm-inline\">{{ 'REPRESENTATIVES.change' | translate }}</span> <span class=\"icon avoid ml-2\"></span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span *ngIf=\"rep.status === 'warn'\" tooltip=\"{{ 'REPRESENTATIVES.status_warn' | translate }}\">\n\t\t\t\t\t\t\t\t<span class=\"d-none d-sm-inline\">{{ 'REPRESENTATIVES.change' | translate }}</span> <span class=\"icon avoid ml-2\"></span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span *ngIf=\"rep.status === 'trusted'\" tooltip=\"{{ 'REPRESENTATIVES.status_trusted' | translate }}\">\n\t\t\t\t\t\t\t\t<span class=\"d-none d-sm-inline\">{{ 'REPRESENTATIVES.trusted' | translate }}</span> <span class=\"icon trusted ml-2\"></span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span *ngIf=\"rep.status === 'known'\" tooltip=\"{{ 'REPRESENTATIVES.status_known' | translate }}\">\n\t\t\t\t\t\t\t\t<span class=\"d-none d-sm-inline\">{{ 'REPRESENTATIVES.known' | translate }}</span> <span class=\"icon trusted ml-2\"></span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span *ngIf=\"rep.status === 'none'\" tooltip=\"{{ 'REPRESENTATIVES.status_none' | translate }}\">\n\t\t\t\t\t\t\t\t<span class=\"d-none d-sm-inline\">{{ 'REPRESENTATIVES.unknown' | translate }}</span> <span class=\"icon avoid ml-2\"></span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t\t\n\t</div>\n\t\n\t\n\t\n\t\n\t<!-- CLICK TO CHANGE TEXT -->\n\t<div class=\"col-12 mt-0 pl-4 pr-4\">\n\t\t<!-- TITLE -->\n\t\t<div class=\"col-lg-12 mt-0 \">\n\t\t\t\n\t\t\t<div class=\"row qlc-table-row closed\" *ngIf=\"!representativeOverview || !representativeOverview.length\">\n\t\t\t\t<div class=\"col-12\">\n\t\t\t\t\t<div class=\"text-center\">{{ 'REPRESENTATIVES.no_voting_delegate' | translate }}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"row align-items-center rowFooter col-12 pt-4\">\n\t\t\t\t<div class=\"px-0 col-12 text-left\">{{ 'REPRESENTATIVES.select_all_acc_with_rep' | translate }}</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t\n\t\n\t\n\t\n\t\n\t\n\t<!-- CHANGE REPS -->\n\t<div class=\"col-12 mt-3 pt-3 pl-2 pr-2 pl-md-4 pr-md-4\">\n\t\t<div class=\"content-title ml-4 mr-4 ml-md-0 mr-md-0\">\n\t\t\t<h1>{{ 'REPRESENTATIVES.change_reps' | translate }}</h1>\n\t\t</div>\n\t</div>\n\t\n\t<div class=\"col-12 ml-2 mr-0 pl-4 pr-4 pl-md-3 pr-md-3 mt-2 \">\n\t\t<div class=\"content-box-white mr-3\">\n\t\t\t\n\t\t\t<div class=\"col-12 pl-4 pt-4 pb-4 pr-4\">\n\t\t\t\t<div class=\"row align-items-top\">\n\t\t\t\t\t<div class=\"col-xl-2 col-lg-3 col-md-3 col-12 pb-md-0 text-truncate dataName form-label-custom-2 pt-0 pb-3 pb-md-0\">\n\t\t\t\t\t\t{{ 'REPRESENTATIVES.accounts_to_change' | translate }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-xl-10 col-lg-9 col-md-9 col-12 text-left text-truncate\">\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<select class=\"custom-select\" [(ngModel)]=\"changeAccountID\" (change)=\"newAccountID(changeAccountID)\">\n\t\t\t\t\t\t\t\t<option [value]=\"null\">{{ 'REPRESENTATIVES.select_accounts_to_change' | translate }}</option>\n\t\t\t\t\t\t\t\t<option [value]=\"'all'\">{{ 'REPRESENTATIVES.all_accounts' | translate }}</option>\n\t\t\t\t\t\t\t\t<ng-container *ngFor=\"let account of accounts\">\n\t\t\t\t\t\t\t\t\t<option [value]=\"account.id\" *ngIf=\"account.accountMeta.coinBalance >= 0\"\n\t\t\t\t\t\t\t\t\t\t>{{ account.addressBookName ? account.addressBookName + ' - ' : '' }} {{ account.id | squeeze : '8,8' }} ({{\n\t\t\t\t\t\t\t\t\t\t\taccount.accountMeta.coinBalance | qlc:8 | currency:'':'':'1.2-2'\n\t\t\t\t\t\t\t\t\t\t}}) \n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row align-items-top\" *ngFor=\"let account of selectedAccounts\">\n\t\t\t\t\t<div class=\"col-xl-2 col-lg-3 col-md-3 pb-3 pb-md-0 d-none d-md-block text-truncate dataName mb-2\"></div>\n\t\t\t\t\t<div class=\"col-xl-9 col-lg-8 col-md-8 col-10 text-left text-truncate mb-2\">\n\t\t\t\t\t\t<span class=\"name\" *ngIf=\"account.addressBookName\">{{ account.addressBookName }} </span>\n\t\t\t\t\t\t<span class=\"address\">{{ account.id }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-lg-1 col-md-1 col-2 text-right mb-2 pr-2\">\n\t\t\t\t\t\t<a (click)=\"removeSelectedAccount(account)\" class=\"icon delete\"></a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"row align-items-top\">\n\t\t\t\t\t<div class=\"col-xl-2 col-lg-3 col-md-3 col-12 pb-md-0 text-truncate dataName form-label-custom-2 pt-0 pb-3 pb-md-0\">{{ 'REPRESENTATIVES.new_rep' | translate }}</div>\n\t\t\t\t\t<div class=\"col-xl-10 col-lg-9 col-md-9 col-12 text-left text-truncate\">\n\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<select class=\"custom-select contacts\" [(ngModel)]=\"representativeSelect\" (change)=\"selectRep()\">\n\t\t\t\t\t\t\t\t<option *ngFor=\"let rep of (representativeResults$ | async)\" [value]=\"rep.id\"\n\t\t\t\t\t\t\t\t>{{ rep.name }} {{ rep.id }}</option\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclass=\"form-control newrepresentative\"\n\t\t\t\t\t\t\tplaceholder=\"{{ 'REPRESENTATIVES.new_rep_placeholder' | translate }}\"\n\t\t\t\t\t\t\tonfocus=\"this.placeholder = ''\"\n\t\t\t\t\t\t\t(blur)=\"validateRepresentative()\"\n\t\t\t\t\t\t\t(keyup)=\"searchRepresentatives()\"\n\t\t\t\t\t\t\t(focus)=\"searchRepresentatives()\"\n\t\t\t\t\t\t\t[(ngModel)]=\"toRepresentativeID\"\n\t\t\t\t\t\t\t#repInput\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"row align-items-center rowButtons pt-md-3 pt-3 pb-2\">\n\t\t\t\t\t<div class=\"col-xl-2 col-lg-3 col-md-3 col-12 pb-md-0 text-truncate dataName form-label-custom-2 pt-0 pb-3 pb-md-0 d-none d-md-block\"></div>\n\t\t\t\t\t<div class=\"col-xl-4 col-lg-4 col-md-5 col-12 text-left text-truncate\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tclass=\"btn btn-primary w-100 pl-2 pr-2\"\n\t\t\t\t\t\t(click)=\"changeRepresentatives()\"\n\t\t\t\t\t\t*ngIf=\"!changingRepresentatives\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t{{ 'REPRESENTATIVES.update_rep' | translate }}\n\t\t\t\t\t</button>\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"changingRepresentatives\">\n\t\t\t\t\t\t{{ 'REPRESENTATIVES.updating_rep' | translate }}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t\n\t\t\n\t</div>\n</div>\n\n</div>\n\n\n\n\n\n\n\n\n\n</div>\t\t\t \n\n\n\n\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { WalletService } from '../../../../services/wallet.service';\nimport { ApiService } from '../../../../services/api.service';\nimport BigNumber from 'bignumber.js';\nimport { UtilService } from '../../../../services/util.service';\nimport { RepresentativeService } from '../../../../services/representative.service';\nimport { AppSettingsService } from '../../../../services/app-settings.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { NotificationService } from '../../../../services/notification.service';\nimport { QLCBlockService } from '../../../../services/qlc-block.service';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\nimport { NGXLogger } from 'ngx-logger';\n\n@Component({\n  selector: 'app-myrepresentatives',\n  templateUrl: './myrepresentatives.component.html',\n  styleUrls: ['./myrepresentatives.component.scss']\n})\nexport class MyrepresentativesComponent implements OnInit {\n  @ViewChild('repInput', { static: true }) repInput;\n\n  accounts = this.walletService.wallet.accounts;\n\twallet = this.walletService.wallet;\n\n\tchangeAccountID: any = null;\n\ttoRepresentativeID = '';\n\trepresentativeSelect = '';\n\n\tmsg1 = '';\n\tmsg2 = '';\n\tmsg3 = '';\n\tmsg4 = '';\n\tmsg5 = '';\n\tmsg6 = '';\n\tmsg7 = '';\n\tmsg8 = '';\n\tmsg9 = '';\n    msg10 = '';\n\n  representativeResults$ = new BehaviorSubject([]);\n\tshowRepresentatives = false;\n\trepresentativeListMatch = '';\n\n\trepresentativeOverview = [];\n\tchangingRepresentatives = false;\n\n\tselectedAccounts = [];\n\tfullAccounts = [];\n  \n  constructor(\n\t\tpublic walletService: WalletService,\n\t\tprivate api: ApiService,\n\t\tprivate notifications: NotificationService,\n\t\tprivate qlcBlock: QLCBlockService,\n\t\tprivate util: UtilService,\n\t\tprivate representativeService: RepresentativeService,\n\t\tpublic settings: AppSettingsService,\n\t\tprivate trans: TranslateService,\n    private logger: NGXLogger\n  ) { }\n\n  async ngOnInit() {\n\t\tthis.representativeService.loadRepresentativeList();\n\t\tawait this.loadRepresentativeOverview();\n\t\tthis.trans.onLangChange.subscribe((event: LangChangeEvent) => {\n\t\t\tthis.loadLang();\n    });\n    this.searchRepresentatives();\n\t\tthis.loadLang();\n  }\n  \n  loadLang() {\n\t\tthis.trans.get('REPS_WARNINGS.msg1').subscribe((res: string) => {\tthis.msg1 = res; });\n\t\tthis.trans.get('REPS_WARNINGS.msg2').subscribe((res: string) => {\tthis.msg2 = res; });\n\t\tthis.trans.get('REPS_WARNINGS.msg3').subscribe((res: string) => {\tthis.msg3 = res; });\n\t\tthis.trans.get('REPS_WARNINGS.msg4').subscribe((res: string) => {\tthis.msg4 = res; });\n\t\tthis.trans.get('REPS_WARNINGS.msg5').subscribe((res: string) => {\tthis.msg5 = res; });\n\t\tthis.trans.get('REPS_WARNINGS.msg6').subscribe((res: string) => {\tthis.msg6 = res; });\n\t\tthis.trans.get('REPS_WARNINGS.msg7').subscribe((res: string) => {\tthis.msg7 = res; });\n\t\tthis.trans.get('REPS_WARNINGS.msg8').subscribe((res: string) => {\tthis.msg8 = res; });\n\t\tthis.trans.get('REPS_WARNINGS.msg9').subscribe((res: string) => {\tthis.msg9 = res; });\n\t\tthis.trans.get('REPS_WARNINGS.msg10').subscribe((res: string) => {\tthis.msg10 = res; });\n\t}\n  async loadRepresentativeOverview() {\n\t\tconst onlineReps = await this.getOnlineRepresentatives();\n\t\t// TODO: Handling for unopened accounts?\n\n\t\tconst walletAccountInfos = await this.getWalletAccountDetails();\n\t\tthis.fullAccounts = walletAccountInfos;\n\n\t\t// Get a unique list of representatives for our accounts\n\t\tconst uniqueRepresentatives = this.getAccountRepresentatives(walletAccountInfos);\n\n\t\t// Get full info about each representative\n\t\tconst representativesDetails = await this.getRepresentativesDetails(uniqueRepresentatives);\n\n\t\t// Build up the overview object for each representative\n\t\tconst totalSupply = new BigNumber(60000000000000000);\n\t\tlet representativesOverview = [];\n\n\t\tfor (let representative of representativesDetails) {\n\t\t\tconst repOnline = onlineReps.indexOf(representative.account) !== -1;\n\t\t\tconst knownRep = this.representativeService.getRepresentative(representative.account);\n\n\t\t\tconst qlcWeight = this.util.qlc.rawToQlc(representative.weight || 0);\n\t\t\tconst percent = qlcWeight.div(totalSupply).times(100);\n\n\t\t\t// Determine the status based on some factors\n\t\t\tlet status = 'none';\n\t\t\tif (knownRep && knownRep.trusted) {\n\t\t\t\tstatus = 'trusted'; // In our list and marked as trusted\n\t\t\t} else if (knownRep && knownRep.warn) {\n\t\t\t\tstatus = 'alert'; // In our list and marked for avoidance\n\t\t\t} else if (percent.gte(10)) {\n\t\t\t\tstatus = 'alert'; // Has extremely high voting weight\n\t\t\t} else if (percent.gte(1)) {\n\t\t\t\tstatus = 'warn'; // Has high voting weight\n\t\t\t} else if (knownRep) {\n\t\t\t\tstatus = 'known'; // In our list\n\t\t\t}\n\n\t\t\tfor (let account of representative.accounts) {\n\t\t\t\t//const accountVotingWeight = await this.api.accountVotingWeight(account.id);\n\t\t\t\tconst accountInfo = await this.api.accountInfo(account.id);\n\t\t\t\tlet totalWeight = new BigNumber(0); \n\t\t\t\tif (accountInfo.result) {\n\t\t\t\t\ttotalWeight = totalWeight.plus(accountInfo.result.coinBalance);\n\t\t\t\t\ttotalWeight = totalWeight.plus(accountInfo.result.vote);\n\t\t\t\t\ttotalWeight = totalWeight.plus(accountInfo.result.network);\n\t\t\t\t\ttotalWeight = totalWeight.plus(accountInfo.result.storage);\n\t\t\t\t\ttotalWeight = totalWeight.plus(accountInfo.result.oracle);\n\t\t\t\t}\n\t\t\t\taccount.votingWeight = totalWeight.toFixed();\n\t\t\t}\n\n\t\t\tconst repOverview = {\n\t\t\t\tid: representative.account,\n\t\t\t\tweight: qlcWeight,\n\t\t\t\tdelegatedWeight: representative.delegatedWeight,\n\t\t\t\tpercent: percent,\n\t\t\t\tstatus: status,\n\t\t\t\tlabel: knownRep ? knownRep.name : null,\n\t\t\t\tonline: repOnline,\n\t\t\t\taccounts: representative.accounts\n\t\t\t};\n\n\t\t\trepresentativesOverview.push(repOverview);\n\t\t}\n\n\t\t// Sort by weight delegated\n\t\trepresentativesOverview = representativesOverview.sort((a, b) => b.delegatedWeight - a.delegatedWeight);\n\n\t\tthis.representativeOverview = representativesOverview;\n\t\t//console.log(this.representativeOverview);\n\t}\n\n\tasync getWalletAccountDetails(): Promise<any> {\n\t\t// Run an accountInfo call for each account in the wallet to get their representatives\n\t\tconst walletAccountInfos = await Promise.all(\n\t\t\tthis.accounts.map(account =>\n\t\t\t\tthis.api.accountInfo(account.id).then(res => {\n\t\t\t\t\tif (res.result) {\n\t\t\t\t\t\tconst result = res.result;\n\t\t\t\t\t\tresult.id = account.id;\n\t\t\t\t\t\tresult.addressBookName = account.addressBookName;\n\t\t\t\t\t\tconst tokenMetas = result.tokens;\n\t\t\t\t\t\tconst qlcTokenMeta = tokenMetas.filter(tm => tm.type === this.api.qlcTokenHash)[0];\n\t\t\t\t\t\tif (qlcTokenMeta !== undefined) {\n\t\t\t\t\t\t\tresult.representative = qlcTokenMeta.rep || qlcTokenMeta.representative;\n\t\t\t\t\t\t\tresult.balance = qlcTokenMeta.balance;\n\t\t\t\t\t\t\tthis.logger.debug(`${account.id} resp: ${result.representative} balance: ${result.balance}`);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.logger.debug(`${account.id} does not hold any QLC`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\n\t\treturn walletAccountInfos;\n\t}\n\n\tasync getRepresentativesDetails(representatives): Promise<any> {\n\t\t// Run an accountInfo call for each representative, carry on data.  The uglyness allows for them to run in parallel\n\t\tconst repInfos = await Promise.all(\n\t\t\trepresentatives.map(rep =>\n\t\t\t\tthis.api.accountInfo(rep.id).then(async res => {\n\t\t\t\t\tconst result = res.result;\n\t\t\t\t\tresult.account = rep.id;\n\t\t\t\t\t//result.delegatedWeight = rep.weight;\n\t\t\t\t\tconst votingWeight = await this.api.accountVotingWeight(rep.id);\n\t\t\t\t\tresult.delegatedWeight = votingWeight.result;\n\t\t\t\t\tresult.accounts = rep.accounts;\n\n\t\t\t\t\treturn result;\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\n\t\treturn repInfos;\n\t}\n\n\t// Make a unique list of representatives used in all accounts\n\tgetAccountRepresentatives(walletAccountInfos) {\n\t\tconst representatives = [];\n\t\tfor (const accountInfo of walletAccountInfos) {\n\t\t\tif (!accountInfo || !accountInfo.representative) {\n\t\t\t\tcontinue;\n\t\t\t} // Account doesn't exist yet\n\n\t\t\tconst existingRep = representatives.find(rep => rep.id === accountInfo.representative);\n\t\t\tif (existingRep) {\n\t\t\t\texistingRep.weight = existingRep.weight.plus(new BigNumber(accountInfo.coinBalance));\n\t\t\t\texistingRep.accounts.push(accountInfo);\n\t\t\t} else {\n\t\t\t\tconst newRep = {\n\t\t\t\t\tid: accountInfo.representative,\n\t\t\t\t\tweight: new BigNumber(accountInfo.coinBalance),\n\t\t\t\t\taccounts: [accountInfo]\n\t\t\t\t};\n\t\t\t\trepresentatives.push(newRep);\n\t\t\t}\n\t\t}\n\n\t\treturn representatives;\n\t}\n\n\tasync getOnlineRepresentatives() {\n\t\tconst representatives = [];\n\t\tconst reps = await this.api.onlineRepresentatives();\n\t\tif (reps.result) {\n\t\t\tfor (const rep of reps.result) {\n\t\t\t\trepresentatives.push(rep);\n\t\t\t}\n\t\t}\n\n\t\treturn representatives;\n\t}\n\n\taddSelectedAccounts(accounts) {\n\t\tfor (const account of accounts) {\n\t\t\tthis.newAccountID(account.id);\n\t\t}\n\n\t\t// Scroll to the representative input\n\t\tsetTimeout(() => this.repInput.nativeElement.scrollIntoView({ behavior: 'smooth', block: 'start' }), 50);\n\t}\n\n\tasync newAccountID(accountID) {\n\t\tconst newAccount = accountID || this.changeAccountID;\n\t\tif (!newAccount) {\n\t\t\treturn; // Didn't select anything\n\t\t}\n\n\t\tconst existingAccount = this.selectedAccounts.find(a => a.id === newAccount);\n\t\tif (existingAccount) {\n\t\t\treturn; // Already selected\n    }\n    //console.log(this.selectedAccounts);\n\n    const allExists = this.selectedAccounts.find(a => a.id === 'All Accounts');\n    //console.log(allExists);\n    //console.log(this.accounts);\n\t\tif (newAccount === 'all') {\n\t\t\tthis.selectedAccounts = []; // Reset the list before adding all\n\t\t}\n\t\tif (newAccount !== 'all' && allExists) {\n\t\t\tthis.selectedAccounts.splice(this.selectedAccounts.indexOf(allExists), 1); // Remove all from the list\n\t\t}\n\n\t\tif (newAccount === 'all') {\n\t\t\tthis.selectedAccounts.push({ id: 'All Accounts' });\n\t\t} else {\n\t\t\tconst walletAccount = await this.walletService.getWalletAccount(newAccount);\n\t\t\tthis.selectedAccounts.push(walletAccount);\n\t\t}\n\n\t\tsetTimeout(() => (this.changeAccountID = null), 10);\n\t}\n\n\tremoveSelectedAccount(account) {\n\t\tthis.selectedAccounts.splice(this.selectedAccounts.indexOf(account), 1); // Remove all from the list\n\t}\n\n\tsearchRepresentatives() {\n\t\tthis.showRepresentatives = true;\n\t\tconst search = this.toRepresentativeID || '';\n\t\tconst representatives = this.representativeService.getSortedRepresentatives();\n\n\t\tconst matches = representatives.filter(a => a.name.toLowerCase().indexOf(search.toLowerCase()) !== -1);\n\n\t\tthis.representativeResults$.next(matches);\n\t}\n\n\tselectRep() {\n\t\tthis.selectRepresentative(this.representativeSelect);\n\t}\n\n\tselectRepresentative(rep) {\n\t\tthis.showRepresentatives = false;\n\t\tthis.toRepresentativeID = rep;\n\t\tthis.searchRepresentatives();\n\t\tthis.validateRepresentative();\n\t}\n\n\tvalidateRepresentative() {\n\t\tsetTimeout(() => (this.showRepresentatives = false), 400);\n\t\tthis.toRepresentativeID = this.toRepresentativeID.replace(/ /g, '');\n\t\tconst rep = this.representativeService.getRepresentative(this.toRepresentativeID);\n\n\t\tif (rep) {\n\t\t\tthis.representativeListMatch = rep.name;\n\t\t} else {\n\t\t\tthis.representativeListMatch = '';\n\t\t}\n\t}\n\n\tasync changeRepresentatives() {\n\t\tconst accounts = this.selectedAccounts;\n\t\tconst newRep = this.toRepresentativeID;\n\n\t\tif (this.changingRepresentatives) {\n\t\t\treturn; // Already running\n\t\t}\n\t\tif (this.walletService.walletIsLocked()) {\n\t\t\treturn this.notifications.sendWarning(this.msg2);\n\t\t}\n\t\tif (!accounts || !accounts.length) {\n\t\t\treturn this.notifications.sendWarning(this.msg3);\n\t\t}\n\n\t\tthis.changingRepresentatives = true;\n\n\t\tconst valid = await this.api.validateAccountNumber(newRep);\n\t\tif (!valid.result) {\n\t\t\tthis.changingRepresentatives = false;\n\t\t\treturn this.notifications.sendWarning(this.msg4);\n\t\t}\n\n\t\tconst qlcTokenMeta = await this.api.accountInfoByToken(newRep);\n\t\tif (qlcTokenMeta === undefined || qlcTokenMeta == null) {\n\t\t\tthis.changingRepresentatives = false;\n\t\t\treturn this.notifications.sendWarning(this.msg5 + ` ${newRep} ` + this.msg6);\n\t\t}\n\n\t\tconst allAccounts = accounts.find(a => a.id === 'All Accounts');\n\t\tconst accountsToChange = allAccounts ? this.accounts : accounts;\n\n\t\t// Remove any that don't need their represetatives to be changed\n\t\tconst accountsNeedingChange = accountsToChange.filter(account => {\n\t\t\tconst accountInfo = this.fullAccounts.find(a => a.id === account.id);\n\t\t\t// token account exist and token account holder QLC\n\t\t\tif (accountInfo && accountInfo.representative) {\n\t\t\t\treturn accountInfo.representative.toLowerCase() !== newRep.toLowerCase();\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tif (!accountsNeedingChange.length) {\n\t\t\tthis.changingRepresentatives = false;\n\t\t\treturn this.notifications.sendInfo(this.msg7);\n\t\t}\n\n\t\t// Now loop and change them\n\t\tfor (const account of accountsNeedingChange) {\n\t\t\tconst walletAccount = await this.walletService.getWalletAccount(account.id);\n\t\t\tif (!walletAccount) {\n\t\t\t\tcontinue; // Unable to find account in the wallet? wat?\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst changed = await this.qlcBlock.generateChange(walletAccount, newRep, this.walletService.isLedgerWallet());\n\t\t\t\tif (!changed) {\n\t\t\t\t\tthis.notifications.sendError(this.msg8 + ` ${account.id}` + this.msg9);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tthis.notifications.sendError(err.message);\n\t\t\t}\n\t\t}\n\n\t\t// Good to go!\n\t\tthis.selectedAccounts = [];\n\t\tthis.toRepresentativeID = '';\n\t\tthis.representativeListMatch = '';\n\t\tthis.changingRepresentatives = false;\n\n\t\tthis.notifications.sendSuccess(this.msg10);\n\t\tthis.searchRepresentatives();\n\t\tawait this.loadRepresentativeOverview();\n\t}\n}\n","<app-user-submenu></app-user-submenu>\n\n<div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n  <div class=\"row\">\n    <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <!-- TITLE -->\n          <div class=\"col-md-6 col-12 mt-2 pl-2 pr-2\">\n            <div class=\"content-title\">\n              <h1 class=\"neo\">My Representatives</h1>\n            </div>\n          </div>\n          <div class=\"col-md-3 col-12 pl-md-2 pr-md-2 pl-2 pr-2\">\n            <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 \" (click)=\"checkReps()\">\n              Refresh\n            </button>\n          </div>\n          <div class=\"col-md-3 col-12 pl-2 pr-2 pt-md-0 pt-2\">\n            <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 \"  routerLink=\"/representation\">\n              Representatives Overview\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"container accounts pt-3\">\n  <div class=\"row\">\n    \n    <!-- LIST -->\n    <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n      <div class=\"content-box-white\">\n        \n        \n        <div class=\"container\">\n          \n          <div class=\"row qlc-table-header\">\n            <div class=\"col-xl-5 col-lg-4 col-md-4 col-sm-4 col-6 text-truncate\">Address</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4\">Balance</div>\n              <div class=\"col-xl-1 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Voting power</div>\n              <div class=\"col-xl-1 col-lg-1 col-md-1 col-sm-1 col-1 pl-4\">Main Block</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4\">Reward</div>\n              <div class=\"col-xl-1 col-lg-1 col-md-1 col-sm-1 col-1 text-right\">Online</div>\n          </div>\n\n          <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngIf=\"repAccounts.length == 0\">\n            <div class=\"col-12 pb-0 text-center\">\n              <p class=\"text-center pt-2 pb-2\"><span class=\"title-modal-blue mt-0 mb-4\">No rewards</span><br>\n                None of your accounts is a Representative</p>\n            </div>\n          </div>\n          \n          <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let rep of repAccounts\">\n            <div class=\"d-none d-xl-block col-xl-5 pb-0\">\n              <a [routerLink]=\"'/account/' + rep.repInfo.address\">{{ rep.repInfo.address | squeeze : '25,25' }}</a>\n            </div>\n            <div class=\"d-none d-lg-block d-xl-none col-lg-4 pb-0\">\n              <a [routerLink]=\"'/account/' + rep.repInfo.address\">{{ rep.repInfo.address | squeeze : '18,18' }}</a>\n            </div>\n            <div class=\"d-none d-md-block d-lg-none col-md-4 pb-0\">\n              <a [routerLink]=\"'/account/' + rep.repInfo.address\">{{ rep.repInfo.address | squeeze : '10,10' }}</a>\n            </div>\n            <div class=\"d-none d-sm-block d-md-none col-sm-4 pb-0\">\n              <a [routerLink]=\"'/account/' + rep.repInfo.address\">{{ rep.repInfo.address | squeeze : '8,8' }}</a>\n            </div>\n            <div class=\"d-block d-sm-none col-6 pb-0\">\n              <a [routerLink]=\"'/account/' + rep.repInfo.address\">{{ rep.repInfo.address | squeeze : '8,8' }}</a>\n            </div>\n            <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">\n              <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">{{ rep.repInfo.total | qlc:8 | currency:'':'':'1.2-8' }}</span>\n            </div>\n            <div class=\"col-xl-1 col-lg-1 col-md-1 col-sm-1 col-1 pb-0 pr-sm-0 pr-4 text-right\" >\n              {{ rep.repInfo.votingPower }} %      \n            </div>\n            <div class=\"col-xl-1 col-lg-1 col-md-1 col-sm-1 col-1 pl-4\">\n              <span *ngIf=\"rep.repInfo.reward && rep.repInfo.reward.mainBlockNum\">{{ rep.repInfo.reward.mainBlockNum }}</span>\n              <span *ngIf=\"!rep.repInfo.reward || (rep.repInfo.reward && !rep.repInfo.reward.mainBlockNum)\">N/A</span>\n            </div>\n            <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4\">\n              <span *ngIf=\"rep.repInfo.reward && rep.repInfo.reward.mainRewardAmount\">{{ rep.repInfo.reward.mainRewardAmount | qlc:8 | currency:'':'':'1.2-2' }} QGAS</span>\n              <span *ngIf=\"!rep.repInfo.reward || (rep.repInfo.reward && !rep.repInfo.reward.mainRewardAmount)\">N/A</span>\n            </div>\n            <div class=\"col-xl-1 col-lg-1 col-md-1 col-sm-1 col-1 pr-4 text-right\">\n              <span class=\"qlc-icon icon-status-online\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Online\" *ngIf=\"rep.repInfo.online\"></span>\n              <span class=\"qlc-icon icon-status-offline\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Offline\" *ngIf=\"!rep.repInfo.online\"></span>\n            </div>\n            <div class=\"col-12\">\n              <span *ngIf=\"rep.repInfo.eligible && rep.repInfo.eligible === true && !rep.repInfo.reward\">\n                <p class=\"text-center pt-2 pb-2\"><span class=\"title-modal-blue mt-0 mb-4\">Eligible for rewards.</span><br>\n                  Run a node with your account and start to vote, check the doc to run a node:<br>\n                  <a href=\"https://docs.qlcchain.online/tutorial/node/install.html#start-go-qlc-node\" target=\"_blank\">https://docs.qlcchain.online/tutorial/node/install.html#start-go-qlc-node</a>\n                <br><br>\n                If your node is already running, please wait atleast 120 POV blocks.</p>\n              </span>\n              <span *ngIf=\"rep.repInfo.eligible && rep.repInfo.eligible === false\">\n                <p class=\"text-center pt-2 pb-2\"><span class=\"title-modal-blue mt-0 mb-4\">Not Eligible for rewards</span><br>\n                  Get Balance over 3 M to become eligible for rewards</p>\n              </span>\n            </div>\n          \n          </div>\n\n        </div>\n\n      </div>\n    </div>\n\n  </div>\n</div>\n\n\n<div *ngIf=\"repAccounts.length == 0\">\n  <div class=\"container mt-0\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <!-- TITLE -->\n            <div class=\"col-md-12 col-12 mt-2 pl-2 pr-2\">\n              <div class=\"content-title\">\n                <h1 class=\"neo\"><span>Your Rewards</span></h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container accounts pt-3\">\n    <div class=\"row\">\n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n        <div class=\"content-box-white\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-5 col-lg-4 col-md-4 col-sm-4 col-6 text-truncate\">Address</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4\">Reward</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Info</div>\n              <div class=\"col-xl-3 col-lg-4 col-md-4 col-sm-4 d-none d-sm-block col-5 pr-4 text-right\">Block heights</div>\n            </div>\n            <div class=\"row qlc-table-row qlc-table-row-twolines closed\">\n              <div class=\"col-12 pb-0 text-center\">\n                  <p class=\"text-center pt-2 pb-2\"><span class=\"title-modal-blue mt-0 mb-4\">No rewards</span><br>\n                    None of your accounts is a Representative</p>\n              </div>\n            </div>              \n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container mt-0\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <!-- TITLE -->\n            <div class=\"col-md-12 col-12 mt-2 pl-2 pr-2\">\n              <div class=\"content-title\">\n                <h1 class=\"neo\"><span>Reward History</span></h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row pb-4\">\n      <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n        <div class=\"content-box-blue bg-blue-voting\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">Reward Amount</div>\n            </div>\n            <div class=\"row qlc-table-row-blue\">\n              <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\">0,00 QGAS</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n        <div class=\"content-box-blue bg-blue-blocks\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">Reward Blocks</div>\n            </div>\n            <div class=\"row qlc-table-row-blue\">\n              <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\">/</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n        <div class=\"content-box-blue bg-blue-blocks\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">Last End Height</div>\n            </div>\n            <div class=\"row qlc-table-row-blue\">\n              <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\">/</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n        <div class=\"content-box-blue bg-blue-transactions\">\n          <div class=\"container\">\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">Last Reward Time</div>\n            </div>\n            <div class=\"row qlc-table-row-blue\">\n              <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\">/</div>\n            </div>\n          </div>\n        </div>\n      </div>     \n    </div>\n  </div>\n</div>\n\n<!-- LOOP ALL REWARDS-->\n\n\n<!-- NEW MINING REWARDS -->\n<div *ngFor=\"let rep of repAccounts\">\n\n    <div class=\"container mt-0\">\n      <div class=\"row\">\n        <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <!-- TITLE -->\n              <div class=\"col-md-12 col-12 mt-2 pl-2 pr-2\">\n                <div class=\"content-title\">\n                  <h1 class=\"neo\"><span *ngIf=\"rep.repRewards.status == 0\">Checking for Rewards...</span></h1>\n                  <h1 class=\"neo\"><span *ngIf=\"rep.repRewards.status == -1\">Your Rewards</span></h1>\n                  <h1 class=\"neo\"><span *ngIf=\"rep.repRewards.status == 1\">Your Rewards</span></h1>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"container accounts pt-3\">\n      <div class=\"row\">\n        \n        <!-- LIST -->\n        <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n          <div class=\"content-box-white\">\n            \n            \n            <div class=\"container\">\n              \n              <div class=\"row qlc-table-header\">\n                <div class=\"col-xl-5 col-lg-4 col-md-4 col-sm-4 col-6 text-truncate\">Address</div>\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4\">Reward</div>\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Info</div>\n                <div class=\"col-xl-3 col-lg-4 col-md-4 col-sm-4 d-none d-sm-block col-5 pr-4 text-right\">Block heights</div>\n              </div>\n              \n              <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngIf=\"rep.repRewards.status == 1\">\n                <div class=\"d-none d-xl-block col-xl-5 pb-0\">\n                  <a [routerLink]=\"'/account/' + rep.repInfo.address\">{{ rep.repInfo.address | squeeze : '25,25' }}</a><br>\n                  <span class=\"text-color-lightgrey text-tiny\">Last Claimed At Node Height:</span> {{ rep.repRewards.data.lastEndHeight }} \n                </div>\n                <div class=\"d-none d-lg-block d-xl-none col-lg-4 pb-0\">\n                  <a [routerLink]=\"'/account/' + rep.repInfo.address\">{{ rep.repInfo.address | squeeze : '18,18' }}</a><br>\n                  <span class=\"text-color-lightgrey text-tiny\">Last Claimed At Node Height:</span> {{ rep.repRewards.data.lastEndHeight }} \n                </div>\n                <div class=\"d-none d-md-block d-lg-none col-md-4 pb-0\">\n                  <a [routerLink]=\"'/account/' + rep.repInfo.address\">{{ rep.repInfo.address | squeeze : '10,10' }}</a><br>\n                  <span class=\"text-color-lightgrey text-tiny\">Last Claimed At Node Height:</span> {{ rep.repRewards.data.lastEndHeight }} \n                </div>\n                <div class=\"d-none d-sm-block d-md-none col-sm-4 pb-0\">\n                  <a [routerLink]=\"'/account/' + rep.repInfo.address\">{{ rep.repInfo.address | squeeze : '8,8' }}</a><br>\n                  <span class=\"text-color-lightgrey text-tiny\">Last Claimed At Node Height:</span> {{ rep.repRewards.data.lastEndHeight }} \n                </div>\n                <div class=\"d-block d-sm-none col-6 pb-0\">\n                  <a [routerLink]=\"'/account/' + rep.repInfo.address\">{{ rep.repInfo.address | squeeze : '8,8' }}</a><br>\n                  <span class=\"text-color-lightgrey text-tiny\">Last Claimed At Node Height:</span> {{ rep.repRewards.data.lastEndHeight }} \n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-2 pl-4 pb-0\">\n                  <span class=\"text-color-lightgrey text-tiny\"> </span> <span class=\"text-color-green\">+{{ rep.repRewards.data.availRewardAmount | qlc : 8 }}</span> QGAS<br>\n                  <span class=\"text-color-lightgrey text-tiny\">Reward Blocks:</span> {{ rep.repRewards.data.availRewardBlocks }}<br>\n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pb-0 pr-sm-0 pr-4 text-right\" >\n                  <span class=\"text-color-lightgrey text-tiny\">Block Start Height:</span> {{ rep.repRewards.data.availStartHeight }}<br>\n                  <span class=\"text-color-lightgrey text-tiny\">Block End Height:</span> {{ rep.repRewards.data.availEndHeight }}\n                </div>\n                <div class=\"col-xl-3 col-lg-4 col-md-4 col-sm-4 col-5 pr-4 text-right\">\n                  <span class=\"text-color-lightgrey text-tiny\">Latest Block Height:</span> {{ rep.repRewards.data.latestBlockHeight }} <br>\n                  <span class=\"text-color-lightgrey text-tiny\">Latest Node Reward Height:</span> {{ rep.repRewards.data.nodeRewardHeight }} \n                </div>\n              \n              </div>\n              <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngIf=\"rep.repRewards.status == -1\">\n                <div class=\"col-12 pb-0 text-center\">\n                  <p class=\"text-center pt-2 pb-2\"><span class=\"title-modal-blue mt-0 mb-4\">You have currently no Rewards</span><br>\n                    The Rewards of the recent 1440 POV blocks are reserved.</p>\n                </div>\n              </div>\n\n              <!-- REWARD CLAIMING -->\n              <div class=\"row rowAmount pl-3 pl-sm-3 pl-sm-3 pr-3 pr-sm-3 pr-sm-3 pt-0 mt-0 pb-3 pt-4\" *ngIf=\"rep.repRewards.showGetReward == 1\">\n                <div class=\"w-100\">\n                  <div class=\"row pt-1 pb-2\" style=\"border-bottom: none !important;\">\n                    <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2 pl-4\">\n                      Beneficial Address\n                    </div>\n                    <div class=\"col-md-9 text-left\" [formGroup]=\"repRewardForm\">\n                      <div class=\"form-group\" >\n                        <select class=\"custom-select\" formControlName=\"beneficial\" >\n                          <option *ngFor=\"let account of accounts\" [value]=\"account.id\"\n                          >{{ account.addressBookName ? account.addressBookName + ' - ' : '' }} {{ account.id }}</option>\n                        </select>\n                        <p style=\"max-width:100%;font-size:11px;padding-left:16px;padding-top:8px;\"></p>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-3\">&nbsp;</div>\n                    <div class=\"col-lg-9 col-md-9 col-sm-12 col-12 pr-0 pl-md-2 pr-md-2\">\n                      <button (click)=\"getReward(rep.account.id)\" type=\"submit\" class=\"btn btn-primary ml-2\" >\n                        GET REWARD\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div *ngIf=\"rep.repRewards.showProcessingReward == 1\">\n                \n                <p class=\"text-center pt-5\"><span class=\"title-modal-blue mt-0 mb-4\">Please wait</span><br>\n                  Processing your reward...</p>\n                  \n                  <div class=\"container\">\n                    <div class=\"row\">\n                      <div class=\"col-md-6 offset-md-3 mt-2 mb-5 pb-3\">\n                        \n                        <div id=\"noTrespassingOuterBarG\">\n                          <div id=\"noTrespassingFrontBarG\" class=\"noTrespassingAnimationG\">\n                            <div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div>\n                            <div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div>\n                          </div>\n                        </div>\n                        \n                      </div>\n                    </div>\n                  </div>\n              </div>\n              <div class=\"row\" *ngIf=\"rep.repRewards.showError == 1\">\n                <div class=\"col-12\">\n                  ERROR - {{ rep.repRewards.errorTxt }}\n                </div>\n              </div>\n              <div class=\"row\" *ngIf=\"rep.repRewards.showBlockProcessed == 1\">\n                <div class=\"col-12 mb-5 mt-5\">\n                    <p class=\"text-center pt-5\"><span class=\"title-modal-blue mt-0 mb-4\">Reward block processed</span><br>\n                      <span class=\"text-tiny text-color-lightgrey pt-3\">Reward block hash</span><br>\n                      <a routerLink=\"/transaction/{{ rep.repRewards.rewardProcessHash }}\">{{ rep.repRewards.rewardProcessHash }}</a></p>\n\n                    <button (click)=\"checkReps()\" type=\"submit\" class=\"btn btn-primary mt-3 mr-2 ml-2\" >\n                      CHECK FOR MORE REWARDS\n                    </button>\n                    <button routerLink=\"/wallets/qlc/{{ rep.account.id }}\" type=\"submit\" class=\"btn btn-primary mt-3 mr-2 ml-2\" >\n                      CLAIM YOUR REWARDS\n                    </button>\n                </div>\n              </div>\n\n              \n            </div>\n\n          </div>\n        </div>\n\n      </div>\n    </div>\n\n\n    <!-- REWARDS HISTORY -->\n\n    <div class=\"container mt-0\">\n      <div class=\"row\">\n        <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <!-- TITLE -->\n              <div class=\"col-md-12 col-12 mt-2 pl-2 pr-2\">\n                <div class=\"content-title\">\n                  <h1 class=\"neo\"><span *ngIf=\"rep.repHistory.status == 0\">Checking for Reward History...</span></h1>\n                  <h1 class=\"neo\"><span *ngIf=\"rep.repHistory.status == -1\">Reward History</span></h1>\n                  <h1 class=\"neo\"><span *ngIf=\"rep.repHistory.status == 1\">Reward History</span></h1>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row pb-4\">\n\n        <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n          <div class=\"content-box-blue bg-blue-voting\">\n            <div class=\"container\">\n              <div class=\"row qlc-table-header-blue\">\n                <div class=\"col-12\">Reward Amount</div>\n              </div>\n              <div class=\"row qlc-table-row-blue\">\n                <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\" *ngIf=\"rep.repHistory.status == 1\">{{ rep.repHistory.data.rewardAmount | qlc : 8 | number: '1.2-2' }} QGAS</div>\n                <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\" *ngIf=\"rep.repHistory.status == -1\">0,00 QGAS</div>\n              </div>\n            </div>\n          </div>\n        </div>\n    \n        <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n          <div class=\"content-box-blue bg-blue-blocks\">\n            <div class=\"container\">\n              <div class=\"row qlc-table-header-blue\">\n                <div class=\"col-12\">Reward Blocks</div>\n              </div>\n              <div class=\"row qlc-table-row-blue\">\n                <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\" *ngIf=\"rep.repHistory.status == 1\">{{ rep.repHistory.data.rewardBlocks }}</div>\n                <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\" *ngIf=\"rep.repHistory.status == -1\">/</div>\n              </div>\n            </div>\n          </div>\n        </div>\n    \n        <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n          <div class=\"content-box-blue bg-blue-blocks\">\n            <div class=\"container\">\n              <div class=\"row qlc-table-header-blue\">\n                <div class=\"col-12\">Last End Height</div>\n              </div>\n              <div class=\"row qlc-table-row-blue\">\n                <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\" *ngIf=\"rep.repHistory.status == 1\">{{ rep.repHistory.data.lastEndHeight }}</div>\n                <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\" *ngIf=\"rep.repHistory.status == -1\">/</div>\n              </div>\n            </div>\n          </div>\n        </div>\n    \n        <div class=\"col-lg-3 col-md-3 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pb-2\">\n          <div class=\"content-box-blue bg-blue-transactions\">\n            <div class=\"container\">\n              <div class=\"row qlc-table-header-blue\">\n                <div class=\"col-12\">Last Reward Time</div>\n              </div>\n              <div class=\"row qlc-table-row-blue\">\n                <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\" *ngIf=\"rep.repHistory.status == 1\">{{ rep.repHistory.data.lastRewardTime * 1000 | date: 'short' }}</div>\n                <div class=\"col-12 pb-2\" style=\"font-size:0.7em;\" *ngIf=\"rep.repHistory.status == -1\">/</div>\n              </div>\n            </div>\n          </div>\n        </div>        \n    \n      </div>\n    </div>\n\n\n\n\n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport { ApiService } from 'src/app/services/api.service';\nimport { QLCBlockService } from 'src/app/services/qlc-block.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-representation-reward',\n  templateUrl: './representation-reward.component.html',\n  styleUrls: ['./representation-reward.component.scss']\n})\nexport class RepresentationRewardComponent implements OnInit {\n  accounts = this.wallet.wallet.accounts;\n\n  minerStats = [];\n\n  repRewardForm = new FormGroup({\n    qlcAddress: new FormControl('',Validators.required),\n    beneficial: new FormControl('',Validators.required),\n    sentHash: new FormControl('',Validators.required),\n  });\n\n  activeView = 'status';\n\n  showGetReward = 0;\n  availRewardAmount = 0;\n  showNoRewardAvailabe = 0;\n  showChecking = 0;\n  showCheckOtherAddress = 0;\n  showError = 0;\n  errorMsg = '';\n  showPreparingBlock = 0;\n  showProcessingBlock = 0;\n  showBlockProcessed = 0;\n  rewardProcessHash = '';\n\n  miningReward = {};\n\n  representatives = [];\n\n  repAccounts = [];\n  nonRepAccounts = [];\n\n  repStats = {\n\t\t\"repCount\": 0,\n\t\t\"repStats\": {\n\t\t},\n\t\t\"totalBlockNum\": 0,\n\t\t\"totalPeriod\": 0,\n\t\t\"totalRewardAmount\": \"\",\n\t\t\"latestBlockHeight\": 0\n\t};\n\n  constructor(\n    private wallet: WalletService,\n    private api: ApiService,\n    private blockService: QLCBlockService,\n    private notifications: NotificationService\n  ) { }\n\n  async ngOnInit() {\n    this.repRewardForm.get('qlcAddress').setValue(this.accounts[0].id);\n    this.repRewardForm.get('beneficial').setValue(this.accounts[0].id);\n    \n    await this.getRepStatus();\n\n    for (const account of this.accounts) { // check if any account address is a rep\n      const isRep = this.representatives.find(o => o.address === account.id);\n      if (isRep) {\n        this.repAccounts.push({\n          account , \n          repInfo : isRep, \n          repHistory: {\n            status: 0\n          }, \n          repRewards: {\n            status: 0,\n            showGetReward: 0,\n            showProcessingReward: 0,\n            showError: 0,\n            errorTxt: '',\n            rewardProcessHash: '',\n            showBlockProcessed: 0\n          } \n        });\n      } else {\n        this.nonRepAccounts.push(account);\n      }\n    }\n    this.checkReps();\n\n  }\n\n  async checkReps() {\n    for (let rep of this.repAccounts) {\n      rep.repRewards.status = 0;\n      rep.repRewards.data = {};\n      rep.repRewards.showGetReward = 0;\n      rep.repRewards.showProcessingReward = 0;\n      rep.repRewards.showError = 0;\n      rep.repRewards.errorTxt = '';\n      rep.repRewards.rewardProcessHash = '';\n      rep.repRewards.showBlockProcessed = 0;\n      rep.repHistory.status = 0;\n\n      const availRewardInfoQuery = await this.api.rep_getAvailRewardInfo(rep.account.id);\n      if (availRewardInfoQuery.result) {\n        if (availRewardInfoQuery.result.needCallReward == true) {\n          // reward\n          rep.repRewards.status = 1;\n          rep.repRewards.data = availRewardInfoQuery.result;\n          rep.repRewards.showGetReward = 1;\n        } else {\n          // no reward found\n          rep.repRewards.status = -1;\n\n        }\n      }\n      const availRewardHistoryInfoQuery = await this.api.rep_getRewardHistory(rep.account.id);\n      if (availRewardHistoryInfoQuery.result) {\n        // reward history\n        rep.repHistory.status = 1;\n        rep.repHistory.data = availRewardHistoryInfoQuery.result;\n        //console.log(rep.repHistory);\n      } else {\n        // no reward found\n        rep.repHistory.status = -1;\n        \n      }\n      //console.log(this.repAccounts);\n    }\n  }\n\n  async getRepStatus() {\n    const repStatsQuery = await this.api.pov_getRepStats();\n    let allRepStats = [];\n    let onlineRepStats = [];\n    let offlineRepStats = [];\n    let eligibleForRewards = [];\n    if (repStatsQuery.result) {\n      this.repStats = repStatsQuery.result;\n      const repStats = this.repStats.repStats;\n      for (var key in repStats) {\n        //console.log(repStats[key]);\n        const repStat = {\n          \"address\" : key,\n          \"mainBlockNum\": repStats[key].mainBlockNum,\n          \"mainRewardAmount\": repStats[key].mainRewardAmount,\n          \"mainOnlinePeriod\": repStats[key].mainOnlinePeriod,\n          \"stableBlockNum\": repStats[key].stableBlockNum,\n          \"stableRewardAmount\": repStats[key].stableRewardAmount,\n          \"stableOnlinePeriod\": repStats[key].stableOnlinePeriod,\n          \"lastOnlineTime\": repStats[key].lastOnlineTime,\n          \"lastOnlineHeight\": repStats[key].lastOnlineHeight,\n          \"isOnline\": repStats[key].isOnline\n        }\n        allRepStats.push(repStat);\n      }\n    }\n    const representatives = await this.api.representatives();\n    if (representatives.result) {\n      const onlineRepresentatives = await this.api.onlineRepresentatives();\n      const onlineReps = onlineRepresentatives.result;\n      const tokens = await this.api.tokenInfoByName('QLC');\n      let displayReps = [];\n      representatives.result.forEach(async rep => {\n        const repOnline = onlineReps.indexOf(rep.address) !== -1;\n        rep.online = repOnline;\n        rep.votingPower = (rep.total / tokens.result.totalSupply*100).toFixed(2);\n        const repReward = allRepStats.filter( (rewardRep) => {\n          return rewardRep.address === rep.address;\n        });\n        if (rep.total >= 300000000000000) {\n          rep.eligible = true;\n        } else {\n          rep.eligible = false;\n        }\n        if (repReward.length !== 0) {\n          rep.reward = repReward[0];\n          if (rep.reward.isOnline) {\n            rep.online = true;\n            displayReps.push(rep);\n          } else {\n            rep.online = false;\n            displayReps.push(rep);\n          }\n        } else {\n          displayReps.push(rep);\n        }\n      });\n      this.representatives = displayReps;\n      \n      return true;\n    }\n    return false;\n  }\n\n  resetForm() {\n    this.showChecking = 0;\n    this.showGetReward = 0;\n    this.showNoRewardAvailabe = 0;\n    this.showCheckOtherAddress = 0;\n    this.showError = 0;\n    this.errorMsg = '';\n    this.showPreparingBlock = 0;\n    this.showProcessingBlock = 0;\n    this.showBlockProcessed = 0;\n    this.rewardProcessHash = '';\n  }\n\n  async checkForm() {\n    if (this.wallet.walletIsLocked()) {\n\t\t\treturn this.notifications.sendWarning('ERROR wallet locked');\n    }\n    this.showChecking = 1;\n    const qlcAddress = this.repRewardForm.value.qlcAddress;\n\n    const availRewardInfoQuery = await this.api.rep_getAvailRewardInfo(qlcAddress);\n\n    if (availRewardInfoQuery.result) {\n      if (availRewardInfoQuery.result.needCallReward == true) {\n        //console.log('availRewardInfoQuery.result.needCallReward true');\n        this.showGetReward = 1;\n        this.miningReward = availRewardInfoQuery.result;\n        this.availRewardAmount = availRewardInfoQuery.result.availRewardAmount;\n      } else {\n        this.showGetReward = 0;\n        this.showNoRewardAvailabe = 1;\n      }\n    }\n    \n    this.showCheckOtherAddress = 1;\n  }\n\n  async getReward(qlcAddress) {\n    if (this.wallet.walletIsLocked()) {\n\t\t\treturn this.notifications.sendWarning('ERROR wallet locked');\n    }\n    let rep = this.repAccounts.find(o => o.account.id === qlcAddress);\n    rep.repRewards.showError = 0;\n    rep.repRewards.errorTxt = '';\n    rep.repRewards.showGetReward = 0;\n    rep.repRewards.showProcessingReward = 1;\n\n    const beneficial = this.repRewardForm.value.beneficial;\n    //console.log(\"beneficial\");\n    //console.log(beneficial);\n    const availRewardInfoQuery = await this.api.rep_getAvailRewardInfo(qlcAddress);\n\n    if (availRewardInfoQuery.result) {\n      const availRewardInfo = availRewardInfoQuery.result;\n      if (availRewardInfo.needCallReward == true) {\n        const rewardSendBlock = await this.api.rep_getRewardSendBlock(qlcAddress,beneficial,availRewardInfo.availStartHeight,availRewardInfo.availEndHeight,availRewardInfo.availRewardBlocks,availRewardInfo.availRewardAmount);\n        //console.log(\"rewardSendBlock\");\n        //console.log(rewardSendBlock);\n        if (!rewardSendBlock.result) {\n          rep.repRewards.showProcessingReward = 0;\n          rep.repRewards.showError = 1;\n          rep.repRewards.errorTxt = 'Error getting reward block, please try again later.';\n          rep.repRewards.showGetReward = 1;\n          return;\n        }\n        const walletAccount = await this.wallet.getWalletAccount(qlcAddress);\n        //this.showPreparingBlock = 0;\n        //this.showProcessingBlock = 1;\n        const processRewardSend = await this.blockService.processBlockWithPov(rewardSendBlock.result,walletAccount.keyPair);\n        if (!processRewardSend.result) {\n          rep.repRewards.showProcessingReward = 0;\n          rep.repRewards.showError = 1;\n          rep.repRewards.errorTxt = 'Error processing reward block. (' + processRewardSend.error.message + ')';\n          rep.repRewards.showGetReward = 1;\n          return;\n        }\n        rep.repRewards.rewardProcessHash = processRewardSend.result;\n        rep.repRewards.showProcessingReward = 0;\n        rep.repRewards.showBlockProcessed = 1;\n        \n        //console.log(processRewardSend);\n      } else {\n        rep.repRewards.showProcessingReward = 0;\n        rep.repRewards.showError = 1;\n        rep.repRewards.errorTxt = 'The reward was already claimed, try again tomorrow.';\n      }\n    }\n\n    return; \n  }\n\n  async receiveReward() {\n    \n    const sentHash = this.repRewardForm.value.sentHash;\n    //console.log(sentHash);\n    const rewardRecvBlockQuery = await this.api.getRewardRecvBlockBySendHash(sentHash);\n    //console.log(rewardRecvBlockQuery);\n    const qlcAddress = this.repRewardForm.value.qlcAddress;\n    const walletAccount = await this.wallet.getWalletAccount(qlcAddress);\n    const procesRewardRecv = await this.blockService.processBlockWithPov(rewardRecvBlockQuery.result,walletAccount.keyPair);\n    //console.log(procesRewardRecv);\n  }\n\n}\n","<app-user-submenu *ngIf=\"wallet.isConfigured()\"></app-user-submenu>\n\n<div class=\"container mt-0 qlc-content-first qlc-content-home\" [ngClass]=\"{'qlc-after-submenu':wallet.isConfigured()}\">\n  <div class=\"row\">\n    <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <!-- TITLE -->\n          <div class=\"col-md-6 col-12 mt-2 pl-2 pr-2\">\n            <div class=\"content-title\">\n              <h1>Representatives</h1>\n            </div>\n          </div>\n          <div class=\"col-md-3 col-12 pl-2 pr-2 pt-md-0 pt-2\" *ngIf=\"wallet.isConfigured()\">\n            <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 \"  routerLink=\"/representation/manage\">\n              Manage\n            </button>\n          </div>\n          <div class=\"col-md-3 col-12 pl-2 pr-2 pt-md-0 pt-2\" *ngIf=\"wallet.isConfigured()\">\n            <button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 \"  routerLink=\"/representation\">\n              My Representatives\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-blocks\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">Latest POV Height</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12\">{{ repStats.latestBlockHeight | currency:'':'':'1.0-0' }} </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-miners\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">Reps with rewards</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12\">{{ repStats.repCount | currency:'':'':'1.0-0' }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-signatures\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">Total Period</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12 text-truncate\">{{ repStats.totalPeriod }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-transactions\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">Total Qgas Reward Amount</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12\">{{ repStats.totalRewardAmount | qlc: 8 | currency:'':'':'1.2-2' }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div *ngIf=\"loaded === true\">\n<!-- REPRESENTATIVES -->\n<div *ngIf=\"onlineRepsWithRewards.length > 0 || offlineRepsWithRewards.length > 0\">\n  <div class=\"container mt-3\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <!-- TITLE -->\n            <div class=\"col-md-12 col-12 mt-2 pl-2 pr-2\">\n              <div class=\"content-title\">\n                <h1><span>Rewarded Representatives</span></h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container accounts pt-3\">\n      <div class=\"row\">\n        \n        <!-- LIST -->\n        <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n          <div class=\"content-box-white\">\n            \n            \n            <div class=\"container\">\n              \n              <div class=\"row qlc-table-header\">\n                <div class=\"col-xl-5 col-lg-4 col-md-6 col-sm-4 col-4 text-truncate\">Address</div>\n                <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-4 col-4 pl-4 text-right\">Weight</div>\n                <div class=\"col-xl-1 col-lg-2 pr-lg-0 col-md-3 pr-md-4 col-sm-4 col-4 pr-sm-4 pr-4 text-right\">Voting power</div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-4 d-lg-block order-md-5 col-md-1 d-md-none d-none col-sm-1 col-1 pl-4 text-right\">Main Block</div>\n                <div class=\"col-xl-2 col-lg-2 order-lg-5 d-lg-block pl-lg-0 order-md-6 col-md-2 d-md-none d-none col-sm-2 col-2 pl-4 text-right\">Reward</div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-6 d-lg-block order-md-4 col-md-1 d-md-none d-none col-sm-1 col-1 text-right\">Online</div>\n              </div>\n                  \n              <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let rep of onlineRepsWithRewards\">\n                <div class=\"d-none d-xl-block col-xl-5 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '25,25' }}</a>\n                </div>\n                <div class=\"d-none d-lg-block d-xl-none col-lg-4 pl-4 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '18,18' }}</a>\n                </div>\n                <div class=\"d-none d-md-block d-lg-none col-md-6 pl-4 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '18,18' }}</a>\n                </div>\n                <div class=\"d-none d-sm-block d-md-none col-sm-4 pl-4 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '12,12' }}</a>\n                </div>\n                <div class=\"d-block d-sm-none col-4 pl-4 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '8,8' }}</a>\n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-4 col-4 pl-4 text-right order-lg-2\">\n                  <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">{{ rep.total | qlc:8 | currency:'':'':'1.2-2' }}</span>\n                </div>\n                <div class=\"col-xl-1 col-lg-2 pr-lg-0 col-md-3 col-sm-4 col-4 pr-4 text-right order-lg-3\" >\n                  {{ rep.votingPower }} %      \n                </div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-4 pr-lg-3 order-6 col-md-3 pr-4 col-sm-4 col-4 pl-4 text-right\">\n                  <span class=\"text-color-lightgrey text-tiny d-lg-none d-inline-block\">Main block: &nbsp;</span>{{ rep.reward.mainBlockNum }}\n                </div>\n                <div class=\"col-xl-2 col-lg-2 pr-lg-2 order-lg-5 order-5 col-md-5 col-sm-5 col-5 pl-4 text-right\">\n                  <span class=\"text-color-lightgrey text-tiny d-lg-none d-inline-block\">Reward: &nbsp;</span>{{ rep.reward.mainRewardAmount | qlc:8 | currency:'':'':'1.2-2' }} QGAS\n                </div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-6 pr-lg-3 text-lg-right pr-lg-0 order-4 col-md-4 text-md-left col-sm-3 col-3 text-left pr-4 pl-4\">\n                  <span class=\"qlc-icon icon-status-online\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Online\"></span> <span class=\"text-color-lightgrey text-tiny d-lg-none d-inline-block\">Online</span>\n                </div>\n              </div>\n              <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let rep of offlineRepsWithRewards\">\n                <div class=\"d-none d-xl-block col-xl-5 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '25,25' }}</a>\n                </div>\n                <div class=\"d-none d-lg-block d-xl-none col-lg-4 pl-4 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '18,18' }}</a>\n                </div>\n                <div class=\"d-none d-md-block d-lg-none col-md-6 pl-4 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '18,18' }}</a>\n                </div>\n                <div class=\"d-none d-sm-block d-md-none col-sm-4 pl-4 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '12,12' }}</a>\n                </div>\n                <div class=\"d-block d-sm-none col-4 pl-4 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '8,8' }}</a>\n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-4 col-4 pl-4 text-right order-lg-2\">\n                  <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">{{ rep.total | qlc:8 | currency:'':'':'1.2-2' }}</span>\n                </div>\n                <div class=\"col-xl-1 col-lg-2 pr-lg-0 col-md-3 col-sm-4 col-4 pr-4 text-right order-lg-3\" >\n                  {{ rep.votingPower }} %      \n                </div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-4 pr-lg-3 order-6 col-md-3 pr-4 col-sm-4 col-4 pl-4 text-right\">\n                  <span class=\"text-color-lightgrey text-tiny d-lg-none d-inline-block\">Main block: &nbsp;</span>{{ rep.reward.mainBlockNum }}\n                </div>\n                <div class=\"col-xl-2 col-lg-2 pr-lg-2 order-lg-5 order-5 col-md-5 col-sm-5 col-5 pl-4 text-right\">\n                  <span class=\"text-color-lightgrey text-tiny d-lg-none d-inline-block\">Reward: &nbsp;</span>{{ rep.reward.mainRewardAmount | qlc:8 | currency:'':'':'1.2-2' }} QGAS\n                </div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-6 pr-lg-3 text-lg-right pr-lg-0 order-4 col-md-4 text-md-left col-sm-3 col-3 text-left pr-4 pl-4\">\n                  <span class=\"qlc-icon icon-status-offline\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Offline\"></span> <span class=\"text-color-lightgrey text-tiny d-lg-none d-inline-block\">Offline</span>\n                </div>\n              </div>\n            </div>\n    \n          </div>\n        </div>\n    \n      </div>\n    </div>\n</div>\n\n<!-- REPRESENTATIVES -->\n<div *ngIf=\"eligibleForRewards.length > 0\">\n  <div class=\"container mt-3\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <!-- TITLE -->\n            <div class=\"col-md-12 col-12 mt-2 pl-2 pr-2\">\n              <div class=\"content-title\">\n                <h1><span>Representatives Eligible For Reward</span></h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container mt-3 mb-3\">\n    <div class=\"row\">\n      \n      <div class=\"col-12 pl-0 pr-0\">\n\n\n        <!-- LIST -->\n        <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n          <div class=\"content-box-white\">\n\n\n            <div class=\"container\">\n\n              <div class=\"row qlc-table-header\">\n                <div class=\"col-xl-5 col-lg-4 col-md-6 col-sm-4 col-4 text-truncate\">Address</div>\n                <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-4 col-4 pl-4 text-right\">Weight</div>\n                <div class=\"col-xl-1 col-lg-2 pr-lg-0 col-md-3 pr-md-4 col-sm-4 col-4 pr-sm-4 pr-4 text-right\">Voting power</div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-4 d-lg-block order-md-5 col-md-1 d-md-none d-none col-sm-1 col-1 pl-4 text-right\">Main Block</div>\n                <div class=\"col-xl-2 col-lg-2 order-lg-5 d-lg-block pl-lg-0 order-md-6 col-md-2 d-md-none d-none col-sm-2 col-2 pl-4 text-right\">Reward</div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-6 d-lg-block order-md-4 col-md-1 d-md-none d-none col-sm-1 col-1 text-right\">Online</div>\n              </div>\n\n              <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let rep of eligibleForRewards\">\n                <div class=\"d-none d-xl-block col-xl-5 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '25,25' }}</a>\n                </div>\n                <div class=\"d-none d-lg-block d-xl-none col-lg-4 pl-4 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '18,18' }}</a>\n                </div>\n                <div class=\"d-none d-md-block d-lg-none col-md-6 pl-4 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '18,18' }}</a>\n                </div>\n                <div class=\"d-none d-sm-block d-md-none col-sm-4 pl-4 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '12,12' }}</a>\n                </div>\n                <div class=\"d-block d-sm-none col-4 pl-4 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '8,8' }}</a>\n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-4 col-4 pl-4 text-right order-lg-2\">\n                  <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">{{ rep.total | qlc:8 | currency:'':'':'1.2-2' }}</span>\n                </div>\n                <div class=\"col-xl-1 col-lg-2 pr-lg-0 col-md-3 col-sm-4 col-4 pr-4 text-right order-lg-3\" >\n                  {{ rep.votingPower }} %      \n                </div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-4 pr-lg-3 order-6 col-md-3 pr-4 col-sm-4 col-4 pl-4 text-right\">\n                  <span class=\"text-color-lightgrey text-tiny d-lg-none d-inline-block\">Main block: &nbsp;</span>N/A\n                </div>\n                <div class=\"col-xl-2 col-lg-2 pr-lg-2 order-lg-5 order-5 col-md-5 col-sm-5 col-5 pl-4 text-right\">\n                  <span class=\"text-color-lightgrey text-tiny d-lg-none d-inline-block\">Reward: &nbsp;</span>N/A\n                </div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-6 pr-lg-3 text-lg-right pr-lg-0 order-4 col-md-4 text-md-left col-sm-3 col-3 text-left pr-4 pl-4\">\n                  <span class=\"qlc-icon icon-status-online\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Online\" *ngIf=\"rep.online\"></span> <span class=\"text-color-lightgrey text-tiny d-lg-none d-inline-block\" *ngIf=\"rep.online\">Online</span>\n                  <span class=\"qlc-icon icon-status-offline\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Offline\" *ngIf=\"!rep.online\"></span> <span class=\"text-color-lightgrey text-tiny d-lg-none d-inline-block\" *ngIf=\"!rep.online\">Offline</span>\n                </div>\n                <div class=\"container transaction-details\"></div>\n              </div>\n              \n                            \n\n            </div>\n\n\n          </div>\n        </div>\n\n        <!-- PAGINATION -->\n        <div class=\"col-lg-12 mb-0 mt-2 pl-md-2 pr-md-2 text-center\" *ngIf=\"pages.length > 1\">\n          <a class=\"btn btn-primary btn-blue btn-box\" *ngIf=\"activePage != 1\" (click)=\"goTo(activePage-1)\">&lt;</a>\n          <a class=\"btn btn-primary btn-white btn-box\" *ngFor=\"let page of pages\" [ngClass]=\"{'active' : page == activePage}\" (click)=\"goTo(page)\">{{ page }}</a>\n          <a class=\"btn btn-primary btn-blue btn-box\" *ngIf=\"activePage != allPages\" (click)=\"goTo(activePage+1)\">&gt;</a>\n        </div>\n                \n      </div>\n      \n    </div>\n  </div>\n</div>\n<!-- REPRESENTATIVES -->\n<div *ngIf=\"representatives.length > 0\">\n  <div class=\"container mt-3\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2 pl-md-0 pr-md-0 pl-2 pr-2\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <!-- TITLE -->\n            <div class=\"col-md-12 col-12 mt-2 pl-2 pr-2\">\n              <div class=\"content-title\">\n                <h1><span>Other Representatives</span></h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"container mt-3 mb-3\">\n    <div class=\"row\">\n      \n      <div class=\"col-12 pl-0 pr-0\">\n\n\n        <!-- LIST -->\n        <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n          <div class=\"content-box-white\">\n\n\n            <div class=\"container\">\n\n              <div class=\"row qlc-table-header\">\n                <div class=\"col-xl-5 col-lg-4 col-md-6 col-sm-4 col-4 text-truncate\">Address</div>\n                <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-4 col-4 pl-4 text-right\">Weight</div>\n                <div class=\"col-xl-1 col-lg-2 pr-lg-0 col-md-3 pr-md-4 col-sm-4 col-4 pr-sm-4 pr-4 text-right\">Voting power</div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-4 d-lg-block order-md-5 col-md-1 d-md-none d-none col-sm-1 col-1 pl-4 text-right\">Main Block</div>\n                <div class=\"col-xl-2 col-lg-2 order-lg-5 d-lg-block pl-lg-0 order-md-6 col-md-2 d-md-none d-none col-sm-2 col-2 pl-4 text-right\">Reward</div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-6 d-lg-block order-md-4 col-md-1 d-md-none d-none col-sm-1 col-1 text-right\">Online</div>\n              </div>\n\n              <div class=\"row qlc-table-row closed\" *ngFor=\"let rep of representatives\">\n                <div class=\"d-none d-xl-block col-xl-5 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '25,25' }}</a>\n                </div>\n                <div class=\"d-none d-lg-block d-xl-none col-lg-4 pl-4 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '18,18' }}</a>\n                </div>\n                <div class=\"d-none d-md-block d-lg-none col-md-6 pl-4 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '18,18' }}</a>\n                </div>\n                <div class=\"d-none d-sm-block d-md-none col-sm-4 pl-4 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '12,12' }}</a>\n                </div>\n                <div class=\"d-block d-sm-none col-4 pl-4 order-lg-1\">\n                  <a [routerLink]=\"'/account/' + rep.address\">{{ rep.address | squeeze : '8,8' }}</a>\n                </div>\n                <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-4 col-4 pl-4 text-right order-lg-2\">\n                  <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">{{ rep.total | qlc:8 | currency:'':'':'1.2-2' }}</span>\n                </div>\n                <div class=\"col-xl-1 col-lg-2 pr-lg-0 col-md-3 col-sm-4 col-4 pr-4 text-right order-lg-3\" >\n                  {{ rep.votingPower }} %      \n                </div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-4 pr-lg-3 order-6 col-md-3 pr-4 col-sm-4 col-4 pl-4 text-right\">\n                  <span class=\"text-color-lightgrey text-tiny d-lg-none d-inline-block\">Main block: &nbsp;</span>N/A\n                </div>\n                <div class=\"col-xl-2 col-lg-2 pr-lg-2 order-lg-5 order-5 col-md-5 col-sm-5 col-5 pl-4 text-right\">\n                  <span class=\"text-color-lightgrey text-tiny d-lg-none d-inline-block\">Reward: &nbsp;</span>N/A\n                </div>\n                <div class=\"col-xl-1 col-lg-1 order-lg-6 pr-lg-3 text-lg-right pr-lg-0 order-4 col-md-4 text-md-left col-sm-3 col-3 text-left pr-4 pl-4\">\n                  <span class=\"qlc-icon icon-status-online\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Online\" *ngIf=\"rep.online\"></span> <span class=\"text-color-lightgrey text-tiny d-lg-none d-inline-block\" *ngIf=\"rep.online\">Online</span>\n                  <span class=\"qlc-icon icon-status-offline\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Offline\" *ngIf=\"!rep.online\"></span> <span class=\"text-color-lightgrey text-tiny d-lg-none d-inline-block\" *ngIf=\"!rep.online\">Offline</span>\n                </div>\n                <div class=\"container transaction-details\"></div>\n              </div>\n              \n                            \n\n            </div>\n\n\n          </div>\n        </div>\n\n        <!-- PAGINATION -->\n        <div class=\"col-lg-12 mb-0 mt-2 pl-md-2 pr-md-2 text-center\" *ngIf=\"pages.length > 1\">\n          <a class=\"btn btn-primary btn-blue btn-box\" *ngIf=\"activePage != 1\" (click)=\"goTo(activePage-1)\">&lt;</a>\n          <a class=\"btn btn-primary btn-white btn-box\" *ngFor=\"let page of pages\" [ngClass]=\"{'active' : page == activePage}\" (click)=\"goTo(page)\">{{ page }}</a>\n          <a class=\"btn btn-primary btn-blue btn-box\" *ngIf=\"activePage != allPages\" (click)=\"goTo(activePage+1)\">&gt;</a>\n        </div>\n                \n      </div>\n      \n    </div>\n  </div>\n</div>\n</div>\n<div class=\"container mt-4 mb-4\">\n  <div class=\"row\">\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { ActivatedRoute, Router, ChildActivationEnd } from '@angular/router';\nimport { NodeService } from 'src/app/services/node.service';\nimport { timer } from 'rxjs';\nimport { WalletService } from 'src/app/services/wallet.service';\n\n@Component({\n  selector: 'app-representatives',\n  templateUrl: './representatives.component.html',\n  styleUrls: ['./representatives.component.scss']\n})\nexport class RepresentativesComponent implements OnInit {\n\n  representatives: any;\n\trepresentativesCount = 0;\n\n\trepStats = {\n\t\t\"repCount\": 0,\n\t\t\"repStats\": {\n\t\t},\n\t\t\"totalBlockNum\": 0,\n\t\t\"totalPeriod\": 0,\n\t\t\"totalRewardAmount\": \"\",\n\t\t\"latestBlockHeight\": 0\n\t};\n\n\tonlineRepsWithRewards = [];\n\tofflineRepsWithRewards = [];\n\teligibleForRewards = [];\n\n\tloaded = false;\n\n  routerSub = null;\n\t\n  pageSize = 10;\n\tpages = [];\n\tallPages = 0;\n  activePage = 0;\n  offSet = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n\t\tprivate router: Router,\n\t\tprivate api: ApiService,\n\t\tprivate node: NodeService,\n\t\tpublic wallet: WalletService\n  ) { }\n\n  async ngOnInit() {\n    this.routerSub = this.router.events.subscribe(event => {\n\t\t\tif (event instanceof ChildActivationEnd) {\n\t\t\t\tthis.load(); // Reload the state when navigating to itself from the transactions page\n\t\t\t}\n    });\n    this.load();\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.routerSub) {\n\t\t\tthis.routerSub.unsubscribe();\n\t\t}\n\t}\n\t\n\tload() {\n\t\tif (this.node.status === true) {\n      var page = this.route.snapshot.params.page;\n      if (page == undefined || page == 0) \n        page = 1;\n    \n\t\t\tthis.setPage(page);\n\t\t} else {\n\t\t\tthis.reload();\n\t\t}\n\t}\n\n\tasync reload() {\n\t\tconst source = timer(200);\n\t\tconst abc =  source.subscribe(async val => {\n\t\t\t\tthis.load();\n\t\t});\n\t} \n\t\n\tgoTo(page) {\n    this.router.navigate(['/representatives/'+page], { relativeTo: this.route });\n  }\n\n\tsetPage(page) {\n    this.activePage = page;\n    this.offSet = page*this.pageSize-this.pageSize;\n    this.loadData();\n\t}\n\t\n\tsetPages() {\n\t\tthis.activePage = Math.floor((this.offSet + this.pageSize)/this.pageSize);\n\t\tvar displayPages = 7;\n\n\t\tvar pages = this.representativesCount/this.pageSize;\n    if (this.representativesCount%this.pageSize != 0) {\n      pages = Math.floor(this.representativesCount/this.pageSize)+1;\n    }\n\t\tthis.allPages = pages;\n\t\tif (pages < 7)\n\t\t\tdisplayPages = pages;\n\t\t\n\t\tthis.pages = Array(displayPages).fill(0).map((pages,i)=>i+1) ;\n\n\t\tif (this.activePage > 3 && this.activePage < pages -3) {\n\t\t\tthis.pages[1] = this.activePage -2;\n\t\t\tthis.pages[2] = this.activePage -1;\n\t\t\tthis.pages[3] = this.activePage;\n\t\t\tthis.pages[4] = this.activePage +1;\n\t\t\tthis.pages[5] = this.activePage +2;\n\t\t} else if (this.activePage > 3 && this.activePage >= pages -3) {\n\t\t\tthis.pages[1] = pages -5;\n\t\t\tthis.pages[2] = pages -4;\n\t\t\tthis.pages[3] = pages -3;\n\t\t\tthis.pages[4] = pages -2;\n\t\t\tthis.pages[5] = pages -1;\n\t\t}\n\n\t\tthis.pages[displayPages-1] = pages;\n\t\tthis.pages[0] = 1;\n\t\tif (this.pages[displayPages-2] != pages -1) {\n\t\t\tthis.pages[displayPages-2] = '...';\n\t\t}\n\n\t\tif (this.pages[1] && this.pages[1] != 2) {\n\t\t\tthis.pages[1] = '...';\n\t\t}\n  }\n\n  async loadData() {\n\tconst repStatsQuery = await this.api.pov_getRepStats();\n\tlet allRepStats = [];\n\tlet onlineRepStats = [];\n\tlet offlineRepStats = [];\n\tlet eligibleForRewards = [];\n\tif (repStatsQuery.result) {\n\t\tthis.repStats = repStatsQuery.result;\n\t\tconst repStats = this.repStats.repStats;\n\t\tfor (var key in repStats) {\n\t\t\t//console.log(repStats[key]);\n\t\t\tconst repStat = {\n\t\t\t\t\"address\" : key,\n\t\t\t\t\"mainBlockNum\": repStats[key].mainBlockNum,\n\t\t\t\t\"mainRewardAmount\": repStats[key].mainRewardAmount,\n\t\t\t\t\"mainOnlinePeriod\": repStats[key].mainOnlinePeriod,\n\t\t\t\t\"stableBlockNum\": repStats[key].stableBlockNum,\n\t\t\t\t\"stableRewardAmount\": repStats[key].stableRewardAmount,\n\t\t\t\t\"stableOnlinePeriod\": repStats[key].stableOnlinePeriod,\n\t\t\t\t\"lastOnlineTime\": repStats[key].lastOnlineTime,\n\t\t\t\t\"lastOnlineHeight\": repStats[key].lastOnlineHeight,\n\t\t\t\t\"isOnline\": repStats[key].isOnline\n\t\t\t}\n\t\t\tallRepStats.push(repStat);\n\t\t}\n\t}\n\n    const representatives = await this.api.representatives();\n\tif (representatives.result) {\n\t\tconst onlineRepresentatives = await this.api.onlineRepresentatives();\n\t\tconst onlineReps = onlineRepresentatives.result;\n\t\tconst tokens = await this.api.tokenInfoByName('QLC');\n\t\tlet displayReps = [];\n      \trepresentatives.result.forEach(async rep => {\n\t\t\tconst repOnline = onlineReps.indexOf(rep.address) !== -1;\n\t\t\trep.online = repOnline;\n\t\t\trep.votingPower = (rep.total / tokens.result.totalSupply*100).toFixed(2);\n\t\t\tconst repReward = allRepStats.filter( (rewardRep) => {\n\t\t\t\treturn rewardRep.address === rep.address;\n\t\t\t});\n\t\t\t//console.log(repReward);\n\t\t\tif (repReward.length !== 0) {\n\t\t\t\trep.reward = repReward[0];\n\t\t\t\tif (rep.reward.isOnline) {\n\t\t\t\t\tonlineRepStats.push(rep);\n\t\t\t\t} else {\n\t\t\t\t\tofflineRepStats.push(rep);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (rep.total >= 300000000000000) {\n\t\t\t\t\teligibleForRewards.push(rep);\n\t\t\t\t} else {\n\t\t\t\t\tdisplayReps.push(rep);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\n\t\t});\n\n\t\tthis.onlineRepsWithRewards = onlineRepStats;\n\t\tthis.offlineRepsWithRewards = offlineRepStats;\n\t\tthis.eligibleForRewards = eligibleForRewards;\n\t\tthis.representatives = displayReps;\n\t\tthis.representativesCount = displayReps.length;\n\t\tthis.loaded = true;\n    }\n  }\n\n}\n","<!-- ACCOUNTS -->\n<div class=\"container mt-0 mb-3 qlc-content-first\">\n    <div class=\"row\">\n      \n      <div class=\"col-12 pl-0 pr-0\">\n        \n        <!-- TITLE -->\n        <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n          <div class=\"content-title\">\n            <h1>Search</h1>\n            <h6>{{ search_text }}</h6>\n          </div>\n        </div>\n        \n        <!-- LIST -->\n        <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n            <div class=\"content-box-white\">\n              \n              \n              <div class=\"container\">\n                <div class=\"row\" *ngIf=\"phoneBlocks.send.length == 0 && phoneBlocks.receive.length == 0 && messageBlocks.length == 0\">\n                  <div class=\"col-12\">\n                      <h1 class=\"mt-3 text-center\"><h6>No match found.</h6></h1>\n                  </div>\n                </div>\n                <!--<div class=\"row\" *ngIf=\"phoneBlocks.send.length > 0\">\n                  <div class=\"col-12\">\n                      <h1 class=\"mt-3\">Send</h1>\n                  </div>\n                </div>\n                -->\n                <div class=\"row qlc-table-header\" *ngIf=\"phoneBlocks.send.length > 0\">\n                  <div class=\"col-xl-8 col-lg-7 col-md-7 col-sm-7 col-9 text-truncate\">Address / Transaction ID</div>\n                  <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Amount</div>\n                  <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 d-none d-sm-block col-6 pr-4 text-right\">Time</div>\n                </div>\n                \n                <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let transaction of phoneBlocks.send\">\n\n                  <div class=\"col-xl-8 col-lg-7 col-md-7 col-sm-7 col-9 pb-0 text-truncate\">\n                    <span class=\"text-color-lightgrey\">{{transaction.type == 'Send' ? 'to' : 'from'}}: </span> \n                    <a [routerLink]=\"'/account/' + (transaction.link_as_account || transaction.address)\">{{ transaction.link_as_account || transaction.address }}</a>\n                    <a [routerLink]=\"'/transaction/' + transaction.hash\"><br>\n                      <span class=\"text-tiny\">{{ transaction.hash }}</span>\n                    </a><br><br>\n                    <span class=\"text-tiny\"><strong class=\"text-blue\">Sender: {{ transaction.senderNumber }}</strong> &nbsp;&nbsp; Receiver: {{ transaction.receiverNumber }}</span>\n                  </div>\n                  <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pb-0 pr-sm-0 pr-4 text-right {{\n                    transaction.type == 'Send' ? 'text-color-red' : 'text-color-green'\n                  }}\">\n                  <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">{{transaction.type == 'Send' ? '-' : '+'}} {{ transaction.amount | qlc | currency:'':'':'1.2-8' }}</span>\n                  <br><span class=\"text-color-grey\">{{ transaction.tokenName }}</span>\n                </div>\n                <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 col-12 pr-4 text-right\">\n                  {{ transaction.timestamp * 1000 | date: 'short' }}\n                </div>\n                <div class=\"container transaction-details\">\n                  \n                </div>\n              </div>\n              <!--<div class=\"row\" *ngIf=\"phoneBlocks.receive.length > 0\">\n                <div class=\"col-12\">\n                    <h1 class=\"mt-3\">Receive</h1>\n                </div>\n              </div>-->\n              <div class=\"row qlc-table-header\" *ngIf=\"phoneBlocks.receive.length > 0\">\n                <div class=\"col-xl-8 col-lg-7 col-md-7 col-sm-7 col-9 text-truncate\">Address / Transaction ID</div>\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Amount</div>\n                <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 d-none d-sm-block col-6 pr-4 text-right\">Time</div>\n              </div>\n              <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let transaction of phoneBlocks.receive\">\n\n                  <div class=\"col-xl-8 col-lg-7 col-md-7 col-sm-7 col-9 pb-0 text-truncate\">\n                    <span class=\"text-color-lightgrey\">{{transaction.type == 'Send' ? 'to' : 'from'}}: </span> \n                    <a [routerLink]=\"'/account/' + (transaction.link_as_account || transaction.address)\">{{ transaction.link_as_account || transaction.address }}</a>\n                    <a [routerLink]=\"'/transaction/' + transaction.hash\"><br>\n                      <span class=\"text-tiny\">{{ transaction.hash }}</span>\n                    </a><br><br>\n                    <span class=\"text-tiny\">Sender: {{ transaction.senderNumber }} &nbsp;&nbsp; <strong class=\"text-blue\">Receiver: {{ transaction.receiverNumber }}</strong></span>\n                  </div>\n                  <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pb-0 pr-sm-0 pr-4 text-right {{\n                    transaction.type == 'Send' ? 'text-color-red' : 'text-color-green'\n                  }}\">\n                  <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">{{transaction.type == 'Send' ? '-' : '+'}} {{ transaction.amount | qlc | currency:'':'':'1.2-8' }}</span>\n                  <br><span class=\"text-color-grey\">{{ transaction.tokenName }}</span>\n                </div>\n                <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 col-12 pr-4 text-right\">\n                  {{ transaction.timestamp * 1000 | date: 'short' }}\n                </div>\n                <div class=\"container transaction-details\">\n                  \n                </div>\n              </div>\n\n              <div class=\"row qlc-table-header\" *ngIf=\"messageBlocks.length > 0\">\n                <div class=\"col-xl-8 col-lg-7 col-md-7 col-sm-7 col-9 text-truncate\">Address / Transaction ID</div>\n                <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pr-sm-0 pr-4 text-right\">Amount</div>\n                <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 d-none d-sm-block col-6 pr-4 text-right\">Time</div>\n              </div>\n              <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let transaction of messageBlocks\">\n\n                  <div class=\"col-xl-8 col-lg-7 col-md-7 col-sm-7 col-9 pb-0 text-truncate\">\n                    <span class=\"text-color-lightgrey\">{{transaction.type == 'Send' ? 'to' : 'from'}}: </span> \n                    <a [routerLink]=\"'/account/' + (transaction.link_as_account || transaction.address)\">{{ transaction.link_as_account || transaction.address }}</a>\n                    <a [routerLink]=\"'/transaction/' + transaction.hash\"><br>\n                      <span class=\"text-tiny\">{{ transaction.hash }}</span>\n                    </a><br><br>\n                    <span class=\"text-tiny\">Sender: {{ transaction.senderNumber }} &nbsp;&nbsp; <strong class=\"text-blue\">Receiver: {{ transaction.receiverNumber }}</strong></span>\n                  </div>\n                  <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 col-3 pb-0 pr-sm-0 pr-4 text-right {{\n                    transaction.type == 'Send' ? 'text-color-red' : 'text-color-green'\n                  }}\">\n                  <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"+9.00 $\">{{transaction.type == 'Send' ? '-' : '+'}} {{ transaction.amount | qlc | currency:'':'':'1.2-8' }}</span>\n                  <br><span class=\"text-color-grey\">{{ transaction.tokenName }}</span>\n                </div>\n                <div class=\"col-xl-2 col-lg-3 col-md-3 col-sm-3 col-12 pr-4 text-right\">\n                  {{ transaction.timestamp * 1000 | date: 'short' }}\n                </div>\n                <div class=\"container transaction-details\">\n                  \n                </div>\n              </div>\n            </div>\n            \n            \n          </div>\n        </div>\n        \n        \n        \n      </div>\n      \n    </div>\n  </div>\n  \n  <div class=\"container mt-4 mb-4\">\n    <div class=\"row\">\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, ChildActivationEnd } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { NodeService } from 'src/app/services/node.service';\nimport { timer } from 'rxjs';\nimport { Base64 } from 'js-base64';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n\n  reloadTimer = null;\n  routerSub = null;\n\n  search_text = '';\n\n  phoneBlocks = {\n    receive: [],\n    send: []\n  }\n\n  messageBlocks = [];\n\n\n\n  constructor(\n    private route: ActivatedRoute,\n\t\tprivate router: Router,\n\t\tprivate api: ApiService,\n    private node: NodeService\n  ) { }\n\n  ngOnInit() {\n   \n    this.routerSub = this.router.events.subscribe(event => {\n\t\t\tif (event instanceof ChildActivationEnd) {\n\t\t\t\tthis.load(); // Reload the state when navigating to itself from the transactions page\n\t\t\t}\n    });\n    this.load();\n\n  }\n\n  ngOnDestroy() {\n\t\tif (this.reloadTimer) {\n\t\t\tthis.reloadTimer.unsubscribe();\n    }\n    if (this.routerSub) {\n\t\t\tthis.routerSub.unsubscribe();\n\t\t}\n\t}\n\n  load() {\n\t\tif (this.node.status === true) {\n      this.search();\n\t\t} else {\n\t\t\tthis.reload();\n\t\t}\n  }\n  \n  async reload() {\n\t\tconst source = timer(200);\n\t\tthis.reloadTimer =  source.subscribe(async val => {\n\t\t\t\tthis.load();\n\t\t});\n  } \n  \n  async search() {\n    const phoneNumber = Base64.decode(this.route.snapshot.params.hash);\n    this.search_text = phoneNumber;\n    this.phoneBlocks = {\n      receive: [],\n      send: []\n    };\n    this.messageBlocks = [];\n    const phoneBlocks = await this.api.phoneBlocks(this.search_text);\n    if (!phoneBlocks.error) {\n      this.phoneBlocks = phoneBlocks.result;\n    }\n    this.phoneBlocks.send.forEach(element => {\n      element.senderNumber = Base64.decode(element.sender)\n      element.receiverNumber = Base64.decode(element.receiver)\n    });\n    this.phoneBlocks.receive.forEach(element => {\n      element.senderNumber = Base64.decode(element.sender)\n      element.receiverNumber = Base64.decode(element.receiver)\n    });\n\n    const messageHashRequest = await this.api.messageHash(this.search_text);\n    if (!messageHashRequest.error) {\n      const messageHash = messageHashRequest.result;\n      const messageBlocks = await this.api.messageBlocks(messageHash);\n      if (!messageBlocks.error) {\n        this.messageBlocks = messageBlocks.result;\n        this.messageBlocks.forEach(element => {\n          element.senderNumber = Base64.decode(element.sender)\n          element.receiverNumber = Base64.decode(element.receiver)\n        });\n      }\n    }\n  }\n\n}\n","<app-user-submenu></app-user-submenu>\n<div class=\"send-screen-1 qlc-content-home qlc-after-submenu\" *ngIf=\"activePanel == 'send'\">\n\n\n\n\t<!-- SEND FORM -->\n\t<div class=\"container mt-0 qlc-content-first\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-12 pl-0 pr-0 pb-2\">\n\t\t\t\t<!-- LATEST TRANSACTIONS -->\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<!-- TITLE -->\n\t\t\t\t\t\t\t<div class=\"col-md-9 col-12 mt-2 pl-md-2 pr-md-2\">\n\t\t\t\t\t\t\t\t<div class=\"content-title\">\n\t\t\t\t\t\t\t\t\t<h1>Send tokens</h1>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-md-3 col-12 pl-md-2 pr-md-2\">\n\t\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0\" routerLink=\"/wallets\">\n\t\t\t\t\t\t\t\t\t\tBack to my Wallets\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"container accounts\">\n\t\t<div class=\"row\">\n\n\t\t\t<!-- ADDRESS -->\n\t\t\t<div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n\t\t\t\t<div class=\"content-box-blue h-100 pb-3\">\n\t\t\t\t\t<div class=\"container\">\n\n\t\t\t\t\t<div class=\"row qlc-table-header-blue\">\n\t\t\t\t\t\t<div class=\"col-12\">Address</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"row qlc-table-row-blue row-text-mid mt-3\">\n\t\t\t\t\t\t<div class=\"col-12 text-break pr-3\">{{ fromAccountID }}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\n\t\t\t<!-- BALANCES -->\n\t\t\t<div class=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 pb-3\">\n\t\t\t\t\t<div class=\"container pl-0 pr-0\">\n\t\t\t\t\t\t<div class=\"row pl-0 pr-0\">\n\n\t\t\t\t\t\t<!-- QLC BALANCES -->\n\t\t\t\t\t\t<div class=\"col-md-4 col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 mb-0 order-md-1 order-1\">\n\t\t\t\t\t\t\t<div class=\"content-box-white h-auto mt-2 pb-2 balance-box\" [class.active]=\"selectedToken.tokenName == 'QLC'\" (click)=\"selectTokenIcon('QLC')\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t\t\t<div class=\"row qlc-table-header-white\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-12\">QLC Balance</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-3 mt-3\">\n\t\t\t\t\t\t\t\t\t\t\t<img src=\"assets/img/token-qlc.png\" class=\"w-100 icon-token\">\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-9 pr-0 pl-0\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 pb-0\">{{ tokenBalance('QLC') | qlc: 8 | currency:'':'':'1.2-8' }}</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row qlc-table-row-white sub-page pt-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<!-- QGAS BALANCES -->\n\t\t\t\t\t\t<div class=\"col-md-4 col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 mb-0 order-md-2 order-2\">\n\t\t\t\t\t\t\t<div class=\"content-box-white h-auto mt-2 pb-2 balance-box\" [class.active]=\"selectedToken.tokenName == 'QGAS'\" (click)=\"selectTokenIcon('QGAS')\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t\t\t<div class=\"row qlc-table-header-white\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-12\">QGAS Balance</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-3 mt-3\">\n\t\t\t\t\t\t\t\t\t\t\t<img src=\"assets/img/token-qgas.png\" class=\"w-100 icon-token\">\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-9 pr-0 pl-0\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row qlc-table-row-white row-text-mid mt-3 pb-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 pb-0\">{{ tokenBalance('QGAS') | qlc: 8 | currency:'':'':'1.2-8' }}</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row qlc-table-row-white sub-page pt-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 text-wrap pt-0\"><span class=\"text-blue\">-</span></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<!-- OTHER TOKENS BALANCES -->\n\t\t\t\t\t\t<div class=\"col-md-4 col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 mb-0 order-md-3 order-3\">\n\t\t\t\t\t\t\t<div class=\"content-box-white h-auto mt-2 pb-2 balance-box\" [class.active]=\"selectedToken.tokenName != 'QLC' && selectedToken.tokenName != 'QGAS'\">\n\t\t\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t\t\t<div class=\"row qlc-table-header-white\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-12\">Other Tokens Balances</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<!-- QLC -->\n\t\t\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t\t\t<div class=\"row pb-2\">\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<carousel [interval]=\"otherInterval\" [(activeSlide)]=\"activeSlideIndex\" class=\"w-100\" style=\"margin-top:-4px;margin-bottom:3px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<slide class=\"otherSlide\" *ngFor=\"let token of otherTokens\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row pt-3 pl-3 pr-3 mb-2 pb-1\" (click)=\"selectTokenIcon(token.tokenInfo.tokenSymbol)\" [class.activeOther]=\"selectedToken.tokenInfo.tokenSymbol == token.tokenInfo.tokenSymbol\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-3 pr-3 pt-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"assets/img/token-none.png\" class=\"w-100 icon-token\" style=\"padding-right:2px;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-9 pr-0 pl-0 mb-2 pb-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row qlc-table-row-white row-text-mid mt-0 pb-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 pb-0 mb-0\"><span style=\"color: #a8a6ae;font-size: 12px;text-transform: uppercase;font-weight: 700; line-height:14px;\">{{ token.tokenInfo.tokenSymbol }} ({{ token.tokenInfo.tokenName }})</span></div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 pb-0 pt-0 mt-0\" style=\"color: #595757;font-size: 14px;text-transform: uppercase;font-weight: 700; line-height:16px;\">{{ token.balance | qlc: token.tokenInfo.decimals | currency:'':'':'1.2-8'}}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</slide>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t</carousel>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<!-- SEND FORM -->\n\t\t\t\t\t\t<div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n\t\t\t\t\t\t\t<div class=\"content-box-white h-auto mt-2 pb-2 pl-2 pr-2\">\n\n\t\t\t\t\t\t\t\t<div class=\"container ml-1 pr-3 pl-3\">\n\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"!accounts.length\" class=\"row defaultTable content\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 text-center\">\n\t\t\t\t\t\t\t\t\t\t\t{{ 'NO_WALLET_CONFIGURED' | translate\n\t\t\t\t\t\t\t\t\t\t\t}}<a routerLink=\"/createwallet\">{{ 'NO_WALLET_CONFIGURED_CLICK' | translate }}</a>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"accounts.length\" class=\"row defaultTable sendTokens\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-12\">\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row rowContent mb-5\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-2 dataName pb-3 pb-md-0 form-label-custom-2\">{{ 'SEND_TOKENS_TAB.amount' | translate }}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-10\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row align-items-top\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6 pb-3 pb-md-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-text \">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ selectedToken.tokenInfo ? selectedToken.tokenInfo.tokenName : '' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control inlineForm\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"amount\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"{{ 'SEND_TOKENS_TAB.amount_placeholder' | translate }}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonfocus=\"this.placeholder = ''\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle=\"height: 42.5px !important;\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-append\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a (click)=\"setMaxAmount()\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-text maxLink\">{{ 'SEND_TOKENS_TAB.max' | translate }}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6 d-block d-md-none pb-3 pb-md-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-prepend\"><div class=\"input-group-text\">USD/$</div></div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control inlineForm2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"amountFiat\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"{{ 'SEND_TOKENS_TAB.amount_placeholder' | translate }}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonfocus=\"this.placeholder = ''\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6 pt-2 pt-md-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row align-items-top\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">{{ 'TOKEN' | translate }}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-9\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select class=\"custom-select\" [(ngModel)]=\"selectedTokenSymbol\" (change)=\"selectToken()\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let token of accountTokens\" [value]=\"token.tokenInfo.tokenSymbol\">{{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoken.tokenInfo.tokenSymbol\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row align-items-top pt-3 pt-md-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6 d-none d-md-block\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group\" *ngIf=\"hideFiat != 1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-prepend\"><div class=\"input-group-text\">USD/$</div></div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control inlineForm2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"{{ 'SEND_TOKENS_TAB.amount_placeholder' | translate }}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-5 dataName pb-3 pb-md-0 form-label-custom-2\">MAX. DECIMALS</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-5 \">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"balance\" *ngIf=\"selectedToken.balance\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ selectedToken.tokenInfo.decimals }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row align-items-top\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">{{ 'BALANCE' | translate }}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-9 \">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-6 pr-0 balance\" *ngIf=\"selectedToken.balance\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ selectedToken.balance | qlc: selectedToken.tokenInfo.decimals | currency:'':'':'1.0-'+selectedToken.tokenInfo.decimals }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-6 pl-0 text-right fiat\">(-)</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-2 dataName pb-3 pb-md-0 form-label-custom-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ 'SEND_TOKENS_TAB.from_account' | translate }}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-10\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select class=\"custom-select\" [(ngModel)]=\"fromAccountID\" (change)=\"selectAccount()\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let account of accounts\" [value]=\"account.id\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>{{ account.addressBookName ? account.addressBookName + ' - ' : '' }} {{ account.id }}</option\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-2 dataName pb-3 pb-md-0 form-label-custom-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{ 'SEND_TOKENS_TAB.to_account' | translate }}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-10 text-left text-truncate\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"custom-select contacts\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"bookContact\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(change)=\"selectFromBook()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{ success: toAccountStatus === 2, dangerRight: toAccountStatus === 0 }\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let book of (addressBookResults$ | async)\" [value]=\"book.account\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>{{ book.name }} {{ book.account }}</option\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control toaccount\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"{{ 'SEND_TOKENS_TAB.to_account_placeholder' | translate }}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonfocus=\"this.placeholder = ''\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(blur)=\"validateDestination()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"toAccountID\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{ success: toAccountStatus === 2, dangerLeft: toAccountStatus === 0 }\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row rowAmount pl-3 pl-sm-3 pl-sm-3 pr-3 pr-sm-3 pr-sm-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-2\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-lg-5 col-md-4 col-sm-12 col-12 pl-0 pr-0 pl-md-2 pr-md-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary\" (click)=\"sendTransaction()\" style=\"min-width:100%;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ 'SEND_TOKENS_TAB.send' | translate }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\n\t\t</div>\n\t</div>\t\t\n\n</div>\n<!-- END SEND FORM-->\n\n\n\n\n\n\n\n<div class=\"send-screen-2 qlc-content-home qlc-after-submenu\" *ngIf=\"activePanel == 'confirm'\">\n\t\t<!-- SEND FORM -->\n\t\t<div class=\"container mt-0 qlc-content-first\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-12 pl-0 pr-0\">\n\t\t\t\t\t\n\t\t\t\t\t<!-- TITLE -->\n\t\t\t\t\t<div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n\t\t\t\t\t\t<div class=\"content-title\">\n\t\t\t\t\t\t\t<h1>{{ 'SEND_TOKENS_TAB.confirm_transaction' | translate }}</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\n\n\t\t<div class=\"container\">\n\t\t\t<div class=\"row confirmTransaction\">\n\t\n\t\t\t\t<!-- ADDRESS -->\n\t\t\t\t<div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n\t\t\t\t\t<div class=\"content-box-white h-auto pb-5\">\n\t\t\t\t\t\t<div class=\"container mb-3\">\n\t\n\n\t\t\t\t\t\t\t\t\t<div class=\"row align-items-center fromText pt-5\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 text-label\">{{ 'SEND_TOKENS_TAB.you_are_about_to_send' | translate }}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"row align-items-center \">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 sum\">\n\t\t\t\t\t\t\t\t\t\t\t<span>{{ rawAmount | qlc: selectedToken.tokenInfo.decimals | currency:'':'':'1.0-'+selectedToken.tokenInfo.decimals }} {{ selectedTokenSymbol }}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"row align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 \" *ngIf=\"hideFiat != 1\">\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"fiatsum\">{{ amountFiat | fiat: settings.settings.displayCurrency }}</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"fiatrate\" \n\t\t\t\t\t\t\t\t\t\t\t\t> @ {{ price.price.lastPrice | fiat: settings.settings.displayCurrency }} / {{ selectedTokenSymbol }}</span\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"row transfer\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-lg-6 text-center pt-4 pb-4\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"text-label pb-2\">{{ 'SEND_TOKENS_TAB.from_account' | translate }}</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"pl-5 pr-5 text-truncate pt-1 pb-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t<a [routerLink]=\"'/account/' + fromAccountID\" class=\"name\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"fromAddressBook\">{{ fromAddressBook }}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"d-none d-xl-block\" *ngIf=\"!fromAddressBook\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ fromAccountID | squeeze : '15,15' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"d-none d-lg-block d-xl-none\" *ngIf=\"!fromAddressBook\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ fromAccountID | squeeze : '12,12' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"d-none d-md-block d-lg-none\" *ngIf=\"!fromAddressBook\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ fromAccountID | squeeze : '20,20' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"d-none d-sm-block d-md-none\" *ngIf=\"!fromAddressBook\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ fromAccountID | squeeze : '15,15' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"d-block d-sm-none\" *ngIf=\"!fromAddressBook\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ fromAccountID | squeeze : '12,12' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"pl-5 pr-5 pb-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t<a [routerLink]=\"'/account/' + fromAccountID\" class=\"address\">{{ fromAccountID }}</a>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"pt-2 text-bold negative_change\">-{{ rawAmount | qlc: selectedToken.tokenInfo.decimals | currency:'':'':'1.0-'+selectedToken.tokenInfo.decimals }} {{ selectedTokenSymbol }}</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"text-label pb-3\">{{ 'SEND_TOKENS_TAB.amount_to_send' | translate }}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-lg-6 text-center pt-4 pb-4\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"text-label pb-2\">{{ 'SEND_TOKENS_TAB.to_account' | translate }}</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"pl-5 pr-5 text-truncate pt-1 pb-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t<a [routerLink]=\"'/account/' + toAccountID\" class=\"name\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"toAddressBook\">{{ toAddressBook }}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"d-none d-xl-block\" *ngIf=\"!toAddressBook\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ toAccountID | squeeze : '15,15' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"d-none d-lg-block d-xl-none\" *ngIf=\"!toAddressBook\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ toAccountID | squeeze : '12,12' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"d-none d-md-block d-lg-none\" *ngIf=\"!toAddressBook\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ toAccountID | squeeze : '20,20' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"d-none d-sm-block d-md-none\" *ngIf=\"!toAddressBook\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ toAccountID | squeeze : '15,15' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"d-block d-sm-none\" *ngIf=\"!toAddressBook\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ toAccountID | squeeze : '12,12' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"pl-5 pr-5 pb-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t<a [routerLink]=\"'/account/' + toAccountID\" class=\"address\">{{ toAccountID }}</a>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"pt-2 text-bold positive_change\">+{{ rawAmount | qlc: selectedToken.tokenInfo.decimals | currency:'':'':'1.0-'+selectedToken.tokenInfo.decimals }} {{ selectedTokenSymbol }}</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"text-label pb-3\">{{ 'SEND_TOKENS_TAB.amount_to_receive' | translate }}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"row align-items-center justify-content-center rowDefault rowButtons pl-4 pr-4\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-lg-2 col-md-4 col-sm-5 col-12 px-0 pr-sm-2 text-left text-truncate mobile-break mb-2\">\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn-primary btn-red btn-danger w-100\" style=\"min-width:auto; padding-left:0px; padding-right:0px;\" (click)=\"activePanel = 'send'\">\n\t\t\t\t\t\t\t\t\t\t\t\t{{ 'CANCEL' | translate }}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-lg-2 col-md-4 col-sm-5 col-12 px-0 px-sm-2 text-left text-truncate mobile-break mb-2\">\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary btn-blue w-100\" style=\"min-width:auto; padding-left:0px; padding-right:0px;\" *ngIf=\"!confirmingTransaction\" (click)=\"confirmTransaction()\">\n\t\t\t\t\t\t\t\t\t\t\t\t{{ 'SEND_TOKENS_TAB.confirm_send' | translate }}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary btn-blue w-100\" style=\"min-width:auto; padding-left:0px; padding-right:0px;\" *ngIf=\"confirmingTransaction\">\n\t\t\t\t\t\t\t\t\t\t\t\t{{ 'LOADING' | translate }}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\n\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { BigNumber } from 'bignumber.js';\nimport { BehaviorSubject, timer } from 'rxjs';\nimport { AddressBookService } from '../../services/address-book.service';\nimport { ApiService } from '../../services/api.service';\nimport { AppSettingsService } from '../../services/app-settings.service';\nimport { NotificationService } from '../../services/notification.service';\nimport { PriceService } from '../../services/price.service';\nimport { QLCBlockService } from '../../services/qlc-block.service';\nimport { UtilService } from '../../services/util.service';\nimport { WalletService } from '../../services/wallet.service';\nimport { WorkPoolService } from '../../services/work-pool.service';\nimport { NodeService } from '../../services/node.service';\n\n@Component({\n\tselector: 'app-send',\n\ttemplateUrl: './send.component.html',\n\tstyleUrls: ['./send.component.scss']\n})\nexport class SendComponent implements OnInit {\n\tqlc = 100000000;\n\n\tactivePanel = 'send';\n\n\taccounts = this.walletService.wallet.accounts;\n\taccountTokens: any = [];\n\tselectedToken: any = [];\n\tselectedTokenSymbol = '';\n\taddressBookResults$ = new BehaviorSubject([]);\n\tshowAddressBook = false;\n\taddressBookMatch = '';\n\thideFiat = 1;\n\n\totherTokens: any = [];\n\totherInterval = 3000;\n\tactiveSlideIndex = 1;\n\n\tmsg1 = '';\n\tmsg2 = '';\n\tmsg3 = '';\n\tmsg4 = '';\n\tmsg5 = '';\n\tmsg6 = '';\n\tmsg7 = '';\n\tmsg8 = '';\n\tmsg9 = '';\n\tmsg10 = '';\n\tmsg11 = '';\n\tmsg12 = '';\n\tmsg13 = '';\n\n\tamounts = [\n\t\t{ name: 'QLC', shortName: 'QLC', value: 'QLC' },\n\t\t{ name: 'kqlc (0.001 QLC)', shortName: 'kqlc', value: 'kqlc' },\n\t\t{ name: 'qlc (0.000001 QLC)', shortName: 'qlc', value: 'qlc' }\n\t];\n\n\tselectedAmount = this.amounts[0];\n\n\tamount = null;\n\tamountRaw = new BigNumber(0);\n\tamountFiat: number | null = null;\n\trawAmount: BigNumber = new BigNumber(0);\n\tfromAccount: any = {};\n\tfromAccountID: any = '';\n\tfromAddressBook = '';\n\t// toAccount: any = false;\n\ttoAccountID = '';\n\tbookContact = '';\n\ttoAddressBook = '';\n\ttoAccountStatus = null;\n  confirmingTransaction = false;\n  \n  reloadTimer = null;\n\n\tconstructor(\n\t\tprivate router: ActivatedRoute,\n\t\tprivate walletService: WalletService,\n\t\tprivate addressBookService: AddressBookService,\n\t\tprivate notificationService: NotificationService,\n\t\tprivate api: ApiService,\n\t\tprivate qlcBlock: QLCBlockService,\n\t\tpublic price: PriceService,\n\t\tprivate workPool: WorkPoolService,\n\t\tpublic settings: AppSettingsService,\n\t\tprivate util: UtilService,\n\t\tprivate trans: TranslateService,\n\t\tprivate node: NodeService\n\t) {\n\t\tthis.loadLang();\n\t\tthis.load();\n  }\n  ngOnDestroy() {\n\t\tif (this.reloadTimer) {\n\t\t\tthis.reloadTimer.unsubscribe();\n\t\t}\n\t}\n\tload() {\n\t\tif (this.node.status === true) {\n\t\t\tif (this.accounts !== undefined && this.accounts.length > 0) {\n\t\t\t\tthis.searchAddressBook();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.reload();\n\t\t}\n\t}\n\n\tasync reload() {\n\t\tconst source = timer(200);\n\t\tthis.reloadTimer = source.subscribe(async val => {\n\t\t\tthis.load();\n\t\t});\n\t}\n\tloadLang() {\n\t\tthis.trans.get('SEND_WARNINGS.msg1').subscribe((res: string) => {\tthis.msg1 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg2').subscribe((res: string) => {\tthis.msg2 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg3').subscribe((res: string) => {\tthis.msg3 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg4').subscribe((res: string) => {\tthis.msg4 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg5').subscribe((res: string) => {\tthis.msg5 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg6').subscribe((res: string) => {\tthis.msg6 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg7').subscribe((res: string) => {\tthis.msg7 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg8').subscribe((res: string) => {\tthis.msg8 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg9').subscribe((res: string) => {\tthis.msg9 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg10').subscribe((res: string) => {\tthis.msg10 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg11').subscribe((res: string) => {\tthis.msg11 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg12').subscribe((res: string) => {\tthis.msg12 = res; });\n\t\tthis.trans.get('SEND_WARNINGS.msg13').subscribe((res: string) => {\tthis.msg13 = res; });\n\t}\n\tasync loadBalances() {\n\t\tconst tokenMap = {};\n\t\tconst tokens = await this.api.tokens();\n\t\tif (!tokens.error) {\n\t\t\ttokens.result.forEach(token => {\n\t\t\t\ttokenMap[token.tokenId] = token;\n\t\t\t});\n\t\t}\n\n\t\t// fill account meta\n\t\tfor (let account of this.accounts) {\n\t\t\tconst accountInfo = await this.api.accountInfo(account.id);\n\t\t\tif (!accountInfo.error) {\n\t\t\t\tlet am = accountInfo.result;\n\t\t\t\taccount.otherTokens = [];\n\t\t\t\tfor (let token of am.tokens) {\n\t\t\t\t\tif (tokenMap.hasOwnProperty(token.type)) {\n\t\t\t\t\t\ttoken.tokenInfo = tokenMap[token.type];\n\t\t\t\t\t\tif (token.tokenInfo.tokenSymbol != 'QLC' && token.tokenInfo.tokenSymbol != 'QGAS') {\n\t\t\t\t\t\t\taccount.otherTokens.push(token);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\taccount.accountMeta = am;\n\t\t\t}\n\t\t}\n\t\tthis.selectAccount();\n\t}\n\n\tasync ngOnInit() {\n\t\tconst params = this.router.snapshot.queryParams;\n\t\tconst account = this.router.snapshot.params.account;\n\t\tif (params && params.amount) {\n\t\t\tthis.amount = params.amount;\n\t\t}\n\t\tif (params && params.to) {\n\t\t\tthis.toAccountID = params.to;\n\t\t\tthis.validateDestination();\n\t\t}\n\n\t\tthis.addressBookService.loadAddressBook();\n\t\t// Look for the first account that has a balance\n\t\tconst accountIDWithBalance = this.accounts.reduce((previous, current) => {\n\t\t\tif (previous) {\n\t\t\t\treturn previous;\n\t\t\t}\n\t\t\tconst tokens = current.accountMeta.tokens;\n\t\t\tif (tokens) {\n\t\t\t\tconst filter = tokens.filter(tokenMeta => {\n\t\t\t\t\treturn tokenMeta.balance > 0;\n\t\t\t\t});\n\n\t\t\t\tif (filter && filter.length > 0) {\n\t\t\t\t\treturn current.id;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}, null);\n\t\tif (account !== undefined) {\n\t\t\tthis.fromAccountID = account;\n\t\t} else if (accountIDWithBalance) {\n\t\t\tthis.fromAccountID = accountIDWithBalance;\n\t\t} else {\n\t\t\tthis.fromAccountID = this.accounts.length ? this.accounts[0].id : '';\n\t\t}\n\t\tthis.trans.onLangChange.subscribe((event: LangChangeEvent) => {\n\t\t\tthis.loadLang();\n\t\t});\n\t\tthis.loadBalances();\n\t}\n\n\t// An update to the QLC amount, sync the fiat value\n\tsyncFiatPrice() {\n\t\tconst rawAmount = this.getAmountBaseValue(this.amount || 0).plus(this.amountRaw);\n\t\tif (rawAmount.lte(0)) {\n\t\t\tthis.amountFiat = 0;\n\t\t\treturn;\n\t\t}\n\n\t\t// This is getting hacky, but if their currency is bitcoin, use 6 decimals, if it is not, use 2\n\t\tconst precision = this.settings.settings.displayCurrency === 'BTC' ? 1000000 : 100;\n\n\t\t// Determine fiat value of the amount\n\t\tconst fiatAmount = this.util.qlc\n\t\t\t.rawToMqlc(rawAmount)\n\t\t\t.times(this.price.price.lastPrice)\n\t\t\t.times(precision)\n\t\t\t.div(precision)\n\t\t\t.toNumber();\n\t\tthis.amountFiat = fiatAmount;\n\t}\n\n\t// An update to the fiat amount, sync the QLC value based on currently selected denomination\n\tsyncQlcPrice() {\n\t\tconst fiatAmount = this.amountFiat || 0;\n\t\tconst rawAmount = this.util.qlc.mqlcToRaw(new BigNumber(fiatAmount).div(this.price.price.lastPrice));\n\t\tconst qlcVal = this.util.qlc.rawToQlc(rawAmount);\n\t\tconst qlcAmount = this.getAmountValueFromBase(this.util.qlc.qlcToRaw(qlcVal));\n\n\t\tthis.amount = qlcAmount.toNumber();\n\t}\n\n\tsearchAddressBook() {\n\t\tconst unSelectedAccount = this.accounts.filter(a => a.id !== this.fromAccountID);\n\t\t\n\t\tlet addresses = [];\n\t\tfor (const account of unSelectedAccount) {\n\t\t\taddresses.push({\n\t\t\t\tname: account.addressBookName ? account.addressBookName + ' - ' : '',\n\t\t\t\taccount: account.id\n\t\t\t})\n\t\t}\n\t\tthis.addressBookResults$.next(addresses);\n\t\t/*\n\t\tthis.showAddressBook = true;\n\t\tconst search = this.toAccountID || '';\n\t\tconst addressBook = this.addressBookService.addressBook;\n\n\t\tconst matches = addressBook.filter(a => a.name.toLowerCase().indexOf(search.toLowerCase()) !== -1).slice(0, 5);\n\n\n\n\t\tthis.addressBookResults$.next(matches);*/\n\t}\n\n\tselectBookEntry(account) {\n\t\tthis.showAddressBook = false;\n\t\tthis.toAccountID = account;\n\t\tthis.searchAddressBook();\n\t\tthis.validateDestination();\n\t}\n\n\tasync validateDestination() {\n\t\t// The timeout is used to solve a bug where the results get hidden too fast and the click is never registered\n\t\tsetTimeout(() => (this.showAddressBook = false), 400);\n\n\t\t// Remove spaces from the account id\n\t\tthis.toAccountID = this.toAccountID.replace(/ /g, '');\n\n\t\tthis.addressBookMatch = this.addressBookService.getAccountName(this.toAccountID);\n\n\t\t// const accountInfo = await this.walletService.walletApi.accountInfo(this.toAccountID);\n\t\tconst accountInfo = await this.api.accountInfo(this.toAccountID);\n\t\tif (accountInfo.error) {\n\t\t\tif (accountInfo.error === this.msg1) {\n\t\t\t\tthis.toAccountStatus = 1;\n\t\t\t} else {\n\t\t\t\tthis.toAccountStatus = 0;\n\t\t\t}\n\t\t} else if (accountInfo.result && accountInfo.result.tokens) {\n\t\t\tthis.toAccountStatus = 2;\n\t\t}\n\t}\n\n\tasync sendTransaction() {\n\t\tif (this.amount == undefined || this.amount == 0) {\n\t\t\treturn this.notificationService.sendWarning('Please enter the amount to send.');\n\t\t}\n\t\tthis.rawAmount = new BigNumber(0);\n\t\tthis.amountRaw = new BigNumber(0);\n\t\tconst isValid = await this.api.validateAccountNumber(this.toAccountID);\n\t\tif (!isValid.result) {\n\t\t\treturn this.notificationService.sendWarning(this.msg2);\n\t\t}\n\t\tif (!this.fromAccountID || !this.toAccountID) {\n\t\t\treturn this.notificationService.sendWarning(this.msg3);\n\t\t}\n\n\t\tconst from = await this.api.accountInfoByToken(this.fromAccountID, this.selectedToken.type);\n\t\t//console.log(from);\n\t\t// let to = await this.api.accountInfoByToken(this.toAccountID, this.selectedToken.token_hash);\n\t\tif (!from) {\n\t\t\treturn this.notificationService.sendError(this.msg4);\n\t\t}\n\t\tif (this.fromAccountID === this.toAccountID) {\n\t\t\treturn this.notificationService.sendWarning(this.msg5);\n\t\t}\n\n\t\tfrom.balanceBN = new BigNumber(from.balance || 0);\n\t\t// to.balanceBN = new BigNumber(to.balance || 0);\n\t\tthis.fromAccount = from;\n\t\t// this.toAccount = to;\n\t\tconst tokenMap = {};\n\t\tconst tokens = await this.api.tokens();\n\t\tif (!tokens.error) {\n\t\t\ttokens.result.forEach(token => {\n\t\t\t\ttokenMap[token.tokenId] = token;\n\t\t\t});\n\t\t}\n\t\tif (tokenMap.hasOwnProperty(from.type)) {\n\t\t\tfrom.tokenInfo = tokenMap[from.type];\n\t\t}\n\n\t\tconst checkDP = new BigNumber(this.amount).dp();\n\t\tif (checkDP > from.tokenInfo.decimals) {\n\t\t\tconst warnMessage = 'Too many decimal places. ' + from.tokenInfo.tokenSymbol + ' can have a maximum of ' + from.tokenInfo.decimals + ' decimal places.';\n\t\t\treturn this.notificationService.sendWarning(warnMessage);\n\t\t}\n\n\t\t// to be transfered amount\n\t\tconst rawAmount = new BigNumber(this.amount).multipliedBy(Math.pow(10,from.tokenInfo.decimals));\n\t\tthis.rawAmount = rawAmount.plus(this.amountRaw);\n\t\tconst qlcAmount = this.rawAmount.div(Math.pow(10,from.tokenInfo.decimals));\n\n\t\tif (this.amount < 0 || rawAmount.isLessThan(0)) {\n\t\t\treturn this.notificationService.sendWarning(this.msg6);\n\t\t}\n\t\t/*if (qlcAmount.isLessThan(1)) {\n\t\t\tconst warnMessage = this.msg7;\n\t\t\treturn this.notificationService.sendWarning(warnMessage);\n\t\t}*/\n\n\t\tif (from.balanceBN.minus(rawAmount).isLessThan(0)) {\n\t\t\treturn this.notificationService.sendError(this.msg8 + ` ${this.selectedToken.tokenInfo.tokenName}`);\n\t\t}\n\n\t\t// Determine a proper raw amount to show in the UI, if a decimal was entered\n\t\tthis.amountRaw = this.rawAmount.mod(Math.pow(10,from.tokenInfo.decimals));\n\n\t\t// Determine fiat value of the amount\n\t\t/*this.amountFiat = this.util.qlc\n\t\t\t.rawToMqlc(rawAmount)\n\t\t\t.times(this.price.price.lastPrice)\n\t\t\t.toNumber();*/\n\n\t\t// Start precopmuting the work...\n\t\tthis.fromAddressBook = this.addressBookService.getAccountName(this.fromAccountID);\n\t\tthis.toAddressBook = this.addressBookService.getAccountName(this.toAccountID);\n\t\t//this.workPool.addWorkToCache(this.fromAccount.header);\n\t\tthis.activePanel = 'confirm';\n\t}\n\n\tasync confirmTransaction() {\n\t\tconst walletAccount = await this.walletService.getWalletAccount(this.fromAccountID);\n\t\tif (!walletAccount) {\n\t\t\tthrow new Error(this.msg9);\n\t\t}\n\t\tif (this.walletService.walletIsLocked()) {\n\t\t\treturn this.notificationService.sendWarning(this.msg10);\n\t\t}\n\n\t\tthis.confirmingTransaction = true;\n\n\t\ttry {\n\t\t\tconst newHash = await this.qlcBlock.generateSend(\n\t\t\t\twalletAccount,\n\t\t\t\tthis.toAccountID,\n\t\t\t\tthis.selectedToken.tokenName,\n\t\t\t\tthis.rawAmount,\n\t\t\t\tthis.walletService.isLedgerWallet()\n\t\t\t);\n\t\t\t// console.log('hash >>>> ' + newHash);\n\t\t\tif (newHash) {\n\t\t\t\tthis.notificationService.sendSuccess(this.msg11 + ` ${this.amount} ${this.selectedToken.tokenInfo.tokenName}!`);\n\t\t\t\tthis.activePanel = 'send';\n\t\t\t\tthis.amount = null;\n\t\t\t\tthis.amountFiat = null;\n\t\t\t\tthis.resetRaw();\n\t\t\t\tthis.toAccountID = '';\n\t\t\t\tthis.toAccountStatus = null;\n\t\t\t\tthis.fromAddressBook = '';\n\t\t\t\tthis.toAddressBook = '';\n\t\t\t\tthis.addressBookMatch = '';\n\t\t\t\tthis.loadBalances();\n\t\t\t} else {\n\t\t\t\tif (!this.walletService.isLedgerWallet()) {\n\t\t\t\t\tconst errMessage = this.msg12;\n\t\t\t\t\tthis.notificationService.sendError(errMessage);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconst errMessage = this.msg13 + ` ${err.message}`;\n\t\t\tthis.notificationService.sendError(errMessage);\n\t\t}\n\n\t\tthis.confirmingTransaction = false;\n\n\t\tawait this.walletService.reloadBalances();\n\t}\n\n\tsetMaxAmount() {\n\t\tconst walletAccount = this.walletService.wallet.accounts.find(a => a.id === this.fromAccountID);\n\t\tif (!walletAccount) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst amountRaw = this.selectedToken.balance;\n\n\t\tconst tokenVal = new BigNumber(amountRaw).dividedBy(Math.pow(10,this.selectedToken.tokenInfo.decimals)).toNumber();\n\n\t\tthis.amount = tokenVal;\n\t\t//this.syncFiatPrice();\n\t}\n\n\tresetRaw() {\n\t\tthis.amountRaw = new BigNumber(0);\n\t\tthis.amount = '';\n\t}\n\n\tselectToken() {\n\t\tif (this.accountTokens !== undefined && this.accountTokens.length > 0) {\n\t\t\tthis.selectedToken = this.accountTokens.find(a => a.tokenInfo.tokenSymbol === this.selectedTokenSymbol);\n\t\t\tif (this.selectedTokenSymbol != 'QLC' && this.selectedTokenSymbol != 'QGAS') {\n\t\t\t\tconst selectedSlide = this.otherTokens.findIndex(a => a.tokenInfo.tokenSymbol === this.selectedTokenSymbol);\n\t\t\t\tthis.activeSlideIndex = selectedSlide;\n\t\t\t\tthis.otherInterval = 0;\n\t\t\t} else {\n\t\t\t\tthis.otherInterval = 3000;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.selectedToken = '';\n\t\t}\n\t\tthis.resetRaw();\n  }\n  tokenBalance(token) {\n    if (this.accountTokens !== undefined && this.accountTokens.length > 0) {\n\t\t\tconst tokenData = this.accountTokens.find(a => a.tokenInfo.tokenSymbol === token);\n\t\t\tif (tokenData != undefined && tokenData.balance != undefined)\n\t\t\t\treturn tokenData.balance;\n\t\t\telse\n\t\t\t\treturn 0.00;\n\t\t} else {\n\t\t\treturn 0.00;\n\t\t}\n  }\n  selectTokenIcon(token) {\n\t\tif (this.accountTokens !== undefined && this.accountTokens.length > 0) {\n\t\t\tthis.selectedTokenSymbol = token;\n\t\t\tif (this.selectedTokenSymbol != 'QLC' && this.selectedTokenSymbol != 'QGAS') {\n\t\t\t\tthis.otherInterval = 0;\n\t\t\t} else {\n\t\t\t\tthis.otherInterval = 3000;\n\t\t\t}\n\t\t\tthis.selectedToken = this.accountTokens.find(a => a.tokenInfo.tokenSymbol === token);\n\t\t} else {\n\t\t\tthis.selectedToken = '';\n\t\t}\n\t\tthis.resetRaw();\n\t}\n\n\tselectAccount() {\n\t\tconst selectedAccount = this.accounts.find(a => a.id === this.fromAccountID);\n\t\tthis.accountTokens =\n\t\t\tselectedAccount !== undefined &&\n\t\t\tselectedAccount.accountMeta.tokens !== undefined &&\n\t\t\tselectedAccount.accountMeta.tokens.length > 0\n\t\t\t\t? selectedAccount.accountMeta.tokens\n\t\t\t\t: [];\n\t\tthis.otherTokens = [];\n\t\tthis.otherTokens =\n\t\tselectedAccount !== undefined &&\n\t\tselectedAccount.otherTokens !== undefined &&\n\t\tselectedAccount.otherTokens.length > 0\n\t\t\t? selectedAccount.otherTokens\n\t\t\t: [];\n\n\t\tthis.selectedToken = this.accountTokens !== undefined && this.accountTokens.length > 0 ? this.accountTokens[0] : [];\n\t\tthis.selectedTokenSymbol =\n\t\t\tthis.selectedToken !== undefined && this.selectedToken.tokenInfo !== undefined\n\t\t\t\t? this.selectedToken.tokenInfo.tokenSymbol\n\t\t\t\t: '';\n\n\t\tthis.resetRaw();\n\t\tthis.searchAddressBook();\n\t}\n\n\tselectFromBook() {\n\t\tthis.toAccountID = this.bookContact;\n\t}\n\n\tgetAmountBaseValue(value) {\n\t\tswitch (this.selectedAmount.value) {\n\t\t\tdefault:\n\t\t\tcase 'QLC':\n\t\t\t\treturn this.util.qlc.qlcToRaw(value);\n\t\t\tcase 'kqlc':\n\t\t\t\treturn this.util.qlc.kqlcToRaw(value);\n\t\t\tcase 'mqlc':\n\t\t\t\treturn this.util.qlc.mqlcToRaw(value);\n\t\t}\n\t}\n\n\tgetAmountValueFromBase(value) {\n\t\tswitch (this.selectedAmount.value) {\n\t\t\tdefault:\n\t\t\tcase 'QLC':\n\t\t\t\treturn this.util.qlc.rawToQlc(value);\n\t\t\tcase 'kqlc':\n\t\t\t\treturn this.util.qlc.rawToKqlc(value);\n\t\t\tcase 'mqlc':\n\t\t\t\treturn this.util.qlc.rawToMqlc(value);\n\t\t}\n\t}\n}\n","<app-user-submenu></app-user-submenu>\n\n<div class=\"container mt-0 qlc-content-first pl-0 mb-5 pb-5 qlc-content-home qlc-after-submenu\">\n    <div class=\"row\">\n\n\n        <!-- APP SETTINGS -->\n        <div class=\"col-12\">\n\n          <!-- TITLE -->\n          <div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n            <div class=\"content-title\">\n              <h1>{{ 'APP_SETTINGS.app_settings_title' | translate }}</h1>\n            </div>\n          </div>\n\n          <div class=\"col-12 pr-2 pl-2 pt-2\">\n            <div class=\"content-box-white\">\n\n                    <div class=\"col-12 pl-4 pt-4 pb-4 pr-4\">\n                        <div class=\"row align-items-center\">\n                          <div class=\"col-md-2 text-truncate dataName form-label-custom-2 pb-4\">{{ 'APP_SETTINGS.language' | translate }}</div>\n                          <div class=\"col-md-10 text-left text-truncate pt-1\">\n                            <div class=\"form-group\">\n                              <select class=\"custom-select\" [(ngModel)]=\"selectedLang\" >\n                                <option *ngFor=\"let lang of languages\" [value]=\"lang.value\">{{ lang.name }}</option>\n                              </select>\n                            </div></div>\n                          </div>\n                          <div class=\"row align-items-center\">\n                            <div class=\"col-md-2 text-truncate dataName form-label-custom-2 pb-4\">{{ 'APP_SETTINGS.fiat_currency' | translate }}</div>\n                            <div class=\"col-md-10 text-left text-truncate pt-1\">\n                              <div class=\"form-group\">\n                                <select class=\"custom-select\" [(ngModel)]=\"selectedCurrency\" id=\"form-horizontal-select\">\n                                  <option *ngFor=\"let currency of currencies\" [value]=\"currency.value\">{{ currency.name }}</option>\n                                </select>\n                              </div></div>\n                            </div>\n                            <div class=\"row align-items-center\">\n                              <div class=\"col-md-2 text-truncate dataName form-label-custom-2 pb-4\">{{ 'APP_SETTINGS.lock_on_exit' | translate }}</div>\n                              <div class=\"col-md-10 text-left text-truncate pt-1\">\n                                <div class=\"form-group\">\n                                  <select class=\"custom-select\" [(ngModel)]=\"selectedLockOption\">\n                                    <option *ngFor=\"let option of lockOptions\" [value]=\"option.value\">{{ option.name }}</option>\n                                  </select>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"row align-items-center\">\n                              <div class=\"col-md-2 text-truncate dataName form-label-custom-2 pb-4\">{{ 'APP_SETTINGS.lock_after_inactivity' | translate }}</div>\n                              <div class=\"col-md-10 text-left text-truncate pt-1\">\n                                <div class=\"form-group\">\n                                  <select class=\"custom-select\" [(ngModel)]=\"selectedInactivityMinutes\">\n                                    <option *ngFor=\"let option of inactivityOptions\" [value]=\"option.value\">{{ option.name }}</option>\n                                  </select>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"row align-items-center\">\n                              <div class=\"col-md-2 text-truncate dataName form-label-custom-2 pb-4\">{{ 'APP_SETTINGS.wallet_storage' | translate }}</div>\n                              <div class=\"col-md-10 text-left text-truncate pt-2\">\n                                <div class=\"form-group\">\n                                  <select class=\"custom-select\" [(ngModel)]=\"selectedStorage\">\n                                    <option *ngFor=\"let storage of storageOptions\" [value]=\"storage.value\">{{ storage.name }}</option>\n                                  </select>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"row align-items-center\">\n                              <div class=\"col-md-2 text-truncate dataName form-label-custom-2 pb-4\">RECEIVE</div>\n                              <div class=\"col-md-10 text-left text-truncate pt-2\">\n                                <div class=\"form-group\">\n                                  <select class=\"custom-select\" [(ngModel)]=\"selectedReceiveOption\">\n                                    <option *ngFor=\"let receive of receiveOptions\" [value]=\"receive.value\">{{ receive.name }}</option>\n                                  </select>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"row align-items-center rowAmount\">\n                              <div class=\"col-md-2 text-truncate dataName\"></div>\n                              <div class=\"col-xl-3 col-lg-3 col-md-4 col-sm-6 col-12 pr-md-0 text-left text-truncate\">\n                                <button (click)=\"updateAppSettings()\" class=\"btn btn-primary pl-0 pr-0 w-100\">{{ 'APP_SETTINGS.app_settings_button' | translate }}</button>\n                              </div>\n                            </div>\n                          </div>\n                  </div>\n            </div>\n\n         </div>\n\n\n\n\n        <!-- ADVANCED SETTINGS -->\n        <div class=\"col-12\">\n\n          <!-- TITLE -->\n          <div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n            <div class=\"content-title pt-4\">\n              <h1>{{ 'APP_SETTINGS.advanced_settings_title' | translate }}</h1>\n            </div>\n          </div>\n\n          <div class=\"col-12 pr-2 pl-2 pt-2\">\n            <div class=\"content-box-white\">\n\n              <div class=\"container\">\n                  <div class=\"row pl-4 pt-4 pb-4 pr-4\">\n                    <div class=\"col-lg-2 px-lg-0 text-truncate dataName  form-label-custom-2 pl-0 pt-2\">{{ 'APP_SETTINGS.advanced_settings_text' | translate }}</div>\n                  </div>\n                  <div class=\"row pl-3 pt-2 pb-4 pr-3\">\n                    <!--<div class=\"col-xl-3 col-lg-3 col-md-12 px-0 pt-2 pt-lg-0 px-lg-2 text-left text-truncate\">\n                      <button (click)=\"openModal(newWalletTemp)\"  class=\"btn btn-primary w-100 pl-0 pr-0\">Create / Import New QLC Wallet</button>\n                    </div>-->\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 px-0 pt-2 pt-lg-0 pr-lg-2 text-left text-truncate\">\n                      <button (click)=\"openModal(clearWorkCatche)\" class=\"btn btn-primary btn-danger w-100 pl-0 pr-0\">{{ 'APP_SETTINGS.advanced_settings_button1' | translate }}</button>\n                    </div>\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 px-0 pt-2 pt-lg-0 px-lg-2 text-left text-truncate\">\n                      <button (click)=\"openModal(clearWalletData)\" type=\"submit\" class=\"btn btn-primary btn-danger w-100 pl-0 pr-0\">{{ 'APP_SETTINGS.advanced_settings_button2' | translate }}</button>\n                    </div>\n                    <div class=\"col-xl-4 col-lg-4 col-md-12 px-0 pt-2 pt-lg-0 px-lg-2 text-left text-truncate\">\n                      <button (click)=\"openModal(clearAllData)\"  class=\"btn btn-primary btn-danger w-100 pl-0 pr-0\">{{ 'APP_SETTINGS.advanced_settings_button3' | translate }}</button>\n                    </div>\n                </div>\n              </div>\n\n              </div>\n            </div>\n\n        </div>\n\n        <!-- ADVANCED POPUPS -->\n        <ng-template #clearWorkCatche>\n          <div class=\"modal-body text-center pt-4\" [innerHTML]=\"'CONFIGURE_APP_WARNINGS.msg24' | translate\">\n          </div>\n          <div class=\"modal-footer pb-4 pl-4 pr-4\">\n            <button class=\"btn btn-primary w-50 pl-0 pr-0\" type=\"button\" (click)=\"modalRef.hide()\">{{ 'CANCEL' | translate }}</button>\n            <button class=\"btn btn-primary btn-danger w-50 pl-0 pr-0\" type=\"button\" (click)=\"clearWorkCache()\">{{ 'OK' | translate }}</button>\n          </div>\n        </ng-template>\n        \n        <ng-template #clearWalletData>\n          <div class=\"modal-body text-center pt-4\" [innerHTML]=\"'CONFIGURE_APP_WARNINGS.msg26' | translate\">\n          </div>\n          <div class=\"modal-footer pb-4 pl-4 pr-4\">\n            <button class=\"btn btn-primary w-100 pl-0 pr-0\" type=\"button\" (click)=\"modalRef.hide()\">{{ 'CANCEL' | translate }}</button>\n            <button class=\"btn btn-primary btn-danger w-100 pl-0 pr-0\" type=\"button\" (click)=\"clearAllWalletData()\">{{ 'OK' | translate }}</button>\n          </div>\n        </ng-template>\n        \n        <ng-template #clearAllData>\n          <div class=\"modal-body text-center pt-4\" [innerHTML]=\"'CONFIGURE_APP_WARNINGS.msg28' | translate\">\n          </div>\n          <div class=\"modal-footer pb-4 pl-4 pr-4\">\n            <button class=\"btn btn-primary w-100 pl-0 pr-0\" type=\"button\" (click)=\"modalRef.hide()\">{{ 'CANCEL' | translate }}</button>\n            <button class=\"btn btn-primary btn-danger w-100 pl-0 pr-0\" type=\"button\" (click)=\"clearAll()\">{{ 'OK' | translate }}</button>\n          </div>\n        </ng-template>\n\n        <ng-template #newWalletTemp>\n          <div class=\"modal-body text-center pt-4\" [innerHTML]=\"'Creating or importing a new wallet will delete the current wallet'\">\n          </div>\n          <div class=\"modal-footer pb-4 pl-4 pr-4\">\n            <button class=\"btn btn-primary w-100 pl-0 pr-0\" type=\"button\" (click)=\"modalRef.hide()\">{{ 'CANCEL' | translate }}</button>\n            <button class=\"btn btn-primary btn-danger w-100 pl-0 pr-0\" type=\"button\" (click)=\"newWallet()\">{{ 'OK' | translate }}</button>\n          </div>\n        </ng-template>\n      \n\n\n\n        \n        <!-- NO WALLET STUFF -->\n        <div class=\"col-12 mt-2\" *ngIf=\"!(accounts).length\">\n          \n          <!-- TITLE - NO WALLET CONFIGURED -->\n          <div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n              <div class=\"content-title pt-4\">\n                <h1>{{ 'NO_WALLET_CONFIGURED' | translate }}</h1>\n              </div>\n            </div>\n  \n            <div class=\"col-12 pr-2 pl-2 pt-2 pb-4\">\n              <div class=\"content-box-white\">\n                    \n                  <div class=\"container\">\n                      <div class=\"row pl-4 pt-4 pb-2 pr-4 text-center\">\n                          <h6 class=\"w-100 text-center\"><a routerLink='/createwallet'>{{ 'NO_WALLET_CONFIGURED_CLICK' | translate }}</a></h6>\n                      </div>\n                  </div>\n\n              </div>\n            </div>\n        </div>\n\n\n\n\n        <!-- WALLET STUFF -->\n        <div class=\"col-12 col-md-6\" *ngIf=\"(accounts).length\">\n\n          <!-- TITLE - REP MANAGMENT -->\n          <div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n            <div class=\"content-title pt-4\" >\n              <h1>Representatives</h1>\n            </div>\n          </div>\n\n          <div class=\"col-12 pr-2 pl-2 pt-2\">\n            <div class=\"content-box-white\">\n\n              <div class=\"container\">\n                  <div class=\"row pl-4 pt-4 pb-4 pr-4\">\n                        \n                      <div class=\"col-12 px-0\" >\n                          <div class=\"col-12\">\n                            <div class=\"row defaultTable content pt-0\">\n                              <div class=\"col-12\">\n                                <div class=\"row align-items-center rowButtons\">\n                                  <div class=\"col-lg-6 col-md-6 col-sm-6 col-12 px-0 text-left text-truncate pt-0\">\n                                    <button type=\"submit\" class=\"btn btn-primary\" routerLink=\"/representation/manage\">Manage reps</button>\n                                  </div>\n                                </div>\n                              </div>\n                \n                            </div>\n                          </div>\n                        </div>\n\n                </div>\n              </div>\n\n              </div>\n            </div>\n\n            \n          <!-- TITLE - WALLET PASSWORD -->\n          <div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n            <div class=\"content-title pt-4\" >\n              <h1>{{ 'MANAGE_WALLET.change_wallet_password' | translate }}</h1>\n            </div>\n          </div>\n\n          <div class=\"col-12 pr-2 pl-2 pt-2\">\n            <div class=\"content-box-white\">\n\n              <div class=\"container\">\n                  <div class=\"row pl-4 pt-4 pb-4 pr-4\">\n                        \n                      <div class=\"col-12 px-0\" >\n                          <div class=\"col-12 px-0\">\n                            <h1></h1>\n                          </div>\t\n                          <div class=\"col-12\">\n                            <div class=\"row defaultTable content\">\n                              <div class=\"col-12\">\n                                <div class=\"row align-items-center rowContent\">\n                                  <div class=\"col-12 px-0\">\n                                    <div class=\"input-group pb-2\">\n                                      <input type=\"password\" class=\"form-control\" [(ngModel)]=\"newPassword\" placeholder=\"{{ 'MANAGE_WALLET.password' | translate }}\">\n                                    </div>\n                                  </div>\n                \n                                </div>\n                                <div class=\"row align-items-center rowContent\">\n                                  <div class=\"col-12 px-0\">\n                                    <div class=\"input-group pb-3\">\n                                      <input type=\"password\" class=\"form-control\" [(ngModel)]=\"confirmPassword\" placeholder=\"{{ 'MANAGE_WALLET.password_confirm' | translate }}\">\n                                    </div>\n                                  </div>\n                                </div>\n                                <div class=\"row align-items-center rowButtons\">\n                                  <div class=\"col-lg-6 col-md-6 col-sm-6 col-12 px-0 text-left text-truncate\">\n                                    <button type=\"submit\" (click)=\"changePassword()\" class=\"btn btn-primary\" [disabled]=\"updatePasswordButtonDisabled\">{{ updatePasswordButton }}</button>\n                                  </div>\n                                </div>\n                              </div>\n                \n                            </div>\n                          </div>\n                        </div>\n\n                </div>\n              </div>\n\n              </div>\n            </div>\n\n\n\n\n                <!-- TITLE EXPORT WALLET -->\n                <div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n                    <div class=\"content-title pt-4\" >\n                      <h1>{{ 'MANAGE_WALLET.export_wallet' | translate }}</h1>\n                    </div>\n                  </div>\n        \n                  <div class=\"col-12 pr-2 pl-2 pt-2\">\n                    <div class=\"content-box-white\">\n        \n                      <div class=\"container\">\n                          <div class=\"row pl-4 pt-4 pb-4 pr-4\">\n                                \n                              <div class=\"col-12 px-0\">\n                                <div class=\"col-12 px-0 d-block\">\n                                  <div class=\"seperator\"></div>\n                                </div>\n                                <div class=\"col-12 px-0\">\n                                  <h1></h1>\n                                </div>\t\n                                <div class=\"col-12\">\n                                  <div class=\"row defaultTable content\">\n                                    <div class=\"col-12\">\n                                      <div class=\"row align-items-center rowContent autoH\">\n                                        <div class=\"col-12 px-0\" [innerHTML]=\"'MANAGE_WALLET.export_wallet_text' | translate\">\n                                        </div>\n                                      </div>\n                                      <div *ngIf=\"showQRExport\" >\n                                          <div class=\"row align-items-center rowDefault\">\n                                              <div class=\"col-12 px-0 py\">\n                                                <div class=\"qrcode\"><img [src]=\"QRExportImg\"></div>\n                                              </div>\n                                            </div>\n                                            <div class=\"row align-items-center rowContent autoH\">\n                                              <div class=\"col-12 px-0\" [innerHTML]=\"'MANAGE_WALLET.export_wallet_text2' | translate\">\n                                              </div>\n                                            </div>\n                                            <div class=\"row align-items-center rowContent\">\n                                              <div class=\"col-12 px-0\">\n                                                <div class=\"input-group\">\n                                                  <input type=\"text\" class=\"form-control\" id=\"\" value=\"{{ QRExportUrl }}\">\n                                                  \n                                                </div>\n                                              </div>\n                                            </div>\n                                            <div class=\"row align-items-center rowContent\">\n                                              <div class=\"col-12 px-0\">\n                                                <a ngxClipboard [cbContent]=\"QRExportUrl\" (cbOnSuccess)=\"notifications.sendSuccess('Wallet export copied to clipboard!')\" class=\"icon-text-link\"><span class=\"icon copy\"></span> {{ 'COPY_TO_CLIPBOARD' | translate }}</a>\n                                              </div>\n                                            </div>\n                                      </div>\n                                      <div class=\"row align-items-center rowButtons pt-4\">\n                                        <div class=\"col-lg-6 col-md-6 col-sm-6 col-12 px-0 pr-sm-2 text-left text-truncate pb-2\">\n                                          <button type=\"submit\" (click)=\"exportToFile()\" class=\"btn btn-primary pl-0 pr-0 w-100\">{{ 'MANAGE_WALLET.export_as_file' | translate }}</button>\n                                        </div>\n                                        <div class=\"col-lg-6 col-md-6 col-sm-6 col-12 px-0 pl-sm-2 text-left text-truncate pb-2\">\n                                          <button type=\"submit\" (click)=\"exportWallet()\" class=\"btn btn-primary pl-0 pr-0 w-100\">{{ 'MANAGE_WALLET.export_qr_code' | translate }}</button>\n                                        </div>\n                                      </div>\n                                    </div>\n                      \n                                  </div>\n                                </div>\n                              </div>\n        \n                        </div>\n                      </div>\n        \n                      </div>\n                    </div>\n\n\n\n\n        </div>\n\n\n\n\n\n        <!-- WALLET STUFF 2/2 -->\n        <div class=\"col-12 col-md-6 mb-5\" *ngIf=\"(accounts).length\">\n\n\n          <!-- TITLE BACKUP WALLET -->\n          <div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n            <div class=\"content-title pt-4\" >\n              <h1>New QLC Account</h1>\n            </div>\n          </div>\n\n          <div class=\"col-12 pr-2 pl-2 pt-2\">\n            <div class=\"content-box-white\">\n\n              <div class=\"container\">\n                  <div class=\"row pl-4 pt-4 pb-4 pr-4\">\n                        \n                        \n                      <div class=\"col-12 px-0\" >\n                        <div class=\"col-12\">\n                          <div class=\"row defaultTable content\">\n                            <div class=\"col-12\">\n\n                              <div class=\"row align-items-center rowContent autoHP\" *ngIf=\"!wallet.locked\">\n                                <div class=\"col-12 px-0 py-2 pb-3\">\n                                  <strong>Please backup your current accounts mnemonic phrase or seed.</strong><br>\n                                  After you create/import a new account, your current one will be deleted from your browsers storage.\n                                </div>\n                              </div>\n                              \n                              <div class=\"row align-items-center rowContent autoHP\" *ngIf=\"!wallet.locked\">\n                                <div class=\"col-12 px-0 pb-2\">\n                                  <button (click)=\"openModal(newWalletTemp)\"  class=\"btn btn-primary btn-danger pl-5 pr-5\">Create / Import New QLC Wallet</button>\n                                </div>\n              \n                              </div>\n\n                              <div class=\"row align-items-center rowContent autoHP\" *ngIf=\"wallet.locked\">\n                                <div class=\"col-12 px-0 py-2\">\n                                  To create or import a new QLC Account,<br>you must first <strong>unlock</strong> your current account.\n                                </div>\n                              </div>\n\n                            </div>\n              \n                          </div>\n                        </div>\n                      </div>\n                      \n\n                </div>\n              </div>\n\n              </div>\n            </div>\n\n\n\n            <!-- TITLE BACKUP WALLET -->\n            <div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n                <div class=\"content-title pt-4\" >\n                  <h1>{{ 'MANAGE_WALLET.backup_wallet' | translate }}</h1>\n                </div>\n              </div>\n\n              <div class=\"col-12 pr-2 pl-2 pt-2\">\n                <div class=\"content-box-white\">\n\n                  <div class=\"container\">\n                      <div class=\"row pl-4 pt-4 pb-4 pr-4\">\n                            \n                            \n                          <div class=\"col-12 px-0\" >\n                            <div class=\"col-12\">\n                              <div class=\"row defaultTable content\">\n                                <div class=\"col-12\">\n                                  <div class=\"row align-items-center rowContent autoHP\"  *ngIf=\"wallet.locked\">\n                                    <div class=\"col-12 px-0 pb-2\">\n                                        {{ 'MANAGE_WALLET.backup_wallet_text1' | translate }}\n                                    </div>\n                                  </div>\n                                  <div class=\"row align-items-center rowContent autoHP\" *ngIf=\"!wallet.locked\">\n                                    <div class=\"col-12 px-0 pb-2\">\n                                        {{ 'MANAGE_WALLET.backup_wallet_text2' | translate }}<br>\n                                      <a ngxClipboard [cbContent]=\"seedMnemonic()\" (cbOnSuccess)=\"notifications.sendSuccess('Wallet mnemonic copied to clipboard!')\" style=\"font-weight: bold; text-decoration: underline;\">{{ 'MANAGE_WALLET.click_here' | translate }}</a> {{ 'MANAGE_WALLET.backup_wallet_text3' | translate }}\n                  \n                  \n                                    </div>\n                  \n                                  </div>\n                                  <div class=\"row align-items-center rowContent autoHP\" *ngIf=\"!wallet.locked\">\n                                    <div class=\"col-12 px-0 py-2\">\n                                        {{ 'MANAGE_WALLET.backup_wallet_text4' | translate }}<br>\n                                      <a ngxClipboard [cbContent]=\"wallet.seed\" (cbOnSuccess)=\"notifications.sendSuccess('Wallet seed copied to clipboard!')\" style=\"font-weight: bold; text-decoration: underline;\">{{ 'MANAGE_WALLET.click_here' | translate }}</a> {{ 'MANAGE_WALLET.backup_wallet_text3' | translate }}\n                                    </div>\n                                  </div>\n                                </div>\n                  \n                              </div>\n                            </div>\n                          </div>\n                          \n\n                    </div>\n                  </div>\n\n                  </div>\n                </div>\n\n\n\n\n\n          <!-- TITLE IMPORT ADDRESS BOOK -->\n          <div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n            <div class=\"content-title pt-4\" >\n              <h1>{{ 'MANAGE_WALLET.import_address_book' | translate }}</h1>\n            </div>\n          </div>\n\n          <div class=\"col-12 pr-2 pl-2 pt-2\">\n            <div class=\"content-box-white\">\n\n              <div class=\"container\">\n                  <div class=\"row pl-4 pt-4 pb-4 pr-4\">\n                        \n                        <div class=\"col-12\">\n                          <div class=\"row defaultTable content nomin\">\n                            <div class=\"col-12\">\n                              <div class=\"row align-items-center rowContent autoH\">\n                                <div class=\"col-12 px-0\">\n                                    {{ 'MANAGE_WALLET.import_address_book_text' | translate }}\n                                </div>\n              \n                              </div>\n                              <div class=\"row align-items-center rowButtons\">\n                                <div class=\"col-lg-6 col-md-6 col-sm-6 col-12 px-0 pr-sm-2 text-left text-truncate pt-3\">\n                                  <button type=\"submit\" class=\"btn btn-primary w-100 pl-0 pr-0\">{{ 'MANAGE_WALLET.upload_file' | translate }}</button>\n                                  <input type=\"file\" id=\"import-from-file\" (change)=\"importFromFile($event.target.files)\" multiple>\n                                  \n                                </div>\n                              </div>\n                            </div>\n                            \n                          </div>\n                        </div>\n                      \n\n                </div>\n              </div>\n\n              </div>\n            </div>\n\n\n\n            <!-- TITLE EXPORT ADDRESS BOOK -->\n            <div class=\"col-lg-12 mt-2 pl-md-2 pr-md-2\">\n              <div class=\"content-title pt-4\" >\n                <h1>{{ 'MANAGE_WALLET.export_address_book' | translate }}</h1>\n              </div>\n            </div>\n\n            <div class=\"col-12 pr-2 pl-2 pt-2\">\n              <div class=\"content-box-white\">\n\n                <div class=\"container\">\n                    <div class=\"row pl-4 pt-4 pb-4 pr-4\">\n                          \n                          \n                        <div class=\"col-12 px-0\">\n\n                          <div class=\"col-12\">\n                            <div class=\"row defaultTable content\">\n                              <div class=\"col-12\">\n                                <div class=\"row align-items-center rowContent autoH\">\n                                  <div class=\"col-12 px-0\" [innerHTML]=\"'MANAGE_WALLET.export_address_book_text1' | translate\">\n                                  </div>\n                \n                \n                                </div>\n                                <div *ngIf=\"addressBookShowQRExport\">\n                                <div class=\"row align-items-center rowDefault\">\n                                  \n                                  <div class=\"col-12 px-0 py\">\n                \n                                    <div class=\"qrcode\"><img [src]=\"addressBookQRExportImg\"></div>\n                                  </div>\n                \n                \n                                </div>\n                \n                                <div class=\"row align-items-center rowContent autoH\">\n                                  \n                                  <div class=\"col-12 px-0\" [innerHTML]=\"'MANAGE_WALLET.export_address_book_text2' | translate\">\n                                    </div>\n                \n                \n                                </div>\n                                <div class=\"row align-items-center rowContent\">\n                                  <div class=\"col-12 px-0\">\n                                    <div class=\"input-group\">\n                                      <input type=\"text\" class=\"form-control\"  value=\"{{ addressBookQRExportUrl }}\">\n                                      \n                                    </div>\n                                  </div>\n                                </div>\n                                <div class=\"row align-items-center rowContent\">\n                                  <div class=\"col-12 px-0\">\n                                    <a ngxClipboard [cbContent]=\"addressBookQRExportUrl\" (cbOnSuccess)=\"notifications.sendSuccess('Address book export copied to clipboard!')\" class=\"icon-text-link\"><span class=\"icon copy\"></span> {{ 'COPY_TO_CLIPBOARD' | translate }}</a>\n                                  </div>\n                                </div>\n                              </div>\n                                \n                \n                \n                \n                                <div class=\"row align-items-center rowButtons pt-3\">\n                                  <div class=\"col-lg-6 col-md-6 col-sm-6 col-12 px-0 pr-sm-2 text-left text-truncate pb-2\">\n                                    <button type=\"submit\" (click)=\"exportAddressBookToFile()\" class=\"btn btn-primary pl-0 pr-0 w-100\">{{ 'MANAGE_WALLET.export_as_file' | translate }}</button>\n                                  </div>\n                                  <div class=\"col-lg-6 col-md-6 col-sm-6 col-12 px-0 pl-sm-2 text-left text-truncate pb-2\">\n                                    <button type=\"submit\" (click)=\"exportAddressBook()\" class=\"btn btn-primary pl-0 pr-0 w-100\">{{ 'MANAGE_WALLET.export_qr_code' | translate }}</button>\n                                  </div>\n                                </div>\n                              </div>\n                \n                            </div>\n                          </div>\n                        </div>\n                        \n\n                  </div>\n                </div>\n\n                </div>\n              </div>\n\n            \n  \n        </div>\n\n\n\n\n        \n\n  </div>\n</div>\n\n\n\n\n\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { WalletService } from '../../services/wallet.service';\nimport { NotificationService } from '../../services/notification.service';\nimport { AppSettingsService } from '../../services/app-settings.service';\nimport { PriceService } from '../../services/price.service';\nimport { PowService } from '../../services/pow.service';\nimport { WorkPoolService } from '../../services/work-pool.service';\nimport { AddressBookService } from '../../services/address-book.service';\nimport { ApiService } from '../../services/api.service';\nimport { LangService } from '../../services/lang.service';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport BigNumber from 'bignumber.js';\nimport { Router } from '@angular/router';\n\nimport * as QRCode from 'qrcode';\nimport * as bip from 'bip39';\nimport { NeoWalletService } from 'src/app/services/neo-wallet.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\twallet = this.walletService.wallet;\n\taccounts = this.walletService.wallet.accounts;\n\n\tmsg1 = '';\n\tmsg2 = '';\n\tmsg3 = '';\n\tmsg4 = '';\n\tmsg5 = '';\n\tmsg6 = '';\n\tmsg7 = '';\n\tmsg8 = '';\n\tmsg9 = '';\n\tmsg10 = '';\n\tmsg11 = '';\n\tmsg12 = '';\n\tmsg13 = '';\n\tmsg14 = '';\n\tmsg15 = '';\n\tmsg16 = '';\n\tmsg17 = '';\n\tmsg18 = '';\n\tmsg19 = '';\n\tmsg20 = '';\n\tmsg21 = '';\n\tmsg22 = '';\n\tmsg23 = '';\n\tmsg24 = '';\n\tmsg25 = '';\n\tmsg26 = '';\n\tmsg27 = '';\n\tmsg28 = '';\n\tmsg29 = '';\n\t\n\tmsg30 = '';\n\tmsg31 = '';\n\tmsg32 = '';\n\tmsg33 = '';\n\tmsg34 = '';\n\tmsg35 = '';\n\tmsg36 = '';\n\tmsg37 = '';\n\tmsg38 = '';\n\tmsg39 = '';\n\tmsg40 = '';\n\tmsg41 = '';\n\n\tnewPassword = '';\n\tconfirmPassword = '';\n\n\tupdatePasswordButton = '';\n\tupdatePasswordButtonDisabled = false;\n\n\tshowQRExport = false;\n\tQRExportUrl = '';\n\tQRExportImg = '';\n\taddressBookShowQRExport = false;\n\taddressBookQRExportUrl = '';\n\taddressBookQRExportImg = '';\n\n\n\tdenominations = [\n\t\t{ name: this.msg1, value: 'mqlc' },\n\t\t{ name: this.msg2, value: 'kqlc' },\n\t\t{ name: this.msg3, value: 'qlc' }\n\t];\n\tselectedDenomination = this.denominations[0].value;\n\n\tlanguages = [{ name: this.msg4, value: 'en' }, { name: this.msg5, value: 'cn' }];\n\tselectedLang = this.languages[0].value;\n\n\tstorageOptions = [{ name: this.msg6, value: 'localStorage' }, { name: this.msg7, value: 'none' }];\n\tselectedStorage = this.storageOptions[0].value;\n\n\tcurrencies = [\n\t\t{ name: this.msg8, value: '' },\n\t\t{ name: this.msg9, value: 'USD' },\n\t\t{ name: this.msg10, value: 'BTC' },\n\t\t{ name: this.msg11, value: 'CNY' }\n\t];\n\tselectedCurrency = this.currencies[0].value;\n\n\tinactivityOptions = [\n\t\t{ name: this.msg12, value: 0 },\n\t\t{ name: this.msg13, value: 1 },\n\t\t{ name: this.msg14, value: 5 },\n\t\t{ name: this.msg15, value: 15 },\n\t\t{ name: this.msg16, value: 30 },\n\t\t{ name: this.msg17, value: 60 },\n\t\t{ name: this.msg18, value: 360 }\n\t];\n\tselectedInactivityMinutes = this.inactivityOptions[4].value;\n\n\tlockOptions = [{ name: this.msg19, value: 1 }, { name: this.msg20, value: 0 }];\n\tselectedLockOption = 1;\n\n\tpowOptions = [\n\t\t{ name: 'Best Option Available', value: 'best' },\n\t\t{ name: 'Client Side - WebGL (Chrome/Firefox)', value: 'clientWebGL' },\n\t\t{ name: 'Client Side - CPU', value: 'clientCPU' }\n\t];\n\tselectedPoWOption = this.powOptions[0].value;\n\n\treceiveOptions = [\n\t\t{ name: 'Manual', value: 'manual' },\n\t\t{ name: 'Auto', value: 'auto' }\n\t];\n\tselectedReceiveOption = this.receiveOptions[0].value;\n\n\tblockOptions = [{ name: this.msg21, value: false }, { name: this.msg22, value: true }];\n\tselectedBlockOption = this.blockOptions[0].value;\n\tlangService: LangService;\n  \tmodalRef: BsModalRef;\n  \n  \tconstructor(\n\t\tprivate walletService: WalletService,\n\t\tprivate neoService: NeoWalletService,\n\t\tprivate notifications: NotificationService,\n\t\tprivate appSettings: AppSettingsService,\n\t\tprivate addressBook: AddressBookService,\n\t\tprivate pow: PowService,\n\t\tprivate api: ApiService,\n\t\t// private ledgerService: LedgerService,\n\t\tprivate workPool: WorkPoolService,\n\t\tprivate price: PriceService,\n\t\tprivate lang: LangService,\n\t\tprivate trans: TranslateService,\n    \tprivate modalService: BsModalService,\n    \tprivate router: Router\n  \t) {\n\t\tthis.langService = lang;\n\t\tthis.loadLang();\n\t}\n\n\tasync ngOnInit() {\n\t\tthis.loadFromSettings();\n\t\tthis.trans.onLangChange.subscribe((event: LangChangeEvent) => {\n\t\t\tthis.loadLang();\n\t\t});\n  }\n\n  loadLang() {\n\t\tthis.trans.get('MANAGE_WALLET.change_wallet_password_button').subscribe((res: string) => {\tthis.updatePasswordButton = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg1').subscribe((res: string) => {\tthis.msg1 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg2').subscribe((res: string) => {\tthis.msg2 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg3').subscribe((res: string) => {\tthis.msg3 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg4').subscribe((res: string) => {\tthis.msg4 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg5').subscribe((res: string) => {\tthis.msg5 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg6').subscribe((res: string) => {\tthis.msg6 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg7').subscribe((res: string) => {\tthis.msg7 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg8').subscribe((res: string) => {\tthis.msg8 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg9').subscribe((res: string) => {\tthis.msg9 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg10').subscribe((res: string) => {\tthis.msg10 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg11').subscribe((res: string) => {\tthis.msg11 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg12').subscribe((res: string) => {\tthis.msg12 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg13').subscribe((res: string) => {\tthis.msg13 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg14').subscribe((res: string) => {\tthis.msg14 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg15').subscribe((res: string) => {\tthis.msg15 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg16').subscribe((res: string) => {\tthis.msg16 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg17').subscribe((res: string) => {\tthis.msg17 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg18').subscribe((res: string) => {\tthis.msg18 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg19').subscribe((res: string) => {\tthis.msg19 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg20').subscribe((res: string) => {\tthis.msg20 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg21').subscribe((res: string) => {\tthis.msg21 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg22').subscribe((res: string) => {\tthis.msg22 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg23').subscribe((res: string) => {\tthis.msg23 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg24').subscribe((res: string) => {\tthis.msg24 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg25').subscribe((res: string) => {\tthis.msg25 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg26').subscribe((res: string) => {\tthis.msg26 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg27').subscribe((res: string) => {\tthis.msg27 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg28').subscribe((res: string) => {\tthis.msg28 = res;\t});\n\t\tthis.trans.get('CONFIGURE_APP_WARNINGS.msg29').subscribe((res: string) => {\tthis.msg29 = res;\t});\n\t\t\n\t\tthis.trans.get('MANAGE_WALLET_WARNINGS.msg1').subscribe((res: string) => { this.msg30 = res; });\n\t\tthis.trans.get('MANAGE_WALLET_WARNINGS.msg2').subscribe((res: string) => { this.msg31 = res; });\n\t\tthis.trans.get('MANAGE_WALLET_WARNINGS.msg3').subscribe((res: string) => { this.msg32 = res; });\n\t\tthis.trans.get('MANAGE_WALLET_WARNINGS.msg4').subscribe((res: string) => { this.msg33 = res; });\n\t\tthis.trans.get('MANAGE_WALLET_WARNINGS.msg5').subscribe((res: string) => { this.msg34 = res; });\n\t\tthis.trans.get('MANAGE_WALLET_WARNINGS.msg6').subscribe((res: string) => { this.msg35 = res; });\n\t\tthis.trans.get('MANAGE_WALLET_WARNINGS.msg7').subscribe((res: string) => { this.msg36 = res; });\n\t\tthis.trans.get('MANAGE_WALLET_WARNINGS.msg8').subscribe((res: string) => { this.msg37 = res; });\n\t\tthis.trans.get('MANAGE_WALLET_WARNINGS.msg9').subscribe((res: string) => { this.msg38 = res; });\n\t\tthis.trans.get('MANAGE_WALLET_WARNINGS.msg10').subscribe((res: string) => { this.msg39 = res; });\n\t\tthis.trans.get('MANAGE_WALLET_WARNINGS.msg11').subscribe((res: string) => { this.msg40 = res; });\n\t\t\n\t\tthis.denominations = [\n\t\t\t{ name: this.msg1, value: 'mqlc' },\n\t\t\t{ name: this.msg2, value: 'kqlc' },\n\t\t\t{ name: this.msg3, value: 'qlc' }\n\t\t];\n\n\t\tthis.languages = [{ name: this.msg4, value: 'en' }, { name: this.msg5, value: 'cn' }];\n\n\t\tthis.storageOptions = [{ name: this.msg6, value: 'localStorage' }, { name: this.msg7, value: 'none' }];\n\n\t\tthis.currencies = [\n\t\t\t{ name: this.msg8, value: '' },\n\t\t\t{ name: this.msg9, value: 'USD' },\n\t\t\t{ name: this.msg10, value: 'BTC' },\n\t\t\t{ name: this.msg11, value: 'CNY' }\n\t\t];\n\n\t\tthis.inactivityOptions = [\n\t\t\t{ name: this.msg12, value: 0 },\n\t\t\t{ name: this.msg13, value: 1 },\n\t\t\t{ name: this.msg14, value: 5 },\n\t\t\t{ name: this.msg15, value: 15 },\n\t\t\t{ name: this.msg16, value: 30 },\n\t\t\t{ name: this.msg17, value: 60 },\n\t\t\t{ name: this.msg18, value: 360 }\n\t\t];\n\n\t\tthis.lockOptions = [{ name: this.msg19, value: 1 }, { name: this.msg20, value: 0 }];\n\n\t\tthis.powOptions = [\n\t\t\t{ name: 'Best Option Available', value: 'best' },\n\t\t\t{ name: 'Client Side - WebGL (Chrome/Firefox)', value: 'clientWebGL' },\n\t\t\t{ name: 'Client Side - CPU', value: 'clientCPU' }\n\t\t];\n\n\t\tthis.blockOptions = [{ name: this.msg21, value: false }, { name: this.msg22, value: true }];\n\t}\n  \n  loadFromSettings() {\n\t\tconst settings = this.appSettings.loadAppSettings();\n\n\t\tconst matchingLang = this.languages.find(d => d.value === settings.lang);\n\t\tthis.selectedLang = matchingLang.value || this.languages[0].value;\n\n\t\tconst matchingCurrency = this.currencies.find(d => d.value === settings.displayCurrency);\n\t\tthis.selectedCurrency = matchingCurrency.value || this.currencies[0].value;\n\n\t\tconst matchingDenomination = this.denominations.find(d => d.value === settings.displayDenomination);\n\t\tthis.selectedDenomination = matchingDenomination.value || this.denominations[0].value;\n\n\t\tconst matchingStorage = this.storageOptions.find(d => d.value == settings.walletStore);\n\t\tthis.selectedStorage = matchingStorage.value || this.storageOptions[0].value;\n\n    \tconst matchingInactivityMinutes = this.inactivityOptions.find(d => d.value == settings.lockInactivityMinutes);\n\n\t\tthis.selectedInactivityMinutes = matchingInactivityMinutes\n\t\t\t? matchingInactivityMinutes.value\n      : this.inactivityOptions[4].value;\n\n\t\tconst matchingLockOption = this.lockOptions.find(d => d.value == settings.lockOnClose);\n\t\tthis.selectedLockOption = matchingLockOption ? matchingLockOption.value : this.lockOptions[0].value;\n\n\t\tconst matchingPowOption = this.powOptions.find(d => d.value == settings.powSource);\n\t\tthis.selectedPoWOption = matchingPowOption ? matchingPowOption.value : this.powOptions[0].value;\n\n\t\tconst matchingReceiveOption = this.receiveOptions.find(d => d.value == settings.receive);\n\t\tthis.selectedReceiveOption = matchingReceiveOption ? matchingReceiveOption.value : this.receiveOptions[0].value;\n\t}\n\n\tasync updateAppSettings() {\n\t\tconst newStorage = this.selectedStorage;\n\t\tconst resaveWallet = this.appSettings.settings.walletStore !== newStorage;\n\t\tconst newCurrency = this.selectedCurrency;\n\t\tconst reloadFiat = this.appSettings.settings.displayCurrency !== newCurrency;\n\t\tconst newLang = this.selectedLang;\n\t\tconst reloadLang = this.appSettings.settings.lang !== newLang;\n\t\tconst receive = this.selectedReceiveOption;\n\n\t\tconst newSettings = {\n\t\t\twalletStore: newStorage,\n\t\t\tlockOnClose: this.selectedLockOption,\n\t\t\tlockInactivityMinutes: this.selectedInactivityMinutes,\n\t\t\tdisplayDenomination: this.selectedDenomination,\n\t\t\tlang: newLang,\n\t\t\treceive\n\t\t};\n\t\t\n\t\tthis.appSettings.setAppSettings(newSettings);\n\t\tthis.notifications.sendSuccess(this.msg23);\n\n\t\tif (reloadLang) {\n\t\t\tthis.langService.changeLang(newLang); // If swapping the language, resave the wallet\n\t\t}\n\n\t\tif (resaveWallet) {\n\t\t\tthis.walletService.saveWalletExport(); // If swapping the storage engine, resave the wallet\n\t\t}\n\t\tif (reloadFiat) {\n\t\t\t// Reload prices with our currency, then call to reload fiat balances.\n\t\t\tawait this.price.getPrice(newCurrency);\n\t\t\tthis.appSettings.setAppSetting('displayCurrency', newCurrency);\n\t\t\tthis.walletService.reloadFiatBalances();\n\t\t}\n\t}\n\n\topenModal(template: TemplateRef<any>) {\n\t\t// this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\n\t\tthis.modalRef = this.modalService.show(template);\n\t}\n\n\tnewWallet() {\n\t\tthis.router.navigate(['/createwallet/']);\n\t\tthis.modalRef.hide();\n\t}\n\n\tasync clearWorkCache() {\n\t\ttry {\n\t\t\tthis.workPool.clearCache();\n\t\t\tthis.notifications.sendSuccess(this.msg25);\n\t\t\tthis.modalRef.hide();\n\t\t} catch (err) {}\n\t}\n\n\tasync clearAllWalletData() {\n\t\ttry {\n\t\t\tthis.walletService.resetWallet();\n\t\t\tthis.walletService.removeWalletData();\n\n\t\t\tthis.notifications.sendSuccess(this.msg27);\n\t\t\tthis.modalRef.hide();\n\t\t} catch (err) {}\n\t}\n\n\tasync clearWalletData() {\n\t\t// const UIkit = window['UIkit'];\n\t\ttry {\n\t\t\t// const confirmMessage = this.msg26;\n\t\t\t// await UIkit.modal.confirm(confirmMessage);\n\t\t\tthis.walletService.resetWallet();\n\t\t\tthis.walletService.removeWalletData();\n\n\t\t\tthis.notifications.sendSuccess(this.msg27);\n\t\t} catch (err) {}\n\t}\n\n\tasync clearAll() {\n\t\ttry {\n\t\t\tthis.walletService.resetWallet();\n\t\t\tthis.walletService.removeWalletData();\n\n\t\t\tthis.workPool.deleteCache();\n\t\t\tthis.addressBook.clearAddressBook();\n\t\t\tthis.appSettings.clearAppSettings();\n\n\t\t\tthis.loadFromSettings();\n\n\t\t\tthis.notifications.sendSuccess(this.msg29);\n\t\t\tthis.modalRef.hide();\n\t\t} catch (err) {}\n\t}\n\n\tasync clearAllData() {\n\t\t// const UIkit = window['UIkit'];\n\t\ttry {\n\t\t\t// const confirmMessage = this.msg28;\n\t\t\t// await UIkit.modal.confirm(confirmMessage);\n\t\t\tthis.walletService.resetWallet();\n\t\t\tthis.walletService.removeWalletData();\n\n\t\t\tthis.workPool.deleteCache();\n\t\t\tthis.addressBook.clearAddressBook();\n\t\t\tthis.appSettings.clearAppSettings();\n\n\t\t\tthis.loadFromSettings();\n\n\t\t\tthis.notifications.sendSuccess(this.msg29);\n\t\t} catch (err) {}\n\t}\n\n  async changePassword() {\n    if (this.newPassword !== this.confirmPassword) {\n      return this.notifications.sendError(this.msg30);\n    }\n    if (this.newPassword.length < 1) {\n      return this.notifications.sendError(this.msg31);\n    }\n    if (this.walletService.walletIsLocked()) {\n      return this.notifications.sendWarning(this.msg32);\n\t}\n\tthis.notifications.sendInfo('Changing password. Please wait.');\n\tthis.updatePasswordButton = 'Changing. Please wait.';\n\tthis.updatePasswordButtonDisabled = true;\n\tfor (let neowallet of this.walletService.wallet.neowallets) {\n\t\ttry {\n\t\t\tconst wif = await this.neoService.decrypt(neowallet.encryptedwif,this.walletService.wallet.password);\n\t\t\tneowallet.encryptedwif = await this.neoService.encrypt(wif,this.newPassword);\n\t\t\tconsole.log('NEO address ' + neowallet.id + ' password change successful.');\n\t\t} catch (error) {\n\t\t\tthis.notifications.sendInfo('NEO address ' + neowallet.id + ' password change failed.');\n\t\t\t//console.log(error);\n\t\t}\n\t}\n\n    this.walletService.wallet.password = this.newPassword;\n    this.walletService.saveWalletExport();\n\n    this.newPassword = '';\n    this.confirmPassword = '';\n\tthis.notifications.sendSuccess(this.msg33);\n\tthis.trans.get('MANAGE_WALLET.change_wallet_password_button').subscribe((res: string) => {\tthis.updatePasswordButton = res;\t});\n\tthis.updatePasswordButtonDisabled = false;\n  }\n\n  async exportWallet() {\n    if (this.walletService.walletIsLocked()) {\n      return this.notifications.sendWarning(this.msg34);\n    }\n\n    const exportUrl = this.walletService.generateExportUrl();\n    this.QRExportUrl = exportUrl;\n    this.QRExportImg = await QRCode.toDataURL(exportUrl);\n    this.showQRExport = true;\n  }\n\n  copied() {\n    this.notifications.sendSuccess(this.msg35);\n  }\n\n  seedMnemonic() {\n    return bip.entropyToMnemonic(this.wallet.seed);\n  }\n\n  async exportAddressBook() {\n    const exportData = this.addressBook.addressBook;\n    if (exportData.length >= 25) {\n      return this.notifications.sendError(this.msg36);\n    }\n    const base64Data = btoa(JSON.stringify(exportData));\n    const exportUrl = `https://wallet.qclchain.online/import-address-book#${base64Data}`;\n\n    this.addressBookQRExportUrl = exportUrl;\n    this.addressBookQRExportImg = await QRCode.toDataURL(exportUrl);\n    this.addressBookShowQRExport = true;\n  }\n\n  exportAddressBookToFile() {\n    if (this.walletService.walletIsLocked()) {\n      return this.notifications.sendWarning(this.msg32);\n    }\n    const fileName = `QLC-AddressBook.json`;\n\n    const exportData = this.addressBook.addressBook;\n    this.triggerFileDownload(fileName, exportData);\n\n    this.notifications.sendSuccess(this.msg37);\n  }\n\n  triggerFileDownload(fileName, exportData) {\n    const blob = new Blob([JSON.stringify(exportData)], {\n      type: 'application/json'\n    });\n\n    // Check for iOS, which is weird with saving files\n    const iOS =\n      !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\n\n    if (window.navigator.msSaveOrOpenBlob) {\n      window.navigator.msSaveBlob(blob, fileName);\n    } else {\n      const elem = window.document.createElement('a');\n      const objUrl = window.URL.createObjectURL(blob);\n      if (iOS) {\n        elem.href = `data:attachment/file,${JSON.stringify(exportData)}`;\n      } else {\n        elem.href = objUrl;\n      }\n      elem.download = fileName;\n      document.body.appendChild(elem);\n      elem.click();\n      setTimeout(function() {\n        document.body.removeChild(elem);\n        window.URL.revokeObjectURL(objUrl);\n      }, 200);\n    }\n  }\n\n  exportToFile() {\n    if (this.walletService.walletIsLocked()) {\n      return this.notifications.sendWarning(this.msg32);\n    }\n\n    const fileName = `QLC-Wallet.json`;\n    const exportData = this.walletService.generateExportData();\n    this.triggerFileDownload(fileName, exportData);\n\n    this.notifications.sendSuccess(this.msg38);\n  }\n\n  importFromFile(files) {\n    if (!files.length) {\n      return;\n    }\n\n    const file = files[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      const fileData = <string> event.target['result'];\n      try {\n        const importData = JSON.parse(fileData);\n        if (!importData.length || !importData[0].account) {\n          return this.notifications.sendError(this.msg39);\n        }\n\n        const walletEncrypted = btoa(JSON.stringify(importData));\n        this.router.navigate(['import-address-book'], {\n          fragment: walletEncrypted\n        });\n      } catch (err) {\n        this.notifications.sendError(this.msg40);\n      }\n    };\n\n    reader.readAsText(file);\n  }\n}\n","<app-user-submenu></app-user-submenu>\n\n<div class=\"stake-screen-1 qlc-content-home qlc-after-submenu\" *ngIf='step == 1'>\n\n\t<!-- SEND FORM -->\n\t<div class=\"container mt-0 qlc-content-first pb-0 mb-0\">\n\t\t<div class=\"row pb-0 mb-0\">\n\t\t\t<div class=\"col-12 pl-0 pr-0 pb-0\">\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<!-- TITLE -->\n\t\t\t\t\t\t\t<div class=\"col-md-6 col-12 mt-2 pl-md-2 pr-md-2\">\n\t\t\t\t\t\t\t\t<div class=\"content-title\">\n\t\t\t\t\t\t\t\t\t<h1>New Staking</h1>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n              <div class=\"col-md-3 col-12 pl-md-2 pr-md-2 pl-3 pr-3 pb-3\">\n                <button type=\"submit\" (click)=\"recover = !recover\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0 mr-xl-2 mr-lg-4 mr-md-5 ml-0 w-100\" >\n                  Recover\n                </button>\n              </div>\n\t\t\t\t\t\t\t<div class=\"col-md-3 col-12 pl-md-2 pr-md-2\">\n\t\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0\" routerLink=\"/staking/qlc\">\n\t\t\t\t\t\t\t\t\t\tBack to my Stakings\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n  </div>\n  \n\n  <div class=\"container accounts\">\n      <div class=\"row\">\n  \n        <!-- FORM -->\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 pb-3 ng-invalid-ignore\" >\n            <div class=\"container pl-0 pr-0\">\n              <div class=\"row pl-0 pr-0\">\n  \n  \n              <div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4 ng-invalid-ignore\" [formGroup]=\"recoverForm\" *ngIf=\"recover == 1\">\n                <div class=\"content-box-white h-auto mt-2 pb-2 pl-2 pr-2\">\n  \n                    <div class=\"row pt-1 mt-4 pl-4 pr-4\">\n  \n                        <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2 mb-4 mt-4\">\n                          RECOVER TXID\n                        </div>\n                        <div class=\"col-md-9 text-left mb-4 mt-4\">\n                          <div class=\"input-group\">\n                            <input\n                              type=\"text\"\n                              class=\"form-control form-my-border\"\n                              placeholder=\"NEO txid\"\n                              onfocus=\"this.placeholder = ''\"\n                              style=\"height: 42px !important;\"\n                              formControlName=\"recover_txid\"\n                            />\n                          </div>\n                          \n                          <span *ngFor=\"let validation of recover_validation_messages.recover_txid\">\n                            <span class=\"error-message pt-2\" *ngIf=\"recoverForm.get('recover_txid').hasError(validation.type) && (recoverForm.get('recover_txid').dirty || recoverForm.get('recover_txid').touched)\" style=\"color:#c10f0f;\">{{validation.message}}<br></span>\n                          </span>\n                          <h5 class=\"pt-3\" *ngFor=\"let step of recoverSteps\">{{ step.msg }}</h5>\n                        </div>\n                        \n                        <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2 mb-4\"></div>\n                        <div class=\"col-md-4 text-left mb-4\">\n                          <button (click)=\"checkTxid()\" type=\"submit\" class=\"btn btn-primary\" style=\"min-width:100%;\" [disabled]=\"checkingTxid == 1 || recoverForm.get('recover_txid').status != 'VALID' \">\n                            CHECK TXID\n                          </button>\n                        </div>\n                        <div class=\"col-md-5 pt-3\" *ngIf=\"checkingTxid == 1\">\n                          <span class=\"security-email-sending\" class=\"w-100\"><p><img src=\"assets/img/loading-blue.gif\" style=\"margin-left:-2px; height:24px; width:auto; margin-right:8px;margin-top:-2px;\"> Checking txid ...</p></span>  \n                        </div>\n\n\n                        <div class=\"col-md-4 text-left mb-4\" *ngIf=\"continueInvoke == 1\">\n                          <button (click)=\"continueInvokeProccess()\" type=\"submit\" class=\"btn btn-primary\" style=\"min-width:100%;\" [disabled]=\"continueInvoke == 0\">\n                            CONTINUE INVOKE\n                          </button>\n                        </div>\n                      </div>\n                  </div>\n              </div>\n              </div>\n            </div>\n          </div>\n      </div>\n  </div>\n  \n\n  <div class=\"container accounts\" *ngIf=\"recover == 0 || (recover == 1 && recovering_txid == 1)\">\n\t\t<div class=\"row\">\n\n\t\t\t<!-- FORM -->\n\t\t\t<div class=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 pb-3 ng-invalid-ignore\" [formGroup]=\"stakingForm\" >\n\t\t\t\t\t<div class=\"container pl-0 pr-0\">\n\t\t\t\t\t\t<div class=\"row pl-0 pr-0\">\n\n\n\t\t\t\t\t\t<div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n\t\t\t\t\t\t\t<div class=\"content-box-white h-auto mt-2 pb-2 pl-2 pr-2\">\n\n\t\t\t\t\t\t\t\t<div class=\"container ml-1 pr-3 pl-3\">\n\n\t\t\t\t\t\t\t\t\t<div class=\"row defaultTable sendTokens\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-12\">\n\n                      <div class=\"row pt-0\" style=\"border-bottom: 1px solid #edeef4;\">\n                        <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\" style=\"margin-top:-14px;\">\n                          STAKING TYPE\n                        </div>\n                        <div class=\"col-md-9 text-left\">\n                          <div class=\"form-group\">\n                            <input type=\"radio\" name=\"stakingType\" (change)=\"setDuration()\" formControlName=\"stakingType\" value=\"0\" id=\"s1\"><label for=\"s1\" style=\"padding-left:10px;padding-right:30px;\"> For Voting/Mining Node</label>\n                            <input type=\"radio\" name=\"stakingType\" (change)=\"setDuration()\" formControlName=\"stakingType\" value=\"1\" id=\"s2\" *ngIf=\"recover == 0 || (recover == 1 && recovering_txid == 1 && stakingForm.value.amounToStake >= stakingTypes[1].minAmount)\"><label for=\"s2\" style=\"padding-left:10px;padding-right:30px;\" *ngIf=\"recover == 0 || (recover == 1 && recovering_txid == 1 && stakingForm.value.amounToStake >= stakingTypes[1].minAmount)\"> For Confidant</label>\n                            <input type=\"radio\" name=\"stakingType\" (change)=\"setDuration()\" formControlName=\"stakingType\" value=\"2\" id=\"s3\" *ngIf=\"recover == 0 || (recover == 1 && recovering_txid == 1 && stakingForm.value.amounToStake >= stakingTypes[2].minAmount)\"><label for=\"s3\" style=\"padding-left:10px;padding-right:30px;\" *ngIf=\"recover == 0 || (recover == 1 && recovering_txid == 1 && stakingForm.value.amounToStake >= stakingTypes[2].minAmount)\"> For Token Mintage</label>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div class=\"issue-confidant mb-4 mt-4\" *ngIf=\"this.stakingForm.value.stakingType == 1\">\n\n                          <div class=\"row pt-0\" style=\"border-bottom: 1px solid #edeef4;\">\n  \n                            <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2 mb-3 mt-2\">\n    \n                            </div>\n                            <div class=\"col-md-9 text-left mb-2 mt-2\">\n                              <p>\n                                <strong>Prove your ownership and unlock the staking</strong><br>\n                                Enter your E-mail address, used to purchase your Confidant Station. <br>\n                                Click on \"Send Confirmation Code\" and check your Inbox.<br>\n                                You will receive a security code that will prove you're the owner.\n                              </p>\n                            </div>\n  \n                            <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2 mb-4\">\n                              YOUR EMAIL\n                            </div>\n                            <div class=\"col-md-9 text-left mb-4\">\n                              <div class=\"input-group\">\n                                <input\n                                  type=\"text\"\n                                  class=\"form-control form-my-border\"\n                                  placeholder=\"Your E-mail (used to place the order)\"\n                                  onfocus=\"this.placeholder = ''\"\n                                  style=\"height: 42px !important;\"\n                                  formControlName=\"email_address\"\n                                />\n                              </div>\n                            </div>\n  \n                            <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2 mb-4\"></div>\n                            <div class=\"col-md-4 text-left mb-4\">\n                              <button (click)=\"sendSecurityCode()\" type=\"submit\" class=\"btn btn-primary\" style=\"min-width:100%;\" [disabled]=\"sendingSecurityCode != 0\">\n                                SEND SECURITY CODE\n                              </button>\n                            </div>\n                            <div class=\"col-md-5 pt-3\">\n                              <span class=\"security-email-sending\" class=\"w-100\" *ngIf=\"sendingSecurityCode == 1\"><p><img src=\"assets/img/loading-blue.gif\" style=\"margin-left:-2px; height:24px; width:auto; margin-right:8px;margin-top:-2px;\"> Sending security code...</p></span>  \n                              <span class=\"security-email-sent\" class=\"w-100\" *ngIf=\"sendingSecurityCode == 2\"><p><img src=\"assets/img/qlc-icon-staking-success-green.svg\" style=\"height:20px; width:auto; margin-right:8px;margin-top:-2px;\"> Code sent. Check your Inbox (Spam Folder)</p></span>\n                            </div>\n  \n                          </div>\n                          \n                          <div class=\"row pt-0\" style=\"border-bottom: 1px solid #edeef4;\">\n  \n                            <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2 mb-3 mt-4\">\n                              SECURITY CODE\n                            </div>\n                            <div class=\"col-md-6 text-left mb-3 mt-4\">\n                              <div class=\"input-group\">\n                                <input\n                                  type=\"text\"\n                                  class=\"form-control form-my-border\"\n                                  placeholder=\"Security code (sent to your email)\"\n                                  onfocus=\"this.placeholder = ''\"\n                                  style=\"height: 42px !important;\"\n                                  formControlName=\"security_code\"\n                                />\n                              </div>\n                            </div>  \n                            <div class=\"col-md-3 text-left mb-3 mt-4\">\n                                <button (click)=\"checkSecurityCode()\" type=\"submit\" class=\"btn btn-primary\" style=\"min-width:100%; min-height:42px;\">\n                                  CONFIRM CODE\n                                </button>\n                            </div>                          \n  \n                            \n  \n                            <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2 mb-3\">\n                               \n                            </div>\n                            <div class=\"col-md-9 text-left mb-1\">\n                              <div class=\"input-group\">\n                                <span class=\"ownership-check\" class=\"w-100\" *ngIf=\"confidantConfirmed == 3\"><p><img src=\"assets/img/loading-blue.gif\" style=\"height:24px; width:auto; margin-right:8px;margin-top:-2px;\"> Verifying Ownership...</p></span>\n                                <span class=\"ownership-success\" class=\"w-100\" *ngIf=\"confidantConfirmed == 1\"><p><img src=\"assets/img/qlc-icon-staking-success-green.svg\" style=\"height:20px; width:auto; margin-right:8px;margin-top:-2px;\"> Ownership Confirmed.</p></span>\n                                <span class=\"ownership-fail\" class=\"w-100\" *ngIf=\"confidantConfirmed == 2\"><p><img src=\"assets/img/qlc-icon-staking-fail-red.svg\" style=\"height:20px; width:auto; margin-right:8px;margin-top:-2px;\"> Ownership Confirmation Failed. <em>Enter your security code and try again.</em></p></span>\n                              </div>\n                            </div>\n  \n                         \n                          </div>\n  \n                          <div class=\"issue-mac-addresses\" *ngIf=\"confidantConfirmed == 1\">\n  \n                              <div class=\"row pt-0 mb-4\" style=\"border-bottom: 1px solid #edeef4;\">\n                                <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2 mb-3\">\n                                  YOUR CONFIDANTS\n                                </div>\n                                <div class=\"col-md-9 text-left mb-3 pt-2 mt-2\">\n                                  <p>Select the Confidant Stations you want to stake for:</p>\n                                </div>\n    \n                                <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2 mb-3\">\n                                  \n                                </div>\n                                <div class=\"col-md-9 text-left mb-3\">\n                                    <div class=\"form-group\"> \n                                      <div *ngFor=\"let confidant of confidants;let i = index\">\n                                          <input type=\"checkbox\" (click)=\"addMacAdd(confidant.mac_address)\" name=\"confidant{{ confidant.index }}\" value=\"{{ confidant.mac_address }}\" id=\"c{{ confidant.index }}\"><label for=\"c{{ confidant.index }}\" style=\"padding-left:10px;padding-right:30px;\"> Confidant #{{ confidant.index }}: {{ confidant.mac_address }}</label><br>\n                                      </div>\n                                    </div>\n                                </div>\n                          \n                              </div>\n    \n                        </div>\n  \n                      </div>\n\n                  <div *ngIf=\"this.stakingForm.value.stakingType != 1 || (this.stakingForm.value.stakingType == 1 && confidantConfirmed == 1 && macaddresses.length > 0)\">\n                      <div class=\"row pt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n                        <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                          STAKE FROM\n                        </div>\n                        <div class=\"col-md-9 text-left\">\n                          <div class=\"form-group\" *ngIf=\"recover == 0\">\n                            <select class=\"custom-select\" formControlName=\"fromNEOWallet\" (change)=\"selectAccount()\">\n                              <option *ngFor=\"let account of neowallets\" [value]=\"account.id\"\n                                >{{ account.addressBookName ? account.addressBookName + ' - ' : '' }} {{ account.id }} {{ ((account.balances != undefined && account.balances[neoService.tokenList['QLC'].networks['1'].hash] != undefined)? ' ('+account.balances[neoService.tokenList['QLC'].networks['1'].hash].amount + ' QLC)' : '') }} </option>\n                            </select>\n                            <p style=\"max-width:100%;font-size:11px;padding-left:16px;padding-top:8px;\">Select a NEP-5 address you want to stake QLC from</p>\n                          </div>\n                          <div class=\"form-group\" *ngIf=\"recover == 1\">\n                            {{ stakingForm.value.fromNEOWallet }}\n                          </div>\n                        </div>\n                      </div>\n\n\n                      <div class=\"row pt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n                        <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">\n                          STAKE TO\n                        </div>\n                        <div class=\"col-md-9 text-left\">\n                          <div class=\"form-group\" *ngIf=\"recover == 0\">\n                            <select class=\"custom-select\" formControlName=\"toQLCWallet\">\n                              <option *ngFor=\"let account of accounts\" [value]=\"account.id\"\n                                >{{ account.addressBookName ? account.addressBookName + ' - ' : '' }} {{ account.id }}</option>\n                            </select>\n                            <p style=\"max-width:100%;font-size:11px;padding-left:16px;padding-top:8px;\">Select a QLC Chain address you want to receive your QGAS to</p>\n                          </div>\n                          <div class=\"form-group\" *ngIf=\"recover == 1\">\n                            {{ stakingForm.value.toQLCWallet }}\n                          </div>\n                        </div>\n                      </div>\n  \n\n\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row rowContent mb-5 mt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">AMOUNT TO STAKE</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-9\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"row align-items-top\" *ngIf=\"recover == 0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6 pb-3 pb-md-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-text \">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tQLC\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control inlineForm\"\n                                  formControlName=\"amounToStake\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"{{ stakingTypes[this.stakingForm.value.stakingType].minAmount }}\"\n                                  onfocus=\"this.placeholder = ''\"\n                                  (change)=\"checkIfMinAmount()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle=\"height: 42px !important;\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-append\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<!--<a (click)=\"setMaxAmount()\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-text maxLink\">Max</div>\n                                  </a>-->\n                                  <div class=\"input-group-text maxLink\">&nbsp;</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n                              </div>\n                              <p style=\"max-width:100%;font-size:11px;padding-left:16px;padding-top:8px;\">The minimum stake amount is {{ stakingTypes[this.stakingForm.value.stakingType].minAmount | currency:'':'':'1.2-8' }} QLC</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n                            <div class=\"col-md-6\">\n                              <div class=\"row align-items-top\">\n                                <div class=\"col-md-6 dataName pb-3 pb-md-0 form-label-custom-2\">AVAILABLE BALANCE</div>\n                                <div class=\"col-md-6 \">\n                                    <div class=\"text-right fiat pr-1\" style=\"color:#595757;\"><strong>{{ this.stakingForm.value.availableQLCBalance | currency:'':'':'1.2-8' }} QLC</strong></div>\n                                </div>\n                              </div>\n                            </div>\n\n                          </div>\n                          <div class=\"form-group\" *ngIf=\"recover == 1\">\n                            {{ stakingForm.value.amounToStake | currency:'':'':'1.2-8' }} QLC\n                          </div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n                      <div class=\"row rowContent mb-4 mt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n                        <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\">STAKING PERIOD</div>\n                        <div class=\"col-md-9\">\n                          <div class=\"row align-items-top\" *ngIf=\"recover == 0\">\n                            <div class=\"col-md-6 pb-3 pb-md-0\">\n                              <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                  <div class=\"input-group-text \">\n                                    Days\n                                  </div>\n                                </div>\n                                <input\n                                  type=\"text\"\n                                  class=\"form-control inlineForm\"\n                                  formControlName=\"durationInDays\"\n                                  placeholder=\"{{ stakingTypes[this.stakingForm.value.stakingType].minTime }}\"\n                                  onfocus=\"this.placeholder = ''\"\n                                  style=\"height: 42px !important;\" (change)=\"setDuration()\"\n                                  disabled\n                                />\n                                <div class=\"input-group-append\">\n                                  <div class=\"input-group-text maxLink\">&nbsp;</div>\n                                </div>\n                              </div>\n                              <p style=\"max-width:100%;font-size:11px;padding-left:16px;padding-top:8px;\">The minimum period is {{ stakingTypes[this.stakingForm.value.stakingType].minTime }} days</p>\n                            </div>\n\n                            <div class=\"col-md-6\">\n                              <div class=\"row align-items-top\">\n                                <div class=\"col-md-7 dataName pb-3 pb-md-0 form-label-custom-2\">OPTION TO REVOKE ON</div>\n                                <div class=\"col-md-5 \">\n                                    <div class=\"text-right fiat pr-1\" style=\"color:#595757;\"><strong>{{ this.stakingForm.value.endDate | date: 'dd.MM.yyyy' }}</strong></div>\n                                </div>\n                                <div class=\"col-12\"><p style=\"text-transform: none !important;color:#595757;font-weight:normal;font-size: 11px;padding-top:19px;\">You can continue to receive Q-Gas if you don't revoke</p></div>\n                              </div>\n                            </div>\n\n                          </div>\n                          <div class=\"form-group\" *ngIf=\"recover == 1\">\n                            <div class=\"row align-items-top\">\n                              <div class=\"col-md-7 dataName pb-3 pb-md-0 form-label-custom-2\">OPTION TO REVOKE ON</div>\n                              <div class=\"col-md-5 \">\n                                  <div class=\"text-right fiat pr-1\" style=\"color:#595757;\"><strong>{{ stakingForm.value.endDate | date: 'dd.MM.yyyy'  }}</strong></div>\n                              </div>\n                              <div class=\"col-12\"><p style=\"text-transform: none !important;color:#595757;font-weight:normal;font-size: 11px;padding-top:19px;\">You can continue to receive Q-Gas if you don't revoke</p></div>\n                            </div>\n                          </div>\n                          \n                        </div>\n                      </div>\n\n\n                    </div>\n                      \n\n                      \n\n                      \n                      <div class=\"issue-token\" *ngIf=\"this.stakingForm.value.stakingType == 2\">\n\n                            <div class=\"row pt-0\" style=\"border-bottom: 1px solid #edeef4;\">\n                              <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2 mb-3\">\n                                TOKEN NAME\n                              </div>\n                              <div class=\"col-md-9 text-left mb-3\">\n                                <div class=\"input-group\">\n                                  <input\n                                    type=\"text\"\n                                    formControlName=\"tokenName\"\n                                    class=\"form-control form-my-border\"\n                                    placeholder=\"Token name\"\n                                    onfocus=\"this.placeholder = ''\"\n                                    (change)=\"checkTokenName()\"\n                                    style=\"height: 42px !important;\"\n                                  />\n                                </div>\n                                <span *ngFor=\"let validation of staking_validation_messages.tokenName\">\n                                  <span class=\"error-message\" *ngIf=\"stakingForm.get('tokenName').hasError(validation.type) && (stakingForm.get('tokenName').dirty || stakingForm.get('tokenName').touched)\">{{validation.message}}<br></span>\n                                </span>\n                                <span class=\"error-message\" *ngIf=\"invalidTokenName == 1\">Invalid Token Name. Please choose a diffrent name.<br></span>\n                              </div>\n\n                              <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2 mb-3\">\n                                TOKEN SYMBOL\n                              </div>\n                              <div class=\"col-md-9 text-left mb-3\">\n                                <div class=\"input-group\">\n                                  <input\n                                    type=\"text\"\n                                    formControlName=\"tokenSymbol\"\n                                    class=\"form-control form-my-border\"\n                                    placeholder=\"XYZ\"\n                                    onfocus=\"this.placeholder = ''\"\n                                    (change)=\"checkTokenSymbol()\"\n                                    style=\"height: 42px !important;\"\n                                  />\n                                </div>\n                                <span *ngFor=\"let validation of staking_validation_messages.tokenSymbol\">\n                                  <span class=\"error-message\" *ngIf=\"stakingForm.get('tokenSymbol').hasError(validation.type) && (stakingForm.get('tokenSymbol').dirty || stakingForm.get('tokenSymbol').touched)\">{{validation.message}}<br></span>\n                                </span>\n                                <span class=\"error-message\" *ngIf=\"invalidTokenSymbol == 1\">Invalid Token Symbol. Please choose a diffrent symbol.<br></span>\n                                \n                              </div>\n\n                              <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2 mb-3\">\n                                TOKEN SUPPLY\n                              </div>\n                              <div class=\"col-md-9 text-left mb-3\">\n                                <div class=\"input-group\">\n                                  <input\n                                    type=\"text\"\n                                    formControlName=\"tokenSupply\"\n                                    class=\"form-control form-my-border\"\n                                    placeholder=\"100000000\"\n                                    onfocus=\"this.placeholder = ''\"\n                                    style=\"height: 42px !important;\"\n                                  />\n                                </div>\n                                <span *ngFor=\"let validation of staking_validation_messages.tokenSupply\">\n                                  <span class=\"error-message\" *ngIf=\"stakingForm.get('tokenSupply').hasError(validation.type) && (stakingForm.get('tokenSupply').dirty || stakingForm.get('tokenSupply').touched)\">{{validation.message}}<br></span>\n                                </span>\n                              </div>\n\n                              <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2 mb-5\">\n                                TOKEN DECIMALS\n                              </div>\n                              <div class=\"col-md-9 text-left mb-3\">\n                                <div class=\"input-group\">\n                                  <input\n                                    type=\"text\"\n                                    formControlName=\"tokenDecimals\"\n                                    class=\"form-control form-my-border\"\n                                    placeholder=\"8\"\n                                    onfocus=\"this.placeholder = ''\"\n                                    style=\"height: 42px !important;\"\n                                  />\n                                </div>\n                                <span *ngFor=\"let validation of staking_validation_messages.tokenDecimals\">\n                                  <span class=\"error-message\" *ngIf=\"stakingForm.get('tokenDecimals').hasError(validation.type) && (stakingForm.get('tokenDecimals').dirty || stakingForm.get('tokenDecimals').touched)\">{{validation.message}}<br></span>\n                                </span>\n                              </div>                        \n                            </div>\n\n                      </div>\n\n                      \n\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row rowAmount pl-3 pl-sm-3 pl-sm-3 pr-3 pr-sm-3 pr-sm-3 pt-0 mt-0 pb-3 pt-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-3\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-lg-4 col-md-4 col-sm-12 col-12 pl-0 pr-0 pl-md-2 pr-md-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button (click)=\"checkForm()\" type=\"submit\" class=\"btn btn-primary\" style=\"min-width:100%;\" *ngIf=\"this.stakingForm.value.stakingType != 1 || (this.stakingForm.value.stakingType == 1 && confidantConfirmed == 1 && macaddresses.length > 0)\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tREVIEW & INVOKE STAKING\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n                    </div>\n                    \n\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n      </div>\n      \n\n      \n\t\t\t<!-- EXPLAINER -->\n\t\t\t<div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n\t\t\t\t<div class=\"content-box-blue h-100 pb-3\">\n\t\t\t\t\t<div class=\"container\">\n\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">ABOUT STAKING TYPES</div>\n            </div>\n            <div class=\"row qlc-table-row-blue mt-3 qlc-stake-explainer pr-3\">\n              <hr style=\"height:1px;width:100%;border:none;background:#7ca7e5;display:block;\" />\n\n              <p style=\"width:100%;\" class=\"mt-2\"><strong>FOR VOTING/MINING NODE</strong></p>\n              <p>\n                <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Minimum Amount:</span> 1 QLC<br>\n                <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Minimum Staking Period:</span> 10 days<br>\n                <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Voting Earning per day:</span> <br>Your staked amount/whole network staked amount x 8,302 QGAS<br>\n                <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Mining Earning per day:</span> <br>Miners to share the pool of 8219 QGAS<br>Miner Earning = Voting + Mining Earning<br><span style=\"color:#7ca7e5;\"><em><br>*Stake 100k QLC or above is entitled to be a mining node, or run a mining pool</em></span><br>\n              </p>\n\n              <hr style=\"height:1px;width:100%;border:none;background:#7ca7e5;display:block;\" />\n\n              <p style=\"width:100%;\" class=\"mt-2\"><strong>FOR CONFIDANT STATION</strong><br></p>\n              <p>\n                <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Minimum Amount:</span> 2,000 QLC<br>\n                <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Minimum Staking Period:</span> 90 days<br>\n                <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Rewards: </span> Same as voting node - QGAS consumption<br><span style=\"color:#7ca7e5;\"><em><br>*First three month promotional period QGAS consumption will be 0</em></span><br><br>\n                Purchase a <a href=\"https://myconfidant.io\" target=\"_blank\" style=\"text-decoration: underline; color:#fff;\">Confidant</a> with 20% discount with Crypto Payment\n              </p>\n              \n              <hr style=\"height:1px;width:100%;border:none;background:#7ca7e5;display:block;\" />\n\n              <p style=\"width:100%;\" class=\"mt-2\"><strong>FOR TOKEN MINTAGE</strong><br></p>\n              <p>\n                <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Minimum Amount:</span> 500,000 QLC<br>\n                <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Minimum Staking Period:</span> 180 days<br>\n                <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Rewards: </span> Entitled to issue a token<br>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n\t\t</div>\n\t</div>\t\t\n\n\n\n</div>\n\n\n\n\n\n\n<div class=\"stake-screen-1\"  *ngIf='step == 2'>\n\n\n\n\t<!-- REVIEW A -->\n\t<div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-12 pl-0 pr-0 pb-2\">\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<!-- TITLE -->\n\t\t\t\t\t\t\t<div class=\"col-md-9 col-12 mt-2 pl-md-2 pr-md-2\">\n\t\t\t\t\t\t\t\t<div class=\"content-title\">\n\t\t\t\t\t\t\t\t\t<h1>Review Your Staking</h1>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-md-3 col-12 pl-md-2 pr-md-2\">\n\t\t\t\t\t\t\t\t\t<button (click)=\"back()\" type=\"submit\" class=\"btn btn-primary content-header float-right w-100 pl-0 pr-0\">\n\t\t\t\t\t\t\t\t\t\tCHANGE / EDIT\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n  </div>\n  \n\n  <div class=\"container accounts\">\n\t\t<div class=\"row\">\n\n\t\t\t<!-- STAKING A -->\n\t\t\t<div class=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 pb-3\">\n\t\t\t\t\t<div class=\"container pl-0 pr-0\">\n\t\t\t\t\t\t<div class=\"row pl-0 pr-0\">\n\n\n\t\t\t\t\t\t<div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n\t\t\t\t\t\t\t<div class=\"content-box-white h-auto mt-2 pb-2 pl-2 pr-2\">\n\n\t\t\t\t\t\t\t\t<div class=\"container ml-1 pr-3 pl-3\">\n\n\t\t\t\t\t\t\t\t\t<div class=\"row defaultTable sendTokens\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"col-12\">\n\n                      <div class=\"row pt-0\" style=\"border-bottom: 1px solid #edeef4;\">\n                        <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\" style=\"margin-top:-10px;\">\n                          STAKING TYPE\n                        </div>\n                        <div class=\"col-md-9 text-left pb-3\">\n                          {{ stakingTypes[stakingForm.value.stakingType].name }}\n                        </div>\n                      </div>\n\n                      <div class=\"row pt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n                        <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\" style=\"margin-top:-10px;\">\n                          STAKE FROM\n                        </div>\n                        <div class=\"col-md-9 pb-3 text-left\">\n                          {{ stakingForm.value.fromNEOWallet }}\n                        </div>\n                      </div>\n\n\n                      <div class=\"row pt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n                        <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\" style=\"margin-top:-10px;\">\n                          STAKE TO\n                        </div>\n                        <div class=\"col-md-9 pb-3 text-left\">\n                          {{ stakingForm.value.toQLCWallet }}\n                        </div>\n                      </div>\n\n\n                      <div class=\"row pt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n                        <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\" style=\"margin-top:-10px;\">\n                          AMOUNT TO STAKE\n                        </div>\n                        <div class=\"col-md-9 pb-3 text-left\">\n                          {{ stakingForm.value.amounToStake  | currency:'':'':'1.2-8' }} QLC\n                        </div>\n                      </div>\n  \n                      <div class=\"row pt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n                        <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\" style=\"margin-top:-10px;\">\n                          STAKING PERIOD\n                        </div>\n                        <div class=\"col-md-9 pb-3 text-left\">\n                          {{ stakingForm.value.durationInDays }} Days (Until {{ this.stakingForm.value.endDate | date: 'dd.MM.yyyy' }})\n                        </div> \n                      </div>\n\n                      <div class=\"review-confidant\" *ngIf=\"this.stakingForm.value.stakingType == 1\">\n\n                          <div class=\"row pt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n                            <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\" style=\"margin-top:-10px;\">\n                              YOUR EMAIL\n                            </div>\n                            <div class=\"col-md-9 pb-3 text-left\">\n                                {{ stakingForm.value.email_address }}\n                            </div>\n                          </div>\n\n                          <div class=\"row pt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n                            <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\" style=\"margin-top:-10px;\">\n                              FOR CONFIDANT/S\n                            </div>\n                            <div class=\"col-md-9 pb-3 text-left\">\n                              <div *ngFor=\"let confidant of macaddresses\">\n                                <span> Confidant #{{ confidant.index }}: {{ confidant.mac_address }}</span><br>\n                              </div>\n                            </div>\n                          </div>\n\n\n                      </div>\n\n                      <div class=\"review-mintage\" *ngIf=\"this.stakingForm.value.stakingType == 2\">\n\n                          <div class=\"row pt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n                            <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\" style=\"margin-top:-10px;\">\n                              TOKEN NAME\n                            </div>\n                            <div class=\"col-md-9 pb-3 text-left\">\n                                {{ stakingForm.value.tokenName }}\n                            </div>\n                          </div>\n\n                          <div class=\"row pt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n                            <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\" style=\"margin-top:-10px;\">\n                              TOKEN SYMBOL\n                            </div>\n                            <div class=\"col-md-9 pb-3 text-left\">\n                                {{ stakingForm.value.tokenSymbol }}\n                            </div>\n                          </div>\n\n                          <div class=\"row pt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n                            <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\" style=\"margin-top:-10px;\">\n                              TOKEN SUPPLY\n                            </div>\n                            <div class=\"col-md-9 pb-3 text-left\">\n                                {{ stakingForm.value.tokenSupply }}\n                            </div>\n                          </div>\n\n                          <div class=\"row pt-4\" style=\"border-bottom: 1px solid #edeef4;\">\n                            <div class=\"col-md-3 dataName pb-3 pb-md-0 form-label-custom-2\" style=\"margin-top:-10px;\">\n                              TOKEN DECIMALS\n                            </div>\n                            <div class=\"col-md-9 pb-3 text-left\">\n                              {{ stakingForm.value.tokenDecimals }}\n                            </div>\n                          </div>\n\n                      </div>\n\n                      \n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row rowAmount pl-3 pl-sm-3 pl-sm-3 pr-3 pr-sm-3 pr-sm-3 pt-0 mt-0 pb-3 pt-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-3\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-lg-4 col-md-4 col-sm-12 col-12 pl-0 pr-0 pl-md-2 pr-md-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button (click)=\"confirmInvoke()\" type=\"submit\" class=\"btn btn-primary\" style=\"min-width:100%;\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCONFIRM AND INVOKE NOW\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n                    </div>\n                    \n\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n      </div>\n      \n\n      \n\t\t\t<!-- EXPLAINER -->\n\t\t\t<div class=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-xl-5 pb-lg-5 pb-2 mb-md-0 mb-sm-0 mb-md-0 mb-0\">\n\t\t\t\t<div class=\"content-box-blue h-100 pb-3\">\n\t\t\t\t\t<div class=\"container\">\n\n            <div class=\"row qlc-table-header-blue\">\n              <div class=\"col-12\">ABOUT YOUR STAKING TYPE</div>\n            </div>\n            <div class=\"row qlc-table-row-blue mt-3 qlc-stake-explainer pr-3\">\n              <hr style=\"height:1px;width:100%;border:none;background:#7ca7e5;display:block;\" />\n\n              <div class=\"explainer-voting\">\n                <p style=\"width:100%;\" class=\"mt-2\"><strong>FOR VOTING/MINING NODE</strong></p>\n                <p>\n                  <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Minimum Amount:</span> 1 QLC<br>\n                  <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Minimum Staking Period:</span> 10 days<br>\n                  <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Voting Earning per day:</span> <br>Your staked amount/whole network staked amount x 8,302 QGAS<br>\n                  <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Mining Earning per day:</span> <br>Miners to share the pool of 8219 QGAS<br>Miner Earning = Voting + Mining Earning<br><span style=\"color:#7ca7e5;\"><em><br>*Stake 100k QLC or above is entitled to be a mining node, or run a mining pool</em></span><br>\n                </p>\n              </div>\n\n              <div class=\"explainer-confidant\" style=\"opacity:0.4\">\n                <p style=\"width:100%;\" class=\"mt-2\"><strong>FOR CONFIDANT STATION</strong><br></p>\n                <p>\n                  <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Minimum Amount:</span> 2,000 QLC<br>\n                  <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Minimum Staking Period:</span> 90 days<br>\n                  <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Rewards: </span> Same as voting node - QGAS consumption<br><span style=\"color:#7ca7e5;\"><em><br>*First three month promotional period QGAS consumption will be 0</em></span><br><br>\n                  Purchase a <a href=\"https://myconfidant.io\" target=\"_blank\" style=\"text-decoration: underline; color:#fff;\">Confidant</a> with 20% discount with Crypto Payment\n                </p>\n              </div>\n\n              <div class=\"explainer-mintage\" style=\"opacity:0.4\">\n                <p style=\"width:100%;\" class=\"mt-2\"><strong>FOR TOKEN MINTAGE</strong><br></p>\n                <p>\n                  <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Minimum Amount:</span> 500,000 QLC<br>\n                  <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Minimum Staking Period:</span> 180 days<br>\n                  <span style=\"color:#7ca7e5;margin-top:4px;display:inline-block;\">Rewards: </span> Entitled to issue a token<br>\n                </p>\n              </div>\n\n            </div>\n\n        </div>\n      </div>\n    </div>\n\n\n\t\t</div>\n  </div>\t\t\n  \n\n\n\n</div>\n\n\n\n\n\n\n\n<div class=\"stake-screen-1\"  *ngIf='step == 3'>\n\n\n\n\t<!-- LOADING -->\n\t<div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-12 pl-0 pr-0 pb-2\">\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<!-- TITLE -->\n\t\t\t\t\t\t\t<div class=\"col-md-9 col-12 mt-2 pl-md-2 pr-md-2\">\n\t\t\t\t\t\t\t\t<div class=\"content-title\">\n\t\t\t\t\t\t\t\t\t<h1>Invoking in progress</h1>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n  </div>\n  \n\n  <div class=\"container accounts\">\n\t\t<div class=\"row\">\n\n\t\t\t<!-- INFO -->\n\t\t\t<div class=\"col-12 pb-3\">\n\t\t\t\t\t<div class=\"container pl-0 pr-0\">\n\t\t\t\t\t\t<div class=\"row pl-0 pr-0\">\n\n\n\t\t\t\t\t\t<div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n\t\t\t\t\t\t\t<div class=\"content-box-white h-auto mt-2 pl-5 pr-5 text-center pt-5 pb-5\">\n\n                <h3>Please wait</h3>\n                <h5 class=\"pt-3\">The invoking process can take up to a couple of minutes.</h5>\n\n                <div class=\"container\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6 offset-md-3 mt-5 mb-5\">\n\n                      <div id=\"noTrespassingOuterBarG\">\n                        <div id=\"noTrespassingFrontBarG\" class=\"noTrespassingAnimationG\">\n                          <div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div>\n                          <div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div>\n                        </div>\n                      </div>\n\n                    </div>\n                  </div>\n                </div>\n\n                <p style=\"color:#c10f0f;\" class=\"pb-3\"><strong>Important:</strong> Don't leave or close this page!</p>\n\n                <p class=\"pt-0 pb-0\" *ngFor=\"let step of invokeSteps\"><span style=\"display:block;width:100%;margin-bottom:10px;margin-top:-5px;\" *ngIf=\"step.checkimg == 1\"><img src=\"assets/img/qlc-icon-staking-success-green.svg\" style=\"width:20px;height:auto;\"></span>{{ step.msg }}</p>\n\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n      </div>\n      \n\n\n\t\t</div>\n\t</div>\t\t\n\n\n\n</div>\n\n\n\n\n\n<div class=\"stake-screen-1\" *ngIf=\"step == 4\">\n\n\n\n\t<!-- COMPLETE -->\n\t<div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-12 pl-0 pr-0 pb-2\">\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<!-- TITLE -->\n\t\t\t\t\t\t\t<div class=\"col-md-9 col-12 mt-2 pl-md-2 pr-md-2\">\n\t\t\t\t\t\t\t\t<div class=\"content-title\">\n\t\t\t\t\t\t\t\t\t<h1>Invoking complete</h1>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n  </div>\n  \n\n  <div class=\"container accounts\">\n\t\t<div class=\"row\">\n\n\t\t\t<!-- INFO -->\n\t\t\t<div class=\"col-12 pb-3\">\n\t\t\t\t\t<div class=\"container pl-0 pr-0\">\n\t\t\t\t\t\t<div class=\"row pl-0 pr-0\">\n\n\n\t\t\t\t\t\t<div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n\t\t\t\t\t\t\t<div class=\"content-box-white h-auto mt-2 pl-5 pr-5 text-center pt-5 pb-5\">\n\n                <h3>Woohoo!</h3>\n                <h5 class=\"pt-3\">The invoking of your staking was successful.</h5>\n\n                <div class=\"container\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6 offset-md-3 mt-5 mb-5\">\n\n                      <img src=\"assets/img/qlc-icon-staking-success-green.svg\" style=\"height:128px;width:128px;\">\n\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"container\">\n                    <div class=\"row\">\n                      <div class=\"col-md-4 offset-md-4 mb-4\">\n  \n                        <button type=\"submit\" class=\"btn btn-primary\" style=\"min-width:100%;\" routerLink=\"/staking/qlc\" >\n                          BACK TO MY STAKINGS\n                        </button>\n\n                        <button type=\"submit\" class=\"btn btn-primary mt-3\" style=\"min-width:100%;\" (click)=\"invokeNewStaking()\">\n                          INVOKE A NEW STAKING\n                        </button>\n\n                      </div>\n                    </div>\n                  </div>\n\n                \n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n      </div>\n      \n\n\n\t\t</div>\n\t</div>\t\t\n\n\n\n</div>\n\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport { AddressBookService } from 'src/app/services/address-book.service';\nimport { NeoWalletService } from 'src/app/services/neo-wallet.service';\nimport BigNumber from 'bignumber.js';\nimport { ApiNEP5Service } from 'src/app/services/api-nep5.service';\nimport { ApiService } from 'src/app/services/api.service';\nimport { UtilService } from 'src/app/services/util.service';\nimport { WorkPoolService } from 'src/app/services/work-pool.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { timer } from 'rxjs';\nimport { ApiConfidantService } from 'src/app/services/api-confidant.service';\n\nimport { minAmountValidator } from '../../directives/amount-validator.directive';\n\nimport { environment } from 'src/environments/environment';\n\nconst nacl = window['nacl'];\n\n@Component({\n  selector: 'app-staking-create',\n  templateUrl: './staking-create.component.html',\n  styleUrls: ['./staking-create.component.scss']\n})\nexport class StakingCreateComponent implements OnInit {\n\n  step = 1;\n  recover = 0;\n  zeroHash = '0000000000000000000000000000000000000000000000000000000000000000';\n  checkingTxid = 0;\n  recovering_txid = 0;\n  continueInvoke = 0;\n  continueInvokePledge:any;\n\n  sendingSecurityCode = 0;\n\n  confidantConfirmed = 0;\n  invokeSteps = [];\n  recoverSteps = [];\n\n  confidants = [];\n  macaddresses = [];\n\n  accounts = this.walletService.wallet.accounts;\n  neowallets = this.walletService.wallet.neowallets;\n  stakingTypes;\n\n  staking = {\n    'main' : [{\n      name: 'For Vote',\n      minAmount : 1,\n      minTime: 10\n    },\n    {\n      name: 'For Confidant',\n      minAmount : 2000,\n      minTime: 90\n    },\n    {\n      name: 'For Minting',\n      minAmount : 500000,\n      minTime: 180\n    }],\n    'test' : [{\n      name: 'For Vote',\n      minAmount : 1,\n      minTime: 10\n    },\n    {\n      name: 'For Confidant',\n      minAmount : 10,\n      minTime: 10\n    },\n    {\n      name: 'For Minting',\n      minAmount : 20,\n      minTime: 10\n    }]\n  };\n\n  msg3 = '';\n\n  recoverForm = new FormGroup({\n    recover_txid: new FormControl('',Validators.compose([\n      Validators.required,\n      Validators.pattern('^([a-zA-Z0-9])*'),\n      Validators.maxLength(64),\n      Validators.minLength(64)\n    ])),\n  });\n\n  recover_validation_messages = {\n    'recover_txid': [\n      { type: 'required', message: 'Txid is required' },\n      { type: 'minlength', message: 'Txid must be at least 64 characters long' },\n      { type: 'maxlength', message: 'Txid cannot be more than 64 characters long' },\n      { type: 'pattern', message: 'Txid must contain only letters and numbers' }\n    ]\n  }\n\n  recoverErrorMsg = '';\n\n  stakingForm = new FormGroup({\n    stakingType: new FormControl('0'),\n    fromNEOWallet: new FormControl('',Validators.required),\n    toQLCWallet: new FormControl('',Validators.required),\n    availableQLCBalance: new FormControl('0'),\n    endDate: new FormControl(''),\n    amounToStake: new FormControl(''),\n    durationInDays: new FormControl(''),\n    tokenName: new FormControl('',Validators.compose([\n      Validators.required,\n      Validators.pattern('^([a-zA-Z_]+[ ]?)*[a-zA-Z_]$'),\n      Validators.maxLength(40),\n      Validators.minLength(1)\n    ])),\n    tokenSymbol: new FormControl('',Validators.compose([\n      Validators.required,\n      Validators.pattern('^([a-zA-Z_]+[ ]?)*[a-zA-Z_]$'),\n      Validators.maxLength(10),\n      Validators.minLength(1)\n    ])),\n    tokenSupply: new FormControl('',Validators.compose([\n      Validators.required,\n      Validators.pattern('[1-9][0-9]*'),\n      Validators.maxLength(20),\n      Validators.minLength(3)\n    ])),\n    tokenDecimals: new FormControl('',Validators.compose([\n      Validators.required,\n      Validators.pattern('[0-9]+'),\n      Validators.maxLength(2),\n      Validators.minLength(1)\n    ])),\n    email_address: new FormControl(''),\n    security_code: new FormControl(''),\n  });\n\n  staking_validation_messages = {\n    'tokenName': [\n      { type: 'required', message: 'Token Name is required' },\n      { type: 'minlength', message: 'Token Name must be at least 1 characters long' },\n      { type: 'maxlength', message: 'Token Name cannot be more than 40 characters long' },\n      { type: 'pattern', message: 'Token Name must contain only letters, space or underscore' }\n    ],\n    'tokenSymbol': [\n      { type: 'required', message: 'Token Symbol is required' },\n      { type: 'minlength', message: 'Token Symbol must be at least 1 characters long' },\n      { type: 'maxlength', message: 'Token Symbol cannot be more than 40 characters long' },\n      { type: 'pattern', message: 'Token Symbol must contain only letters, space or underscore' }\n    ],\n    'tokenSupply': [\n      { type: 'required', message: 'Token Supply is required' },\n      { type: 'minlength', message: 'Token Supply must be at least 3 characters long' },\n      { type: 'maxlength', message: 'Token Supply cannot be more than 20 characters long' },\n      { type: 'pattern', message: 'Token Supply must contain only numbers and it must not start with 0' }\n    ],\n    'tokenDecimals': [\n      { type: 'required', message: 'Token Decimals is required' },\n      { type: 'minlength', message: 'Token Decimals must be at least 1 characters long' },\n      { type: 'maxlength', message: 'Token Decimals cannot be more than 2 characters long' },\n      { type: 'pattern', message: 'Token Decimals must contain only numbers and it must not start with 0' }\n    ],\n    'terms': [\n      { type: 'pattern', message: 'You must accept terms and conditions' }\n    ]\n  }\n\n  invalidTokenSymbol = 0;\n  invalidTokenName = 0;\n\n  //testData:any;\n\n  constructor(\n    private walletService: WalletService,\n    private addressBookService: AddressBookService,\n    private neoService: NeoWalletService,\n    private nep5api: ApiNEP5Service,\n    private api: ApiService,\n\t\tprivate util: UtilService,\n\t\tprivate workPool: WorkPoolService,\n\t\tprivate notifications: NotificationService,\n    private trans: TranslateService,\n    private confidantApi: ApiConfidantService\n  ) {\n    this.stakingTypes = this.staking[environment.neoNetwork];\n  }\n\n  ngOnInit() {\n    this.loadBalances();\n  }\n  \n\n  async checkTxid() {\n    if (this.walletService.walletIsLocked()) {\n\t\t\treturn this.notifications.sendWarning('ERROR wallet locked');\n    }\n    this.continueInvokePledge = {};\n    this.checkingTxid = 1;\n    this.recoverErrorMsg = '';\n    this.recoverSteps = [];\n\n    // check if TXID is a lock\n    const txData = await this.neoService.contractGetLockInfo(this.recoverForm.value.recover_txid);\n    if (txData === false) {\n      this.recoverSteps.push({ msg: 'Wrong NEO wallet password.'});\n      return;\n    }\n    if (txData.neoAddress != '') {\n      this.recoverSteps.push({ msg: 'TXID lock found.'});\n      const walletAccount = await this.walletService.getWalletAccount(txData.beneficial);\n      if (!walletAccount) {\n        this.recoverSteps.push({ msg: 'ERROR - QLC address not found. Please add the connected QLC address and try again.'});\n        this.checkingTxid = 0;\n        return;\n      }\n      const neoWallet= await this.walletService.getNeoWallet(txData.neoAddress);\n      if (!neoWallet) {\n        this.recoverSteps.push({ msg: 'ERROR - NEO address not found. Please add the connected NEO address and try again.'});\n        this.checkingTxid = 0;\n        return;\n      }\n\n      this.recoverSteps.push({ msg: 'Checking pledge status.'});\n      const pledgeInfoByTransactionID = await this.nep5api.pledgeInfoByTransactionID(this.recoverForm.value.recover_txid);\n      if (pledgeInfoByTransactionID.result) {\n        const pledgeInfo = pledgeInfoByTransactionID.result;\n        if (pledgeInfo.state != 'PledgeStart' && pledgeInfo.state != 'PledgeProcess') {\n          this.recoverSteps.push({ msg: 'ERROR - Pledge already proccessed.'});\n          this.checkingTxid = 0;\n          return;\n        }\n      }\n\n      this.checkingTxid = 0;\n      this.recovering_txid = 1;\n      this.stakingForm.get('fromNEOWallet').setValue(txData.neoAddress);\n      this.stakingForm.get('toQLCWallet').setValue(txData.beneficial);\n      this.stakingForm.get('amounToStake').setValue(new BigNumber(txData.amount).dividedBy(Math.pow(10,8)).toNumber() );\n      this.stakingForm.get('endDate').setValue(txData.lockEnd);\n      this.recoverSteps.push({ msg: 'Checking possible stakings by amount locked.'});\n\n    } else {\n      if (txData.lockInfo == 'not_lock') {\n        this.recoverSteps.push({ msg: 'ERROR - TXID is not a lock.'});\n      }\n      if (txData.lockInfo == 'not_txid') {\n        this.recoverSteps.push({ msg: 'ERROR - TXID not found, try again after a few blocks.'});\n      }\n      this.checkingTxid = 0;\n    }\n\n    return;\n   \n  }\n\n  private markFormGroupTouched(formGroup: FormGroup) {\n    (<any>Object).values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n\n      if (control.controls) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n\n  checkForm() {\n    this.markFormGroupTouched(this.stakingForm);\n    if (this.stakingForm.value.stakingType == 0) {\n      if (this.stakingForm.get('amounToStake').status == 'VALID' &&\n          this.stakingForm.get('durationInDays').status == 'VALID' &&\n          this.stakingForm.get('fromNEOWallet').status == 'VALID' &&\n          this.stakingForm.get('toQLCWallet').status == 'VALID' \n      ) {\n        this.step = 2;\n        window.scrollTo(0, 0);\n      } \n    } else if (this.stakingForm.value.stakingType == 1) {\n      if (this.stakingForm.get('amounToStake').status == 'VALID' &&\n          this.stakingForm.get('durationInDays').status == 'VALID' &&\n          this.stakingForm.get('fromNEOWallet').status == 'VALID' &&\n          this.stakingForm.get('toQLCWallet').status == 'VALID' \n      ) {\n        this.step = 2;\n        window.scrollTo(0, 0);\n      }\n    }\n    if (this.stakingForm.status === 'VALID' && this.invalidTokenSymbol == 0 && this.invalidTokenName == 0 ) {\n      this.step = 2;\n      window.scrollTo(0, 0);\n    }\n  }\n\n  invokeNewStaking() {\n    this.loadBalances();\n    this.step = 1;\n    window.scrollTo(0, 0);\n  }\n  \n\n  async checkTokenSymbol() {\n    const tokensResult = await this.api.tokens();\n    if (tokensResult.result) {\n      const tokens = tokensResult.result;\n      const findToken = tokens.find((token) => String(token.tokenSymbol).toLowerCase() ==  String(this.stakingForm.value.tokenSymbol).toLowerCase());\n      if (findToken) {\n        this.invalidTokenSymbol = 1;\n      } else {\n        this.invalidTokenSymbol = 0;\n      }\n    }\n  }\n\n  async checkTokenName() {\n    const tokensResult = await this.api.tokens();\n    if (tokensResult.result) {\n      const tokens = tokensResult.result;\n      const findToken = tokens.find((token) => String(token.tokenName).toLowerCase() ==  String(this.stakingForm.value.tokenName).toLowerCase());\n      if (findToken) {\n        this.invalidTokenName = 1;\n      } else {\n        this.invalidTokenName = 0;\n      }\n    }\n  }\n\n  async sendSecurityCode() {\n    this.sendingSecurityCode = 1;\n    const confirm = await this.confidantApi.sendSecurityCode(this.stakingForm.value.email_address);\n    this.sendingSecurityCode = 2;\n  }\n\n  async checkSecurityCode() {\n    this.confidantConfirmed = 3;\n    const confirm = await this.confidantApi.checkSecurityCode(this.stakingForm.value.email_address,this.stakingForm.value.security_code);\n    this.confidants = [];\n    if (confirm.valid == 1) {\n      this.confidantConfirmed = 1;\n      this.confidants = confirm.mac_addresses;\n    } else {\n      this.confidantConfirmed = 2;\n    }\n\n  }\n\n  \n\n  loadLang() {\n\t\tthis.trans.get('SERVICE_WARNINGS_QLC_SERVICE.msg3').subscribe((res: string) => {\n\t\t\tthis.msg3 = res;\n\t\t});\n  }\n  \n  back() {\n    this.step = 1;\n    window.scrollTo(0, 0);\n    this.macaddresses = [];\n\n  }\n\n  async loadBalances() {\n\t\tfor (let i = 0; i < this.neowallets.length; i++) {\n\t\t\tthis.neowallets[i].balances = [];\n      this.neowallets[i].addressBookName = this.addressBookService.getAccountName(this.neowallets[i].id);\n\n      const balance:any = await this.neoService.getNeoScanBalance(this.neowallets[i].id);\n\n      for (const asset of balance) {\n\t\t\t\tthis.neowallets[i].balances[asset.asset_hash] = { \n\t\t\t\t\tamount : new BigNumber(asset.amount).toFixed(),\n\t\t\t\t\tasset: asset.asset,\n\t\t\t\t\tasset_symbol: asset.asset_symbol,\n\t\t\t\t\tasset_hash: asset.asset_hash\n\t\t\t\t}\n\t\t\t}\n      \n      /*\n\t\t\tconst balance:any = await this.neoService.getBalance(this.neowallets[i].id);\n\t\t\tfor (const asset of balance.assetSymbols) {\n\t\t\t\tthis.neowallets[i].balances[asset] = new BigNumber(balance.assets[asset].balance).toFixed();\n      }\n\t\t\tfor (const token of balance.tokenSymbols) {\n\t\t\t\tlet newTokenBalance = new BigNumber(balance.tokens[token]).toFixed();\n\t\t\t\tif (newTokenBalance == 'NaN')\n\t\t\t\t\tnewTokenBalance = '0';\n        this.neowallets[i].balances[token] = newTokenBalance;\n\t\t\t}*/\n    }\n    this.selectAccount();\n    this.setDuration();\n  }\n  \n  selectAccount() {\n\t\tif (this.stakingForm.value.fromNEOWallet == '') {\n      console.log('neowallets',this.neowallets)\n      if (this.neowallets[0] != undefined && this.neowallets[0].id != undefined) {\n        this.stakingForm.get('fromNEOWallet').setValue(this.neowallets[0].id);\n        \n      }\n    }\n    if (this.stakingForm.value.toQLCWallet == '') {\n      console.log('qlcwallets',this.accounts)\n      if (this.accounts[0] != undefined && this.accounts[0].id != undefined) {\n        this.stakingForm.get('toQLCWallet').setValue(this.accounts[0].id);\n      }\n    }\n\n    const selectedNEOWallet = this.neowallets.find(a => a.id === this.stakingForm.value.fromNEOWallet);\n\n    this.stakingForm.get('availableQLCBalance').setValue((selectedNEOWallet.balances[this.neoService.tokenList['QLC'].networks['1'].hash] != undefined? selectedNEOWallet.balances[this.neoService.tokenList['QLC'].networks['1'].hash].amount : 0));\n        \n    this.checkIfMinAmount();\n  }\n\n  checkIfMinAmount() {\n    const minAmount = this.stakingForm.value.stakingType == 1 ? this.stakingTypes[this.stakingForm.value.stakingType].minAmount*this.macaddresses.length : this.stakingTypes[this.stakingForm.value.stakingType].minAmount;\n    if (this.stakingForm.value.amounToStake < minAmount) {\n      this.stakingForm.get('amounToStake').setValue(minAmount);\n    }\n    if (new BigNumber(this.stakingForm.value.amounToStake).isGreaterThan(new BigNumber(this.stakingForm.value.availableQLCBalance))) {\n      this.stakingForm.get('amounToStake').setValue(new BigNumber(this.stakingForm.value.availableQLCBalance).integerValue(BigNumber.ROUND_FLOOR));\n    }\n    this.stakingForm.get('amounToStake').markAsTouched();\n  }\n\n  async addMacAdd(mac_address) {\n    const findMacAddress = await this.macaddresses.findIndex(o => o.mac_address === mac_address);\n    if (findMacAddress != -1) {\n      await this.macaddresses.splice(findMacAddress,1);\n    } else {\n      const findConfidant = await this.confidants.find(o => o.mac_address === mac_address);\n      this.macaddresses.push(findConfidant);\n    }\n    \n    this.stakingForm.get('amounToStake').setValue(this.stakingTypes[this.stakingForm.value.stakingType].minAmount*this.macaddresses.length);\n    this.stakingForm.get('amounToStake').setValidators([\n      Validators.required,\n      Validators.pattern('[1-9][0-9]*'),\n      Validators.maxLength(40),\n      Validators.minLength(1),\n      minAmountValidator(this.stakingTypes[Number(this.stakingForm.value.stakingType)].minAmount*this.macaddresses.length)\n    ]);\n    this.checkIfMinAmount();\n  }\n  \n  setDuration() {\n    this.stakingForm.get('amounToStake').setValidators([\n      Validators.required,\n      Validators.pattern('[1-9][0-9]*'),\n      Validators.maxLength(40),\n      Validators.minLength(1),\n      minAmountValidator(this.stakingTypes[Number(this.stakingForm.value.stakingType)].minAmount)\n    ]);\n    let now = new Date();\n    if (this.stakingForm.value.durationInDays == '') {\n      this.stakingForm.get('durationInDays').setValue(this.stakingTypes[this.stakingForm.value.stakingType].minTime);\n      this.stakingForm.get('amounToStake').setValue(this.stakingTypes[this.stakingForm.value.stakingType].minAmount);\n    }\n    //if (this.stakingForm.value.durationInDays<this.stakingTypes[this.stakingForm.value.stakingType].minTime) {\n      this.stakingForm.get('durationInDays').setValue(this.stakingTypes[this.stakingForm.value.stakingType].minTime);\n    //}\n    //if (this.stakingForm.value.amounToStake<this.stakingTypes[this.stakingForm.value.stakingType].minAmount) {\n      this.stakingForm.get('amounToStake').setValue(this.stakingTypes[this.stakingForm.value.stakingType].minAmount);\n    //}\n    this.checkIfMinAmount();\n    now.setDate(now.getDate() + Number(this.stakingForm.value.durationInDays));\n    this.stakingForm.get('endDate').setValue(now);\n  }\n\n  async confirmInvoke() {\n    const walletAccount = await this.walletService.getWalletAccount(this.stakingForm.value.toQLCWallet);\n\t\tif (this.walletService.walletIsLocked()) {\n\t\t\treturn this.notifications.sendWarning('ERROR wallet locked');\n    }\n    this.step = 3;\n    window.scrollTo(0, 0);\n    this.invokeSteps = [];\n    let txData;\n    if (this.recover == 1 && this.recovering_txid == 1) {\n      txData = await this.neoService.contractGetLockInfo(this.recoverForm.value.recover_txid);\n    } else {\n      this.invokeSteps.push({ msg: 'Locking '+ this.stakingForm.value.amounToStake +' QLC on NEO network.'});\n      txData = await this.contractLock();\n    }\n    if (txData === false) {\n      this.invokeSteps.push({ msg: 'ERROR - Wrong NEO Wallet password.'});\n      return;\n    } \n    if (txData.lockTxId == undefined) {\n      this.invokeSteps.push({ msg: 'ERROR - No TXID received. Please try again later.'});\n      return;\n    }\n    this.invokeSteps.push({ msg: 'TXID received. Preparing pledge.', checkimg: 1});\n    let pType = 'vote';\n    if (this.stakingForm.value.stakingType == 1) {\n      pType = 'network';\n    } else if(this.stakingForm.value.stakingType == 2) {\n      pType = 'mintage';\n    }\n    const pledgeResult = (pType == 'mintage') \n                            ? await this.getPrepareMintagePledge(txData)\n                            : await this.getPreparePledge(txData,pType)\n                            ;\n\n    this.invokeSteps.push({ msg: 'Pledge prepared. Waiting for TXID confirmation.', checkimg: 1});\n\n    \n\n    this.confirmInvokeWaitForTXIDConfirm(txData,walletAccount);\n\n    \n  }\n\n  async continueInvokeProccess() {\n\t\tif (this.walletService.walletIsLocked()) {\n\t\t\treturn this.notifications.sendError('ERROR - wallet locked');\n    }\n    this.invokeSteps = [];\n    const pledge = this.continueInvokePledge;\n    console.log(pledge);\n    const walletAccount = await this.walletService.getWalletAccount(pledge.beneficial);\n    this.step = 3;\n    window.scrollTo(0, 0);\n    this.invokeSteps.push({ msg: 'Continuing invoke.'});\n    this.invokeSteps.push({ msg: 'Checking TXID on NEO network.', checkimg: 1});\n\n    this.confirmInvokeWaitForTXIDConfirmByPledge(pledge,walletAccount);\n\n  }\n\n  async confirmInvokeWaitForTXIDConfirmByPledge(pledge,walletAccount) {\n    if (this.walletService.walletIsLocked()) {\n      this.step = 1;\n      window.scrollTo(0, 0);\n\t\t\treturn this.notifications.sendError('ERROR - wallet locked');\n    }\n    if (walletAccount == undefined || walletAccount.keyPair == undefined) {\n      this.recoverSteps = [];\n      this.recoverSteps.push({ msg: 'ERROR - Beneficial account \"' + pledge.beneficial + '\" not found.'});\n      this.continueInvokePledge = {};\n      this.continueInvoke = 0;\n      this.checkingTxid = 0;\n      this.step = 1;\n      window.scrollTo(0, 0);\n\t\t\treturn this.notifications.sendError('ERROR - Beneficial account not found');\n    }\n\n    const txid = pledge.nep5TxId;\n\n    const transaction = await this.neoService.getTransaction(txid);\n    //console.log('txid is ');\n    //console.log(txid);\n\n    const pType = pledge.pType;\n    \n    if (transaction.txid) {\n      const waitTimer = timer(20000).subscribe( async (data) => {\n      //console.log(transaction);\n      //console.log('txid confirmed');\n      this.invokeSteps.push({ msg: 'TXID confirmed. Preparing QLC Chain pledge.', checkimg: 1});\n\n      const pledgeResult = (pType == 'mintage') \n                            ? await this.nep5api.mintagePledge(txid)\n                            : await this.nep5api.benefitPledge(txid)\n                            ;\n\n      if (pledgeResult.error) {\n        if (pledgeResult.error.message == \"get lockinfo error: value is not lockinfo struct : map[type:ByteArray value:]\") {\n          this.invokeSteps.push({ msg: 'ERROR. TXID is not a lock.', checkimg: 1});\n        }\n        return;\n      }\n      if (!pledgeResult.result) {\n        this.invokeSteps.push({ msg: 'Pledge ERROR.', link: '/staking-create', linkText: 'Please use RECOVER to recover a failed TX.'});\n        /*console.log('pledgeResult error repeating');\n        const waitTimer = timer(5000).subscribe( (data) => {\n          this.confirmInvokeWaitForTXIDConfirm(pledge,walletAccount);\n        });*/\n        return;\n      }\n      const preparedPledge = pledgeResult.result;\n           \n      this.invokeSteps.push({ msg: 'Pledge prepared. Processing ...'});\n      const pledgetxid = await this.processBlock(preparedPledge,walletAccount.keyPair,txid);\n      \n      this.invokeSteps.push({ msg: 'Pledge succesfully processed. Txid on QLC Chain is: ' + pledgetxid.result, checkimg: 1 });\n      this.step = 4;\n      window.scrollTo(0, 0);\n      });\n    } else {\n      console.log('no txid yet ... repeating');\n      // wait for neoscan to confirm transaction\n      const waitTimer = timer(5000).subscribe( (data) => {\n        this.confirmInvokeWaitForTXIDConfirmByPledge(pledge,walletAccount);\n      });\n    }\n  }\n\n  async confirmInvokeWaitForTXIDConfirm(txData,walletAccount) {\n    if (this.walletService.walletIsLocked()) {\n      this.step = 1;\n      window.scrollTo(0, 0);\n\t\t\treturn this.notifications.sendWarning('ERROR wallet locked');\n    }\n    const txid = txData.lockTxId;\n    const transaction = await this.neoService.getTransaction(txid);\n    \n\n    let pType = 'vote';\n    if (this.stakingForm.value.stakingType == 1) {\n      pType = 'network';\n    } else if(this.stakingForm.value.stakingType == 2) {\n      pType = 'mintage';\n    }\n    \n    if (transaction.txid) {\n      const waitTimer = timer(20000).subscribe( async (data) => {\n        \n      this.invokeSteps.push({ msg: 'TXID confirmed. Preparing QLC Chain pledge.', checkimg: 1});\n\n      const pledgeResult = (pType == 'mintage') \n                            ? await this.nep5api.mintagePledge(txid)\n                            : await this.nep5api.benefitPledge(txid)\n                            ;\n\n      if (pledgeResult.error) {\n        if (pledgeResult.error.message == \"get lockinfo error: value is not lockinfo struct : map[type:ByteArray value:]\") {\n          this.invokeSteps.push({ msg: 'ERROR. TXID is not a lock.', checkimg: 1});\n        }\n        return;\n      }\n      if (!pledgeResult.result) {\n        console.log('pledgeResult error repeating');\n        const waitTimer = timer(5000).subscribe( (data) => {\n          this.confirmInvokeWaitForTXIDConfirm(txData,walletAccount);\n        });\n        return;\n      }\n      const pledge = pledgeResult.result;\n            \n      this.invokeSteps.push({ msg: 'Pledge prepared. Processing ...', checkimg: 1});\n      const pledgetxid = await this.processBlock(pledge,walletAccount.keyPair,txid);\n      \n      this.invokeSteps.push({ msg: 'Pledge succesfully processed. Txid on QLC Chain is: ' + pledgetxid.result, checkimg: 1 });\n      this.step = 4;\n      window.scrollTo(0, 0);\n      if (pType == 'network') {\n        const setMac = await this.confidantApi.confirmMacAddresses(this.stakingForm.value.email_address, this.stakingForm.value.security_code, this.macaddresses, this.stakingForm.value.toQLCWallet, this.stakingForm.value.fromNEOWallet, txid);\n        this.macaddresses = [];\n        this.checkSecurityCode();\n      }\n      });\n    } else {\n      console.log('no txid yet ... repeating');\n      // wait for neoscan to confirm transaction\n      const waitTimer = timer(5000).subscribe( (data) => {\n        this.confirmInvokeWaitForTXIDConfirm(txData,walletAccount);\n      });\n    }\n  }\n\n\n\n\n\n  async contractLock() {\n    const txData = await this.neoService.contractLock(this.stakingForm.value.fromNEOWallet,this.stakingForm.value.amounToStake,this.stakingForm.value.toQLCWallet,this.stakingForm.value.durationInDays);\n    if (txData === false) {\n      return false;\n    }\n    if (txData.lockTxId == undefined) {\n      return this.contractLock();\n    }\n    return txData;\n  }\n  \n  async getPreparePledge(txData,pType) {\n    const request1 = {\n      beneficial: txData.beneficial,\n      amount: txData.amount,\n      pType\n    }\n    const request2 = {\n      multiSigAddress: txData.multiSigAddress,\n      publicKey: txData.publicKey,\n      lockTxId: txData.lockTxId\n    }\n    const preparedPledge = await this.nep5api.prepareBenefitPledge(request1,request2);\n    if (!preparedPledge.result) {\n      return this.getPreparePledge(txData,pType);\n    } else {\n      return preparedPledge;\n    }\n  }\n\n  async getPrepareMintagePledge(txData) {\n    const request1 = {\n      beneficial: txData.beneficial,\n      tokenName: this.stakingForm.value.tokenName,\n      tokenSymbol: this.stakingForm.value.tokenSymbol,\n      totalSupply: this.stakingForm.value.tokenSupply,\n      decimals: Number(this.stakingForm.value.tokenDecimals)\n    }\n    const request2 = {\n      multiSigAddress: txData.multiSigAddress,\n      publicKey: txData.publicKey,\n      lockTxId: txData.lockTxId\n    }\n    const preparedPledge = await this.nep5api.prepareMintagePledge(request1,request2);\n    if (!preparedPledge.result) {\n      return this.getPrepareMintagePledge(txData);\n    } else {\n      return preparedPledge;\n    }\n  }\n\n\n  \n\n\n  async processBlock(block, keyPair, txid) {\n    const povFittest = await this.api.getFittestHeader();\n    if (povFittest.error || !povFittest.result) {\n      console.log('ERROR - no fittest header');\n      return;\n    }\n    block.poVHeight = povFittest.result.height;\n\t\tconst blockHash = await this.api.blockHash(block);\n\t\tconst signed = nacl.sign.detached(this.util.hex.toUint8(blockHash.result), keyPair.secretKey);\n\t\tconst signature = this.util.hex.fromUint8(signed);\n\n\t\tblock.signature = signature;\n\t\tlet generateWorkFor = block.previous;\n\t\tif (block.previous === this.zeroHash) {\n\t\t\tconst publicKey = await this.api.accountPublicKey(block.address);\n\t\t\tgenerateWorkFor = publicKey.result;\n\t\t}\n\n\t\tif (!this.workPool.workExists(generateWorkFor)) {\n\t\t\tthis.notifications.sendInfo(this.msg3);\n\t\t}\n\t\t//console.log('generating work');\n\t\tconst work = await this.workPool.getWork(generateWorkFor);\n\t\t//console.log('work >>> ' + work);\n    block.work = work;\n    \n    const processResponse = await this.nep5api.process(block,txid);\n    \n\t\tif (processResponse && processResponse.result) {\n\t\t\tthis.workPool.addWorkToCache(processResponse.result); // Add new hash into the work pool\n\t\t\tthis.workPool.removeFromCache(generateWorkFor);\n\t\t\treturn processResponse;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-staking-dashboard',\n  templateUrl: './staking-dashboard.component.html',\n  styleUrls: ['./staking-dashboard.component.scss']\n})\nexport class StakingDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-user-submenu></app-user-submenu>\n\n<!-- STAKING DASHBOARD -->\n<div class=\"container mt-4 mb-4 qlc-content-home qlc-after-submenu\">\n  <div class=\"row\">\n\n    <!-- TITLE -->\n    <div class=\"col-lg-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\">\n      <div class=\"content-title mb-4\">\n        <h1>My Stakings</h1>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-quicksend-qlc\" routerLink=\"/staking/qlc\" style=\"cursor: pointer;\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-purple\" style=\"padding-top:180px;\">\n            <div class=\"col-12\">01</div>\n          </div>\n          <div class=\"row qlc-table-row-purple\">\n            <div class=\"col-12 font-dash-menu\">QLC Staking</div>\n          </div>\n        </div>\n      </div>\n    </div>\n<!--\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-quicksend-chainx\" routerLink=\"/staking/chainx\" style=\"cursor: pointer;\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-chainx\" style=\"padding-top:180px;\">\n            <div class=\"col-12\">02</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12 font-dash-menu\">PCX Staking</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  -->    \n              \n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-staking-revoke',\n  templateUrl: './staking-revoke.component.html',\n  styleUrls: ['./staking-revoke.component.scss']\n})\nexport class StakingRevokeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-user-submenu></app-user-submenu>\n\n<div class=\"stake-screen-1\">\n\n\n\n\t<!-- LOADING -->\n\t<div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-12 pl-0 pr-0 pb-2\">\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<!-- TITLE -->\n\t\t\t\t\t\t\t<div class=\"col-md-9 col-12 mt-2 pl-md-2 pr-md-2\">\n\t\t\t\t\t\t\t\t<div class=\"content-title\">\n\t\t\t\t\t\t\t\t\t<h1>Revoking in progress</h1>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n  </div>\n  \n\n  <div class=\"container accounts\">\n\t\t<div class=\"row\">\n\n\t\t\t<!-- INFO -->\n\t\t\t<div class=\"col-12 pb-3\">\n\t\t\t\t\t<div class=\"container pl-0 pr-0\">\n\t\t\t\t\t\t<div class=\"row pl-0 pr-0\">\n\n\n\t\t\t\t\t\t<div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n\t\t\t\t\t\t\t<div class=\"content-box-white h-auto mt-2 pl-5 pr-5 text-center pt-5 pb-5\">\n\n                <h3>Please wait</h3>\n                <h5 class=\"pt-3\">The revoking process can take up to a couple of minutes.</h5>\n\n                <div class=\"container\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6 offset-md-3 mt-5 mb-5\">\n                      \n                      <div id=\"noTrespassingOuterBarG\">\n                        <div id=\"noTrespassingFrontBarG\" class=\"noTrespassingAnimationG\">\n                          <div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div>\n                          <div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div><div class=\"noTrespassingBarLineG\"></div>\n                        </div>\n                      </div>\n\n                    </div>\n                  </div>\n                </div>\n\n                <p style=\"color:#c10f0f;\"><strong>Important:</strong> Don't leave or close this page!</p>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n      </div>\n      \n\n\n\t\t</div>\n\t</div>\t\t\n\n\n\n</div>\n\n\n\n\n<!-- BREAK FOR SCREENSHOT ;) -->\n<div style=\"width:100%;height:1000px;display:block;\"></div>\n<!-- BREAK FOR SCREENSHOT ;) -->\n\n\n\n\n\n\n\n<div class=\"revoke-screen-2\">\n\n  <!-- COMPLETE -->\n  <div class=\"container mt-0 qlc-content-first qlc-content-home qlc-after-submenu\">\n    <div class=\"row\">\n      <div class=\"col-12 pl-0 pr-0 pb-2\">\n        <div class=\"container\">\n            <div class=\"row\">\n              <!-- TITLE -->\n              <div class=\"col-md-9 col-12 mt-2 pl-md-2 pr-md-2\">\n                <div class=\"content-title\">\n                  <h1>Revoking complete</h1>\n                </div>\n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n  </div>\n\n\n  <div class=\"container accounts\">\n    <div class=\"row\">\n\n      <!-- INFO -->\n      <div class=\"col-12 pb-3\">\n          <div class=\"container pl-0 pr-0\">\n            <div class=\"row pl-0 pr-0\">\n\n\n            <div class=\"col-12 pl-md-2 pr-md-2 pl-sm-2 pb-2 order-md-4 order-1 mb-0 mb-md-4\">\n              <div class=\"content-box-white h-auto mt-2 pl-5 pr-5 text-center pt-5 pb-5\">\n\n                <h3>Congratulations!</h3>\n                <h5 class=\"pt-3\">The revoking of your staking was successful.</h5>\n\n                <div class=\"container\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6 offset-md-3 mt-5 mb-4\">\n\n                      <img src=\"assets/img/qlc-icon-staking-success-green.svg\" style=\"height:128px;width:128px;\">\n\n                    </div>\n                  </div>\n                </div>\n\n                <p class=\"pt-3 mb-5\"><strong>QGAS will soon be rewarded to your wallet:</strong><br><a href=\"#\"></a></p>\n\n                <div class=\"container\">\n                    <div class=\"row\">\n                      <div class=\"col-md-4 offset-md-4 mb-4\">\n\n                        <button type=\"submit\" class=\"btn btn-primary\" style=\"min-width:100%;\">\n                          BACK TO MY STAKINGS\n                        </button>\n\n                      </div>\n                    </div>\n                  </div>\n\n                \n\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n\n    </div>\n  </div>\t\t\n\n\n</div>\n\n\n\n\n\n\n<!-- BREAK FOR SCREENSHOT ;) -->\n<div style=\"width:100%;height:1000px;display:block;\"></div>\n<!-- BREAK FOR SCREENSHOT ;) -->\n\n\n\n","<!-- ACCOUNTS -->\n<div class=\"container mt-0 mb-3 qlc-content-first\">\n  <div class=\"row\">\n    \n    <div class=\"col-12 pl-0 pr-0\">\n      \n      <!-- TITLE -->\n      <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>Tokens</h1>\n        </div>\n      </div>\n      \n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n        <div class=\"content-box-white\">\n          \n          \n          <div class=\"container\">\n            \n            <div class=\"row qlc-table-header\">\n                <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-3 col-5\">TOKEN NAME</div>\n                <div class=\"col-xl-1 col-lg-1 col-md-2 col-sm-1 col-2 d-none d-lg-block\">SYMBOL</div>\n                <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-5 col-2 d-none d-sm-block text-right\">TOTAL SUPPLY</div>\n                <div class=\"col-xl-1 col-lg-1 col-md-2 col-sm-1 col-2 d-none d-lg-block text-right\">Decimals</div>\n                <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-4 col-7 text-right\">Owner</div> \n            </div>\n            <div class=\"row qlc-table-row closed\" *ngFor=\"let token of tokens\">\n                <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-3 col-5\"><img src=\"assets/img/token-{{ token.image | lowercase }}.png\" class=\"table-token\"> {{ token.tokenName }}</div>\n                <div class=\"col-xl-1 col-lg-1 col-md-2 col-sm-1 col-2 d-none d-lg-block\">{{ token.tokenSymbol }}</div>\n                <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-5 col-2 d-none d-sm-block text-right\">{{ token.totalSupply | qlc:token.decimals | currency:'':'':'1.0-0' }}</div>\n                <div class=\"col-xl-1 col-lg-1 col-md-2 col-sm-1 col-2 d-none d-lg-block text-right\">{{ token.decimals }}</div>\n                <div class=\"d-none d-xl-block col-xl-6 text-right pr-4\">\n                  <a [routerLink]=\"'/account/' + token.owner\">{{ token.owner }}</a>\n                </div>\n                <div class=\"d-none d-lg-block d-xl-none col-lg-6 text-right pr-4\">\n                  <a [routerLink]=\"'/account/' + token.owner\">{{ token.owner | squeeze : '25,25' }}</a>\n                </div>\n                <div class=\"d-none d-md-block d-lg-none col-md-6 text-right pr-4\">\n                  <a [routerLink]=\"'/account/' + token.owner\">{{ token.owner | squeeze : '15,15' }}</a>\n                </div>\n                <div class=\"d-none d-sm-block d-md-none col-sm-4 text-right pr-4\">\n                  <a [routerLink]=\"'/account/' + token.owner\">{{ token.owner | squeeze : '8,8' }}</a>\n                </div>\n                <div class=\"d-block d-sm-none col-7 text-right pr-4\">\n                  <a [routerLink]=\"'/account/' + token.owner\">{{ token.owner | squeeze : '8,8' }}</a>\n                </div>\n\n              <div class=\"container transaction-details\"></div>\n            </div>\n          </div>\n          \n          \n        </div>\n      </div>\n      \n      \n      \n    </div>\n    \n  </div>\n</div>\n\n<div class=\"container mt-4 mb-4\">\n  <div class=\"row\">\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { timer } from 'rxjs';\nimport { ActivatedRoute, Router, ChildActivationEnd } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { NodeService } from 'src/app/services/node.service';\n\n@Component({\n  selector: 'app-tokens',\n  templateUrl: './tokens.component.html',\n  styleUrls: ['./tokens.component.scss']\n})\nexport class TokensComponent implements OnInit {\n\n  reloadTimer = null;\n  routerSub = null;\n\n  tokens = [];\n\n  constructor(\n\t\tprivate route: Router,\n\t\tprivate api: ApiService,\n    private node: NodeService) \n  { }\n\n  ngOnInit() {\n    this.routerSub = this.route.events.subscribe(event => {\n\t\t\tif (event instanceof ChildActivationEnd) {\n\t\t\t\tthis.load(); // Reload the state when navigating to itself from the transactions page\n\t\t\t}\n    });\n    this.load();\n  }\n\n  ngOnDestroy() {\n\t\tif (this.reloadTimer) {\n\t\t\tthis.reloadTimer.unsubscribe();\n    }\n    if (this.routerSub) {\n\t\t\tthis.routerSub.unsubscribe();\n\t\t}\n\t}\n\n  load() {\n\t\tif (this.node.status === true) {\n      this.loadTokens();\n\t\t} else {\n\t\t\tthis.reload();\n\t\t}\n\t}\n\n\tasync reload() {\n\t\tconst source = timer(200);\n\t\tthis.reloadTimer =  source.subscribe(async val => {\n\t\t\t\tthis.load();\n\t\t});\n\t} \n\n  async loadTokens() {\n    const tokens = await this.api.tokens();\n    const tokenMap = {};\n\n\t\tif (!tokens.error) {\n\t\t\ttokens.result.forEach(token => {\n        if (token.tokenSymbol != 'QLC' && token.tokenSymbol != 'QGAS') {\n          token.image = 'none';\n        } else {\n          token.image = token.tokenSymbol;\n        }\n\t\t\t\ttokenMap[token.tokenId] = token;\n\t\t\t});\n    }\n    if (!tokens.error && tokens.result) {\n      /*tokens.result.forEach(am => {\n        for (const token of am.tokens) {\n          if (tokenMap.hasOwnProperty(token.type)) {\n            token.tokenInfo = tokenMap[token.type];\n          }\n        }\n      })*/\n    }\n    \n\n    this.tokens = tokens.result;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-topwallets',\n  templateUrl: './topwallets.component.html',\n  styleUrls: ['./topwallets.component.scss']\n})\nexport class TopwalletsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<!-- TOP WALLETS -->\n<div class=\"container mt-0 mb-3 qlc-content-first\">\n  <div class=\"row\">\n    \n    <div class=\"col-12 pl-0 pr-0\">\n      \n      <!-- TITLE -->\n      <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>Top Wallets</h1>\n        </div>\n      </div>\n\n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n        <div class=\"content-box-white\">\n\n\n          <div class=\"container\">\n\n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-1 col-lg-1 col-md-1 col-sm-2 col-2 pl-4\">Rank</div>\n              <div class=\"col-xl-7 col-lg-7 col-md-6 col-sm-5 col-6 text-truncate\">Address</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-3 col-4 text-right\">Balance</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 d-none d-sm-block pr-4 text-right\">Supply</div>\n            </div>\n\n            <div class=\"row qlc-table-row closed\">\n              <div class=\"col-xl-1 col-lg-1 col-md-1 col-sm-2 col-2 pl-4\">1</div>\n              <div class=\"col-xl-7 col-lg-7 col-md-6 col-sm-5 col-6 text-truncate\"><a href=\"index_02_details_account.html\"><span class=\"text-blue\">Montnets1</span> - qlc_3sxmrax3ggd33rx6jdzxy5c4qadh847eyst8ffjq679d3or3snbah75aojet</a></div>\n              <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-3 col-4 text-right\"><span data-toggle=\"tooltip\" data-placement=\"top\" title=\"260,090.45 $\">1.250.000.00</span></div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 d-none d-sm-block pr-4 text-right\">16.21 %</div>\n              <div class=\"container transaction-details\"></div>\n                          </div>\n                          \n                          <div class=\"row qlc-table-row closed\">\n                              <div class=\"col-xl-1 col-lg-1 col-md-1 col-sm-2 col-2 pl-4\">2</div>\n                              <div class=\"col-xl-7 col-lg-7 col-md-6 col-sm-5 col-6 text-truncate\"><a href=\"index_02_details_account.html\"><span class=\"text-blue\">Montnets2</span> - qlc_t8ffjq679d3or33sxmrax3ggd33rx6jdzxy5c4qadh847eyssnbah75aojet</a></div>\n                              <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-3 col-4 text-right\"><span data-toggle=\"tooltip\" data-placement=\"top\" title=\"260,090.45 $\">998.000.00</span></div>\n                              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 d-none d-sm-block pr-4 text-right\">13.88 %</div>\n                              <div class=\"container transaction-details\"></div>\n                          </div>\n\n                          <div class=\"row qlc-table-row closed\">\n                              <div class=\"col-xl-1 col-lg-1 col-md-1 col-sm-2 col-2 pl-4\">3</div>\n                              <div class=\"col-xl-7 col-lg-7 col-md-6 col-sm-5 col-6 text-truncate\"><a href=\"index_02_details_account.html\">qlc_x6jdzxy5c4qadh847eyst3sxmrax3ggd33r8ffjq679d3or3snbah75aojet</a></div>\n                              <div class=\"col-xl-2 col-lg-2 col-md-3 col-sm-3 col-4 text-right\"><span data-toggle=\"tooltip\" data-placement=\"top\" title=\"260,090.45 $\">500.000.00</span></div>\n                              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-2 d-none d-sm-block pr-4 text-right\">9.95 %</div>\n                              <div class=\"container transaction-details\"></div>\n                          </div>\n\n\n          </div>\n\n\n        </div>\n      </div>\n\n      <!-- PAGINATION SAMPLE -->\n      <div class=\"col-lg-12 mb-0 mt-2 pl-md-2 pr-md-2 text-center\">\n                  <a href=\"#\" class=\"btn btn-primary btn-white btn-box active\">1</a>\n                  <a href=\"#\" class=\"btn btn-primary btn-white btn-box\">2</a>\n                  <a href=\"#\" class=\"btn btn-primary btn-white btn-box\">3</a>\n                  <a href=\"#\" class=\"btn btn-primary btn-white btn-box\">4</a>\n                  <a href=\"#\" class=\"btn btn-primary btn-white btn-box\">5</a>\n                  &nbsp;...&nbsp;\n                  <a href=\"#\" class=\"btn btn-primary btn-white btn-box\">160</a>\n                  <a href=\"#\" class=\"btn btn-primary btn-blue btn-box\">&gt;</a>\n              </div>\n              \n    </div>\n    \n  </div>\n</div>","<!-- TRANSACTION DETAILS -->\n<div class=\"container mt-4 mb-2 qlc-content-home\">\n  <div class=\"row\">\n\n    <!-- TITLE -->\n    <div class=\"col-lg-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\">\n      <div class=\"content-title\">\n        <h1>Transaction details</h1>\n      </div>\n    </div>\n\n          <!-- TX HASH -->\n    <div class=\"col-lg-12 col-md-12 col-sm-12 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-blue\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\">\n            <div class=\"col-12\">Transaction hash</div>\n          </div>\n          <div class=\"row qlc-table-row-blue row-text-mid mt-3 mb-3\">\n            <div class=\"col-12 text-break\">{{ transactionHash }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n          \n          <!-- FROM TO -->\n          <div class=\"col-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\" *ngIf=\"transaction\">\n              <div class=\"content-box-white\">\n                  <div class=\"container transaction-details open\">\n                      <div class=\"row\">\n                          <div class=\"col-lg-6 text-center pt-4 pb-4\">\n                              <div class=\"text-label pb-0\">Sent from</div>\n                                <div class=\"d-none d-xl-block pl-5 pr-5 pt-2 pb-2\">\n                                  <a routerLink=\"/account/{{ transaction.address }}\">{{ transaction.address | squeeze : '25,25' }}</a>\n                                </div>\n                                <div class=\"d-none d-lg-block d-xl-none pl-5 pr-5 pt-2 pb-2\">\n                                    <a routerLink=\"/account/{{ transaction.address }}\">{{ transaction.address | squeeze : '18,18' }}</a>\n                                </div>\n                                <div class=\"d-none d-md-block d-lg-none pl-5 pr-5 pt-2 pb-2\">\n                                    <a routerLink=\"/account/{{ transaction.address }}\">{{ transaction.address | squeeze : '20,20' }}</a>\n                                </div>\n                                <div class=\"d-none d-sm-block d-md-none pl-5 pr-5 pt-2 pb-2\">\n                                    <a routerLink=\"/account/{{ transaction.address }}\">{{ transaction.address | squeeze : '15,15' }}</a>\n                                </div>\n                                <div class=\"d-block d-sm-none pl-5 pr-5 pt-2 pb-2\">\n                                    <a routerLink=\"/account/{{ transaction.address }}\">{{ transaction.address | squeeze : '12,12' }}</a>\n                                </div>\n                              <!--<div class=\"text-color-red pt-0 text-bold\">-17.481 QN1</div>-->\n                          </div>\n                          <div class=\"col-lg-6 text-center pt-4 pb-4\">\n                              <div class=\"text-label pb-0\">Sent to</div>\n                              <div class=\"d-none d-xl-block pl-5 pr-5 pt-2 pb-2\">\n                                <a routerLink=\"/account/{{ transaction.link_as_account }}\">{{ transaction.link_as_account | squeeze : '25,25' }}</a>\n                              </div>\n                              <div class=\"d-none d-lg-block d-xl-none pl-5 pr-5 pt-2 pb-2\">\n                                  <a routerLink=\"/account/{{ transaction.link_as_account }}\">{{ transaction.link_as_account | squeeze : '18,18' }}</a>\n                              </div>\n                              <div class=\"d-none d-md-block d-lg-none pl-5 pr-5 pt-2 pb-2\">\n                                  <a routerLink=\"/account/{{ transaction.link_as_account }}\">{{ transaction.link_as_account | squeeze : '20,20' }}</a>\n                              </div>\n                              <div class=\"d-none d-sm-block d-md-none pl-5 pr-5 pt-2 pb-2\">\n                                  <a routerLink=\"/account/{{ transaction.link_as_account }}\">{{ transaction.link_as_account | squeeze : '15,15' }}</a>\n                              </div>\n                              <div class=\"d-block d-sm-none pl-5 pr-5 pt-2 pb-2\">\n                                  <a routerLink=\"/account/{{ transaction.link_as_account }}\">{{ transaction.link_as_account | squeeze : '12,12' }}</a>\n                              </div>\n                              <!--<div class=\"text-color-green pt-0 text-bold\">+17.481 QN1</div>-->\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n        \n  </div>\n  </div>\n\n\n  <!-- MAIN INFO / SEND -->\n  <div class=\"container\" *ngIf=\"transaction && transaction.type == 'Send'\">\n      <div class=\"row\">\n          \n          <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n              <div class=\"content-box-red bg-type-send\">\n                  <div class=\"container\">\n                      <div class=\"row qlc-table-header-red\">\n                          <div class=\"col-12\">Type</div>\n                      </div>\n                      <div class=\"row qlc-table-row-blue row-text-mid mt-3 mb-3\">\n                          <div class=\"col-12\">State Send</div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n\n          <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n              <div class=\"content-box-red\">\n                  <div class=\"container\">\n                      <div class=\"row qlc-table-header-red\">\n                          <div class=\"col-12\">Amount</div>\n                      </div>\n                      <div class=\"row qlc-table-row-blue row-text-mid mt-3 mb-3\">\n                          <div class=\"col-12\">{{ transaction.amount | qlc: transaction.tokenInfo.decimals }}</div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n\n          <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n              <div class=\"content-box-blue\">\n                  <div class=\"container\">\n                      <div class=\"row qlc-table-header-blue\">\n                          <div class=\"col-12\">Token</div>\n                      </div>\n                      <div class=\"row qlc-table-row-blue row-text-mid mt-3 mb-3\">\n                          <div class=\"col-12\">{{ transaction.tokenName }}</div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n\n          <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n              <div class=\"content-box-blue\">\n                  <div class=\"container\">\n                      <div class=\"row qlc-table-header-blue\">\n                          <div class=\"col-12\">Date/time</div>\n                      </div>\n                      <div class=\"row qlc-table-row-blue row-text-mid mt-3 mb-3\">\n                          <div class=\"col-12\">{{ transaction.timestamp * 1000 | date: 'short' }}</div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n                  \n      </div>\n  </div>\n\n\n  <!-- MAIN INFO / RECEIVE -->\n  <div class=\"container\" *ngIf=\"transaction && transaction.type == 'Receive'\">\n      <div class=\"row\">\n          \n          <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n              <div class=\"content-box-green bg-type-receive\">\n                  <div class=\"container\">\n                      <div class=\"row qlc-table-header-green\">\n                          <div class=\"col-12\">Type</div>\n                      </div>\n                      <div class=\"row qlc-table-row-blue row-text-mid mt-3 mb-3\">\n                          <div class=\"col-12\">State Receive</div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n\n          <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n              <div class=\"content-box-green\">\n                  <div class=\"container\">\n                      <div class=\"row qlc-table-header-green\">\n                          <div class=\"col-12\">Amount</div>\n                      </div>\n                      <div class=\"row qlc-table-row-blue row-text-mid mt-3 mb-3\">\n                          <div class=\"col-12\">{{ transaction.amount | qlc: transaction.tokenInfo.decimals }}</div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n\n          <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n              <div class=\"content-box-blue\">\n                  <div class=\"container\">\n                      <div class=\"row qlc-table-header-blue\">\n                          <div class=\"col-12\">Token</div>\n                      </div>\n                      <div class=\"row qlc-table-row-blue row-text-mid mt-3 mb-3\">\n                          <div class=\"col-12\">{{ transaction.tokenName }}</div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n\n          <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n              <div class=\"content-box-blue\">\n                  <div class=\"container\">\n                      <div class=\"row qlc-table-header-blue\">\n                          <div class=\"col-12\">Date/time</div>\n                      </div>\n                      <div class=\"row qlc-table-row-blue row-text-mid mt-3 mb-3\">\n                          <div class=\"col-12\">{{ transaction.timestamp * 1000 | date: 'short' }}</div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n                  \n      </div>\n  </div>\n\n\n  <!-- MAIN INFO / CHANGE -->\n  <div class=\"container\" *ngIf=\"transaction && transaction.type == 'Change'\">\n      <div class=\"row\">\n          \n          <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n              <div class=\"content-box-darkblue bg-type-change\">\n                  <div class=\"container\">\n                      <div class=\"row qlc-table-header-blue\">\n                          <div class=\"col-12\">Type</div>\n                      </div>\n                      <div class=\"row qlc-table-row-blue row-text-mid mt-3 mb-3\">\n                          <div class=\"col-12\">{{ transaction.type }}</div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n\n          <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n              <div class=\"content-box-darkblue\">\n                  <div class=\"container\">\n                      <div class=\"row qlc-table-header-blue\">\n                          <div class=\"col-12\">Amount</div>\n                      </div>\n                      <div class=\"row qlc-table-row-blue row-text-mid mt-3 mb-3\">\n                          <div class=\"col-12\">{{ transaction.amount | qlc: transaction.tokenInfo.decimals }}</div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n\n          <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n              <div class=\"content-box-blue\">\n                  <div class=\"container\">\n                      <div class=\"row qlc-table-header-blue\">\n                          <div class=\"col-12\">Token</div>\n                      </div>\n                      <div class=\"row qlc-table-row-blue row-text-mid mt-3 mb-3\">\n                          <div class=\"col-12\">{{ transaction.tokenName }}</div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n\n          <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n              <div class=\"content-box-blue\">\n                  <div class=\"container\">\n                      <div class=\"row qlc-table-header-blue\">\n                          <div class=\"col-12\">Date/time</div>\n                      </div>\n                      <div class=\"row qlc-table-row-blue row-text-mid mt-3 mb-3\">\n                          <div class=\"col-12\">{{ transaction.timestamp * 1000 | date: 'short' }}</div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n                  \n      </div>\n  </div>\n\n\n<!-- MAIN INFO / OPEN -->\n<div class=\"container\" *ngIf=\"transaction && transaction.type == 'Open'\">\n    <div class=\"row\">\n        \n        <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n            <div class=\"content-box-purple bg-type-open\">\n                <div class=\"container\">\n                    <div class=\"row qlc-table-header-purple\">\n                        <div class=\"col-12\">Type</div>\n                    </div>\n                    <div class=\"row qlc-table-row-purple row-text-mid mt-3 mb-3\">\n                        <div class=\"col-12\">{{ transaction.type }}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n            <div class=\"content-box-purple\">\n                <div class=\"container\">\n                    <div class=\"row qlc-table-header-purple\">\n                        <div class=\"col-12\">Amount</div>\n                    </div>\n                    <div class=\"row qlc-table-row-purple row-text-mid mt-3 mb-3\">\n                        <div class=\"col-12\">{{ transaction.amount | qlc: transaction.tokenInfo.decimals }}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n            <div class=\"content-box-blue\">\n                <div class=\"container\">\n                    <div class=\"row qlc-table-header-blue\">\n                        <div class=\"col-12\">Token</div>\n                    </div>\n                    <div class=\"row qlc-table-row-blue row-text-mid mt-3 mb-3\">\n                        <div class=\"col-12\">{{ transaction.tokenName }}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n            <div class=\"content-box-blue\">\n                <div class=\"container\">\n                    <div class=\"row qlc-table-header-blue\">\n                        <div class=\"col-12\">Date/time</div>\n                    </div>\n                    <div class=\"row qlc-table-row-blue row-text-mid mt-3 mb-3\">\n                        <div class=\"col-12\">{{ transaction.timestamp * 1000 | date: 'short' }}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n                \n    </div>\n</div>\n\n\n<!-- RAW DATA BLOCKS -->\n\n<div class=\"container mt-0\" *ngIf=\"transaction\">\n  <div class=\"row equal\">\n    \n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-white sub-page\">\n            <div class=\"col-12\">Representative</div>\n          </div>\n          <div class=\"row qlc-table-row-white sub-page pb-1\">\n            <div class=\"col-12 text-wrap pb-4\"><a routerLink=\"/account/{{ transaction.representative }}\">{{ transaction.representative }}</a></div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-white\">\n        <div class=\"container\">\n                      <div class=\"row qlc-table-header-white sub-page\">\n                          <div class=\"col-12\">WORK</div>\n                      </div>\n                      <div class=\"row qlc-table-row-white sub-page pb-1\">\n                          <div class=\"col-12 text-wrap pb-4\">{{ transaction.work }}</div>\n                      </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-white\">\n                  <div class=\"container\">\n                      <div class=\"row qlc-table-header-white sub-page\">\n                          <div class=\"col-12\">SIGNATURE</div>\n                      </div>\n                      <div class=\"row qlc-table-row-white sub-page pb-1\">\n                          <div class=\"col-12 text-wrap pb-4\">{{ transaction.signature }}</div>\n                      </div>\n                  </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-white\">\n                  <div class=\"container\">\n                      <div class=\"row qlc-table-header-white sub-page\">\n                          <div class=\"col-12\">PREVIOUS</div>\n                      </div>\n                      <div class=\"row qlc-table-row-white sub-page pb-1\">\n                          <div class=\"col-12 text-wrap pb-4\"><a routerLink=\"/transaction/{{ transaction.previous }}\">{{ transaction.previous }}</a></div>\n                      </div>\n                  </div>\n      </div>\n    </div>\n    \n  </div>\n  </div>\n  \n  <!-- RAW BLOCK -->    \n  <div class=\"container mt-0\" *ngIf=\"transaction\">\n      <div class=\"row equal\">\n\n          <div class=\"col-12 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n              <div class=\"content-box-white\">\n                  <div class=\"container\">\n                      <div class=\"row qlc-table-header-white sub-page\">\n                          <div class=\"col-12\">Raw Block Data</div>\n                      </div>\n                      <div class=\"row qlc-table-row-white sub-page\">\n                          <div class=\"col-12\">\n                              <code><pre>{{ transactionJSON }}</pre></code>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n<!-- RAW BLOCK -->    \n<div class=\"container mt-0\" *ngIf=\"!transaction\">\n    <div class=\"row equal\">\n\n        <div class=\"col-12 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n            <div class=\"content-box-white\">\n                <div class=\"container\">\n                    <div class=\"row qlc-table-header-white sub-page\">\n                        <div class=\"col-12\">Transaction not found</div>\n                    </div>\n                    <div class=\"row qlc-table-row-white sub-page\">\n                        <div class=\"col-12\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container mt-4 mb-4\">\n  <div class=\"row\">\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ChildActivationEnd, ActivatedRoute } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { timer } from 'rxjs';\nimport { NodeService } from 'src/app/services/node.service';\n\n@Component({\n  selector: 'app-transaction',\n  templateUrl: './transaction.component.html',\n  styleUrls: ['./transaction.component.scss']\n})\nexport class TransactionComponent implements OnInit {\n\n\n  transaction: any = {};\n  pendingBlocks = [];\n  pageSize = 25;\n\n  accountMeta: any = {};\n  transactionHash = '';\n  transactionJSON = '';\n\n  routerSub = null;\n\n\n  constructor(\n    private router: ActivatedRoute,\n    private route: Router,\n    private api: ApiService,\n    private node: NodeService\n  ) { }\n\n  async ngOnInit() {\n    this.routerSub = this.route.events.subscribe(event => {\n      if (event instanceof ChildActivationEnd) {\n        this.load(); // Reload the state when navigating to itself from the transactions page\n      }\n    });\n    this.load();\n  }\n\n  ngOnDestroy() {\n\t\tif (this.routerSub) {\n\t\t\tthis.routerSub.unsubscribe();\n\t\t}\n\t}\n\n  load() {\n    if (this.node.status === true) {\n      this.loadTransactionDetails();\n    } else {\n      this.reload();\n    }\n  }\n\n  async reload() {\n    const source = timer(200);\n    const abc = source.subscribe(async val => {\n      this.load();\n    });\n  }\n\n  async loadTransactionDetails() {\n    this.transactionHash = this.router.snapshot.params.transaction;\n\n    const tokenMap = {};\n    const tokens = await this.api.tokens();\n    if (!tokens.error) {\n      tokens.result.forEach(token => {\n        tokenMap[token.tokenId] = token;\n      });\n    }\n\n    const transaction = await this.api.blocksInfo([this.transactionHash]);\n\n    this.transaction = transaction.result[0];\n    //console.log(this.transaction);\n    this.transactionJSON = JSON.stringify(this.transaction, null, 4);\n\n    if (tokenMap.hasOwnProperty(this.transaction.token)) {\n      this.transaction.tokenInfo = tokenMap[this.transaction.token];\n    }\n\n    if (this.transaction.type === 'Online' || this.transaction.type === 'Change') {\n      this.transaction.link_as_account = this.transaction.address;\n    } else if (this.transaction.type == 'Open' || this.transaction.type == 'ContractReward' || this.transaction.type == 'Receive') { // link is block hash\n      const link_as_account = await this.api.blockAccount(this.transaction.link);\n      if (!link_as_account.error && typeof (link_as_account.result[0]) != 'undefined' && link_as_account.result.length > 0) {\n        this.transaction.link_as_account = this.transaction.address;\n        this.transaction.address = link_as_account.result;\n      }\n    } else { // link is pub key\n      const link_as_account = await this.api.accountForPublicKey(this.transaction.link);\n      if (!link_as_account.error && typeof (link_as_account.result[0]) != 'undefined' && link_as_account.result.length > 0) {\n        this.transaction.link_as_account = link_as_account.result;\n      }\n    }\n\n  }\n\n\n\n}\n","<!-- LATEST TRANSACTIONS -->\n<div class=\"container mt-0 mb-3 qlc-content-first\">\n  <div class=\"row\">\n    \n    <div class=\"col-12 pl-0 pr-0\">\n      \n      <!-- TITLE -->\n      <div class=\"col-lg-12 mb-3 mt-2 pl-md-2 pr-md-2\">\n        <div class=\"content-title\">\n          <h1>Latest Transactions</h1>\n          <h1 *ngIf=\"this.account != null && this.account != ''\">{{ this.account }}</h1>\n        </div>\n      </div>\n      \n      <!-- LIST -->\n      <div class=\"col-lg-12 mb-4 pl-md-2 pr-md-2\">\n        <div class=\"content-box-white\">\n          \n          \n          <div class=\"container\">\n            \n            <div class=\"row qlc-table-header\">\n              <div class=\"col-xl-2 col-lg-3 col-md-2 col-sm-2 col-2 d-none d-sm-block pl-4\">Type</div>\n              <div class=\"col-xl-6 col-lg-5 col-md-5 col-sm-6 col-6 d-none d-sm-block text-truncate\">Address / Transaction ID</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-3 pr-md-0 col-sm-4 d-none d-sm-block col-4 pr-sm-4 pr-4 text-right\">Amount</div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-3 d-none d-md-block col-6 pr-4 text-right\">Time</div>\n\n              <div class=\"col-12 pl-4 d-block d-sm-none\">Type / Address / Tx ID / Amount</div>\n            </div>\n            \n            <div class=\"row qlc-table-row qlc-table-row-twolines closed\" *ngFor=\"let transaction of transactions\">\n              <div class=\"col-xl-2 col-lg-3 col-md-2 col-sm-2 col-2 pl-4 pb-0\">\n                <span class=\"qlc-icon icon-{{ transaction.type }}\" title=\"{{ transaction.type }}\"></span>\n                <span class=\"d-none d-sm-none d-md-inline-block txState\">\n                  <span class=\"text-color-lightgrey\">State</span><br>\n                  <span class=\"text-bold-grey\">{{ transaction.type }}</span>\n                </span>\n              </div>\n              <div class=\"d-none d-xl-block col-xl-6 pb-0\">\n                <span class=\"text-color-lightgrey text-tiny\">{{transaction.type == 'Send' || transaction.type == 'ContractSend' ? 'To' : 'From'}}: </span> \n                <a [routerLink]=\"'/account/' + (transaction.link_as_account || transaction.address)\">{{ transaction.link_as_account || transaction.address }}</a><br>\n                <span class=\"text-color-lightgrey text-tiny\">Hash: </span> \n                <a [routerLink]=\"'/transaction/' + transaction.hash\"><span>{{ transaction.hash }}</span></a><br>\n                <span *ngIf=\"transaction.povConfirmHeight > 0\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm height: </span> \n                  <a [routerLink]=\"'/pov/height/' + transaction.povConfirmHeight\">{{ transaction.povConfirmHeight }}</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm count: </span> {{ transaction.povConfirmCount }}\n                </span>\n              </div>\n              <div class=\"d-none d-lg-block d-xl-none col-lg-5 pb-0\">\n                <span class=\"text-color-lightgrey text-tiny\">{{transaction.type == 'Send' || transaction.type == 'ContractSend' ? 'To' : 'From'}}: </span> \n                <a [routerLink]=\"'/account/' + (transaction.link_as_account || transaction.address)\">{{ transaction.link_as_account || transaction.address | squeeze : '22,22' }}</a><br>\n                <span class=\"text-color-lightgrey text-tiny\">Hash: </span> \n                <a [routerLink]=\"'/transaction/' + transaction.hash\"><span>{{ transaction.hash | squeeze : '22,22' }}</span></a><br>\n                <span *ngIf=\"transaction.povConfirmHeight > 0\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm height: </span> \n                  <a [routerLink]=\"'/pov/height/' + transaction.povConfirmHeight\">{{ transaction.povConfirmHeight }}</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm count: </span> {{ transaction.povConfirmCount }}\n                </span>\n              </div>\n              <div class=\"d-none d-md-block d-lg-none col-md-6 pb-0\">\n                <span class=\"text-color-lightgrey text-tiny\">{{transaction.type == 'Send' || transaction.type == 'ContractSend' ? 'To' : 'From'}}: </span> \n                <a [routerLink]=\"'/account/' + (transaction.link_as_account || transaction.address)\">{{ transaction.link_as_account || transaction.address | squeeze : '20,20' }}</a><br>\n                <span class=\"text-color-lightgrey text-tiny\">Hash: </span> \n                <a [routerLink]=\"'/transaction/' + transaction.hash\"><span>{{ transaction.hash | squeeze : '19,19' }}</span></a><br>\n                <span *ngIf=\"transaction.povConfirmHeight > 0\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm height: </span> \n                  <a [routerLink]=\"'/pov/height/' + transaction.povConfirmHeight\">{{ transaction.povConfirmHeight }}</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm count: </span> {{ transaction.povConfirmCount }}\n                </span>\n              </div>\n              <div class=\"d-none d-sm-block d-md-none col-sm-6 pb-0\">\n                <span class=\"text-color-lightgrey text-tiny\">{{transaction.type == 'Send' || transaction.type == 'ContractSend' ? 'To' : 'From'}}: </span> \n                <a [routerLink]=\"'/account/' + (transaction.link_as_account || transaction.address)\">{{ transaction.link_as_account || transaction.address | squeeze : '13,13' }}</a><br>\n                <span class=\"text-color-lightgrey text-tiny\">Hash: </span> \n                <a [routerLink]=\"'/transaction/' + transaction.hash\"><span>{{ transaction.hash | squeeze : '12,12' }}</span></a><br>\n                <span *ngIf=\"transaction.povConfirmHeight > 0\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm height: </span> \n                  <a [routerLink]=\"'/pov/height/' + transaction.povConfirmHeight\">{{ transaction.povConfirmHeight }}</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm count: </span> {{ transaction.povConfirmCount }}\n                </span>\n              </div>\n              <div class=\"d-block d-sm-none col-10 pb-0\">\n                <span class=\"text-color-lightgrey text-tiny\">{{transaction.type == 'Send' || transaction.type == 'ContractSend' ? 'To' : 'From'}}: </span> \n                <a [routerLink]=\"'/account/' + (transaction.link_as_account || transaction.address)\">{{ transaction.link_as_account || transaction.address | squeeze : '12,12' }}</a><br>\n                <span class=\"text-color-lightgrey text-tiny\">Hash: </span> \n                <a [routerLink]=\"'/transaction/' + transaction.hash\"><span>{{ transaction.hash | squeeze : '10,10' }}</span></a><br>\n                <span class=\"text-color-lightgrey text-tiny\">Amount: </span> \n                <span class=\"{{ transaction.type == 'Send' || transaction.type == 'ContractSend' ? 'text-color-red' : 'text-color-green' }}\">{{transaction.type == 'Send' || transaction.type == 'ContractSend' ? '-' : '+'}} {{ transaction.amount | qlc: transaction.tokenInfo.decimals | currency:'':'':'1.2-8' }}</span> <span class=\"text-color-grey\"> {{ transaction.tokenName }}</span><br>\n                <span *ngIf=\"transaction.povConfirmHeight > 0\">\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm height: </span> \n                  <a [routerLink]=\"'/pov/height/' + transaction.povConfirmHeight\">{{ transaction.povConfirmHeight }}</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>\n                  <span class=\"text-color-lightgrey text-tiny\">PoV confirm count: </span> {{ transaction.povConfirmCount }}\n                </span>\n              </div>\n              <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-4 pr-md-0 pr-sm-4 col-4 pb-0 pr-4 text-right d-none d-sm-block {{\n                transaction.type == 'Send' || transaction.type == 'ContractSend' ? 'text-color-red' : 'text-color-green'\n              }}\">\n                <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"\">{{transaction.type == 'Send' || transaction.type == 'ContractSend' ? '-' : '+'}} {{ transaction.amount | qlc: transaction.tokenInfo.decimals | currency:'':'':'1.2-8' }}</span>\n                <br><span class=\"text-color-grey\">{{ transaction.tokenName }}</span>\n              </div>\n              <div class=\"col-xl-2 col-lg-2 pl-md-3 col-md-2 col-sm-12 col-12 pr-4 text-right\">\n                {{ transaction.timestamp * 1000 | date: 'short' }}\n              </div>\n              <div class=\"container transaction-details\">\n                \n              </div>\n          </div>\n        </div>\n        \n        \n      </div>\n    </div>\n    <div class=\"col-lg-12 mb-0 mt-2 pl-md-2 pr-md-2 text-center\" *ngIf=\"pages.length > 1\">\n      <a class=\"btn btn-primary btn-blue btn-box\" *ngIf=\"activePage != 1\" (click)=\"goTo(activePage-1)\">&lt;</a>\n      <span *ngFor=\"let page of pages\">\n        <a class=\"btn btn-primary btn-white btn-box\" [ngClass]=\"{'active' : page == activePage}\" (click)=\"goTo(page)\" *ngIf=\"page != '...'\">{{ page }}</a>\n        <span *ngIf=\"page == '...'\">&nbsp;...&nbsp;</span>\n      </span>\n      <a class=\"btn btn-primary btn-blue btn-box\" *ngIf=\"activePage < allPages\" (click)=\"goTo(activePage+1)\">&gt;</a>\n    </div>\n    \n    \n  </div>\n  \n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, ChildActivationEnd } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { NodeService } from 'src/app/services/node.service';\nimport { timer } from 'rxjs';\nimport { WalletService } from 'src/app/services/wallet.service';\n\n@Component({\n\tselector: 'app-transactions',\n\ttemplateUrl: './transactions.component.html',\n\tstyleUrls: ['./transactions.component.scss']\n})\nexport class TransactionsComponent implements OnInit {\n\n\ttransactions: any[] = [];\n\ttransactionsCount = 0;\n\tpendingBlocks = [];\n\tlatestPovHeight = 0;\n\n\taccountMeta: any = {};\n\taccount = '';\n\n\trouterSub = null;\n\n\tpageSize = 10;\n\tpages = [];\n\tallPages = 0;\n\tactivePage = 0;\n\toffSet = 0;\n\n\n\tconstructor(\n\t\tprivate route: ActivatedRoute,\n\t\tprivate router: Router,\n\t\tprivate api: ApiService,\n\t\tprivate node: NodeService,\n\t\tprivate wallet: WalletService\n\t) { }\n\n\tasync ngOnInit() {\n\t\tthis.routerSub = this.router.events.subscribe(event => {\n\t\t\tif (event instanceof ChildActivationEnd) {\n\t\t\t\tthis.load(); // Reload the state when navigating to itself from the transactions page\n\t\t\t}\n\t\t});\n\t\tthis.load();\n\t}\n\n\tload() {\n\t\tif (this.node.status === true) {\n\t\t\tvar page = this.route.snapshot.params.page;\n\t\t\tif (page == undefined || page == 0)\n\t\t\t\tpage = 1;\n\n\t\t\tthis.setPage(page);\n\t\t} else {\n\t\t\tthis.reload();\n\t\t}\n\t}\n\n\tasync reload() {\n\t\tconst source = timer(200);\n\t\tconst abc = source.subscribe(async val => {\n\t\t\tthis.load();\n\t\t});\n\t}\n\n\tgoTo(page) {\n\t\tif (this.account != null && this.account != '') {\n\t\t\tthis.router.navigate(['/transactions/' + page + '/' + this.account], { relativeTo: this.route });\n\t\t} else {\n\t\t\tthis.router.navigate(['/transactions/' + page], { relativeTo: this.route });\n\t\t}\n\t}\n\n\tasync loadTransactions() {\n\t\tawait this.getTransactions();\n\t}\n\n\tsetPage(page) {\n\t\tthis.activePage = page;\n\t\tthis.offSet = page * this.pageSize - this.pageSize;\n\t\tthis.getTransactions();\n\t}\n\n\tsetPages() {\n\t\tthis.activePage = Math.floor((this.offSet + this.pageSize) / this.pageSize);\n\t\tvar displayPages = 7;\n\n\t\tvar pages = this.transactionsCount / this.pageSize;\n\t\tif (this.transactionsCount % this.pageSize != 0) {\n\t\t\tpages = Math.floor(this.transactionsCount / this.pageSize) + 1;\n\t\t}\n\t\tthis.allPages = pages;\n\t\tif (pages < 7)\n\t\t\tdisplayPages = pages;\n\n\t\tthis.pages = Array(displayPages).fill(0).map((pages, i) => i + 1);\n\n\t\tif (pages > 5 && this.activePage > 3 && this.activePage < pages - 3) {\n\t\t\tthis.pages[1] = this.activePage - 2;\n\t\t\tthis.pages[2] = this.activePage - 1;\n\t\t\tthis.pages[3] = this.activePage;\n\t\t\tthis.pages[4] = this.activePage + 1;\n\t\t\tthis.pages[5] = this.activePage + 2;\n\t\t} else if (pages > 5 && this.activePage > 3 && this.activePage >= pages - 3) {\n\t\t\tthis.pages[1] = pages - 5;\n\t\t\tthis.pages[2] = pages - 4;\n\t\t\tthis.pages[3] = pages - 3;\n\t\t\tthis.pages[4] = pages - 2;\n\t\t\tthis.pages[5] = pages - 1;\n\t\t}\n\n\t\tthis.pages[displayPages - 1] = pages;\n\t\tthis.pages[0] = 1;\n\t\tif (this.pages[displayPages - 2] != pages - 1) {\n\t\t\tthis.pages[displayPages - 2] = '...';\n\t\t}\n\n\t\tif (this.pages[1] && this.pages[1] != 2) {\n\t\t\tthis.pages[1] = '...';\n\t\t}\n\t}\n\n\tasync getTransactions() {\n\t\t/*this.latestPovHeight = 0;\n\t\tconst latesPovHeader = await this.api.getLatestHeader();\n\t\tif (!latesPovHeader.error) {\n\t\t\tthis.latestPovHeight = latesPovHeader.result.height;\n\t\t}*/\n\t\t\n\t\tthis.account = this.route.snapshot.params.account;\n\t\tlet transactionsCount = null;\n\t\tif (this.account != null && this.account != '') {\n\t\t\ttransactionsCount = await this.api.accountBlocksCount(this.account);\n\t\t\tif (!transactionsCount.error) {\n\t\t\t\tthis.transactionsCount = transactionsCount.result;\n\t\t\t\tthis.setPages();\n\t\t\t}\n\t\t} else {\n\t\t\ttransactionsCount = await this.api.blocksCount();\n\t\t\tif (!transactionsCount.error) {\n\t\t\t\tthis.transactionsCount = transactionsCount.result.count;\n\t\t\t\tthis.setPages();\n\t\t\t}\n\t\t}\n\n\n\t\tlet transactions = null;\n\t\tif (this.account != null && this.account != '') {\n\t\t\ttransactions = await this.api.accountHistory(this.account, this.pageSize, this.offSet);\n\t\t} else {\n\t\t\ttransactions = await this.api.blocks(this.pageSize, this.offSet);\n\t\t}\n\t\t//transactions = await this.api.blocks(this.pageSize,this.offSet);\n\t\t// const additionalBlocksInfo = [];\n\n\t\tthis.transactions = [];\n\t\tif (!transactions.error) {\n\t\t\tthis.transactions = await this.wallet.prepareQLCBlockView(transactions.result);\n\t\t\t//const historyResult = transactions.result;\n\t\t\t\n\t\t\t//this.transactions = this.transactions.filter(h => h.type !== 'change');\n\t\t}\n\t}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.scss']\n})\nexport class UserDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-user-submenu></app-user-submenu>\n\n<!-- USER DASHBOARD MAIN MENU -->\n<div class=\"container mt-4 mb-4 qlc-content-home qlc-after-submenu\">\n  <div class=\"row\">\n\n    <!-- TITLE -->\n    <div class=\"col-lg-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\">\n      <div class=\"content-title mb-4\">\n        <h1>Account Dashboard</h1>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-user-wallets\" routerLink=\"/wallets\" style=\"cursor: pointer;\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\" style=\"padding-top:180px;\">\n            <div class=\"col-12\">01</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12 font-dash-menu\">Wallets</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-user-staking\" routerLink=\"/staking\" style=\"cursor: pointer;\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\" style=\"padding-top:180px;\">\n            <div class=\"col-12\">02</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12 font-dash-menu\">Staking</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-user-mining\" routerLink=\"/mining\" style=\"cursor: pointer;\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\" style=\"padding-top:180px;\">\n            <div class=\"col-12\">03</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12 font-dash-menu\">Mining</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-submenu-swap\" routerLink=\"/swap\" style=\"cursor: pointer;\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\" style=\"padding-top:180px;\">\n            <div class=\"col-12\">04</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12 font-dash-menu\">Swap QLC Token</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-blue-user-reps\" routerLink=\"/representation\" style=\"cursor: pointer;\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-blue\" style=\"padding-top:180px;\">\n            <div class=\"col-12\">05</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12 font-dash-menu\">Representatives</div>\n          </div>\n        </div>\n      </div>\n    </div>\n              \n  </div>\n</div>\n\n\n<!-- HOME -->\n<div class=\"container mt-4 mb-4\">\n  <div class=\"row\">\n\n    <!-- TITLE -->\n    <div class=\"col-lg-12 mb-0 pb-0 mt-2 pl-md-2 pr-md-2\">\n      <div class=\"content-title mb-4\">\n        <h1>Quick Send</h1>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-quicksend-qlc\" routerLink=\"/wallets/qlc/send\" style=\"cursor: pointer;\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-purple\" style=\"padding-top:180px;\">\n            <div class=\"col-12\">Send via</div>\n          </div>\n          <div class=\"row qlc-table-row-purple\">\n            <div class=\"col-12 font-dash-menu\">QLC Chain</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pl-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-quicksend-neo\" routerLink=\"/wallets/neo/send\" style=\"cursor: pointer;\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-green\" style=\"padding-top:180px;\">\n            <div class=\"col-12\">Send via</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12 font-dash-menu\">NEO Chain</div>\n          </div>\n        </div>\n      </div>\n    </div>\n<!--\n    <div class=\"col-lg-3 col-md-6 col-sm-6 mt-2 mb-0 pl-md-2 pr-md-2 pr-sm-2 pb-2\">\n      <div class=\"content-box-blue bg-quicksend-chainx\" routerLink=\"/wallets/chainx/send\" style=\"cursor: pointer;\">\n        <div class=\"container\">\n          <div class=\"row qlc-table-header-chainx\" style=\"padding-top:180px;\">\n            <div class=\"col-12\">Send via</div>\n          </div>\n          <div class=\"row qlc-table-row-blue\">\n            <div class=\"col-12 font-dash-menu\">ChainX</div>\n          </div>\n        </div>\n      </div>\n    </div>\n-->              \n  </div>\n</div>","<div class=\"qlc-top-submenu\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-12 pl-md-2 pr-md-2\">\n                <div class=\"qlc-dashboard-submenu\">\n                    <a class=\"submenu-item submenu-item-red icon-submenu-locked\" style=\"float:right;margin-right:0px;\" (click)=\"openModal(unlockWallet)\" *ngIf=\"walletService.isConfigured() && walletService.isLocked()\" title=\"Unlock\"><span>Unlock</span></a>\n                    <a class=\"submenu-item submenu-item-green icon-submenu-unlocked\" style=\"float:right;margin-right:0px;\" (click)=\"lockWallet()\" *ngIf=\"walletService.isConfigured() && !walletService.isLocked()\" title=\"Lock\"><span>Lock</span></a>\n\n                    <a routerLink=\"/createwallet\" class=\"submenu-item icon-submenu-wallets\" routerLinkActive=\"active\" *ngIf=\"!walletService.isConfigured()\" title=\"Create/Import Account\"><span></span></a>\n\n                    <a routerLink=\"/dashboard\" class=\"submenu-item icon-submenu-dashboard\" routerLinkActive=\"active\" *ngIf=\"walletService.isConfigured()\" title=\"Dashboard\"><span>Dashboard</span></a>\n                    <a routerLink=\"/wallets\" class=\"submenu-item icon-submenu-wallets\" routerLinkActive=\"active\" *ngIf=\"walletService.isConfigured()\" title=\"Wallets\"><span>Wallets</span></a>\n                    <a routerLink=\"/staking\" class=\"submenu-item icon-submenu-staking\" routerLinkActive=\"active\" *ngIf=\"walletService.isConfigured()\" title=\"Staking\"><span>Staking</span></a>\n                    <a routerLink=\"/swap\" class=\"submenu-item icon-submenu-swap\" routerLinkActive=\"active\" *ngIf=\"walletService.isConfigured()\" title=\"Swap\"><span>Swap</span></a>\n                    <a routerLink=\"/mining\" class=\"submenu-item icon-submenu-mining\" routerLinkActive=\"active\" *ngIf=\"walletService.isConfigured()\" title=\"Mining\"><span>Mining</span></a>\n                    <a routerLink=\"/representation\" class=\"submenu-item icon-submenu-representatives\" routerLinkActive=\"active\" *ngIf=\"walletService.isConfigured()\" title=\"Representatives\"><span>Representatives</span></a>\n                    <a routerLink=\"/settings\" class=\"submenu-item icon-submenu-settings\" routerLinkActive=\"active\" *ngIf=\"walletService.isConfigured()\" title=\"Settings\"><span>Settings</span></a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>  \n\n\n<ng-template #unlockWallet>\n  <div class=\"modal-body\">\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"row text-center\">\n        <div class=\"col-12 col-sm-10 offset-sm-1\">\n            <div class=\"form-group text-center\">\n              <img src=\"assets/img/qlc-icon-lock-red.svg\" style=\"width:80px;height:auto;\" class=\"pt-4\">\n              <h1 class=\"pt-4\">Unlock Account</h1>\n              <div class=\"input-group pt-3 pb-3\">\n                <input class=\"form-control pass-field text-center w-100\" type=\"password\" [(ngModel)]=\"unlockPassword\" (keyup.enter)=\"unlockWalletConfirm()\" placeholder=\"Enter your password\" appAutofocus>\n              </div>\n              <button class=\"btn btn-primary mb-4 w-100 pl-0 pr-0\" style=\"min-width: 0px !important;\" type=\"button\" (click)=\"unlockWalletConfirm()\">UNLOCK</button>\n            </div>\n      </div>\n    </div>\n    \n  </div>\n</ng-template>","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { WalletService } from 'src/app/services/wallet.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-submenu',\n  templateUrl: './user-submenu.component.html',\n  styleUrls: ['./user-submenu.component.scss']\n})\nexport class UserSubmenuComponent implements OnInit {\n  wallet = this.walletService.wallet;\n  modalRef: BsModalRef;\n  unlockPassword = '';\n\n  msg1 = '';\n\tmsg2 = '';\n\tmsg3 = '';\n\tmsg4 = '';\n\tmsg5 = '';\n\n  constructor(\n    public walletService: WalletService,\n    private notificationService: NotificationService,\n    private trans: TranslateService,\n    private router: Router,\n    private modalService: BsModalService\n  ) { \n    this.loadLang();\n  }\n\n  ngOnInit() {\n  }\n  \n  loadLang() {\n    this.trans.get('WALLET_WARNINGS.msg1').subscribe((res: string) => { this.msg1 = res; });\n\t\tthis.trans.get('WALLET_WARNINGS.msg2').subscribe((res: string) => { this.msg2 = res; });\n\t\tthis.trans.get('WALLET_WARNINGS.msg3').subscribe((res: string) => { this.msg3 = res; });\n\t\tthis.trans.get('WALLET_WARNINGS.msg4').subscribe((res: string) => { this.msg4 = res; });\n\t\tthis.trans.get('WALLET_WARNINGS.msg5').subscribe((res: string) => { this.msg5 = res; });\n\t}\n\n  async lockWallet() {\n\t\tif (!this.wallet.password) {\n\t\t\treturn this.notificationService.sendWarning(this.msg3);\n\t\t}\n\t\tconst locked = await this.walletService.lockWallet();\n\t\tif (locked) {\n      this.notificationService.sendSuccess(this.msg4);\n\t\t} else {\n\t\t\tthis.notificationService.sendError(this.msg5);\n\t\t}\n  }\n\n  async unlockWalletConfirm() {\n\t\tconst unlocked = await this.walletService.unlockWallet(this.unlockPassword);\n\t\tthis.unlockPassword = '';\n\n\t\tif (unlocked) {\n      this.notificationService.sendSuccess(this.msg1);\n      this.modalRef.hide();\n\t\t} else {\n\t\t\tthis.notificationService.sendError(this.msg2);\n\t\t}\n\n    this.unlockPassword = '';\n  }\n  \n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n}\n","import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl } from '@angular/forms';\n\n@Directive({\n  selector: '[appAmountValidator]'\n})\nexport class AmountValidatorDirective {\n\n  constructor() {\n  }\n\n}\nexport function minAmountValidator(minAmount: Number): ValidatorFn {\n  return (control: AbstractControl): {[key: string]: any} | null => {\n    const forbidden = control.value < minAmount ? true : false;\n    return forbidden ? {'minAmount': {value: control.value}} : null;\n  };\n}","import { Directive, AfterViewInit, ElementRef } from '@angular/core';\n\n@Directive({\n\tselector: '[appAutofocus]'\n})\nexport class AutofocusDirective implements AfterViewInit {\n\tconstructor(private el: ElementRef) {}\n\n\tngAfterViewInit() {\n\t\tthis.el.nativeElement.focus();\n\t}\n}\n","import {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { Injectable } from \"@angular/core\";\n   \n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request)\n      .pipe(\n        retry(1),\n        catchError((error: HttpErrorResponse) => {\n          let errorMessage = '';\n          if (error.error instanceof ErrorEvent) {\n            // client-side error\n            errorMessage = `Error: ${error.error.message}`;\n          } else {\n            // server-side error\n            errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n          }\n          //window.alert(errorMessage);\n          return throwError(errorMessage);\n        })\n      )\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { CurrencyPipe } from '@angular/common';\nimport { BigNumber } from 'bignumber.js';\n\n@Pipe({\n  name: 'fiat'\n})\nexport class FiatPipe extends CurrencyPipe implements PipeTransform {\n  transform(value: any, currencyCode?: string,\n    display?: 'code' | 'symbol' | 'symbol-narrow' | boolean, digits?: string, locale?: string): any {\n    if (currencyCode === '') {\n      return ``;\n    }\n    if (currencyCode === 'BTC') {\n      return `BTC ${new BigNumber(value.toFixed(4) || 0).toFixed(6)}`;\n    }\n    return super.transform(value, currencyCode, 'symbol-narrow', digits, locale);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'noComma'\n})\nexport class NoCommaPipe implements PipeTransform {\n  transform(val: string | number): string {\n    if (val !== undefined && val !== null) {\n      return val.toString().replace(/,/g, '');\n    }\n\n    return '';\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'qlc'\n})\nexport class QlcPipe implements PipeTransform {\n  precision = 6;\n\n\tQLC = 100000000; // 10^8\n\n  transform(value: any, args?: any): any {\n    if (value == 'NaN' || value == NaN || value == undefined) {\n      value = 0;\n    }\n    let decimals = 2\n    if (args != undefined) {\n      //const opts = args.split(',');\n      //decimals = args;\n      if (args == 0) {\n        this.QLC = 1;\n      } else {\n        this.QLC = Math.pow(10,args);\n      }\n    }\n    \n    \n    return `${(value / this.QLC).toFixed(args)}`;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport BigNumber from 'bignumber.js';\n\n@Pipe({\n  name: 'squeezeNumber'\n})\nexport class SqueezeNumberPipe implements PipeTransform {\n\n  transform(value: any, args?): any {\n    const arg = args ? args.split(',') || [] : [];\n    const maxLength = Number(arg[0]) || 8;\n    const decimals = Number(arg[1]) || 2;\n    const numberLength = value.length;\n    if (numberLength > maxLength) {\n      return new BigNumber(value).toFixed(decimals);\n    }\n\n    return value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'squeeze'\n})\nexport class SqueezePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    const arg = args ? args.split(',') || [] : [];\n    const openingChars = arg[0] || 9;\n    const closingChars = arg[1] || 5;\n    const firstChars = value.split('').slice(0, openingChars).join('');\n    const lastChars = value.split('').slice(-closingChars).join('');\n    return `${firstChars}...${lastChars}`;\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AddressBookService {\n\tstoreKey = `qlcTracker-addressbook`;\n\n\tmsg1 = '';\n\n\taddressBook = [];\n\n\taddressBook$ = new BehaviorSubject([]);\n\n\tconstructor(private trans: TranslateService) {\n\t\tthis.loadLang();\n\t\tthis.trans.onLangChange.subscribe((event: LangChangeEvent) => {\n\t\t\tthis.loadLang();\n\t\t});\n\t}\n\n\tloadLang() {\n\t\tthis.trans.get('SERVICE_WARNINGS_ADDRESS_BOOK.msg1').subscribe((res: string) => {\n\t\t\t// console.log(res);\n\t\t\tthis.msg1 = res;\n\t\t});\n\t}\n\n\tloadAddressBook() {\n\t\tlet addressBook = [];\n\t\tconst addressBookStore = localStorage.getItem(this.storeKey);\n\t\tif (addressBookStore) {\n\t\t\taddressBook = JSON.parse(addressBookStore);\n\t\t}\n\t\tthis.addressBook = addressBook;\n\t\tthis.addressBook$.next(this.addressBook);\n\n\t\treturn this.addressBook;\n\t}\n\n\tasync saveAddress(account, name) {\n\t\tconst existingName = this.addressBook.find(a => a.name.toLowerCase() === name.toLowerCase());\n\t\tif (existingName) {\n\t\t\tthrow new Error(this.msg1);\n\t\t}\n\n\t\tconst existingAccount = this.addressBook.find(a => a.account.toLowerCase() === account.toLowerCase());\n\t\tif (existingAccount) {\n\t\t\texistingAccount.name = name;\n\t\t} else {\n\t\t\tthis.addressBook.push({\n\t\t\t\taccount,\n\t\t\t\tname\n\t\t\t});\n\t\t}\n\t\tthis.saveAddressBook();\n\t\tthis.addressBook$.next(this.addressBook);\n\t}\n\n\tdeleteAddress(account) {\n\t\tconst existingAccountIndex = this.addressBook.findIndex(a => a.account.toLowerCase() === account.toLowerCase());\n\t\tif (existingAccountIndex === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.addressBook.splice(existingAccountIndex, 1);\n\n\t\tthis.saveAddressBook();\n\n\t\tthis.addressBook$.next(this.addressBook);\n\t}\n\n\tsaveAddressBook(): void {\n\t\tlocalStorage.setItem(this.storeKey, JSON.stringify(this.addressBook));\n\t}\n\n\tclearAddressBook(): void {\n\t\tthis.addressBook = [];\n\t\tthis.addressBook$.next(this.addressBook);\n\t\tlocalStorage.removeItem(this.storeKey);\n\t}\n\n\tsetAddressBookOrder(addressList) {\n\t\tthis.addressBook = addressList\n\t\t\t.map(address => ({\n\t\t\t\taccount: address,\n\t\t\t\tname: this.getAccountName(address)\n\t\t\t}))\n\t\t\t.filter(entry => entry.name !== null);\n\n\t\tthis.saveAddressBook();\n\t\tthis.addressBook$.next(this.addressBook);\n\t}\n\n\tgetAccountName(account: string): string | null {\n\t\tif (!account || !account.length) {\n\t\t\treturn null;\n\t\t}\n\t\tconst match = this.addressBook.find(a => a.account.toLowerCase() === account.toLowerCase());\n\t\treturn (match && match.name) || null;\n\t}\n\n\tnameExists(name: string): boolean {\n\t\treturn this.addressBook.findIndex(a => a.name.toLowerCase() === name.toLowerCase()) !== -1;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiConfidantService {\n\n  explorerUrl = 'https://myconfidant.io/api/explorer';\n\n  constructor(private http: HttpClient) { }\n\n  private async request(action, data): Promise<any> {\n\t\tdata.action = action;\n\n\t\treturn await this.http\n\t\t\t.post(this.explorerUrl, data)\n\t\t\t.toPromise()\n\t\t\t.then(res => {\n\t\t\t\treturn res;\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tif (err.status === 500 || err.status === 0) {\n\t\t\t\t}\n\t\t\t\tthrow err;\n\t\t\t});\n  }\n\n  \n  async sendSecurityCode(email_address): Promise<{ any }> {\n    console.log('sendSecurityCode')\n\t\treturn await this.request('sendSecurityCode', { email_address });\n  }\n\n  async checkSecurityCode(email_address, security_code): Promise<{ valid: Number, mac_addresses?: any }> {\n    console.log('checkSecurityCode')\n\t\treturn await this.request('checkSecurityCode', { email_address, security_code });\n  }\n\n  async confirmMacAddresses(email_address, security_code, mac_addresses, qlc_address, neo_address, txid): Promise<{ any }> {\n    console.log('confirmMacAddresses')\n\t\treturn await this.request('confirmMacAddresses', { email_address, security_code, mac_addresses , qlc_address, neo_address, txid });\n  }\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport  uuid from 'uuid/v4';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiNEP5Service {\n\tnep5Url = environment.nep5Url[environment.qlcChainNetwork];\n\n  constructor(private http: HttpClient) { }\n\n  private async request(action, data): Promise<any> {\n\t\tdata.jsonrpc = '2.0';\n\t\tdata.method = action;\n\t\tdata.id = uuid();\n\n\t\treturn await this.http\n\t\t\t.post(this.nep5Url, data)\n\t\t\t.toPromise()\n\t\t\t.then(res => {\n\t\t\t\treturn res;\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tif (err.status === 500 || err.status === 0) {\n\t\t\t\t}\n\t\t\t\tthrow err;\n\t\t\t});\n\t}\n\n\tasync prepareBenefitPledge(benefitParams, lockTxParams): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('nep5_prePareBenefitPledge', { params: [benefitParams, lockTxParams] });\n\t}\n\n\tasync benefitPledge(lockTxId): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('nep5_benefitPledge', { params: [lockTxId] });\n\t}\n\t\n\tasync benefitWithdraw(pledge,txid): Promise<{ result: any; error?: any }> {\n\t\t\treturn await this.request('nep5_benefitWithdraw', { params: [pledge,txid] });\n\t}\n\t\n\tasync getLockInfo(txid: string): Promise<{ result: any; error?: any }> {\n\t\t\treturn await this.request('nep5_getLockInfo', { params: [txid] });\n\t}\n\t\n\tasync process(block: any, txid: string, txWithdraw?: any): Promise<{ result: any; error?: any }> {\n\t\t\treturn await this.request('ledger_process', { params: [block, txid, txWithdraw] });\n\t}\n\t\n\tasync pledgeInfoCount(txid: string): Promise<{ result: any; error?: any }> {\n\t\t\treturn await this.request('ledger_pledgeInfoCount', { params: [txid] });\n\t}\n\t\n\tasync pledgeInfoList(txid: string): Promise<{ result: any; error?: any }> {\n\t\t\treturn await this.request('ledger_pledgeInfoList', { params: [txid] });\n\t}\n\t\n\tasync pledgeInfoByPledge(txid: string): Promise<{ result: any; error?: any }> {\n\t\t\treturn await this.request('ledger_pledgeInfoByPledge', { params: [txid] });\n\t}\n\t\n\tasync pledgeInfoByBeneficial(txid: string, count = 90, offset = 0): Promise<{ result: any; error?: any }> {\n\t\t\treturn await this.request('ledger_pledgeInfoByBeneficial', { params: [txid,count,offset] });\n\t}\n  \n  \tasync pledgeInfoInProcess(txid: string): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('ledger_ledgeInfoInProcess', { params: [txid] });\n\t}\n\t\n\tasync prepareMintagePledge(mintagePledgeParams, lockTxParams): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('nep5_prePareMintagePledge', { params: [mintagePledgeParams, lockTxParams] });\n\t}\n\n\tasync mintagePledge(lockTxId): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('nep5_mintagePledge', { params: [lockTxId] });\n\t}\n\n\tasync mintageWithdraw(tokenId, lockTxId, unLockTxParams): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('nep5_mintageWithdraw', { params: [tokenId, lockTxId, unLockTxParams] });\n\t}\n\n\tasync pledgeInfoByTransactionID(txid: string): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('ledger_pledgeInfoByTransactionID', { params: [txid] });\n\t}\n\n\n\t\n\t\n\n\t\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\nimport { NodeService } from './node.service';\n\nimport { httpProvider } from 'qlc.js/provider/HTTP';\nimport Client from 'qlc.js/client';\nimport { methods } from 'qlc.js/common';\nimport { timer } from 'rxjs';\n\nimport  uuid from 'uuid/v4';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ApiService {\n\trpcUrl = environment.rpcUrl[environment.qlcChainNetwork];\n\talive = true;\n\tconnectTimer = null;\n\treconnectTime = 1000;\n\treconnectInterval = 500;\n\treconnectTimeMax = 8000;\n\n\tpublic nodeBlocksCount = 0;\n\tpublic nodeMainBlocksCount = 0;\n\t\n\tprivate HTTP_RPC = new httpProvider(this.rpcUrl);\n\tc = new Client(this.HTTP_RPC, () => {});\n\n\tairdropTx:any;\n\t\n\tqlcTokenHash = '45dd217cd9ff89f7b64ceda4886cc68dde9dfa47a8a422d165e2ce6f9a834fad';\n\n\tconstructor(private http: HttpClient, private node: NodeService) {\n\t\t//this.connectInterval.pipe(takeUntil(() => this.node.status)).subscribe()\n\t\tthis.connect();\n\t\tthis.airdropTx = require('../../assets/data/airdrop-tx.json');\n\t}\n\n\tasync connect() {\n\t\tconst source = timer(this.reconnectTime);\n\t\tthis.connectTimer = source.subscribe(async val => {\n\t\t\tif (!environment.desktop || (environment.desktop && this.node.running)) {\n\t\t\t\tthis.reconnectTime = this.reconnectTime + this.reconnectInterval;\n\n\t\t\t\tif (this.reconnectTime > this.reconnectTimeMax)\n\t\t\t\t\tthis.reconnectTime = this.reconnectTimeMax;\n\n\t\t\t\ttry {\n\t\t\t\t\tconst syncQuery = await this.syncing();\n\t\t\t\t\t//console.log(syncQuery);\n\t\t\t\t\tif (typeof syncQuery.result != undefined) {\n\t\t\t\t\t\tthis.node.setOnline();\n\t\t\t\t\t\tif (this.node.synchronizedPov !== true) {\n\t\t\t\t\t\t\tconst povSyncQuery = await this.pov_getPovStatus();\n\t\t\t\t\t\t\tif (povSyncQuery.result && (povSyncQuery.result.syncState === 0 || povSyncQuery.result.syncState === 1)) {\n\t\t\t\t\t\t\t\tthis.node.setSynchronizingPov();\n\t\t\t\t\t\t\t} else if (povSyncQuery.result && povSyncQuery.result.syncState === 2) {\n\t\t\t\t\t\t\t\tthis.node.setSynchronizedPov();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst blocksMainQuery = await this.blocksCountMain();\n\t\t\t\t\t\tconst blocksQuery = await this.blocksCount();\n\t\t\t\t\t\tthis.nodeMainBlocksCount = blocksMainQuery.result.count;\n\t\t\t\t\t\tthis.nodeBlocksCount = blocksQuery.result.count;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif ( syncQuery.result == true) {\n\t\t\t\t\t\t\tthis.node.setSynchronizingTransactions();\n\t\t\t\t\t\t\tif (this.rpcUrl != environment.mainRpcUrl) {\n\t\t\t\t\t\t\t\t//console.log('syncing mainBlocksCount ' + ' ' + this.nodeMainBlocksCount + ' nodeBlocksCount ' + ' ' + this.nodeBlocksCount)\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (this.node.synchronizedTransactions !== true && this.rpcUrl != environment.mainRpcUrl) {\n\t\t\t\t\t\t\t\t//console.log('mainBlocksCount ' + ' ' + this.nodeMainBlocksCount + ' nodeBlocksCount ' + ' ' + this.nodeBlocksCount)\n\t\t\t\t\t\t\t\tif (this.nodeBlocksCount < this.nodeMainBlocksCount) {\n\t\t\t\t\t\t\t\t\tthis.node.setSynchronizingTransactions();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.node.setSynchronizedTransactions();\n\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.node.setSynchronizedTransactions();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.node.synchronized !== true) {\n\t\t\t\t\t\t\tthis.connect();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (syncQuery.error) {\n\t\t\t\t\t\tconsole.log(syncQuery.error);\n\t\t\t\t\t\tthis.connect();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log('error connecting');\n\t\t\t\t\t\tthis.connect();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log('error connecting');\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tthis.node.setOffline('ERROR - Node offline, reconnecting ...');\n\t\t\t\t\tthis.connect();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.connect();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t\n\n\t\t\t\n\t\t});\n\t}\n\n\tasync reconnect(error = 'error') {\n\t\tconsole.log('reconnect ' + error);\n\t\tthis.node.setOffline('ERROR - connection problem. Reconnecting.');\n\t\tthis.connect();\n\t}\n\n\tasync accountPublicKey(account: string): Promise<{ result: string; error?: string }> {\n\t\ttry {\n\t\t\treturn await this.c.request(methods.account.accountPublicKey, account);\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tasync accounts(count:Number = 0, offset:Number = 0): Promise<{ result: any; error?: string }> {\n\t\tconst result = await this.c.buildinLedger.accounts(count,offset);\n\t\tif (!result.result && !result.error) \n\t\t\tthis.reconnect();\n\t\treturn result;\n\t}\n\t\n\tasync accountsCount(): Promise<{ result: any; error?: string }> {\n\t\ttry {\n\t\t\treturn await this.c.request( methods.ledger.accountsCount );\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tasync accountsBalances(accounts: string[]): Promise<{ result: any; error?: string }> {\n\t\ttry {\n\t\t\treturn await this.c.request(methods.ledger.accountsBalances, accounts);\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tasync accountsFrontiers(accounts: string[]): Promise<{ result: any; error?: string }> {\n\t\ttry {\n\t\t\treturn await this.c.request(methods.ledger.accountsFrontiers, accounts);\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tasync accountsPending(accounts: string[], count: number = 500): Promise<{ result?: any; error?: string }> {\n\t\tif (environment.desktop && !this.node.running) {\n\t\t\tconst errorMsg = {\n\t\t\t\terror: 'Node is not running.'\n\t\t\t}\n\t\t\treturn errorMsg;\n\t\t}\n\t\tif (this.node.synchronized === false) {\n\t\t\tconst errorMsg = {\n\t\t\t\terror: 'Node is not synchronized.'\n\t\t\t}\n\t\t\treturn errorMsg;\n\t\t}\n\t\tlet result = await this.c.buildinLedger.accountsPending(accounts,count);\n\t\tif (!result.result && !result.error) \n\t\t\tthis.reconnect('accountsPending');\n\n\t\tlet response = result.result;\n\n\t\tfor (let account in response) {\n\t\t\tif (this.airdropTx[account]) {\n\t\t\t\tfor (let i = 0; i < this.airdropTx[account].length; i++) {\n\t\t\t\t\tresponse[account] = response[account].filter((a) => {\n\t\t\t\t\t\treturn a.hash != this.airdropTx[account][i];\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tasync delegatorsCount(account: string): Promise<{ count: string }> {\n\t\ttry {\n\t\t\treturn await this.c.request(methods.ledger.delegatorsCount, account);\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tasync onlineRepresentatives(): Promise<{ result: any }> {\n\t\ttry {\n\t\t\treturn await this.c.request(methods.net.onlineRepresentatives);\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tasync representatives(order = true): Promise<{ result: any }> {\n\t\ttry {\n\t\t\treturn await this.c.request(methods.ledger.representatives, order);\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tasync accountVotingWeight(account): Promise<{ result: any }> {\n\t\ttry {\n\t\t\treturn await this.c.request(methods.ledger.accountVotingWeight, account);\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tasync blocksInfo(blocks): Promise<{ result: any; error?: string }> {\n\t\ttry {\n\t\t\treturn await this.c.request(methods.ledger.blocksInfo, blocks);\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tasync blockHash(block): Promise<{ result: any; error?: string }> {\n\t\ttry {\n\t\t\treturn await this.c.request(methods.ledger.blockHash, block);\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tasync process(block): Promise<{ result?: string; error?: any }> {\n\t\tif (this.node.synchronized === false) {\n\t\t\tconst errorMsg = {\n\t\t\t\terror: 'Node is not synchronized.'\n\t\t\t}\n\t\t\treturn errorMsg;\n\t\t}\n\t\tif (this.node.break === true) {\n\t\t\tconst errorMsg = {\n\t\t\t\terror: 'Don\\'t process.'\n\t\t\t}\n\t\t\treturn errorMsg;\n\t\t}\n\t\ttry {\n\t\t\treturn await this.c.request(methods.ledger.process, block);\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tasync accountBlocksCount(account): Promise<{ result: any; error?: string }> {\n\t\tconst result = await this.c.buildinLedger.accountBlocksCount(account);\n\t\tif (typeof(result.result) != 'number' && !result.error) \n\t\t\tthis.reconnect('accountBlocksCount');\n\t\treturn result;\n\t}\n\n\t\n\n\tasync accountHistory(account, count = 25, offset = 0): Promise<{ result: any; error?: string }> {\n\t\ttry {\n\t\t\treturn await this.c.request(methods.ledger.accountHistoryTopn, account, count, offset);\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tasync accountInfo(account): Promise<{ result?: any; error?: any }> {\n\t\tif (environment.desktop && !this.node.running) {\n\t\t\tconst errorMsg = {\n\t\t\t\terror: 'Node is not running.'\n\t\t\t}\n\t\t\treturn errorMsg;\n\t\t}\n\t\ttry {\n\t\t\treturn await this.c.request(methods.ledger.accountInfo, account);\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tasync validateAccountNumber(account): Promise<{ result: true | false }> {\n\t\ttry {\n\t\t\treturn await this.c.request(methods.account.accountValidate, account);\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tasync tokens(): Promise<{ result?: any; error?: string }> {\n\t\tif (environment.desktop && !this.node.running) {\n\t\t\tconst errorMsg = {\n\t\t\t\terror: 'Node is not running.'\n\t\t\t}\n\t\t\treturn errorMsg;\n\t\t}\n\t\ttry {\n\t\t\treturn await this.c.request(methods.ledger.tokens);\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tasync blocks(count:Number = 0, offset:Number = 0): Promise<{ result?: any; error?: string }> {\n\t\tif (environment.desktop && !this.node.running) {\n\t\t\tconst errorMsg = {\n\t\t\t\terror: 'Node is not running.'\n\t\t\t}\n\t\t\treturn errorMsg;\n\t\t}\n\t\tconst result = await this.c.buildinLedger.blocks(count,offset);\n\t\tif (!result.result && !result.error) \n\t\t\tthis.reconnect('blocks');\n\n\t\treturn result;\n\t}\n\t\n\tasync blocksCount(): Promise<{ result?: any; error?: string }> {\n\t\tif (environment.desktop && !this.node.running) {\n\t\t\tconst errorMsg = {\n\t\t\t\terror: 'Node is not running.'\n\t\t\t}\n\t\t\treturn errorMsg;\n\t\t}\n\t\ttry {\n\t\t\treturn await this.c.request( methods.ledger.blocksCount );\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\t\n\tasync accountForPublicKey(account: string): Promise<{ result: any; error?: any }> {\n\t\ttry {\n\t\t\treturn await this.c.request( methods.account.accountForPublicKey, account );\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\t\n\tasync blockAccount(account): Promise<{ result: any; error?: string }> {\n\t\ttry {\n\t\t\treturn await this.c.request( methods.ledger.blockAccount, account );\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tasync tokenInfoByName(tokenName): Promise<{ result: any; error?: string }> {\n\t\tconst result = await this.c.buildinLedger.tokenInfoByName(tokenName);\n\t\tif (!result.result && !result.error) \n\t\t\tthis.reconnect('tokenInfoByName');\n\t\treturn result;\n\t}\n\t\n\tasync tokenByHash(tokenHash): Promise<any> {\n\t\tconst tokens = await this.tokens();\n\t\tif (!tokens.error) {\n\t\t\tconst tokenResult = tokens.result;\n\t\t\treturn tokenResult.filter(token => {\n\t\t\t\tif (token.tokenId === tokenHash) {\n\t\t\t\t\treturn token;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\t\n\t//TODO: remove token hash\n\tasync accountInfoByToken(account, tokenHash = this.qlcTokenHash): Promise<any> {\n\t\tconst am = await this.accountInfo(account);\n\t\t/*if (am.error) {\n\t\t\treturn null;\n\t\t}*/\n\t\tconst tokens = am.result.tokens;\n\t\t\n\t\treturn Array.isArray(tokens) ? tokens.filter(tokenMeta => tokenMeta.type === tokenHash)[0] : null;\n\t}\n\n\n\t// sms\n\tasync phoneBlocks(phoneNumber:string): Promise<{ result: any; error?: string }> {\n\t\tconst result = await this.c.buildinLedger.phoneBlocks(phoneNumber);\n\t\tif (!result.result && !result.error) \n\t\t\tthis.reconnect('phoneBlocks');\n\n\t\treturn result;\n\t}\n\n\tprivate async request(action, data, rpc = ''): Promise<any> {\n\t\tdata.jsonrpc = '2.0';\n\t\tdata.method = action;\n\t\tdata.id = uuid();\n\t\tconst url = (rpc != '')? rpc : this.rpcUrl;\n\n\t\treturn await this.http\n\t\t\t.post(url, data)\n\t\t\t.toPromise()\n\t\t\t.then(res => {\n\t\t\t\treturn res;\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tif (err.status === 500 || err.status === 0) {\n\t\t\t\t}\n\t\t\t\tthrow err;\n\t\t\t});\n\t}\n\t\n\t// rewards \n\tasync getTotalRewards(txid: string): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('rewards_getTotalRewards', { params: [txid] });\n\t}\n\n\tasync getReceiveRewardBlock(txid: string): Promise<{ result?: any; error?: any }> {\n\t\tif (this.node.break === true) {\n\t\t\tconst errorMsg = {\n\t\t\t\terror: 'Don\\'t process.'\n\t\t\t}\n\t\t\treturn errorMsg;\n\t\t}\n\t\treturn await this.request('rewards_getReceiveRewardBlock', { params: [txid] });\n\t}\n\n\tasync getConfidantRewardsDetail(account: string): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('rewards_getConfidantRewordsDetail', { params: [account] });\n\t}\n\n\tasync getConfidantRewards(account: string): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('rewards_getConfidantRewards', { params: [account] });\n\t}\n\t\n\tasync getTotalPledgeAmount(): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('pledge_getTotalPledgeAmount', { params: [] });\n\t}\n\n\t\n\tasync messageHash(message:string): Promise<{ result: any; error?: any }> {\n\t\tconst result = await this.c.buildinLedger.messageHash(message);\n\t\tif (!result.result && !result.error) \n\t\t\tthis.reconnect('messageHash');\n\n\t\treturn result;\n\t}\n\n\tasync messageBlocks(messageHash:string): Promise<{ result: any; error?: any }> {\n\t\tconst result = await this.c.buildinLedger.messageBlocks(messageHash);\n\t\tif (!result.result && !result.error) \n\t\t\tthis.reconnect('messageBlocks');\n\n\t\treturn result;\n\t}\n\n\tasync blockConfirmedStatus(hash:string): Promise<{ result: any; error?: any }> {\n\t\tconst result = await this.request('ledger_blockConfirmedStatus', { params: [hash] });\n\t\tif (typeof result.result == 'undefined' && typeof result.error == 'undefined') \n\t\t\tthis.reconnect('blockConfirmedStatus');\n\n\t\treturn result;\n\t}\t\n\n\t// pow\n\tasync getPow(hash:string): Promise<{ result: any; error?: string }> {\n\t\treturn await this.request('work', { params: [hash] }, 'https://explorer.qlcchain.org/api/node');\n\t}\n\t// pow END\n\n\t// net\n\tasync syncing(): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('net_syncing', { params: [] });\n\t}\n\n\tasync connectPeersInfo(): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('net_connectPeersInfo', { params: [] });\n\t}\n\n\tasync peersCount(): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('net_peersCount', { params: [] });\n\t}\n\n\t\n\t// net END\n\n\t// desktop\n\tasync blocksCountMain(): Promise<{ result: any; error?: string }> {\n\t\treturn await this.request('ledger_blocksCount', { params: [] }, environment.mainRpcUrl[environment.qlcChainNetwork]);\n\t}\n\t\n\n\tasync updates(): Promise<{ result: any; error?: string }> {\n\t\tconst type = environment.desktop ? 'desktop' : 'web';\n\t\tconst version = environment.version;\n\n\t\treturn await this.request('updates', { params: [type,version] }, 'https://explorer.qlcchain.org/api/updates');\n\t}\n\n\tasync nodeInfo(): Promise<{ result: any; error?: string }> {\n\t\treturn await this.request('info', { params: [] }, 'https://explorer.qlcchain.org/api/node');\n\t}\n\n\tasync nodeVersion(desktopVersion, nodeVersion, platform, arch): Promise<{ result: any; error?: string }> {\n\t\treturn await this.request('version', { params: [desktopVersion, nodeVersion, platform, arch] }, 'https://explorer.qlcchain.org/api/node');\n\t}\n\n\tasync minerVersion(desktopVersion, minerVersion, platform, arch): Promise<{ result: any; error?: string }> {\n\t\treturn await this.request('miner', { params: [desktopVersion, minerVersion, platform, arch] }, 'https://explorer.qlcchain.org/api/node');\n\t}\n\n\tasync poolVersion(desktopVersion, poolVersion, platform, arch): Promise<{ result: any; error?: string }> {\n\t\treturn await this.request('pool', { params: [desktopVersion, poolVersion, platform, arch] }, 'https://explorer.qlcchain.org/api/node');\n\t}\n\n\t// desktop END\n\n\t// news\n\n\tasync news(): Promise<{ result: any; error?: string }> {\n\t\treturn await this.request('news', { params: [] }, 'https://explorer.qlcchain.org/api/news');\n\t}\n\n\tasync newsArchive(): Promise<{ result: any; error?: string }> {\n\t\treturn await this.request('archive', { params: [] }, 'https://explorer.qlcchain.org/api/news');\n\t}\n\t\n\t// news END\n\n\t// portal\n\n\tasync portalApply(data): Promise<{ status: any; error?: string }> {\n\t\treturn await this.request('apply', { params: [data] }, 'https://explorer.qlcchain.org/api/portal');\n\t}\n\t\n\t// portal END\n\n\n\t// pov\n\n\tasync getFittestHeader(): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('pov_getFittestHeader', { params: [ 0 ] });\n\t}\n\n\tasync getLatestHeader(): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('pov_getLatestHeader', { params: [ ] });\n\t}\n\n\tasync getHeaderByHeight(height): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('pov_getHeaderByHeight', { params: [ height ] });\n\t}\n\n\tasync batchGetHeadersByHeight(start, count = 10, direction = false): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('pov_batchGetHeadersByHeight', { params: [ start, count, direction ] });\n\t}\n\n\tasync getHeaderByHash(height): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('pov_getHeaderByHash', { params: [ height ] });\n\t}\n\n\tasync getBlockByHash(hash, offset = 0, limit = 100): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('pov_getBlockByHash', { params: [ hash, offset, limit ] });\n\t}\n\n\tasync getBlockByHeight(height, offset = 0, limit = 100): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('pov_getBlockByHeight', { params: [ Number(height), offset, limit ] });\n\t}\n\n\tasync getMinerStats(): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('pov_getMinerStats', { params: [ [] ] });\n\t}\n\n\tasync getLastNHourInfo(beginTime = 0, endTime = 0): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('pov_getLastNHourInfo', { params: [ beginTime, endTime ] });\n\t}\n\n\tasync getHashInfo(beginBlock = 0, endBlock = 0): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('pov_getHashInfo', { params: [ beginBlock, endBlock ] });\n\t}\n\n\tasync pov_getLatestAccountState(account): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('pov_getLatestAccountState', { params: [ account ] });\n\t}\n\n\tasync pov_getRepStats(): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('pov_getRepStats', { params: [ [] ] });\n\t}\t\n\n\tasync pov_getPovStatus(): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('pov_getPovStatus', { params: [ ] });\n\t}\t\n\n\t// pov end\n\n\t// mining \n\n\t\n\tasync getAvailRewardInfo(address): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('miner_getAvailRewardInfo', { params: [ address ] });\n\t}\n\n\tasync getRewardSendBlock(coinbase,beneficial,startHeight,endHeight,rewardBlocks,rewardAmount): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('miner_getRewardSendBlock', { params: [ {\n\t\t\tcoinbase,\n\t\t\tbeneficial,\n            startHeight,\n            endHeight,\n\t\t\trewardBlocks,\n\t\t\trewardAmount: Number(rewardAmount)\n\t\t} ] });\n\t}\n\t\n\n\tasync getRewardRecvBlockBySendHash(sentHash): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('miner_getRewardRecvBlockBySendHash', { params: [ sentHash ] });\n\t}\n\n\tasync getRewardRecvBlock(block): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('miner_getRewardRecvBlock', { params: [ block ] });\n\t}\n\n\tasync miner_getRewardHistory(qlcAddress): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('miner_getRewardHistory', { params: [ qlcAddress ] });\n\t}\n\n\t// mining end\n\n\t// representation\n\n\tasync rep_getAvailRewardInfo(address): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('rep_getAvailRewardInfo', { params: [ address ] });\n\t}\n\n\tasync rep_getRewardSendBlock(account,beneficial,startHeight,endHeight,rewardBlocks,rewardAmount): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('rep_getRewardSendBlock', { params: [ {\n\t\t\taccount,\n\t\t\tbeneficial,\n            startHeight,\n            endHeight,\n\t\t\trewardBlocks,\n\t\t\trewardAmount: Number(rewardAmount)\n\t\t} ] });\n\t}\n\t\n\tasync rep_getRewardRecvBlockBySendHash(sentHash): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('rep_getRewardRecvBlockBySendHash', { params: [ sentHash ] });\n\t}\n\n\tasync rep_getRewardRecvBlock(block): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('rep_getRewardRecvBlock', { params: [ block ] });\n\t}\t\n\n\tasync rep_getRewardHistory(qlcAddress): Promise<{ result: any; error?: any }> {\n\t\treturn await this.request('rep_getRewardHistory', { params: [ qlcAddress ] });\n\t}\n\n\t// representation end\n}\n","import { Injectable } from '@angular/core';\nimport set = Reflect.set;\n\nexport type WalletStore = 'localStorage' | 'none';\nexport type PoWSource = 'server' | 'clientCPU' | 'clientWebGL' | 'best';\n\ninterface AppSettings {\n\tdisplayDenomination: string;\n\twalletStore: string;\n\tdisplayCurrency: string;\n\tlockOnClose: number;\n\tlockInactivityMinutes: number;\n\tpowSource: PoWSource;\n\tlang: string;\n\treceive: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AppSettingsService {\n\tstoreKey = `sms-billing-appsettings`;\n\n\tsettings: AppSettings = {\n\t\tdisplayDenomination: 'mqlc',\n\t\twalletStore: 'localStorage',\n\t\tdisplayCurrency: 'USD',\n\t\tlockOnClose: 1,\n\t\tlockInactivityMinutes: 30,\n\t\tpowSource: 'best',\n\t\tlang: 'en',\n\t\treceive: 'manual'\n\t};\n\n\tconstructor() {}\n\n\tloadAppSettings() {\n\t\tlet settings: AppSettings = this.settings;\n\t\tconst settingsStore = localStorage.getItem(this.storeKey);\n\t\tif (settingsStore) {\n\t\t\tsettings = JSON.parse(settingsStore);\n\t\t}\n\t\tthis.settings = Object.assign(this.settings, settings);\n\n\t\treturn this.settings;\n\t}\n\n\tsaveAppSettings() {\n\t\tlocalStorage.setItem(this.storeKey, JSON.stringify(this.settings));\n\t}\n\n\tgetAppSetting(key) {\n\t\treturn this.settings[key] || null;\n\t}\n\n\tsetAppSetting(key, value) {\n\t\tthis.settings[key] = value;\n\t\tthis.saveAppSettings();\n\t}\n\n\tsetAppSettings(settingsObject) {\n\t\tfor (const key in settingsObject) {\n\t\t\tif (!settingsObject.hasOwnProperty(key)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.settings[key] = settingsObject[key];\n\t\t}\n\n\t\tthis.saveAppSettings();\n\t}\n\n\tclearAppSettings() {\n\t\tlocalStorage.removeItem(this.storeKey);\n\t\tthis.settings = {\n\t\t\tdisplayDenomination: 'mqlc',\n\t\t\twalletStore: 'localStorage',\n\t\t\tdisplayCurrency: 'USD',\n\t\t\tlockOnClose: 1,\n\t\t\tlockInactivityMinutes: 30,\n\t\t\tpowSource: 'best',\n\t\t\tlang: 'en',\n\t\t\treceive: 'manual'\n\t\t};\n\t}\n}\n","import * as CryptoJS from 'crypto-js';\nimport * as bip39 from 'bip39';\nimport Chainx, { Account, ApiBase, WsProvider } from 'chainx.js';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { WalletService } from './wallet.service';\nimport { AddressBookService } from './address-book.service';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChainxAccountService {\n  private chainxApi;\n  private chainx;\n  private apiUrl;\n\n  divisor = 100000000;\n\n  constructor(\n    private http: HttpClient,\n    private walletService: WalletService,\n    private addressBook: AddressBookService\n  ) {\n    /*this.chainxApi = new ApiBase(new WsProvider(environment.chainxWs[environment.chainxNetworkDefault]));\n    this.chainx = new Chainx(environment.chainxWs[environment.chainxNetworkDefault]);\n    this.chainx.on('disconnected', () => {}); // websocket disconnected\n    this.chainx.on('error', () => {}); // an error occurs\n    this.chainx.on('connected', () => {}); // websocket connected\n    this.chainx.on('ready', () => {}); // initialization is done\n\n    this.apiUrl = environment.chainxApi[environment.chainxNetworkDefault];*/\n  }\n\n  private async signAndSend(extrinsic, accountFrom) {\n    const account = this.walletService.wallet.chainxAccounts.find(e => e.id === accountFrom);\n    let privateKey = this.decrypt(account.wif);\n\n    if (account.mnemonic) {\n      privateKey = (this.account(privateKey)).privateKey();\n    }\n\n    return new Promise((resolve, reject) => {\n      extrinsic.signAndSend(privateKey, (error, response) => {\n        if (error) {\n          return reject(error);\n        }\n\n        if (response.status === 'Finalized') {\n          if (response.result === 'ExtrinsicSuccess') {\n            return resolve(response);\n          }\n          if (response.result === 'ExtrinsicFailed') {\n            return reject(response);\n          }\n        }\n      });\n    });\n  }\n\n  async get(url) {\n    return await this.http\n      .get(`${this.apiUrl}${url}`)\n      .toPromise()\n      .then(res => {\n        return res;\n      })\n      .catch(err => {\n        if (err.status === 500 || err.status === 0) {\n        }\n        throw err;\n      });\n  }\n\n  account(wif) {\n    return Account.from(wif);\n  }\n\n  async getAssetsByAccount(address, pageIndex = 0, pageSize = 10) {\n    await this.chainx.isRpcReady();\n\n    return await this.chainx.asset.getAssetsByAccount(address, pageIndex, pageSize);\n  }\n\n  async getCandidates() {\n    await this.chainx.isRpcReady();\n\n    return this.chainx.stake.getIntentions();\n  }\n\n  async getNominationRecords(address) {\n    await this.chainx.isRpcReady();\n\n    return this.chainx.stake.getNominationRecords(address);\n  }\n\n  async getStakingDividendByAccount(account) {\n    await this.chainxApi.isRpcReady;\n\n    return await this.chainxApi.rpc.chainx.getStakingDividendByAccount(account);\n  }\n\n  async getTransfers(blockNumber) {\n    await this.chainxApi.isReady;\n\n\n    // timestamp found: [[entries]]->\n    const blockHash = await this.chainxApi.rpc.chain.getBlockHash(blockNumber);\n    const block = await this.chainxApi.rpc.chainx.getBlockByNumber(blockNumber);\n    // console.log(`Block hash of block number: ${blockNumber}`);\n    console.log(block);\n    //\n    // const extrinsic = block.block.extrinsics;\n    // const header = block.block.header;\n    // console.log(extrinsic[1]);\n    // console.log(header.number);\n    try {\n      // const blockData = await this.chainxApi.rpc.chain.getBlock(header.number);\n      const blockData = await this.chainxApi.rpc.chain.getBlock(blockHash);\n      // console.log(blockData.block.extrinsics[0].args[0].raw); // get timestamp\n      console.log(blockData.block.extrinsics[0].args[0].raw);\n    }\n    catch (e) {\n      console.log(e.message);\n    }\n\n    // const extrinsic = this.chainxApi.rpc.chain.getBlock();\n    // const extrinsic = this.chainx.chain.getInfo();\n\n    // const a = await this.chainxApi.rpc.chain.getFinalizedHead();\n    // console.log(a);\n    // console.log(this.chainxApi.rpc);\n    //\n    // // console.log(this.chainxApi.rpc);\n    // // this.chainxApi.rpc.subscribe.getFinalizedHead(e => console.log(e));\n    // const extrinsic = this.chainxApi.rpc.chain.subscribeNewHead;\n    //\n    // // this.chainxApi.rpc.author.submitAndWatchExtrinsic(extrinsic).then(res => console.log(res)).catch(err => console.log(err));\n    // this.chainxApi.rpc.author.submitAndWatchExtrinsic(a, (e, i) => {\n    //   console.log(e.Description());\n    //   console.log(i);\n    // });\n    // console.log(blockHash);\n    // const block = await this.chainxApi.rpc.chain.getBlock(blockHash);\n    // console.log(block);\n\n    // await this.chainxApi.rpc.chain.subscribe;\n\n    // let ws = new WebSocket('wss://w1.chainx.org/ws');\n    //\n    // var params = {\n    //   type: 'subscribe',\n    //   channels: [{\n    //     method: 'chain_getBlock',\n    //     product_ids: []\n    //   }]\n    // }\n    //\n    // ws.onmessage = (msg) => {\n    //   console.log(msg);\n    // }\n\n    // let ws = new WebSocket('wss://w1.chainx.org/ws');\n    //\n    // ws.onopen = () => {\n    //   ws.send(JSON.stringify({\n    //     command: 'subscribe',\n    //     identifier: {\n    //       channel: 'ArticlesChannel'\n    //     }}));\n    // };\n    //\n    // ws.onmessage = (msg) => {\n    //   console.log('here');\n    //   console.log(JSON.parse(msg.data).message);\n    // };\n    // const blockHash = '0x55ac32e30d94f5dcbe33f5a85d800d779916ac855062bb7912cec5df7ff19add';\n    // console.log('here');\n    // const extrinic = this.chainx.asset.getWithdrawalListByAccount('0x47a35c82c81b566eae88984fde6c3bd27f3044d4ebe1435994e26bcb880a823a', 0, 10).then(a => console.log(a)).catch(e => console.log);\n    // console.log(extrinic);\n\n\n    // const a = await this.signAndSend(extrinic, '5DgdnWU2rbiphaq2eu5Hvyumu3PvQd6YtKfxPN4vETmRcx8k');\n    // console.log(a);\n    // const transferCallIndex = Buffer.from(this.chainxApi.tx.xAssets.transfer.callIndex).toString('hex');\n    // console.log(transferCallIndex);\n    // const estrinsics = block.block.extrinsics;\n    // const transfers = [];\n    //\n    // for (let i = 0; i < estrinsics.length; i++) {\n    //   const e = estrinsics[i];\n    //   console.log(e);\n    //   if (Buffer.from(e.method.callIndex).toString('hex') === transferCallIndex) {\n    //     const allEvents = await this.chainxApi.query.system.events.at(blockHash);\n    //     const events = allEvents\n    //       .filter(({ phase }) => phase.type === 'ApplyExtrinsic' && phase.value.eqn(i))\n    //       .map(event => {\n    //         const o = event.toJSON();\n    //         o.method = event.event.data.method;\n    //         return o;\n    //       });\n    //     const result = events[events.length - 1].method;\n    //\n    //     transfers.push({\n    //       index: i,\n    //       blockHash: blockHash.toHex(),\n    //       blockNumber: blockNumber,\n    //       result,\n    //       tx: {\n    //         signature: e.signature.toJSON(),\n    //         method: e.method.toJSON(),\n    //       },\n    //       events: events,\n    //       txHash: e.hash.toHex(),\n    //     });\n    //   }\n    // }\n    //\n    // return transfers;\n  }\n\n  async claim(data) {\n    await this.chainx.isRpcReady();\n\n    const extrinsic = this.chainx.stake.voteClaim(data.target);\n\n    return await this.signAndSend(extrinsic, data.sender);\n  }\n\n  async nominate(data) {\n    await this.chainx.isRpcReady();\n\n    const extrinsic = this.chainx.stake.nominate(data.target, data.amount, data.memo);\n\n    return await this.signAndSend(extrinsic, data.sender);\n  }\n\n  async unnominate(data) {\n    await this.chainx.isRpcReady();\n\n    const extrinsic = this.chainx.stake.unnominate(data.target, data.amount, data.memo);\n\n    return await this.signAndSend(extrinsic, data.sender);\n  }\n\n  async transfer(data) {\n    await this.chainx.isRpcReady();\n\n    const extrinsic = this.chainx.asset.transfer(data.destination, 'PCX', data.amount, data.memo);\n\n    return await this.signAndSend(extrinsic, data.sender);\n  }\n\n  async unfreeze(data) {\n    await this.chainx.isRpcReady();\n\n    const extrinsic = this.chainx.stake.unfreeze(data.target, data.revocationIndex);\n\n    return await this.signAndSend(extrinsic, data.sender);\n  }\n\n  async checkPrivateKey(privateKey) {\n    let valid = true;\n\n    if (this.walletService.wallet.chainxAccounts.length === 0) {\n      return valid;\n    }\n\n    for (const chainxAccount of this.walletService.wallet.chainxAccounts) {\n      if (!chainxAccount.mnemonic) {\n        if (privateKey === this.decrypt(chainxAccount.wif)) {\n          valid = false;\n\n          break;\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  async checkMnemonic(mnemonic) {\n    let valid = true;\n\n    if (!bip39.validateMnemonic(mnemonic)) {\n      return !valid;\n    }\n\n    if (this.walletService.wallet.chainxAccounts.length === 0) {\n      return valid;\n    }\n\n    for (const chainxAccount of this.walletService.wallet.chainxAccounts) {\n      if (chainxAccount.mnemonic) {\n        if (mnemonic === this.decrypt(chainxAccount.wif)) {\n          valid = false;\n\n          break;\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  getNetwork() {\n    return environment.chainxNetwork[environment.chainxNetworkDefault];\n  }\n\n  getExplorer() {\n    return environment.chainxExplorer[environment.chainxNetworkDefault];\n  }\n\n  getPublicKey(address) {\n    return Account.decodeAddress(address);\n  }\n\n  getPublicAddress(publicKey) {\n    return Account.encodeAddress(publicKey);\n  }\n\n  decrypt(data) {\n    const decryptedData = CryptoJS.AES.decrypt(data.toString(), this.walletService.wallet.seed);\n    return decryptedData.toString(CryptoJS.enc.Utf8);\n  }\n\n  encrypt(data) {\n    return CryptoJS.AES.encrypt(data, this.walletService.wallet.seed).toString();\n  }\n\n  async createAccount(wif = null, name = '') {\n    let mnemonic = wif === null;\n\n    if (wif !== null && bip39.validateMnemonic(wif)) {\n      mnemonic = true;\n    }\n\n    wif = !wif ? Account.newMnemonic() : wif;\n\n    const account = await this.account(wif);\n\n    Account.setNet(environment.chainxNetwork[environment.chainxNetworkDefault].toLowerCase());\n\n    const address = Account.encodeAddress(account.publicKey());\n    const chainxAccount = {\n      id: address,\n      index: this.walletService.wallet.chainxAccounts.length,\n      balances: null,\n      addressBookName: name,\n      wif: this.encrypt(wif),\n      mnemonic\n    };\n\n    if (name !== '') {\n      await this.addressBook.saveAddress(address, name);\n    }\n\n    this.walletService.wallet.chainxAccounts.push(chainxAccount);\n    this.walletService.saveWalletExport();\n\n    return chainxAccount;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\nimport { environment } from 'src/environments/environment';\n// import { testContract } from 'src/constants/abi/testContract';\nimport { neo5toerc20swap } from 'src/constants/abi/neo5toerc20swap';\nimport axios from 'axios';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EtherWalletService {\nswapHistory: any[];\nweb3: any;\naccounts: any;\nmetamask: boolean;\naddress: any = environment.etherswapSmartContract[environment.neoNetwork];\nprivate url: string = environment.neo5toerc20swapwrapperurl[environment.neoNetwork];\nprivate neo5toerc20swapjwtauth = environment.neo5toerc20swapjwtauth[environment.neoNetwork];\nabi = neo5toerc20swap;\nselectedAddress: string = '';\nbalances = {\n  ETH: 0,\n  QLC: 0\n};\ntransactions: any[];\nerc20Transactions: any[];\ninternalTransactions: any[];\n\n  constructor() {\n    if ((window as any).ethereum ||\n    ((window as any).web3 && (window as any).web3.currentProvider)) {\n      // (window as any).ethereum.enable();\n      this.web3 = new Web3((window as any).web3.currentProvider);\n    } else {\n      console.log('Please connect the metamask first!');\n      this.metamask = false;\n    }\n\n    this.web3?.currentProvider.publicConfigStore.on('update', (data) => {\n      const ethAddress = (window as any).web3.currentProvider.selectedAddress;\n      if (ethAddress) {\n        this.metamask = true;\n      } else {\n        this.metamask = false;\n      }\n      if (this.selectedAddress !== ethAddress) {\n        this.accounts = [ ethAddress ];\n        this.selectedAddress = ethAddress;\n        this.getBalances(ethAddress);\n        this.getAllTransactions(ethAddress);\n        this.getswapHistory(ethAddress);\n        this.getAccounts();\n      }\n    });\n  }\n  async getswapHistory(address: any) {\n    const swaptransactions: any = await this.swapInfosByAddress(\n      address,\n      1,\n      20\n    );\n    this.swapHistory = swaptransactions.data.infos;\n  }\n  async getBalances(address) {\n    if (address && address != '') {\n      // const qlcBalance = await this.getTokenBalance(address, this.address);\n      console.log('getBalances.address', address);\n      const qlcBalance: any = await this.getEthQLCBalance(address);\n      console.log('getBalances.qlcbalance', localStorage.getItem('qlcbalance'));\n      const qlcBalanceNumber: any = localStorage.getItem('qlcbalance');\n      this.balances.QLC = qlcBalanceNumber;\n      // const ethBalance = await this.getEthBalanceApi(address);\n      const ethBalance = await this.getEthBalance(address);\n      const ethBalanceNumber = new BigNumber(ethBalance)\n      .dividedBy(Math.pow(10, 18))\n      .toNumber();\n      console.log('getBalances.ethBalance', ethBalance);\n      console.log('getBalances.ethBalanceNumber', ethBalanceNumber);\n      this.balances.ETH = ethBalanceNumber;\n      console.log('this.balances', this.balances);\n    } else {\n      this.balances = {\n        QLC: 0,\n        ETH: 0\n      };\n    }\n  }\n\n  async getAllTransactions(address) {\n    this.transactions = [];\n    this.erc20Transactions = [];\n    this.internalTransactions = [];\n\n    if (address && address != '') {\n      const transactions:any = await this.getTransactions(address, 10);\n      if (transactions.data.result) {\n        this.transactions = transactions.data.result;\n      }\n      const erc20Transactions = await this.getERC20Transactions(address, 10);\n      if (erc20Transactions.data.result) {\n        this.erc20Transactions = erc20Transactions.data.result;\n      }\n      const internalTransactions = await this.getInternalTransactions(address, 10);\n      if (internalTransactions.data.result) {\n        this.internalTransactions = internalTransactions.data.result;\n      }\n    }\n  }\n  async getEthBalanceApi(address: string) {\n    const balance = await axios\n      .get(`${environment.ethEtherscanApi[environment.ethNetworkDefault]}/api?module=account&action=balance&address=${address}&tag=latest&apikey=${environment.ethEtherscanApiKey}`);\n    return balance;\n  }\n  async getTokenBalance(address: string, contractaddress: string) {\n    const balance = await axios\n      .get(`${environment.ethEtherscanApi[environment.ethNetworkDefault]}/api?module=account&action=tokenbalance&address=${address}&contractaddress=${contractaddress}&tag=latest&apikey=${environment.ethEtherscanApiKey}`)\n    return balance;\n  }\n  async getTransactions(address: string, numOfTransactions: number = null) {\n    const size = numOfTransactions ? `&page=1&offset=${numOfTransactions}` : '';\n    const transactions = await axios\n      .get(`${environment.ethEtherscanApi[environment.ethNetworkDefault]}/api?module=account&action=txlist&address=${address}&startblock=0&endblock=99999999&sort=desc&apikey=${environment.ethEtherscanApiKey}${size}`);\n    return transactions;\n  }\n\n  async getERC20Transactions(address: string, numOfTransactions: number = null) {\n    const size = numOfTransactions ? `&page=1&offset=${numOfTransactions}` : '';\n    const transactions = await axios.get(`${environment.ethEtherscanApi[environment.ethNetworkDefault]}/api?module=account&action=tokentx&address=${address}&startblock=0&endblock=99999999&sort=desc&apikey=${environment.ethEtherscanApiKey}${size}`);\n    return transactions;\n  }\n\n  async getInternalTransactions(address: string, numOfTransactions: number = null) {\n    const size = numOfTransactions ? `&page=1&offset=${numOfTransactions}` : '';\n    const transactions = await axios\n    .get(`${environment.ethEtherscanApi[environment.ethNetworkDefault]}/api?module=account&action=txlistinternal&address=${address}&startblock=0&endblock=99999999&sort=desc&apikey=${environment.ethEtherscanApiKey}${size}`);\n    return transactions;\n  }\n\n  getDefaultNetwork() {\n    return environment.ethNetworkDefault;\n  }\n\n  getExplorer() {\n    return environment.ethExplorer[environment.ethNetworkDefault];\n  }\n\n  async connectWallet() {\n    try {\n      const test = await (window as any).ethereum.enable();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // get erc20 account address\n  async getAccounts() {\n    // tslint:disable-next-line: new-parens\n    return await new this.web3.eth.getAccounts().then(account => {\n      console.log('ether-wallet.service.getAccounts.account', account);\n      if (account) {\n        localStorage.setItem('etheraccount', account[0]);\n        return account;\n      }\n     }).catch(err => {\n       return err;\n     });\n  }\n    // get erc20 account address\n    async getEthAccounts() {\n      // tslint:disable-next-line: new-parens\n      return await new this.web3.eth.getAccounts().then(account => {\n        console.log('ether-wallet.service.getEthAccounts.account', account);\n        return account;\n      });\n    }\n    // get erc20 account address\n    async getEthBalance(address: any) {\n      // tslint:disable-next-line: new-parens\n      return await new this.web3.eth.getBalance(address).then(balance =>{\n        console.log('ether-wallet.service.getEthBalance.balance', balance);\n        return balance;\n      });\n    }\n    // get erc20 three gasPrice\n    async getThreeGasPrice() {\n      // tslint:disable-next-line: new-parens\n      // tslint:disable-next-line: max-line-length\n      const getThreeGasPriceUrl = 'https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=DJV72718MY7XV8EMXTUY6DM1KCV2C6X14T';\n      return axios.get(getThreeGasPriceUrl).then(data => {\n        console.log('ether-wallet.service.getThreeGasPrice.data', data);\n        return data;\n      }).catch(err => {\n        return err;\n      });\n    }\n  // depost start method:post\n  // deposit/neoTransactionConfirmed\n  async neoTransactionConfirmed(txid: any) {\n    const data = await axios.post(this.url + '/deposit/neoTransactionConfirmed',\n    {\n      hash: txid},\n  {\n    headers: {\n      authorization: this.neo5toerc20swapjwtauth.authorization\n  }\n    });\n    return data;\n  }\n    // deposit/getEthOwnerSign\n    async getEthOwnerSign(txid: any) {\n      const data = await axios.post(this.url + '/deposit/getEthOwnerSign',  {\n          hash: txid\n      },\n      {\n        headers: {\n          authorization: this.neo5toerc20swapjwtauth.authorization\n      }\n        }\n      );\n      return data;\n    }\n        // deposit/packNeoTransaction\n        async packNeoTransaction(amount: any, nep5SenderAddr: any, erc20ReceiverAddr: any) {\n          const data = await axios.post(this.url + '/deposit/packNeoTransaction', {\n            amount,\n            nep5SenderAddr,\n            erc20ReceiverAddr\n            },\n            {\n              headers: {\n                authorization: this.neo5toerc20swapjwtauth.authorization\n            }\n              }\n          );\n          return data;\n        }\n        // deposit/sendNeoTransaction\n        async sendNeoTransaction(signature: string, txHash: string, publicKey: string, nep5SenderAddr: string) {\n          const data = await axios.post(this.url + '/deposit/sendNeoTransaction', {\n            signature,\n            txHash,\n            publicKey,\n            nep5SenderAddr\n            },\n            {\n              headers: {\n                authorization: this.neo5toerc20swapjwtauth.authorization\n            }\n              }\n          );\n          return data;\n        }\n        // depositethTransactionConfirmed\n        async depositethTransactionConfirmed(txid: any) {\n          const data = await axios.post(this.url + '/deposit/ethTransactionConfirmed', {\n              hash: txid\n          },\n          {\n            headers: {\n              authorization: this.neo5toerc20swapjwtauth.authorization\n          }\n            }\n          );\n          return data;\n        }\n        // deposit/ethTransactionSent\n        async depositethTransactionSent(txid: any) {\n          const data = await axios.post(this.url + '/deposit/ethTransactionSent', {\n              hash: txid\n          },\n          {\n            headers: {\n              authorization: this.neo5toerc20swapjwtauth.authorization\n          }\n            }\n          );\n          return data;\n        }\n        // deposit end\n\n        // withdraw start method:post\n        // withdrawethTransactionConfirmed\n        async withdrawethTransactionConfirmed(txid: any) {\n          const data = await axios.post(this.url + '/withdraw/ethTransactionConfirmed', {\n              hash: txid\n          },\n          {\n            headers: {\n              authorization: this.neo5toerc20swapjwtauth.authorization\n          }\n            }\n          );\n          return data;\n        }\n        // withdraw/ethTransactionSent\n        async withdrawethTransactionSent(txid: any) {\n          const data = await axios.post(this.url + '/withdraw/ethTransactionSent', {\n              hash: txid\n          },\n          {\n            headers: {\n              authorization: this.neo5toerc20swapjwtauth.authorization\n          }\n            }\n          );\n          return data;\n        }\n        // withdraw end\n\n    // info start method:get\n    // info/checkNeoTransaction\n    async checkNeoTransaction(txid: any) {\n      const data = await axios.get(this.url + '/info/checkNeoTransaction', {\n      params: {\n          hash: txid\n      },\n      headers: {\n        authorization: this.neo5toerc20swapjwtauth.authorization\n    }\n      });\n      return data;\n    }\n    // info/checkEthTransaction\n    async checkEthTransaction(txid: any) {\n      const data = await axios.get(this.url + '/info/checkEthTransaction', {\n      params: {\n          hash: txid\n      },\n      headers: {\n        authorization: this.neo5toerc20swapjwtauth.authorization\n    }\n      });\n      return data;\n    }\n    // info/swapInfoByTxHash\n    async swapInfoByTxHash(txid: any) {\n      try {\n        const data: any = await axios.get(this.url + '/info/swapInfoByTxHash', {\n          params: {\n              hash: txid\n          },\n          headers: {\n            authorization: this.neo5toerc20swapjwtauth.authorization\n        }\n          });\n        return data;\n      } catch (error) {\n        return 500;\n      }\n    }\n\n    // info/swapInfoList\n    async swapInfoList(page: any, pageSize: any) {\n      const data = await axios.get(this.url + '/info/swapInfoList', {\n      params: {\n          page,\n          pageSize\n      },\n      headers: {\n        authorization: this.neo5toerc20swapjwtauth.authorization\n    }\n      });\n      return data;\n    }\n\n    // info/swapInfosByAddress\n    async swapInfosByAddress(address: any, page: any, pageSize: any) {\n      const data = await axios.get(this.url + '/info/swapInfosByAddress', {\n      params: {\n          address,\n          page,\n          pageSize\n      },\n      headers: {\n        authorization: this.neo5toerc20swapjwtauth.authorization\n    }\n      });\n      return data;\n    }\n\n    // info/swapInfosByState\n    async swapInfosByState(state: any, page: any, pagesize: any) {\n      const data = await axios.get(this.url + '/info/swapInfosByState', {\n      params: {\n          state,\n          page,\n          pagesize\n      },\n      headers: {\n        authorization: this.neo5toerc20swapjwtauth.authorization\n    }\n      });\n      return data;\n    }\n\n    checkIfWallet() {\n      if (this.web3?.eth) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  // get erc20 contract balance\n  async getEthQLCBalance(account: any) {\n    if (!this.checkIfWallet()) {\n      return;\n    }\n    const Contract = await new this.web3.eth.Contract(this.abi, this.address);\n    // console.log('getEthQLCBalance.account', account);\n    Contract.methods.balanceOf(account).call().then(sum => {\n      const balance = new BigNumber(sum)\n      .dividedBy(Math.pow(10, 8))\n      .toNumber();\n      console.log('ether-wallet.service.getEthQLCBalance', balance);\n      localStorage.setItem('qlcbalance', balance.toString());\n      return balance;\n    });\n  }\n  // mint erc20 token\n  async getEthMint(amount: any, nep5Hash: any, signature: any, account: any, gasPrice?: any) {\n    const Contract = await new this.web3.eth.Contract(this.abi, this.address);\n    console.log('ether-wallet.service.getEthMint.amount', amount);\n    console.log('ether-wallet.service.getEthMint.nep5Hash', nep5Hash);\n    console.log('ether-wallet.service.getEthMint.signature', signature);\n    console.log('ether-wallet.service.getEthMint.account', account);\n    return await Contract.methods.mint(amount, nep5Hash, signature).send({\n        from: account,\n        gasPrice\n    }).then(result => {\n      localStorage.setItem('EthMinttxHash', result.transactionHash);\n      // send ethTxHash to hub\n      this.depositethTransactionSent(result.transactionHash);\n      console.log('getEthMint', result);\n      return result;\n    });\n }\n\n async estimateGasEthMint(amount: any, nep5Hash: any, signature: any, account: any, gasPrice?: any) {\n  const Contract = await new this.web3.eth.Contract(this.abi, this.address);\n  console.log('getEthMint.amount', amount);\n  console.log('getEthMint.nep5Hash', nep5Hash);\n  console.log('getEthMint.signature', signature);\n  console.log('getEthMint.account', account);\n\n  return await Contract.methods.mint(amount, nep5Hash, signature).estimateGas({\n      from: account,\n      gasPrice\n  })\n  .then( (gasAmount) => {\n    return gasAmount;\n  })\n  .catch( (error) => {\n    console.log(error);\n  });\n }\n\n // burn erc20 token\n  async getEthBurn(nep5Address: any, amount: any, account: any, gasPrice?: any): Promise<any> {\n    const Contract = await new this.web3.eth.Contract(this.abi, this.address);\n    console.log('getEthBurn.amount', amount);\n    console.log('getEthBurn.nep5Hash', nep5Address);\n    console.log('account', account);\n    return await Contract.methods.burn(nep5Address, amount).send({\n        from: account,\n        gasPrice\n    }).then(result => {\n      localStorage.setItem('txHash', result.transactionHash);\n      // send ethTxHash to hub\n      this.withdrawethTransactionSent(result.transactionHash);\n      console.log('getEthBurn.result', result);\n      return result;\n    });\n  }\n\n  async estimateGasEthBurn(nep5Address: any, amount: any, account: any, gasPrice?: any): Promise<any> {\n    const Contract = await new this.web3.eth.Contract(this.abi, this.address);\n    console.log('getEthBurn.amount', amount);\n    console.log('getEthBurn.nep5Hash', nep5Address);\n    console.log('account', account);\n    return await Contract.methods.burn(nep5Address, amount).estimateGas({\n        from: account,\n        gasPrice\n    })\n    .then( (gasAmount) => {\n      return gasAmount;\n    })\n    .catch( (error) => {\n      console.log(error);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IpcRenderer } from 'electron';\n\n\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class IpcService {\n  \n  private readonly _ipc: IpcRenderer | undefined = undefined;\n  \n  constructor() {\n       // Only load ipc if we're running inside electron\n      if (environment.desktop) {\n        this._ipc = (<any>window).require('electron').ipcRenderer;\n        /*this.on('test',(event, url) => { \n          console.log(event); \n          console.log(url);\n        });*/\n      }\n  }\n\n  public send(channel: string, data?: any): void {\n    if (this._ipc !== undefined) {\n      return this._ipc.send(channel, data);\n    }\n  }\n\n  public on(channel: string, cb: any): void {\n    if (this._ipc !== undefined) {\n      this._ipc.on(channel, cb);\n    }\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\nimport { Router, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { AppSettingsService } from './app-settings.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class LangService {\n\tlang = 'en';\n\tlanguages = ['en', 'cn'];\n\tcurrentUrl = '';\n\tactiveLinkClassString = 'active';\n\tenActive = 'active';\n\tcnActive = '';\n\tlangClass = '';\n\n\temailsendbutton = 'Subscribe for updates';\n\temailsendStatus = false;\n\temailsendbuttonDefault = 'Subscribe for updates';\n\temailsendbuttonSending = 'Sending, please wait';\n\temailsendbuttonSuccessmsg = 'CHECK YOUR E-MAIL FOR CONFIRMATION';\n\n\tconstructor(private translate: TranslateService, private router: Router, private appSettings: AppSettingsService) {\n\t\ttranslate.setDefaultLang('en');\n\t\tthis.currentUrl = this.getUrlSlug();\n\t\tconst settings = this.appSettings.settings;\n\n\t\t// console.log('langService');\n\t\tthis.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n\t\t\tthis.changeLang(event.lang);\n\t\t\tthis.loadSubscribeTranslation();\n\t\t});\n\t\tthis.router.events.subscribe(event => {\n\t\t\tif (event instanceof NavigationEnd) {\n\t\t\t\tthis.currentUrl = this.getUrlSlug();\n\t\t\t\t// console.log('currentUrl: ' + this.currentUrl);\n\t\t\t\tthis.changeLang(this.appSettings.settings.lang);\n\t\t\t\t/*this.translate.get('NAV.accounts').subscribe((res: string) => {\n                    console.log(res);\n                   });*/\n\t\t\t}\n\t\t});\n\t}\n\n\tloadSubscribeTranslation() {\n\t\tthis.translate.get('SUBSCRIBE.EMAILSENDBUTTON').subscribe((res: string) => {\n\t\t\tthis.emailsendbutton = res;\n\t\t\tthis.emailsendbuttonDefault = res;\n\t\t});\n\t\tthis.translate.get('SUBSCRIBE.EMAILSENDBUTTONSENDING').subscribe((res: string) => {\n\t\t\tthis.emailsendbuttonSending = res;\n\t\t});\n\t\tthis.translate.get('SUBSCRIBE.EMAILSENDBUTTONSUCCESSMSG').subscribe((res: string) => {\n\t\t\tthis.emailsendbuttonSuccessmsg = res;\n\t\t});\n\t}\n\n\tgetUrlSlug() {\n\t\tconst hash = this.router.url.split('#');\n\t\tconst path = hash[0].split('/');\n\t\tif (path[1] === '401.shtml') {\n\t\t\tpath[1] = '';\n\t\t}\n\t\tlet currentUrlSlug = path[1];\n\t\tif (this.slugIsLang(currentUrlSlug)) {\n\t\t\t// console.log('lang: ' + path[1]);\n\t\t\tif (path[2] != null && path[2] !== '401.shtml') {\n\t\t\t\tcurrentUrlSlug = path[2];\n\t\t\t} else {\n\t\t\t\tcurrentUrlSlug = '';\n\t\t\t}\n\t\t}\n\t\t// console.log(currentUrlSlug);\n\t\treturn currentUrlSlug;\n\t}\n\n\tgetCustomUrlSlug(slug) {\n\t\tconst hash = slug.split('#');\n\t\tconst path = hash[0].split('/');\n\t\tif (path[1] === '401.shtml') {\n\t\t\tpath[1] = '';\n\t\t}\n\t\tlet currentUrlSlug = path[1];\n\t\tif (this.slugIsLang(currentUrlSlug)) {\n\t\t\t// console.log('lang: ' + path[1]);\n\t\t\tif (path[2] != null && path[2] !== '401.shtml') {\n\t\t\t\tcurrentUrlSlug = path[2];\n\t\t\t} else {\n\t\t\t\tcurrentUrlSlug = '';\n\t\t\t}\n\t\t}\n\t\t// console.log(currentUrlSlug);\n\t\treturn currentUrlSlug;\n\t}\n\n\tslugIsLang(lang) {\n\t\tif (this.languages.indexOf(lang) !== -1) {\n\t\t\tif (lang !== this.lang) {\n\t\t\t\tthis.changeLang(lang);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tchangeLang(lang: string) {\n\t\t// console.log('changeLang' + lang);\n\t\tthis.enActive = '';\n\t\tthis.cnActive = '';\n\t\tthis.langClass = '';\n\t\tswitch (lang) {\n\t\t\tcase 'cn':\n\t\t\t\tthis.lang = 'cn';\n\t\t\t\tthis.cnActive = this.activeLinkClassString;\n\t\t\t\tthis.translate.use('cn');\n\t\t\t\tbreak;\n\t\t\tcase 'en':\n\t\t\t\tthis.lang = 'en';\n\t\t\t\tthis.enActive = this.activeLinkClassString;\n\t\t\t\tthis.translate.use('en');\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.lang = 'en';\n\t\t\t\tthis.enActive = this.activeLinkClassString;\n\t\t\t\tthis.translate.use('en');\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport Neon, { settings } from '@cityofzion/neon-js';\nimport { wallet } from '@cityofzion/neon-js';\nimport { wallet as walletCore } from '@cityofzion/neon-core';\nimport {rpc} from '@cityofzion/neon-js'\nimport { api } from '@cityofzion/neon-js';\nimport { u } from '@cityofzion/neon-js';\nimport { nep5 } from '@cityofzion/neon-js';\nimport { WalletService } from './wallet.service';\nimport { HttpClient } from '@angular/common/http';\nimport BigNumber from 'bignumber.js';\nimport { AddressBookService } from './address-book.service';\nimport { timer } from 'rxjs';\nimport { NotificationService } from './notification.service';\nimport { sc, tx } from '@cityofzion/neon-core';\n\nimport { environment } from 'src/environments/environment';\nimport { Provider,\n  filterHttpsOnly,\n  findGoodNodesFromHeight,\n  getBestUrl,\n  PastTransaction,\n  RpcNode } from '@cityofzion/neon-api/lib/provider/common';\nimport axios from 'axios';\n\nimport {\n  NeoscanBalance,\n  NeoscanClaim,\n  NeoscanPastTx,\n  NeoscanTx,\n  NeoscanV1GetBalanceResponse,\n  NeoscanV1GetClaimableResponse,\n  NeoscanV1GetHeightResponse,\n  NeoscanV1GetUnclaimedResponse\n} from '@cityofzion/neon-api/lib/provider/neoscan/responses';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NeoWalletService {\n\n  MIN_PASSPHRASE_LEN = 4;\n\n  private apiAddress = environment.neoScanApi[environment.neoNetwork];\n  private network = environment.neonNetwork[environment.neoNetwork];\n  private neoscan = environment.neoScan[environment.neoNetwork];\n  private neoswap = environment.swapUrl[environment.neoNetwork];\n  private neotube = environment.neotube[environment.neoNetwork];\n\n  private smartContractScript = environment.neoSmartContract[environment.neoNetwork];\n  private neoswapsmartContractScript = environment.neo5swapSmartContract[environment.neoNetwork];\n  private neoqlcsmartContractScript = environment.neo5QLCSmartContract[environment.neoNetwork];\n\n  tokenList = [];\n\n  claimingTimer = null;\n\n  selectedNode = '';\n\n  constructor(\n    private walletService: WalletService,\n    private http: HttpClient,\n    private addressBook: AddressBookService,\n    private notificationService: NotificationService\n  ) {\n    const tokenList = require('../../assets/data/neoTokenList_' + environment.neoNetwork + '.json');\n    this.tokenList = tokenList;\n   }\n\n  getNetwork() {\n    return this.network;\n  }\n\n  getExplorer() {\n    return this.neoscan;\n  }\n\n  private async request(data): Promise<any> {\n    try {\n\t\tconst returnData = await this.http\n\t\t\t.get(this.apiAddress + data)\n\t\t\t.toPromise()\n\t\t\t.then(res => {\n\t\t\t\treturn res;\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (err.status === 500 || err.status === 0) {\n\t\t\t\t\t// Hard error\n        }\n        if (err.status === 404) {\n          return err;\n        }\n\t\t\t\tthrow err;\n      });\n      \n      return returnData;\n    } catch (e) {\n      return e;\n    }\n\t}\n\n  async checkPrivateKey(wif) {\n    return wallet.isWIF(wif);\n  }\n\n  async checkAddress(address) {\n    return wallet.isAddress(address);\n  }\n\n  async decrypt(encryptedKey,password) {\n    try {\n      const wif = await wallet.decrypt(encryptedKey, password);\n      return wif;\n    } catch (error) {\n      console.log('Wrong NEO Wallet password.');\n      return false;\n    }\n  }\n\n  async encrypt(privateKey,password) {\n    const encryptedWIF = await wallet.encrypt(privateKey, password);\n    return encryptedWIF;\n  }\n\n  async account(wif) {\n    const account = new wallet.Account(wif);\n    return account;\n  }\n\n  async createWallet(wif,name='') {\n    if (wif === 'new')\n      wif = wallet.generatePrivateKey();\n    const encryptedwif = await this.encrypt(wif,this.walletService.wallet.password);\n    const neoAccount = await this.account(wif);\n    if (name!='')\n      this.addressBook.saveAddress(neoAccount.address, name);\n    const neoWallet = {\n      id: neoAccount.address,\n      index: this.walletService.wallet.neowallets.length,\n      balances: [],\n      addressBookName: name,\n      encryptedwif: encryptedwif\n    }\n    this.walletService.wallet.neowallets.push(neoWallet);\n    this.walletService.saveWalletExport();\n    return neoWallet;\n\n  }\n\n  async getBalance(address) {\n    //const apiProvider = await new api.neoscan.instance(this.network);\n    const apiProvider = new myProvider(this.selectedNode); \n    const balanceResults = await apiProvider.getBalance(address)\n    .catch(e => {\n      // indicates that neo scan is down and that api.sendAsset and api.doInvoke\n      // will fail unless balances are supplied\n      console.error(e);\n      return e;\n    });\n    return balanceResults;\n  }\n\n  async getClaimAmount(address) {\n    //const apiProvider = await new api.neoscan.instance(this.network);\n    const apiProvider = new myProvider(this.selectedNode); \n    const claims = await apiProvider.getMaxClaimAmount(address);\n    return new BigNumber(claims).toFixed();\n  }\n\n  async getClaims(address) {\n    const apiProvider = new myProvider(this.selectedNode); \n    //const apiProvider = await new api.neoscan.instance(this.network);\n    const claims = await apiProvider.getClaims(address);\n    return claims;\n  }\n\n\n  async claimGasTimer(address) {\n    if (this.claimingTimer != null) {\n      return;\n    }\n    const source = timer(10000);\n\t\tthis.claimingTimer = source.subscribe(async val => {\n      this.notificationService.sendInfo('Claiming GAS.');\n      const selectedWallet = this.walletService.wallet.neowallets.find(a => a.id === address);\n      const wif = await this.decrypt(selectedWallet.encryptedwif,this.walletService.wallet.password);\n      if (wif === false) {\n        return false;\n      }\n      const account = await new wallet.Account(wif);\n      //console.log(\"\\n\\n--- Claiming Address ---\");\n      //console.log(account);\n      //const apiProvider = await new api.neoscan.instance(this.network);\n      const apiProvider = new myProvider(this.selectedNode); \n  \n      //console.log(\"\\n\\n--- API Provider ---\");\n      //console.log(apiProvider);\n\n      const config = {\n        api: apiProvider,\n        account: account\n      };\n\n      const claimed = await Neon.claimGas(config)\n      .then(config => {\n        //console.log(\"\\n\\n--- Response ---\");\n        //console.log(config.response);\n        this.notificationService.sendSuccess('GAS claimed. It should be visible soon.');\n        return true;\n      })\n      .catch(config => {\n        //console.log(config);\n        return false;\n      });\n      \n      this.claimingTimer = null;\n\n      if (!claimed) {\n        this.claimGasTimer(address);\n      }\n\t\t});\n  }\n\n  async claimGas(address) {\n    if (this.claimingTimer != null) {\n      this.notificationService.sendInfo('Already claiming GAS, please wait.');\n      return;\n    }\n    this.notificationService.sendInfo('Calculating GAS amount, please wait.');\n    const maxClaimAmount = await this.getClaimAmount(address);\n    if (Number(maxClaimAmount) == 0) {\n      this.notificationService.sendError('No GAS to claim.');\n      return;\n    }\n\n    // get NEO balance\n    const balance = await this.getBalance(address);\n    let neoBalance = 0;\n\n    if (balance.assets['NEO'] != undefined)\n      neoBalance = new BigNumber(balance.assets['NEO'].balance).toNumber();\n\n\n    if (neoBalance > 0) { // send NEO to yourself, so you can claim GAS\n      console.log('Sending ' + neoBalance + ' NEO from ' + address + ' to ' + address);\n      const send = await this.send(address,address,this.tokenList['NEO'].networks[1].hash,neoBalance);\n      this.claimGasTimer(address);\n    } else { // check if NEO was already send and there is something to claim\n      const claims = await this.getClaims(address);\n      if (claims.claims.length > 0) {\n        this.claimGasTimer(address);\n      }\n    }\n\n    return;\n\n  }\n\n  async getNeoScanBalance(address) {    \n    const balance = await this.request('/v1/get_balance/'+address);\n    //console.log(balance.balance);\n    return balance.balance;\n  }\n\n  async getNeoRpcBalance(address) {\n      const balance = await axios.post(this.neoswap, {\n        jsonrpc: 2.0,\n        method: 'getnep5balances',\n        params: [address],\n        id: 1\n      });\n      return balance.data.result.balance;\n  }\n\n  // get balance from neotube\n  async getneoTuboBalance(address) {\n    const balance: any = await axios.post(this.neotube + 'address', {\n      method: 'getallassets',\n      params: [address]});\n      // tslint:disable-next-line: align\n      const assets: any[] = balance?.data?.result?.assets;\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < assets.length; i++) {\n        if ( assets[i].assetId == this.neoqlcsmartContractScript) {\n          return balance.data.result.assets[i];\n        }\n      }\n}\n\n  async getLastTransactions(address) {\n    const lastTransactionsResults = await this.request('/v1/get_address_abstracts/'+address+'/0');\n    const tokens = Object.keys(this.tokenList);\n    if (lastTransactionsResults.entries) {\n      lastTransactionsResults.entries.forEach(entry => {\n        if (entry.address_from == address) {\n          entry.type = 'Send';\n          entry.account = entry.address_to;\n        } else {\n          entry.type = 'Receive';\n          entry.account = entry.address_from;\n        }\n        tokens.forEach(token => {\n          const item = this.tokenList[token];\n          if (item.networks[1].hash == entry.asset) {\n            entry.tokenName = item.symbol;\n          }\n        });\n      });\n      return lastTransactionsResults;\n    }\n    return null;\n  }\n\n  async getTransaction(txid) {\n    const transactionResult = await this.request('/v1/get_transaction/'+txid);\n    return transactionResult;\n  }\n\n  async getSendHashScript(token) {\n    const hash = this.tokenList[token].networks[1].hash;\n    return hash;\n  }\n\n  async send(from,receivingAddress,asset_hash,amount) {\n    //console.log(from);\n    //console.log(receivingAddress);\n    //console.log(asset_hash);\n    //console.log(amount);\n\n    const selectedWallet = this.walletService.wallet.neowallets.find(a => a.id === from);\n    const wif = await this.decrypt(selectedWallet.encryptedwif,this.walletService.wallet.password);\n    \n    if (wif === false) {\n      return false;\n    }\n    const account = await new wallet.Account(wif);\n    //console.log(\"\\n\\n--- From Address ---\");\n    //console.log(account);\n    \n    //let apiProvider = await new api.neoscan.instance(this.network);\n    const apiProvider = new myProvider(this.selectedNode); \n   \n    const token = Object.values(this.tokenList).find( a => a.networks[1].hash == asset_hash);\n    //console.log(token);\n     \n    if (token.symbol == 'NEO' || token.symbol == 'GAS') {\n      let intent = null;\n      if (token.symbol == 'NEO')\n        intent = api.makeIntent({ NEO: new BigNumber(amount).toNumber() }, receivingAddress);\n      else\n        intent = api.makeIntent({ GAS: new BigNumber(amount).toNumber() }, receivingAddress);\n\n      //console.log(\"\\n\\n--- Intents ---\");\n      intent.forEach(i => console.log(i));\n\n      const config = {\n        api: apiProvider, // The network to perform the action, MainNet or TestNet.\n        account: account, // This is the address which the assets come from.\n        intents: intent // This is where you want to send assets to.\n      };\n      console.log(config);\n      const returnAsset = await Neon.sendAsset(config)\n      .then(config => {\n        console.log(\"\\n\\n--- Response ---\");\n        console.log(config.response);\n        return config.response;\n      })\n      .catch(config => {\n        console.log(\"\\n\\n--- Response error ---\");\n        console.log(config);\n        return config;\n      });\n      return returnAsset;\n    }\n\n    //const hash = this.tokenList[token].networks[1].hash;\n    //const contractScriptHash = this.tokenList[token].networks[1].hash;\n    const contractScriptHash = asset_hash;\n    let numOfDecimals = 8;\n    if (token.networks[1].decimals) {\n      numOfDecimals = token.networks[1].decimals;\n    }\n    //const numOfDecimals = this.tokenList[token].networks[1].decimals;\n    const amtToSend = new BigNumber(amount).toFixed();\n    const network = this.network;\n    const additionalInvocationGas = 0;\n    const additionalIntents = [];\n\n    // We have to adjust the amount to send because this function bumps it up by 8 decimals places according to Fixed8 rules. For NEP5 tokens of 8 decimals places, no adjustments is needed.\n    const generator = nep5.abi.transfer(\n      contractScriptHash,\n      account.address,\n      receivingAddress,\n      new u.Fixed8(amtToSend).div(Math.pow(10, 8 - numOfDecimals))\n    );\n\n    //console.log(\"\\n\\n--- Amount:  ---\")\n    //console.log(amtToSend);\n    const builder = await generator();\n    //console.log(builder);\n    const script = builder.str;\n    //console.log(\"\\n\\n--- Invocation Script ---\");\n    //console.log(script);\n    const gas = additionalInvocationGas;\n    const intent = additionalIntents;\n\n    const config = {\n      api: apiProvider, // The API Provider that we rely on for balance and rpc information\n      account: account, // The sending Account\n      intents: intent, // Additional intents to move assets\n      script: script, // The Smart Contract invocation script\n      gas: gas // Additional GAS for invocation.\n    };\n\n    console.log(config);\n\n    const returnToken = await Neon.doInvoke(config)\n    .then(config => {\n      console.log(\"\\n\\n--- Response ---\");\n      console.log(config.response);\n      return config.response;\n    })\n    .catch(config => {\n      console.log(\"\\n\\n--- Response error ---\");\n      console.log(config);\n      const errorConfig = {\n        error: config\n      }\n      return errorConfig;\n    });\n    return returnToken;\n  \n  }\n\n  async contractGetName(address) {\n    //const apiProvider = await new api.neoscan.instance(this.network);\n    const apiProvider = new myProvider(this.selectedNode); \n    //apiProvider.set({httpsOnly: true});\n    //console.log(\"\\n\\n--- API Provider ---\");\n    //console.log(apiProvider);\n\n    const props = {\n      scriptHash: this.smartContractScript, // Scripthash for the contract\n      operation: 'name', // name of operation to perform.\n      args: [] // any optional arguments to pass in. If null, use empty array.\n    }\n    \n    const script = Neon.create.script(props);\n    //console.log(\"\\n\\n--- API Provider RPC Endpoint ---\");\n    //console.log(await apiProvider.getRPCEndpoint());\n\n    await rpc.Query.invokeScript(script)\n    .execute(await apiProvider.getRPCEndpoint())\n    .then(res => {\n      //console.log(res) // You should get a result with state: \"HALT, BREAK\"\n      //console.log(res.result.stack);\n      //console.log('string ' + u.hexstring2str(res.result.stack[0].value));\n    });\n\n  }\n\n  async contractGetQlcContract(address) {\n    //const apiProvider = await new api.neoscan.instance(this.network);\n    const apiProvider = new myProvider(this.selectedNode); \n    //console.log(\"\\n\\n--- API Provider ---\");\n    //console.log(apiProvider);\n\n    const props = {\n      scriptHash: this.smartContractScript, // Scripthash for the contract\n      operation: 'qlcContract', // name of operation to perform.\n      args: [] // any optional arguments to pass in. If null, use empty array.\n    }\n    \n    const script = Neon.create.script(props);\n    //console.log(\"\\n\\n--- API Provider RPC Endpoint ---\");\n    //console.log(await apiProvider.getRPCEndpoint());\n\n    await rpc.Query.invokeScript(script)\n    .execute(await apiProvider.getRPCEndpoint())\n    .then(res => {\n      //console.log(res) // You should get a result with state: \"HALT, BREAK\"\n      //console.log(res.result.stack);\n      //console.log('string ' + u.hexstring2str(res.result.stack[0].value));\n    });\n  }  \n\n  // 签名某个交易\n  async signTheTransaction(neoWalletAddress: string, unsignedData: string): Promise<any> {\n    const selectedWallet = this.walletService.wallet.neowallets.find(a => a.id === neoWalletAddress);\n    // 生成私钥\n    const wif = await this.decrypt(selectedWallet.encryptedwif, this.walletService.wallet.password);\n\n    if (wif === false) {\n      return false;\n    }\n    // 通过私钥生成公钥\n    const account = await new wallet.Account(wif);\n    const publicKey = account.publicKey;\n    console.log('account', account);\n    console.log('publicKey', publicKey);\n    // 通过私钥签名具体交易信息\n    const signature = await wallet.sign(unsignedData, wif);\n    console.log('signature', signature);\n    const signData = {\n      signature,\n      publicKey\n    };\n    return signData;\n  }\n  async neo5toerc20swapaccountLock(neoWalletAddress, neo5qlcAmount, erc20WalletAddress) {\n    const selectedWallet = this.walletService.wallet.neowallets.find(a => a.id === neoWalletAddress);\n    const wif = await this.decrypt(selectedWallet.encryptedwif, this.walletService.wallet.password);\n    const amountWithDecimals = new BigNumber(neo5qlcAmount).multipliedBy(100000000);\n    if (wif === false) {\n      return false;\n    }\n    console.log('wif', wif);\n    const account = await new wallet.Account(wif);\n    console.log('account', account);\n\n    // const amountWithDecimals = new BigNumber(erc20Amount).multipliedBy(100000000);\n    const providerapi = new myProvider(this.selectedNode);\n    console.log('providerapi', providerapi);\n    console.log('amount', amountWithDecimals);\n    console.log('neoWalletAddress', neoWalletAddress);\n    console.log('erc20WalletAddress', erc20WalletAddress);\n    // tslint:disable-next-line: no-use-before-declare\n    const apiProvider = new myProvider(environment.swapUrl[environment.neoNetwork]);\n    console.log('apiProvider', apiProvider);\n    \n    //console.log(\"\\n\\n--- API Provider ---\");\n    //console.log(apiProvider);\n\n    const invoke = {\n      scriptHash: this.neoswapsmartContractScript, // Scripthash for the contract\n      operation: 'lock', // name of operation to perform.\n      args: [\n        sc.ContractParam.byteArray(neoWalletAddress, 'address'), // neo address\n        // tslint:disable-next-line: max-line-length\n        sc.ContractParam.integer(amountWithDecimals.toNumber()), // qlc amount\n        sc.ContractParam.byteArray(u.str2hexstring(erc20WalletAddress), 'string'), // qlc address\n      ]\n    }\n    console.log(invoke);\n\n    \n    const script = await Neon.create.script(invoke);\n    console.log(script);\n\n    const invokeConfig = {\n      api: apiProvider, // The API Provider that we rely on for balance and rpc information\n      account, // The sending Account\n      script // The Smart Contract invocation script\n    };\n\n    const returnTokeninvokeConfig = await Neon.doInvoke(invokeConfig)\n    .then(config2 => {\n      return config2.response;\n    })\n    .catch(err => {\n      return err;\n    });\n    const returnData = {\n      lockTxId : returnTokeninvokeConfig.txid\n    };\n    console.log('returnData', returnData);\n    return returnData;\n  }\n\n  async contractLock(neoWalletAddress,qlcAmount,qlcWalletAddress,durationInDays) {\n    //console.log('contractLock')\n    /*console.log(neoWalletAddress)\n    console.log(qlcAmount)\n    console.log(qlcWalletAddress)\n    console.log(durationInDays)*/\n    const selectedWallet = this.walletService.wallet.neowallets.find(a => a.id === neoWalletAddress);\n    const wif = await this.decrypt(selectedWallet.encryptedwif,this.walletService.wallet.password);\n\n    const amountWithDecimals = new BigNumber(qlcAmount).multipliedBy(100000000);\n    \n    if (wif === false) {\n      return false;\n    }\n    const account = await new wallet.Account(wif);\n    //console.log(\"\\n\\n--- From Address ---\");\n    //console.log(account);\n\n    // multisig\n    const multisigAcct = wallet.Account.createMultiSig(2, [\n      account.publicKey,\n      environment.neoPublicKey[environment.neoNetwork]\n    ]);\n\n    //console.log(\"\\n\\n--- Multi-sig ---\");\n    //console.log(`My multi-sig address is ${multisigAcct.address}`);\n    //console.log(`My multi-sig scriptHash is ${multisigAcct.scriptHash}`);\n    //console.log(`My multi-sig verificationScript is ${multisigAcct.contract.script}`);\n    //console.log(multisigAcct);\n    //neonJS.settings.httpsOnly = true;\n    //const apiProvider = await new api.neoscan.instance(this.network);\n    const apiProvider = new myProvider(this.selectedNode); \n    \n    //console.log(\"\\n\\n--- API Provider ---\");\n    //console.log(apiProvider);\n\n    const invoke = {\n      scriptHash: this.smartContractScript, // Scripthash for the contract\n      operation: 'lock', // name of operation to perform.\n      args: [\n        sc.ContractParam.byteArray(neoWalletAddress,'address'), // neo address\n        sc.ContractParam.byteArray(multisigAcct.address,'address'), // multisig neo address\n        sc.ContractParam.byteArray(u.str2hexstring(qlcWalletAddress),'string'), // qlc address\n        sc.ContractParam.integer(amountWithDecimals.toNumber()), // qlc amount // check integer limit for big numbers !! should be 2,147,483,647 that's max 21 qlc ?\n        sc.ContractParam.integer(durationInDays), // lock time\n      ] \n    }\n    //console.log(invoke);\n\n    \n    const script = await Neon.create.script(invoke);\n    //console.log(script);\n\n    const invokeConfig = {\n      api: apiProvider, // The API Provider that we rely on for balance and rpc information\n      account: account, // The sending Account\n      script: script // The Smart Contract invocation script\n    };\n\n    const returnTokeninvokeConfig = await Neon.doInvoke(invokeConfig)\n    .then(config2 => {\n      //console.log(\"\\n\\n--- Response ---\");\n      //console.log(config2);\n      return config2.response;\n    })\n    .catch(err => {\n      //console.log(err);\n      return err;\n    });\n    const returnData = {\n      beneficial: qlcWalletAddress,\n      amount: amountWithDecimals.toNumber(),\n      multiSigAddress: multisigAcct.address,\n      publicKey: account.publicKey,\n      lockTxId : returnTokeninvokeConfig.txid\n    };\n    return returnData;\n    \n    \n  }  \n\n \n async contractGetLockInfo(txid) {\n  //const apiProvider = await new api.neoscan.instance(this.network);\n  const apiProvider = new myProvider(this.selectedNode); \n  const props = {\n    scriptHash: this.smartContractScript, \n    operation: 'getLockInfo', \n    args: [\n      sc.ContractParam.byteArray(txid,'string')\n    ] \n  }\n  \n  const script = Neon.create.script(props);\n\n  let sb = new sc.ScriptBuilder(script);\n  //console.log(sb.toScriptParams());\n\n  //await rpc.Query.invokeScript(script)\n  let returnData = await rpc.Query.invokeFunction(\n    this.smartContractScript,\n    'getLockInfo',\n    sc.ContractParam.byteArray(u.reverseHex(txid),'string')\n    )\n  .execute(await apiProvider.getRPCEndpoint())\n  .then(res => {\n    console.log(res) // You should get a result with state: \"HALT, BREAK\"\n    if (res.result.state == 'HALT, BREAK' || res.result.state == 'HALT') {\n      if (res.result.stack[0].value == '') {\n        const returnData = {\n          beneficial: 0,\n          amount: 0,\n          multiSigAddress: '',\n          neoAddress: '',\n          lockStart: '',\n          lockEnd: '',\n          publicKey: '',\n          lockTxId: '',\n          lockInfo: 'not_lock'\n        };\n        return returnData; \n      }\n      const c = new wallet.Account(\n        u.reverseHex(res.result.stack[0].value[0].value)\n      );\n      const c2 = new wallet.Account(\n        u.reverseHex(res.result.stack[0].value[1].value)\n      );\n\n      //console.log('neo address ' + c.address);\n      //console.log('neo multi address ' + c2.address);\n      //console.log('qlc address ' + u.hexstring2str(res.result.stack[0].value[2].value));\n      //console.log('start lock ' + new Date(res.result.stack[0].value[3].value*1000));\n      //console.log('end lock ' + new Date(res.result.stack[0].value[4].value*1000));\n\n      let amount;\n      if (res.result.stack[0].value[5].type == 'Integer') {\n        amount = new BigNumber(res.result.stack[0].value[4].value).dividedBy(100000000).toFixed();  \n      } else if (res.result.stack[0].value[5].type == 'ByteArray') {\n        amount = u.Fixed8.fromReverseHex(res.result.stack[0].value[5].value);\n      }\n      const returnData = {\n        beneficial: u.hexstring2str(res.result.stack[0].value[2].value),\n        amount: new BigNumber(amount).multipliedBy(100000000).toNumber(),\n        multiSigAddress: c2.address,\n        neoAddress: c.address,\n        lockStart: new Date(res.result.stack[0].value[3].value*1000),\n        lockEnd: new Date(res.result.stack[0].value[4].value*1000),\n        publicKey: '',\n        lockTxId: '',\n        lockInfo: 'ok_lock'\n      };\n      return returnData;\n    } \n    const returnData = {\n      beneficial: 0,\n      amount: 0,\n      multiSigAddress: '',\n      neoAddress: '',\n      lockStart: '',\n      lockEnd: '',\n      publicKey: '',\n      lockTxId: '',\n      lockInfo: 'not_txid'\n    };\n    return returnData;\n  });\n\n  if(returnData.neoAddress != '')   {\n    const selectedWallet = this.walletService.wallet.neowallets.find(a => a.id === returnData.neoAddress);\n    if (selectedWallet) {\n      const wif = await this.decrypt(selectedWallet.encryptedwif,this.walletService.wallet.password);\n      \n      if (wif === false) {\n        return false;\n      }\n      const account = await new wallet.Account(wif);\n      returnData.publicKey = account.publicKey;\n    }\n  }\n  returnData.lockTxId = txid;\n  return returnData;\n}  \n\nasync contractUnlockPrepare(pledge) {\n  // find the right neo wallet from multisig wallet\n  const multiSigWallet = pledge.multiSigAddress;\n\n  for (const neowallet of this.walletService.wallet.neowallets) {\n    const wif = await this.decrypt(neowallet.encryptedwif,this.walletService.wallet.password);\n    if (wif === false) {\n      return false;\n    }\n    const account = await new wallet.Account(wif);\n\n    // multisig\n    const multisigAcct = wallet.Account.createMultiSig(2, [\n      account.publicKey,\n      environment.neoPublicKey[environment.neoNetwork]\n    ]);\n\n    if (multisigAcct.address == multiSigWallet) {\n      const unlock = await this.contractUnlock(pledge,account);\n      return unlock;\n    }\n  }\n\n  return false;\n    \n}\n\nasync contractUnlock(pledge,account) {\n\n  const multisigAcct = wallet.Account.createMultiSig(2, [\n    account.publicKey,\n    environment.neoPublicKey[environment.neoNetwork]\n  ]);\n\n \n\n  const props = {\n    scriptHash: this.smartContractScript, \n    operation: 'unlock', \n    args: [\n      sc.ContractParam.byteArray(u.reverseHex(pledge.nep5TxId),'string')\n    ] \n  }\n  \n  const script = Neon.create.script(props);\n\n  //let constructTx = await Neon.create.contractTx().addAttribute(32,script);\n\n  let constructTx = Neon.create.invocationTx();\n  constructTx.addAttribute(32,u.reverseHex(multisigAcct.scriptHash));\n  constructTx.script = script;\n  \n  const txHex = await constructTx.serialize(false);\n\n  const sig1 = await wallet.sign(txHex, account.privateKey);\n\n  //console.log(constructTx);\n  //console.log('unsignedRawTx');\n  //console.log(txHex);\n  //console.log('signature');\n  //console.log(sig1);\n  //console.log('txId ??');\n  //console.log(constructTx.hash);\n\n  return {\n    'unsignedRawTx': txHex,\n    'signature': sig1,\n    'publicKey': account.publicKey,\n    'unlockTxId': constructTx.hash\n  }\n \n}  \n\n\n\n  \n}\n\nexport class myProvider implements Provider {\n  name: string;\n  http: HttpClient;\n  selectedNode: string = '';\n\n  constructor(selectedNode:string = '') {\n    this.selectedNode = selectedNode;\n  }\n\n  async getRPCEndpoint(noCache?: boolean): Promise<string> {\n    //const seed:string = await apiProvider.getRPCEndpoint();\n    //return seed ;\n    if (this.selectedNode == '') {\n      const url = environment.neoScanApi[environment.neoNetwork];\n      const response = await axios.get(url + \"/v1/get_all_nodes\");\n      let nodes = response.data as RpcNode[];\n      nodes = filterHttpsOnly(nodes);\n      \n      const goodNodes = findGoodNodesFromHeight(nodes);\n      const bestRPC = await getBestUrl(goodNodes);\n      return bestRPC;\n    } else {\n      return this.selectedNode;\n    }\n  }\n  async getGoodNodes(noCache?: boolean): Promise<any> {\n    const url = environment.neoScanApi[environment.neoNetwork];\n    const response = await axios.get(url + \"/v1/get_all_nodes\");\n    let nodes = response.data as RpcNode[];\n    nodes = filterHttpsOnly(nodes);\n    const goodNodes = findGoodNodesFromHeight(nodes);\n    return goodNodes;\n  }\n  async getBalance(address: string): Promise<import(\"@cityofzion/neon-core/lib/wallet\").Balance> {\n    const url = environment.neoScanApi[environment.neoNetwork];\n    const response = await axios.get(url + \"/v1/get_balance/\" + address);\n\n    const data = response.data as NeoscanV1GetBalanceResponse;\n    if (data.address === \"not found\" && data.balance === null) {\n      return new wallet.Balance({ net: url, address });\n    }\n    const bal = new wallet.Balance({\n      net: url,\n      address: data.address\n    });\n    const neoscanBalances = data.balance as NeoscanBalance[];\n    for (const b of neoscanBalances) {\n      if (b.amount > 0 && b.unspent.length > 0) {\n        bal.addAsset(b.asset, {\n          unspent: parseUnspent(b.unspent)\n        } as Partial<walletCore.AssetBalanceLike>);\n      } else {\n        bal.addToken(b.asset, b.amount);\n      }\n    }\n    console.log(`Retrieved Balance for ${address} from neoscan ${url}`);\n    return bal;\n  }\n  async getClaims(address: string): Promise<import(\"@cityofzion/neon-core/lib/wallet\").Claims> {\n    const url = environment.neoScanApi[environment.neoNetwork];\n    const response = await axios.get(url + \"/v1/get_claimable/\" + address);\n    const data = response.data as NeoscanV1GetClaimableResponse;\n    if (data.address === \"not found\" && data.claimable === null) {\n      return new wallet.Claims({ address: data.address });\n    }\n    const claims = parseClaims(data.claimable as NeoscanClaim[]);\n    console.log(`Retrieved Claims for ${address} from neoscan ${url}`);\n    return new wallet.Claims({\n      net: url,\n      address: data.address,\n      claims\n    });\n  }\n  async getMaxClaimAmount(address: string): Promise<import(\"@cityofzion/neon-core/lib/u\").Fixed8> {\n    const url = environment.neoScanApi[environment.neoNetwork];\n    const response = await axios.get(url + \"/v1/get_unclaimed/\" + address);\n    const data = response.data as NeoscanV1GetUnclaimedResponse;\n    console.info(\n      `Retrieved maximum amount of gas claimable after spending all NEO for ${address} from neoscan ${url}`\n    );\n    return new u.Fixed8(data.unclaimed || 0);\n  }\n  getHeight(): Promise<number> {\n    throw new Error(\"Method not implemented.\");\n  }\n  getTransactionHistory(address: string): Promise<import(\"@cityofzion/neon-api/lib/provider/common\").PastTransaction[]> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n\n}\n\nfunction parseUnspent(unspentArr: NeoscanTx[]): walletCore.CoinLike[] {\n  return unspentArr.map(coin => {\n    return {\n      index: coin.n,\n      txid: coin.txid,\n      value: coin.value\n    };\n  });\n}\n\nfunction parseClaims(claimArr: NeoscanClaim[]): walletCore.ClaimItemLike[] {\n  return claimArr.map(c => {\n    return {\n      start: c.start_height,\n      end: c.end_height,\n      index: c.n,\n      claim: c.unclaimed,\n      txid: c.txid,\n      value: c.value\n    };\n  });\n}\n","import { Injectable } from '@angular/core';\nimport { NotificationService } from './notification.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NodeService {\n\n  errorMsg = 'Node error - offline';\n  successMsg = 'Successfully connected to the node.';\n\n  status:boolean = null; // null - loading, false - offline, true - online\n  synchronized:boolean = null; // null - loading, false - not synchronized, true - synchronized\n  synchronizedTransactions:boolean = null; // null - loading, false - not synchronized, true - synchronized\n  synchronizedPov:boolean = null; // null - loading, false - not synchronized, true - synchronized\n  break:boolean = null; // null - loading, false - node ok, true - old version, don't process\n  running:boolean = false; // local node status, false - not running, true - running\n  \n  constructor(private notifications: NotificationService) {\n    this.notifications.sendInfo('Connecting to the node. Please wait.', { identifier: 'node-connect', length: 0 })\n   }\n\n\n  setOffline(message = this.errorMsg) {\n    if (this.status === false || this.status === null) {\n      return; // Already offline\n    }\n    \n    this.status = false;\n    this.synchronized = null;\n    this.synchronizedTransactions = null;\n    this.synchronizedPov = null;\n    const errMessage = message;\n    this.notifications.removeNotification('node-syncing');\n    this.notifications.sendError(errMessage, { identifier: 'node-offline', length: 0 });\n  }\n\n  setOnline() {\n    if (this.status) {\n      return; // Already online\n    }\n\n    this.status = true;\n    this.notifications.removeNotification('node-offline');\n    this.notifications.removeNotification('node-connect');\n    this.notifications.sendSuccess(this.successMsg, { identifier: 'node-connected', length: 2000 });\n  }\n\n  setSynchronizing() {\n    if (this.synchronized === null || this.synchronized === true) {\n      this.notifications.sendInfo('Node is synchronizing. Please wait.', { identifier: 'node-syncing', length: 0 });\n      this.synchronized = false;\n    }\n  }\n\n  setSynchronizingTransactions() {\n    if (this.synchronizedTransactions === null || this.synchronizedTransactions === true) {\n      this.synchronizedTransactions = false;\n      this.setSynchronizing();\n    }\n  }\n\n  setSynchronizingPov() {\n    if (this.synchronizedPov === null || this.synchronizedPov === true) {\n      this.synchronizedPov = false;\n      this.setSynchronizing();\n    }\n  }\n\n  setSynchronized() {\n    if (this.synchronized === false && this.synchronizedPov === true && this.synchronizedTransactions === true) {\n      this.notifications.removeNotification('node-syncing');\n      this.notifications.sendSuccess('Node synchronized.', { identifier: 'node-synced', length: 2000 });\n      this.synchronized = true;\n    }\n  }\n\n  setSynchronizedTransactions() {\n    if (this.synchronizedTransactions === false || this.synchronizedTransactions === null) {\n      this.synchronizedTransactions = true;\n      this.setSynchronized();\n    }\n  }\n\n  setSynchronizedPov() {\n    if (this.synchronizedPov === false || this.synchronizedPov === null) {\n      this.synchronizedPov = true;\n      this.setSynchronized();\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\ntype NotificationType = 'info' | 'success' | 'warning' | 'error';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  notifications$ = new BehaviorSubject(null);\n  removeNotification$ = new BehaviorSubject(null);\n\n  constructor() { }\n\n  // This provides an entry point for all components to send notifications.\n  // It exposes an observable that the actual component uses to grab new notifications\n\n  sendNotification(type: NotificationType, message: string, options = {}) {\n    console.log(message);\n    this.notifications$.next({ type, message, options });\n  }\n\n  removeNotification(identifier: string) {\n    this.removeNotification$.next(identifier);\n  }\n\n  sendInfo(message: string, options = {}) {\n    this.sendNotification('info', message, options);\n  }\n  sendSuccess(message: string, options = {}) {\n    this.sendNotification('success', message, options);\n  }\n  sendWarning(message: string, options = {}) {\n    this.sendNotification('warning', message, options);\n  }\n  sendError(message: string, options = {}) {\n    this.sendNotification('error', message, options);\n  }  \n}\n","import { Injectable } from '@angular/core';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport { ApiService } from './api.service';\nimport { AppSettingsService, PoWSource } from './app-settings.service';\nimport { NotificationService } from './notification.service';\nimport { NGXLogger } from 'ngx-logger';\nconst mod = window['Module'];\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class PowService {\n\twebGLAvailable = false;\n\twebGLTested = false;\n\n\tPoWPool = [];\n\tparallelQueue = false;\n\tprocessingQueueItem = false;\n\n\tconstructor(\n\t\tprivate appSettings: AppSettingsService,\n\t\tprivate api: ApiService,\n\t\tprivate notifications: NotificationService,\n\t\tprivate deviceService: DeviceDetectorService,\n\t\tprivate logger: NGXLogger\n\t) {}\n\n\t/**\n\t * Determine the best PoW Method available for this browser\n\t */\n\tdetermineBestPoWMethod(): PoWSource {\n\t\t//this.logger.debug(this.deviceService.getDeviceInfo());\n\t\tif (this.deviceService.isDesktop()) {\n\t\t\tif (this.hasWebGLSupport()) {\n\t\t\t\treturn 'clientWebGL';\n\t\t\t}\n\n\t\t\t// // For now, server is better than a CPU default (For Mobile)\n\t\t\tif (this.hasWorkerSupport()) {\n\t\t\t\treturn 'clientCPU';\n\t\t\t}\n\t\t}\n\t\treturn 'clientCPU';\n\t}\n\n\t/**\n\t * Get PoW for a hash.  If it's already being processed, return the promise.\n\t * Otherwise, add it into the queue and return when it is ready\n\t */\n\tasync getPow(hash) {\n\t\tconst existingPoW = this.PoWPool.find(p => p.hash === hash);\n\t\tif (existingPoW) {\n\t\t\treturn existingPoW.promise.promise; // Its okay if its resolved already\n\t\t}\n\n\t\treturn this.addQueueItem(hash);\n\t}\n\n\t/**\n\t * Add a new hash into the queue to perform work on.\n\t * Returns a promise that is resolved when work is completed\n\t */\n\taddQueueItem(hash) {\n\t\tconst existingPoW = this.PoWPool.find(p => p.hash === hash);\n\t\tif (existingPoW) {\n\t\t\treturn existingPoW.promise.promise;\n\t\t}\n\n\t\tconst queueItem = {\n\t\t\thash,\n\t\t\twork: null,\n\t\t\tpromise: this.getDeferredPromise()\n\t\t};\n\n\t\tthis.PoWPool.push(queueItem);\n\t\tthis.processQueue();\n\n\t\treturn queueItem.promise.promise;\n\t}\n\n\t/**\n\t * Determine if the browser has WebWorker support\n\t * @returns {boolean}\n\t */\n\tpublic hasWorkerSupport() {\n\t\treturn !!window['Worker'];\n\t}\n\n\t/**\n\t * Determine if the browser has WebGL support\n\t * @returns {boolean}\n\t */\n\tpublic hasWebGLSupport() {\n\t\tif (this.webGLTested) {\n\t\t\treturn this.webGLAvailable;\n\t\t}\n\t\tthis.webGLTested = true;\n\n\t\ttry {\n\t\t\tconst canvas = document.createElement('canvas');\n\t\t\tconst webGL =\n\t\t\t\t!!window['WebGLRenderingContext'] && (canvas.getContext('webgl') || canvas.getContext('experimental-webgl'));\n\t\t\tthis.webGLAvailable = !!webGL;\n\t\t\treturn this.webGLAvailable;\n\t\t} catch (e) {\n\t\t\tthis.webGLAvailable = false;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the next item in the queue and sends it to be processed\n\t */\n\tprivate processQueue() {\n\t\t// No items in the queue\n\t\t// Not yet implemented\n\t\t// Already processing.\n\t\tif (!this.PoWPool.length || this.parallelQueue || this.processingQueueItem) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the next item from the queue and process it\n\t\tthis.processNextQueueItem();\n\t}\n\n\t/**\n\t * Process an individual hash from the queue\n\t * Uses the latest app settings to determine which type of PoW to use\n\t */\n\tprivate async processNextQueueItem() {\n\t\tthis.processingQueueItem = true;\n\t\tif (!this.PoWPool.length) {\n\t\t\treturn; // Nothing in the queue?\n\t\t}\n\t\tconst queueItem = this.PoWPool[0];\n\n\t\tlet powSource = this.appSettings.settings.powSource;\n\t\tif (powSource === 'best') {\n\t\t\tpowSource = this.determineBestPoWMethod();\n\t\t}\n\n\t\tlet work;\n\t\tswitch (powSource) {\n\t\t\tdefault:\n\t\t\tcase 'clientCPU':\n\t\t\t\twork = await this.getHashCPUWorker(queueItem.hash);\n\t\t\t\tbreak;\n\t\t\tcase 'clientWebGL':\n\t\t\t\twork = await this.getHashWebGL(queueItem.hash);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.PoWPool.shift(); // Remove this item from the queue\n\t\tthis.processingQueueItem = false;\n\n\t\tif (!work) {\n\t\t\tconst errMessage = `Unable to generate work for ${queueItem.hash} using ${powSource}`;\n\t\t\tthis.notifications.sendError(errMessage);\n\t\t\tconst infoMessage = `Trying POW Server to generate work for ${queueItem.hash}`;\n\t\t\tthis.notifications.sendInfo(infoMessage);\n\t\t\tconst pow = await this.getPOWServer(queueItem.hash);\n\t\t\tif (pow.result) {\n\t\t\t\tqueueItem.work = pow.result;\n\t\t\t\tqueueItem.promise.resolve(pow.result);\n\t\t\t\tconst successMessage = `Work for ${queueItem.hash} generated using POW Server`;\n\t\t\t\tthis.notifications.sendSuccess(successMessage);\n\t\t\t} else {\n\t\t\t\tconst errMessage = `Unable to generate work for ${queueItem.hash} using POW server`;\n\t\t\t\tthis.notifications.sendError(errMessage);\n\t\t\t\tqueueItem.promise.reject(null);\n\t\t\t}\n\t\t} else {\n\t\t\tqueueItem.work = work;\n\t\t\tqueueItem.promise.resolve(work);\n\t\t}\n\n\t\tthis.processQueue();\n\n\t\treturn queueItem;\n\t}\n\n\t/**\n\t * Actual PoW functions\n\t */\n\n\t/**\n\t * Generate PoW using POW server\n\t */\n\n\tasync getPOWServer(hash) {\n\t\treturn await this.api.getPow(hash);\n\t}\n\n\t/**\n\t * Generate PoW using CPU without workers (Not used)\n\t */\n\tgetHashCPUSync(hash) {\n\t\tconst response = this.getDeferredPromise();\n\n\t\tconst PoW = mod.cwrap('launchPoW', 'string', ['string']);\n\t\tconst start = Date.now();\n\t\tlet work;\n\t\tdo {\n\t\t\twork = PoW(hash);\n\t\t} while (work === '0000000000000000');\n\t\t//this.logger.debug(`Synchronous CPU: Found work (${work}) for ${hash} after ${(Date.now() - start) / 1000} seconds`);\n\n\t\tresponse.resolve(work);\n\t\treturn response.promise;\n\t}\n\n\t/**\n\t * Generate PoW using CPU and WebWorkers\n\t */\n\tgetHashCPUWorker(hash) {\n\t\tconst response = this.getDeferredPromise();\n\n\t\tconst start = Date.now();\n\t\tconst NUM_THREADS = navigator.hardwareConcurrency < 4 ? navigator.hardwareConcurrency : 4;\n\t\tconst workers = window['pow_initiate'](NUM_THREADS, '/assets/lib/pow/');\n\n\t\twindow['pow_callback'](\n\t\t\tworkers,\n\t\t\thash,\n\t\t\t() => {},\n\t\t\twork => {\n\t\t\t\t// tslint:disable-next-line:max-line-length\n\t\t\t\tthis.logger.debug(\n\t\t\t\t\t`CPU Worker: Found work (${work}) for ${hash} after ${(Date.now() - start) /\n\t\t\t\t\t\t1000} seconds [${NUM_THREADS} Workers]`\n\t\t\t\t);\n\t\t\t\tresponse.resolve(work);\n\t\t\t}\n\t\t);\n\n\t\treturn response.promise;\n\t}\n\n\t/**\n\t * Generate PoW using WebGL\n\t */\n\tgetHashWebGL(hash) {\n\t\tconst response = this.getDeferredPromise();\n\n\t\tconst start = Date.now();\n\t\ttry {\n\t\t\twindow['NanoWebglPow'](\n\t\t\t\thash,\n\t\t\t\t(work, n) => {\n\t\t\t\t\t// tslint:disable-next-line:max-line-length\n\t\t\t\t\t/*this.logger.debug(\n\t\t\t\t\t\t`WebGL Worker: Found work (${work}) for ${hash} after ${(Date.now() - start) /\n\t\t\t\t\t\t\t1000} seconds [${n} iterations]`\n\t\t\t\t\t);*/\n\t\t\t\t\tresponse.resolve(work);\n\t\t\t\t},\n\t\t\t\tn => {}\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tif (error.message === 'webgl2_required') {\n\t\t\t\tthis.webGLAvailable = false;\n\t\t\t}\n\t\t\tresponse.resolve(null);\n\t\t\t// response.reject(error);\n\t\t}\n\n\t\treturn response.promise;\n\t}\n\n\t// Helper for returning a deferred promise that we can resolve when work is ready\n\tprivate getDeferredPromise() {\n\t\tconst defer = {\n\t\t\tpromise: null,\n\t\t\tresolve: null,\n\t\t\treject: null\n\t\t};\n\n\t\tdefer.promise = new Promise((resolve, reject) => {\n\t\t\tdefer.resolve = resolve;\n\t\t\tdefer.reject = reject;\n\t\t});\n\n\t\treturn defer;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class PriceService {\n\tapiUrl = `https://api.coinmarketcap.com/v1/`;\n\n\tprice = {\n\t\tlastPrice: 1,\n\t\tlastPriceBTC: 0.001\n\t};\n\tlastPrice$ = new BehaviorSubject(1);\n\n\tconstructor(private http: HttpClient) {}\n\n\tasync getPrice(currency = 'USD') {\n\t\tif (!currency) {\n\t\t\treturn; // No currency defined, do not refetch\n\t\t}\n\t\tconst convertString = currency !== 'USD' && currency !== 'BTC' ? `?convert=${currency}` : ``;\n\t\tconst response: any = await this.http.get(`${this.apiUrl}ticker/qlink/${convertString}`).toPromise();\n\t\tif (!response || !response.length) {\n\t\t\treturn this.price.lastPrice;\n\t\t}\n\n\t\tconst quote = response[0];\n\t\tconst currencyPrice = quote[`price_${currency.toLowerCase()}`];\n\t\tconst btcPrice = quote.price_btc;\n\t\tconst usdPrice = quote.price_usd;\n\n\t\tthis.price.lastPrice = currencyPrice;\n\t\tthis.price.lastPriceBTC = btcPrice;\n\n\t\tthis.lastPrice$.next(currencyPrice);\n\n\t\treturn this.price.lastPrice;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { UtilService } from './util.service';\n//import * as blake from 'blakejs';\n//import BigNumber from 'bignumber.js';\nimport { WorkPoolService } from './work-pool.service';\nimport { NotificationService } from './notification.service';\nimport { AppSettingsService } from './app-settings.service';\n//import { WalletService } from './wallet.service';\n// import { LedgerService } from './ledger.service';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\nimport { timer } from 'rxjs';\n\nconst nacl = window['nacl'];\n\n//const STATE_BLOCK_PREAMBLE = '0000000000000000000000000000000000000000000000000000000000000000';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class QLCBlockService {\n\t//representativeAccount = 'qlc_3oftfjxu9x9pcjh1je3xfpikd441w1wo313qjc6ie1es5aobwed5x4pjojic'; // QLC Representative\n\tzeroHash = '0000000000000000000000000000000000000000000000000000000000000000';\n\n\tmsg1 = '';\n\tmsg2 = '';\n\tmsg3 = '';\n\tmsg4 = '';\n\tmsg5 = '';\n\tmsg6 = '';\n\tmsg7 = '';\n\n\t\n\tprivate confirmTxTimer = timer(500);\n\n\tconstructor(\n\t\tprivate api: ApiService,\n\t\t//private util: UtilService,\n\t\tprivate workPool: WorkPoolService,\n\t\tprivate notifications: NotificationService,\n\t\t// private ledgerService: LedgerService,\n\t\tpublic settings: AppSettingsService,\n\t\tprivate trans: TranslateService,\n\t\tprivate util: UtilService\n\t) {\n\t\tthis.loadLang();\n\t\tthis.trans.onLangChange.subscribe((event: LangChangeEvent) => {\n\t\t\tthis.loadLang();\n\t\t});\n\t}\n\n\tloadLang() {\n\t\tthis.trans.get('SERVICE_WARNINGS_QLC_SERVICE.msg1').subscribe((res: string) => {\n\t\t\tthis.msg1 = res;\n\t\t});\n\t\tthis.trans.get('SERVICE_WARNINGS_QLC_SERVICE.msg2').subscribe((res: string) => {\n\t\t\tthis.msg2 = res;\n\t\t});\n\t\tthis.trans.get('SERVICE_WARNINGS_QLC_SERVICE.msg3').subscribe((res: string) => {\n\t\t\tthis.msg3 = res;\n\t\t});\n\t\tthis.trans.get('SERVICE_WARNINGS_QLC_SERVICE.msg4').subscribe((res: string) => {\n\t\t\tthis.msg4 = res;\n\t\t});\n\t\tthis.trans.get('SERVICE_WARNINGS_QLC_SERVICE.msg5').subscribe((res: string) => {\n\t\t\tthis.msg5 = res;\n\t\t});\n\t\tthis.trans.get('SERVICE_WARNINGS_QLC_SERVICE.msg6').subscribe((res: string) => {\n\t\t\tthis.msg6 = res;\n\t\t});\n\t\tthis.trans.get('SERVICE_WARNINGS_QLC_SERVICE.msg7').subscribe((res: string) => {\n\t\t\tthis.msg7 = res;\n\t\t});\n\t}\n\n\tasync generateChange(walletAccount, representativeAccount, ledger = false) {\n\t\tconst changeBlock = await this.api.c.buildinLedger.generateChangeBlock(walletAccount.id, representativeAccount);\n\t\tconst processResponse = await this.processBlock(changeBlock, walletAccount.keyPair);\n\n\t\tif (processResponse && processResponse.result) {\n\t\t\tconst header = processResponse.result;\n\t\t\twalletAccount.header = header;\n\t\t\treturn header;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tasync generateSend(walletAccount, toAccountID, tokenTypeHash, rawAmount, ledger = false) {\n\t\tconst blockData = {\n\t\t\tfrom: walletAccount.id,\n\t\t\ttokenName: tokenTypeHash,\n\t\t\tto: toAccountID,\n\t\t\tamount: rawAmount\n\t\t};\n\n\t\tconst sendBlock = await this.api.c.buildinLedger.generateSendBlock(blockData);\n\t\tconst processResponse = await this.processBlock(sendBlock, walletAccount.keyPair);\n\n\t\tif (processResponse && processResponse.result) {\n\t\t\tconst header = processResponse.result;\n\t\t\twalletAccount.header = header;\n\t\t\treturn header;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tasync generateReceive(walletAccount, sourceBlock, ledger = false) {\n\t\tconst srcBlockInfo = await this.api.blocksInfo([sourceBlock]);\n\t\tif (srcBlockInfo && !srcBlockInfo.error && srcBlockInfo.result.length > 0) {\n\t\t\t//console.log('find block info of ' + sourceBlock);\n\t\t\t//console.log(srcBlockInfo.result);\n\t\t} else {\n\t\t\t// console.log('can not find block info of ' + sourceBlock);\n\t\t\treturn null;\n\t\t}\n\n\t\tconst sendBlock = srcBlockInfo.result[0];\n\t\t// Reward contract address\n\t\t// qlc_3oinqggowa7f1rsjfmib476ggz6s4fp8578odjzerzztkrifqkqdz5zjztb3 \n\t\t// ==> d614bb9d5e20ad063316ce091148e77c99136c6194d55c7ecc7ffa9620dbcaeb\n\t\tif (sendBlock.type == 'ContractSend' && sendBlock.link == 'd614bb9d5e20ad063316ce091148e77c99136c6194d55c7ecc7ffa9620dbcaeb') {\n\t\t\t// proccess reward block\n\t\t\tconst rewardReceiveBlock = await this.api.getReceiveRewardBlock(sourceBlock);\n\t\t\t//console.log(rewardReceiveBlock);\n\t\t\tif (rewardReceiveBlock.result) {\n\t\t\t\t//pov\n\t\t\t\tlet block = rewardReceiveBlock.result;\n\t\t\t\tconst povFittest = await this.api.getFittestHeader();\n\t\t\t\tif (povFittest.error || !povFittest.result || !povFittest.result.basHdr) {\n\t\t\t\t\tconsole.log('ERROR - no fittest header');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tblock.povHeight = povFittest.result.basHdr.height;\n\t\t\t\tconst processResponse = await this.api.process(block);\n\t\t\t\tif (processResponse.result) {\n\t\t\t\t\treturn processResponse.result;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (rewardReceiveBlock.error) {\n\t\t\t\tconsole.log(rewardReceiveBlock.error.message);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Miner / Rep reward\n\t\t// Miner link = 0000000000000000000000000000000000000000000000000000000000000015\n\t\t// Rep link = 0000000000000000000000000000000000000000000000000000000000000017\n\t\tif (sendBlock.type == 'ContractSend' && (sendBlock.link == '0000000000000000000000000000000000000000000000000000000000000015')) {\n\t\t\t// proccess Miner reward block\n\t\t\t\n\t\t\tconst rewardRecvBlockQuery = await this.api.getRewardRecvBlockBySendHash(sendBlock.hash);\n\t\t\tif (rewardRecvBlockQuery.result) {\n\t\t\t\tconst processResponse = await this.processBlockWithPov(rewardRecvBlockQuery.result, walletAccount.keyPair);\n\t\t\t\tif (processResponse.result) {\n\t\t\t\t\treturn processResponse.result;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (rewardRecvBlockQuery.error) {\n\t\t\t\tconsole.log(rewardRecvBlockQuery.error.message);\n\t\t\t}\n\t\t\t\n\t\t\treturn;\n\t\t}\n\n\t\tif (sendBlock.type == 'ContractSend' && (sendBlock.link == '0000000000000000000000000000000000000000000000000000000000000017')) {\n\t\t\t// proccess Rep reward block\n\t\t\t\n\t\t\tconst rewardRecvBlockQuery = await this.api.rep_getRewardRecvBlockBySendHash(sendBlock.hash);\n\t\t\tif (rewardRecvBlockQuery.result) {\n\t\t\t\tconst processResponse = await this.processBlockWithPov(rewardRecvBlockQuery.result, walletAccount.keyPair);\n\t\t\t\tif (processResponse.result) {\n\t\t\t\t\treturn processResponse.result;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (rewardRecvBlockQuery.error) {\n\t\t\t\tconsole.log(rewardRecvBlockQuery.error.message);\n\t\t\t}\n\t\t\t\n\t\t\treturn;\n\t\t}\n\n\n\n\t\t// if (srcBlockInfo.result[0].address == 'qlc_3pj83yuemoegkn6ejskd8bustgunmfqpbhu3pnpa6jsdjf9isybzffwq7s4p' || srcBlockInfo.result[0].address == 'qlc_1kk5xst583y8hpn9c48ruizs5cxprdeptw6s5wm6ezz6i1h5srpz3mnjgxao') {\n\t\t// \t// proccess reward block\n\t\t// \tconst rewardReceiveBlock = await this.api.getReceiveRewardBlock(sourceBlock);\n\t\t// \t//console.log(rewardReceiveBlock);\n\t\t// \tconst processResponse = await this.api.process(rewardReceiveBlock.result); \n\t\t// \t//console.log(processResponse);\n\n\t\t// \treturn;\n\t\t// }\n\n\t\tconst receiveBlock = await this.api.c.buildinLedger.generateReceiveBlock(sendBlock);\n\t\tconst processResponse = await this.processBlock(receiveBlock, walletAccount.keyPair);\n\n\t\tif (processResponse && processResponse.result) {\n\t\t\tconst header = processResponse.result;\n\t\t\twalletAccount.header = header;\n\t\t\treturn header;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tasync processBlock(block, keyPair) {\n\t\t//pov\n\t\tconst povFittest = await this.api.getFittestHeader();\n\t\tif (povFittest.error || !povFittest.result) {\n\t\t\tconsole.log('ERROR - no fittest header');\n\t\t\treturn;\n\t\t}\n\t\tblock.povHeight = povFittest.result.basHdr.height;\n\t\tconst blockHash = await this.api.blockHash(block);\n\t\tconst signed = nacl.sign.detached(this.util.hex.toUint8(blockHash.result), keyPair.secretKey);\n\t\tconst signature = this.util.hex.fromUint8(signed);\n\n\t\tblock.signature = signature;\n\t\tlet generateWorkFor = block.previous;\n\t\tif (block.previous === this.zeroHash) {\n\t\t\tconst publicKey = await this.api.accountPublicKey(block.address);\n\t\t\tgenerateWorkFor = publicKey.result;\n\t\t}\n\n\t\tif (!this.workPool.workExists(generateWorkFor)) {\n\t\t\tthis.notifications.sendInfo(this.msg3);\n\t\t}\n\t\t//console.log('generating work');\n\t\tconst work = await this.workPool.getWork(generateWorkFor);\n\t\t//console.log('work >>> ' + work);\n\t\tblock.work = work;\n\n\t\tconst processResponse = await this.api.process(block);\n\t\tif (processResponse && processResponse.result) {\n\t\t\tconst confirm = await this.confirmTx(processResponse.result);\n\t\t\tconsole.log('confirm');\n\t\t\tconsole.log(confirm);\n\t\t\tthis.workPool.addWorkToCache(processResponse.result); // Add new hash into the work pool\n\t\t\tthis.workPool.removeFromCache(generateWorkFor);\n\t\t\treturn processResponse;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tasync processBlockWithPov(block, keyPair) {\n\t\tconst blockHash = await this.api.blockHash(block);\n\t\tconst signed = nacl.sign.detached(this.util.hex.toUint8(blockHash.result), keyPair.secretKey);\n\t\tconst signature = this.util.hex.fromUint8(signed);\n\n\t\tblock.signature = signature;\n\t\tlet generateWorkFor = block.previous;\n\t\tif (block.previous === this.zeroHash) {\n\t\t\tconst publicKey = await this.api.accountPublicKey(block.address);\n\t\t\tgenerateWorkFor = publicKey.result;\n\t\t}\n\n\t\tif (!this.workPool.workExists(generateWorkFor)) {\n\t\t\tthis.notifications.sendInfo(this.msg3);\n\t\t}\n\t\t//console.log('generating work');\n\t\tconst work = await this.workPool.getWork(generateWorkFor);\n\t\t//console.log('work >>> ' + work);\n\t\tblock.work = work;\n\n\t\tconst processResponse = await this.api.process(block);\n\t\tif (processResponse && processResponse.result) {\n\t\t\tconst confirm = await this.confirmTx(processResponse.result);\n\t\t\tconsole.log('confirm');\n\t\t\tconsole.log(confirm);\n\t\t\tthis.workPool.addWorkToCache(processResponse.result); // Add new hash into the work pool\n\t\t\tthis.workPool.removeFromCache(generateWorkFor);\n\t\t\treturn processResponse;\n\t\t} else if (processResponse && processResponse.error) {\n\t\t\treturn processResponse;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tasync confirmTx(hash) {\n\t\tconsole.log('confirmingTx ' + hash);\n\t\tlet notConfirmed = true;\n\n\t\twhile(notConfirmed) {\n\t\t\tconst blockConfirmedQuery = await this.api.blockConfirmedStatus(hash);\n\t\t\tif (typeof blockConfirmedQuery.result != 'undefined') {\n\t\t\t\tif (blockConfirmedQuery.result === true) {\n\t\t\t\t\tconsole.log('confirmed');\n\t\t\t\t\tnotConfirmed = false;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('not confirmed');\n\t\t\t\t\tawait this.sleep(500);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log('not confirmed');\n\t\t\t\tawait this.sleep(500);\n\t\t\t}\n\t\t}\n\t\treturn hash;\n\t}\n\n\tsleep(ms) {\n\t\tconsole.log('sleep' + ms);\n\t\treturn new Promise(resolve => setTimeout(resolve, ms));\n\t}\n\n\tsendLedgerDeniedNotification() {\n\t\tthis.notifications.sendWarning(this.msg6);\n\t}\n\tsendLedgerNotification() {\n\t\tthis.notifications.sendInfo(this.msg7, { identifier: 'ledger-sign', length: 0 });\n\t}\n\tclearLedgerNotification() {\n\t\tthis.notifications.removeNotification('ledger-sign');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport  uuid from 'uuid/v4';\nimport { WalletService } from './wallet.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QLCWebSocketService {\n\n  queuedCommands = [];\n\n  queuedAwaitAnswers = [];\n\n  reconnectTimeout = 5 * 1000;\n\n  socket = {\n    connected: false,\n    ws: null,\n  };\n\n  subscribedAccounts = [];\n\n  latestTransactions = [];\n  latestBlocks = [];\n\n  latestTransactionTimeStamp = 0;\n  latestBlocksTimeStamp = 0;\n\n  latest5Transactions = [];\n  latest5Blocks = [];\n\n  povLatestHeader = {\n    basHdr: {\n      height : 0\n    }\n  };\n\n  ledger_subscription = [];\n  pov_subscription = [];\n  debug_subscription = [];\n  \n  debug = false;\n\n  constructor(\n    private walletService: WalletService\n  ) {\n    const now = new Date().getTime();\n    this.latestTransactionTimeStamp = now;\n    this.latestBlocksTimeStamp = now;\n  }\n\n\n  connect() {\n    if (this.socket.connected && this.socket.ws) return;\n    delete this.socket.ws; // Maybe this will erase old connections\n\n    const wsUrl = environment.wsUrl[environment.qlcChainNetwork];\n    const ws = new WebSocket(wsUrl);\n    this.socket.ws = ws;\n\n    ws.onopen = event => {\n      this.socket.connected = true;\n      if (this.debug) {\n        console.log('Socket open');\n      }\n      this.send('ledger_subscribe',['newBlock']);\n      this.send('pov_getLatestHeader',[]);\n      this.send('pov_subscribe',['newBlock']);\n      this.send('ledger_blocks',[10, 0]);\n      //this.send('debug_subscribe',['newBlock']);\n\n      for (const account of this.walletService.wallet.accounts) {\n        this.send('ledger_subscribe',['balanceChange',account.id]);\n        this.send('ledger_subscribe',['newPending',account.id]);\n      }\n      this.queuedCommands.forEach(event => ws.send(JSON.stringify(event)));\n      \n      if (this.debug) {\n        console.log(this.ledger_subscription);\n      }\n      // Resubscribe to accounts?\n      if (this.subscribedAccounts.length) {\n        //this.subscribeAccounts(this.subscribedAccounts);\n      }\n    };\n    ws.onerror = event => {\n      // this.socket.connected = false;\n      console.log(`Socket error`, event);\n    };\n    ws.onclose = event => {\n      this.socket.connected = false;\n      console.log(`Socket close`, event);\n\n      // Start attempting to recconect\n      setTimeout(() => this.attemptReconnect(), this.reconnectTimeout);\n    };\n    ws.onmessage = async event => {\n      try {\n        const newEvent = JSON.parse(event.data);\n        //console.log(newEvent);\n        if (newEvent.method === 'debug_subscription') {\n          \n          if (this.debug) {\n            console.log('debug_subscription found, checking subscription');\n            console.log('sub ' + newEvent.params.subscription);\n            console.log(this.debug_subscription);\n          }\n          const sub = this.debug_subscription.find(o => o.id === newEvent.params.subscription);\n          if (sub) {\n            if (this.debug) {\n              console.log('debug sub found');\n              console.log(sub);\n            }\n          }\n\n\n          return;\n        }\n        if (newEvent.method === 'pov_subscription') {\n          if (this.debug) {\n            console.log('pov_subscription found, checking subscription');\n            console.log('sub ' + newEvent.params.subscription);\n            console.log(this.pov_subscription);\n          }\n          const sub = this.pov_subscription.find(o => o.id === newEvent.params.subscription);\n          if (sub) {\n            if (this.debug) {\n              console.log('pov sub found');\n              console.log(sub);\n            }\n            if (sub.method === 'newBlock') {\n              this.pov_newBlock(newEvent.params.result)\n            }\n          }\n\n\n          return;\n        }\n        if (newEvent.method === 'ledger_subscription') {\n          //if (this.debug) {\n          //}\n          const sub = this.ledger_subscription.find(o => o.id === newEvent.params.subscription);\n          if (sub) {\n            if (this.debug) {\n              if (sub.method != 'newBlock') {\n                console.log(newEvent);\n                console.log('ledger_subscription found, checking subscription');\n                console.log('sub ' + newEvent.params.subscription);\n\n                console.log('ledger sub found');\n                console.log(sub);\n              }\n            }\n            if (sub.method === 'newBlock') {\n              if (this.debug) {\n                console.log('block');\n                console.log(newEvent.params.result);\n              }\n              this.ledger_blocks([newEvent.params.result]);\n            }\n            if (sub.method === 'balanceChange') {\n              \n              if (this.debug) {\n                console.log('balanceChange');\n                console.log(newEvent.params.result);\n              }\n                let wallet = this.walletService.wallet;\n                let account = this.walletService.wallet.accounts.find(o => o.id === newEvent.params.result.account);\n\n                await this.walletService.loadTokens();\n                \n                let newBalance = newEvent.params.result;\n\n                let accountMeta = [];\n                let otherTokens = [];\n                if (newBalance.tokens && Array.isArray(newBalance.tokens)) {\n                  newBalance.tokens.forEach(token => {\n                    accountMeta[token.tokenName] = token;\n                    if (this.walletService.tokenMap.hasOwnProperty(token.type)) {\n                      token.tokenInfo = this.walletService.tokenMap[token.type];\n                    }\n                    if (token.tokenInfo.tokenSymbol != 'QLC' && token.tokenInfo.tokenSymbol != 'QGAS') {\n                      otherTokens.push(token);\n                    }\n                  });\n                }\n                account.balances = accountMeta;\n                account.otherTokens = otherTokens;\n                \n\n\n            }\n            if (sub.method === 'newPending') {\n              \n              if (this.debug) {\n                console.log('newPending');\n                console.log(newEvent.params.result);\n              }\n              let wallet = this.walletService.wallet;\n              let account = this.walletService.wallet.accounts.find(o => o.id === newEvent.params.result.account);\n\n\n              await this.walletService.loadTokens();\n\n              let newPending = newEvent.params.result;\n\n              wallet.pendingCount += 1;\n              account.pendingCount += 1;\n\n              if (this.walletService.tokenMap.hasOwnProperty(newPending.type)) {\n                newPending.tokenInfo = this.walletService.tokenMap[newPending.type];\n              }\n              account.pendingBlocks.push(newPending);\n              if (newPending.tokenName != 'QLC' && newPending.tokenName != 'QGAS') {\n                newPending.tokenName = 'OTHER';\n              }\n              if (!account.pendingPerTokenCount[newPending.tokenName])\n                account.pendingPerTokenCount[newPending.tokenName] = 0;\n\n              account.pendingPerTokenCount[newPending.tokenName] += 1;\n              this.walletService.pendingBlocks.push({\n                account: newPending.source,\n                receiveAccount: account,\n                amount: newPending.amount,\n                token: newPending.type,\n                tokenName: newPending.tokenName,\n                tokenSymbol: newPending.tokenName,\n                timestamp: newPending.timestamp,\n                hash: newPending.hash\n              });\n              \n\n              \n              \n            }\n          }\n\n\n          return;\n        }\n        const awaitMethod = this.queuedAwaitAnswers.find(o => o.id === newEvent.id); // find method by id\n        if (awaitMethod) {\n          for( var i = 0; i < this.queuedAwaitAnswers.length; i++){ // remove from awaiting\n            if ( this.queuedAwaitAnswers[i].id === newEvent.id) {\n              this.queuedAwaitAnswers.splice(i, 1); \n            }\n          }\n          if (awaitMethod.method === 'ledger_blocks') {\n            \n            if (this.debug) {\n              console.log('latest transactions ...............................')\n              console.log(newEvent.result)\n            }\n            this.ledger_blocks(newEvent.result, true);\n          }\n          if (awaitMethod.method === 'pov_getLatestHeader') {\n            \n            if (this.debug) {\n              console.log('latest header transactions ...............................')\n              console.log(newEvent.result)\n            }\n            this.povLatestHeader = newEvent.result;\n            let count = 5;\n            if (this.povLatestHeader.basHdr.height < count) {\n              count = this.povLatestHeader.basHdr.height;\n            }\n            this.send('pov_batchGetHeadersByHeight',[this.povLatestHeader.basHdr.height, count, false]);\n          }\n\n          if (awaitMethod.method === 'pov_batchGetHeadersByHeight') {\n            \n            if (this.debug) {\n              console.log('latest blocks transactions ...............................')\n              console.log(newEvent.result.headers)\n            }\n            if (newEvent.result) {\n              this.povBlocks(newEvent.result.headers, true);\n            }\n          }\n\n          \n          if (awaitMethod.method === 'ledger_subscribe') {\n            if (awaitMethod.params[0] === 'newBlock') {\n              \n              if (this.debug) {\n                console.log('newBlock ledger_subscribe')\n              }\n              this.ledger_subscription.push({ id:newEvent.result, method: 'newBlock'});\n            }\n            if (awaitMethod.params[0] === 'balanceChange') {\n              \n              if (this.debug) {\n                console.log('balanceChange ledger_subscribe')\n              }\n              this.ledger_subscription.push({ id:newEvent.result, method: 'balanceChange', data: awaitMethod.params[1]});\n            }\n            if (awaitMethod.params[0] === 'newPending') {\n              \n              if (this.debug) {\n                console.log('newPending ledger_subscribe')\n              }\n              this.ledger_subscription.push({ id:newEvent.result, method: 'newPending', data: awaitMethod.params[1]});\n            }\n          }\n          if (awaitMethod.method === 'pov_subscribe') {\n            if (awaitMethod.params[0] === 'newBlock') {\n              \n              if (this.debug) {\n                console.log('newBlock pov_subscribe')\n              }\n              this.pov_subscription.push({ id:newEvent.result, method: 'newBlock'});\n            }\n          }\n          if (awaitMethod.method === 'debug_subscribe') {\n            if (awaitMethod.params[0] === 'newBlock') {\n              \n              if (this.debug) {\n                console.log('newBlock debug_subscribe')\n              }\n              this.debug_subscription.push({ id:newEvent.result, method: 'newBlock'});\n            }\n          }\n\n          \n          if (this.debug) {\n            console.log(this.queuedAwaitAnswers);\n            console.log('Found method');\n            console.log(awaitMethod);\n          }\n\n        }\n        /*if (newEvent.event === 'newTransaction') {\n          this.newTransactions$.next(newEvent.data);\n        }*/\n      } catch (err) {\n        console.log(`Error parsing message`, err);\n      }\n    }\n  }\n\n  async povBlocks(results, skipTimeCheck = false) {\n    const now = new Date().getTime();\n    if (skipTimeCheck === false && now - this.latestBlocksTimeStamp < 1000 ) {\n      return;\n    }\n    this.latestBlocksTimeStamp = now;\n    results.sort( (a,b) => {\n      return a.basHdr.height - b.basHdr.height \n    } );\n    for (const block of results) {\n      this.latestBlocks.unshift(block); \n    }\n    //console.log(this.latestBlocks);\n    this.latestBlocks.sort( (a,b) => {\n      return b.basHdr.height - a.basHdr.height \n    } );\n    this.latestBlocks = this.latestBlocks.filter((block, index, self) =>\n    index === self.findIndex((t) => (\n      t.basHdr.height === block.basHdr.height\n    )));\n    if (this.latestBlocks.length > 10) {\n      this.latestBlocks = this.latestBlocks.slice(0,10);\n    }\n    this.latest5Blocks = this.latestBlocks.slice(0,5);\n    \n  }\n\n  async pov_newBlock(result) {\n    this.povLatestHeader = result;\n    this.povBlocks([result]);\n  }\n\n  async ledger_blocks(results, skipTimeCheck = false) {\n    const now = new Date().getTime();\n    if (skipTimeCheck === false && now - this.latestTransactionTimeStamp < 1000 ) {\n      return;\n    }\n    this.latestTransactionTimeStamp = now;\n    results.sort( (a,b) => {\n      return a.timestamp - b.timestamp \n    } );\n    const blocks = await this.walletService.prepareQLCBlockView(results);\n    for (const block of blocks) {\n      if (block.hash != 'bd8ecb1b2be629a72b25d69ee28248ea49e6e0ce9b6ed681c05095b7f6fc683e' &&\n          block.hash != 'b056061b7f6de192a0ad573cc4b62197eaad0b2073127bca373e2953837bd9a4' &&\n          block.hash != '493c020917e7f7da154cbd24843ca66542dd62e46f9d3f032e986f812c60b5fb') {\n        this.latestTransactions.unshift(block); \n      }\n    }\n    results.sort( (a,b) => {\n      return b.timestamp - a.timestamp \n    } );\n    if (this.latestTransactions.length > 10) {\n      this.latestTransactions = this.latestTransactions.slice(0,10);\n    }\n    this.latest5Transactions = this.latestTransactions.slice(0,5);\n  }\n\n  attemptReconnect() {\n    this.connect();\n    if (this.reconnectTimeout < 30 * 1000) {\n      this.reconnectTimeout += 5 * 1000; // Slowly increase the timeout up to 30 seconds\n    }\n  }\n\n  forceReconnect() {\n    if (this.socket.connected && this.socket.ws) {\n      // Override the onclose event so it doesnt try to reconnect the old instance\n      this.socket.ws.onclose = event => {\n      };\n      this.socket.ws.close();\n      delete this.socket.ws;\n      this.socket.connected = false;\n    }\n\n    setTimeout(() => this.connect(), 250);\n  }\n\n  async send(method, params): Promise<any> {\n    const request = {\n      \"jsonrpc\" : \"2.0\",\n      \"method\"  : method,\n      \"id\" : uuid(),\n      \"params\" : params \n    }\n\n\n    if (this.debug) {\n      console.log(request);\n    }\n\n    if (this.socket.connected) {\n      this.socket.ws.send(JSON.stringify(request));\n      this.queuedAwaitAnswers.push(request);\n    }\n\n\t}\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class RepresentativeService {\n\tstoreKey = `sms-billing-representatives`;\n\n\trepresentatives$ = new BehaviorSubject([]);\n\trepresentatives = [];\n\n\tloaded = false;\n\n\t// Default representatives list\n\tdefaultRepresentatives = [\n\t\t{\n\t\t\tid: 'qlc_1t1uynkmrs597z4ns6ymppwt65baksgdjy1dnw483ubzm97oayyo38ertg44',\n\t\t\tname: 'QLCChain genesis Rep',\n\t\t\ttrusted: true\n\t\t},\n\t\t{\n\t\t\tid: 'qlc_1pjp8n7d99u1efna1iekiz9d115dtawrt7zhyjtjpk64cnxfc4kk9wwicdcr',\n\t\t\tname: 'QLCChain Wallet Rep 1',\n\t\t\ttrusted: true\n\t\t},\n\t\t{\n\t\t\tid: 'qlc_1w14z4actgqnut8cpzqw83doakhw4ri9667m7mjxen1baysc77xt4y4ei3wh',\n\t\t\tname: 'QLCChain Wallet Rep 2',\n\t\t\ttrusted: true\n\t\t},\n\t\t{\n\t\t\tid: 'qlc_3jgrnmmytkjqqo7ktihf84aebhofizgk7p646zrugazcge4n1yq9hdr67bix',\n\t\t\tname: 'QLCChain Wallet Rep 3',\n\t\t\ttrusted: true\n\t\t},\n\t\t{\n\t\t\tid: 'qlc_1kz9me7btpb98ujiyg3wiz5w18rkdi8xfd6n7ycyhb3j5yube4x8oxxwz8ni',\n\t\t\tname: 'QLCChain Wallet Rep 4',\n\t\t\ttrusted: true\n\t\t},\n\t\t{\n\t\t\tid: 'qlc_3fkpofq7eorr9qk7s8s9bd19bw4xxw3sjsynazf99f7iuj4t89d9kro8yp1o',\n\t\t\tname: 'QLCChain Wallet Rep 5',\n\t\t\ttrusted: true\n\t\t}\n\t\t/*{\n\t\t\tid: 'qlc_3hw8s1zubhxsykfsq5x7kh6eyibas9j3ga86ixd7pnqwes1cmt9mqqrngap4',\n\t\t\tname: 'QLCChain genesis Rep',\n\t\t\ttrusted: true\n\t\t},\n\t\t{\n\t\t\tid: 'qlc_1awe9yegmfkgt1znczg9noet1n3zhkfqfukwfh5cuf5gtjpcjczg7yfwwsp7',\n\t\t\tname: 'QLCChain Wallet Rep 1',\n\t\t\ttrusted: true\n\t\t},\n\t\t{\n\t\t\tid: 'qlc_1h14ymitgs6x5895b57wdi7gedop7jmnihxwryhgnr8ry1ecmpg9io6kkbha',\n\t\t\tname: 'QLCChain Wallet Rep 2',\n\t\t\ttrusted: true\n\t\t}*/\n\t];\n\n\tconstructor() {\n\t\tthis.representatives = this.defaultRepresentatives;\n\t}\n\n\tloadRepresentativeList() {\n\t\tif (this.loaded) {\n\t\t\treturn this.representatives;\n\t\t}\n\n\t\tlet list = this.defaultRepresentatives;\n\t\tconst representativeStore = localStorage.getItem(this.storeKey);\n\t\tif (representativeStore) {\n\t\t\tlist = JSON.parse(representativeStore);\n\t\t}\n\t\tthis.representatives = list;\n\t\tthis.representatives$.next(list);\n\t\tthis.loaded = true;\n\n\t\treturn list;\n\t}\n\n\tgetRepresentative(id) {\n\t\treturn this.representatives.find(rep => rep.id === id);\n\t}\n\n\tsaveRepresentative(accountID, name, trusted = false, warn = false) {\n\t\tconst newRepresentative: any = {\n\t\t\tid: accountID,\n\t\t\tname: name\n\t\t};\n\t\tif (trusted) {\n\t\t\tnewRepresentative.trusted = true;\n\t\t}\n\t\tif (warn) {\n\t\t\tnewRepresentative.warn = true;\n\t\t}\n\n\t\tconst existingRepresentative = this.representatives.find(\n\t\t\tr => r.name.toLowerCase() === name.toLowerCase() || r.id.toLowerCase() === accountID.toLowerCase()\n\t\t);\n\n\t\tif (existingRepresentative) {\n\t\t\tthis.representatives.splice(this.representatives.indexOf(existingRepresentative), 1, newRepresentative);\n\t\t} else {\n\t\t\tthis.representatives.push(newRepresentative);\n\t\t}\n\n\t\tthis.saveRepresentatives();\n\t\tthis.representatives$.next(this.representatives);\n\t}\n\n\tdeleteRepresentative(accountID) {\n\t\tconst existingIndex = this.representatives.findIndex(a => a.id.toLowerCase() === accountID.toLowerCase());\n\t\tif (existingIndex === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.representatives.splice(existingIndex, 1);\n\n\t\tthis.saveRepresentatives();\n\t\tthis.representatives$.next(this.representatives);\n\t}\n\n\tsaveRepresentatives(): void {\n\t\tlocalStorage.setItem(this.storeKey, JSON.stringify(this.representatives));\n\t}\n\n\tgetSortedRepresentatives() {\n\t\tconst weightedReps = this.representatives.map(r => {\n\t\t\tif (r.trusted) {\n\t\t\t\tr.weight = 2;\n\t\t\t} else if (r.warn) {\n\t\t\t\tr.weight = 0;\n\t\t\t} else {\n\t\t\t\tr.weight = 1;\n\t\t\t}\n\t\t\treturn r;\n\t\t});\n\n\t\treturn weightedReps.sort((a, b) => b.weight - a.weight);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport * as blake from 'blakejs';\nimport { BigNumber } from 'bignumber.js';\n\nconst nacl = window['nacl'];\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class UtilService {\n\tconstructor() {}\n\n\thex = {\n\t\ttoUint4: hexToUint4,\n\t\tfromUint8: uint8ToHex,\n\t\ttoUint8: hexToUint8\n\t};\n\tuint4 = {\n\t\ttoUint5: uint4ToUint5,\n\t\ttoUint8: uint4ToUint8\n\t};\n\tuint5 = {\n\t\ttoString: uint5ToString\n\t};\n\tuint8 = {\n\t\ttoUint4: uint8ToUint4,\n\t\tfromHex: hexToUint8,\n\t\ttoHex: uint8ToHex\n\t};\n\tdec = {\n\t\ttoHex: decToHex\n\t};\n\taccount = {\n\t\tgenerateAccountSecretKeyBytes: generateAccountSecretKeyBytes,\n\t\tgenerateAccountKeyPair: generateAccountKeyPair,\n\t\tgetPublicAccountID: getPublicAccountID,\n\t\tgenerateSeedBytes: generateSeedBytes,\n\t\tgetAccountPublicKey: getAccountPublicKey\n\t};\n\tqlc = {\n\t\tmqlcToRaw: mqlcToRaw,\n\t\tkqlcToRaw: kqlcToRaw,\n\t\tqlcToRaw: qlcToRaw,\n\t\trawToMqlc: rawToMqlc,\n\t\trawToKqlc: rawToKqlc,\n\t\trawToQlc: rawToQlc\n\t};\n\n\tb64 = {\n\t\tencodeUnicode: b64EncodeUnicode,\n\t\tdecodeUnicode: b64DecodeUnicode\n\t}\n}\n\n/** b64 Functions **/\nfunction b64EncodeUnicode(str) {\n\t// first we use encodeURIComponent to get percent-encoded UTF-8,\n\t// then we convert the percent encodings into raw bytes which\n\t// can be fed into btoa.\n\treturn btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g,\n\t\tfunction toSolidBytes(match, p1) {\n\t\t\treturn String.fromCharCode(Number('0x' + p1));\n\t}));\n}\n\nfunction b64DecodeUnicode(str) {\n    // Going backwards: from bytestream, to percent-encoding, to original string.\n    return decodeURIComponent(atob(str).split('').map(function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n}\n\n\n/** Hex Functions **/\nfunction hexToUint4(hexValue) {\n\tconst uint4 = new Uint8Array(hexValue.length);\n\tfor (let i = 0; i < hexValue.length; i++) {\n\t\tuint4[i] = parseInt(hexValue.substr(i, 1), 16);\n\t}\n\n\treturn uint4;\n}\nfunction hexToUint8(hexString) {\n\tif (hexString.length % 2 > 0) {\n\t\thexString = '0' + hexString;\n\t}\n\tconst byteArray = [];\n\tfor (let i = 0; i < hexString.length; i += 2) {\n\t\tbyteArray.push(parseInt(hexString.slice(i, i + 2), 16));\n\t}\n\treturn Uint8Array.from(byteArray);\n}\n\n/** Uint4 Functions **/\nfunction uint4ToUint8(uintValue) {\n\tconst length = uintValue.length / 2;\n\tconst uint8 = new Uint8Array(length);\n\tfor (let i = 0; i < length; i++) {\n\t\tuint8[i] = uintValue[i * 2] * 16 + uintValue[i * 2 + 1];\n\t}\n\n\treturn uint8;\n}\n\nfunction uint4ToUint5(uintValue) {\n\tconst length = (uintValue.length / 5) * 4;\n\tconst uint5 = new Uint8Array(length);\n\tfor (let i = 1; i <= length; i++) {\n\t\tconst n = i - 1;\n\t\tconst m = i % 4;\n\t\tconst z = n + (i - m) / 4;\n\t\tconst right = uintValue[z] << m;\n\t\tlet left;\n\t\tif ((length - i) % 4 === 0) {\n\t\t\tleft = uintValue[z - 1] << 4;\n\t\t} else {\n\t\t\tleft = uintValue[z + 1] >> (4 - m);\n\t\t}\n\t\tuint5[n] = (left + right) % 32;\n\t}\n\treturn uint5;\n}\n\nfunction uint4ToHex(uint4) {\n\tlet hex = '';\n\tfor (let i = 0; i < uint4.length; i++) {\n\t\thex += uint4[i].toString(16);\n\t}\n\treturn hex;\n}\n\n/** Uint5 Functions **/\nfunction uint5ToString(uint5) {\n\tconst letter_list = '13456789abcdefghijkmnopqrstuwxyz'.split('');\n\tlet string = '';\n\tfor (let i = 0; i < uint5.length; i++) {\n\t\tstring += letter_list[uint5[i]];\n\t}\n\n\treturn string;\n}\n\nfunction uint5ToUint4(uint5) {\n\tconst length = (uint5.length / 4) * 5;\n\tconst uint4 = new Uint8Array(length);\n\tfor (let i = 1; i <= length; i++) {\n\t\tconst n = i - 1;\n\t\tconst m = i % 5;\n\t\tconst z = n - (i - m) / 5;\n\t\tconst right = uint5[z - 1] << (5 - m);\n\t\tconst left = uint5[z] >> m;\n\t\tuint4[n] = (left + right) % 16;\n\t}\n\treturn uint4;\n}\n\n/** Uint8 Functions **/\nfunction uint8ToHex(uintValue) {\n\tlet hex = '';\n\tlet aux;\n\tfor (let i = 0; i < uintValue.length; i++) {\n\t\taux = uintValue[i].toString(16);\n\t\tif (aux.length === 1) {\n\t\t\taux = '0' + aux;\n\t\t}\n\t\thex += aux;\n\t\taux = '';\n\t}\n\n\treturn hex;\n}\n\nfunction uint8ToUint4(uintValue) {\n\tconst uint4 = new Uint8Array(uintValue.length * 2);\n\tfor (let i = 0; i < uintValue.length; i++) {\n\t\tuint4[i * 2] = (uintValue[i] / 16) | 0;\n\t\tuint4[i * 2 + 1] = uintValue[i] % 16;\n\t}\n\n\treturn uint4;\n}\n\n/** Dec Functions **/\nfunction decToHex(decValue, bytes = null) {\n\tconst dec = decValue.toString().split('');\n\tconst sum = [];\n\tlet hex = '';\n\tconst hexArray = [];\n\tlet i;\n\tlet s;\n\twhile (dec.length) {\n\t\ts = 1 * dec.shift();\n\t\tfor (i = 0; s || i < sum.length; i++) {\n\t\t\ts += (sum[i] || 0) * 10;\n\t\t\tsum[i] = s % 16;\n\t\t\ts = (s - sum[i]) / 16;\n\t\t}\n\t}\n\twhile (sum.length) {\n\t\thexArray.push(sum.pop().toString(16));\n\t}\n\n\thex = hexArray.join('');\n\n\tif (hex.length % 2 !== 0) {\n\t\thex = '0' + hex;\n\t}\n\tif (bytes > hex.length / 2) {\n\t\tconst diff = bytes - hex.length / 2;\n\t\tfor (let j = 0; j < diff; j++) {\n\t\t\thex = '00' + hex;\n\t\t}\n\t}\n\n\treturn hex;\n}\n\n/** String Functions **/\nfunction stringToUint5(string) {\n\tconst letter_list = '13456789abcdefghijkmnopqrstuwxyz'.split('');\n\tconst length = string.length;\n\tconst string_array = string.split('');\n\tconst uint5 = new Uint8Array(length);\n\tfor (let i = 0; i < length; i++) {\n\t\tuint5[i] = letter_list.indexOf(string_array[i]);\n\t}\n\treturn uint5;\n}\n\n/** Account Functions **/\nfunction generateAccountSecretKeyBytes(seedBytes, accountIndex) {\n\tconst accountBytes = hexToUint8(decToHex(accountIndex, 4));\n\tconst context = blake.blake2bInit(32);\n\tblake.blake2bUpdate(context, seedBytes);\n\tblake.blake2bUpdate(context, accountBytes);\n\tconst newKey = blake.blake2bFinal(context);\n\n\treturn newKey;\n}\n\nfunction generateAccountKeyPair(accountSecretKeyBytes) {\n\treturn nacl.sign.keyPair.fromSecretKey(accountSecretKeyBytes);\n}\n\nfunction getPublicAccountID(accountPublicKeyBytes) {\n\tconst accountHex = uint8ToHex(accountPublicKeyBytes);\n\tconst keyBytes = uint4ToUint8(hexToUint4(accountHex)); // For some reason here we go from u, to hex, to 4, to 8??\n\tconst checksum = uint5ToString(uint4ToUint5(uint8ToUint4(blake.blake2b(keyBytes, null, 5).reverse())));\n\tconst account = uint5ToString(uint4ToUint5(hexToUint4(`0${accountHex}`)));\n\n\treturn `qlc_${account}${checksum}`;\n}\n\nfunction getAccountPublicKey(account) {\n\tconst errAccountMessage = 'Invalid QLC Account';\n\tif ((!account.startsWith('qlc_1') && !account.startsWith('qlc_3')) || account.length !== 64) {\n\t\tthrow new Error(errAccountMessage);\n\t}\n\tconst account_crop = account.substring(4, 64);\n\tconst isValid = /^[13456789abcdefghijkmnopqrstuwxyz]+$/.test(account_crop);\n\tif (!isValid) {\n\t\tthrow new Error(errAccountMessage);\n\t}\n\n\tconst key_uint4 = array_crop(uint5ToUint4(stringToUint5(account_crop.substring(0, 52))));\n\tconst hash_uint4 = uint5ToUint4(stringToUint5(account_crop.substring(52, 60)));\n\tconst key_array = uint4ToUint8(key_uint4);\n\tconst blake_hash = blake.blake2b(key_array, null, 5).reverse();\n\n\tconst errChecksumMessage = 'Incorrect checksum';\n\tif (!equal_arrays(hash_uint4, uint8ToUint4(blake_hash))) {\n\t\tthrow new Error(errChecksumMessage);\n\t}\n\n\treturn uint4ToHex(key_uint4);\n}\n\n/**\n * Conversion functions\n */\nconst Mqlc = 100000000000; // 10^11\nconst QLC = 100000000; // 10^8\nconst kqlc = 1000; // 10^3\n// const qlc = 1; // 10^0\n\nfunction mqlcToRaw(value) {\n\treturn new BigNumber(value).times(Mqlc);\n}\nfunction kqlcToRaw(value) {\n\treturn new BigNumber(value).times(kqlc);\n}\nfunction qlcToRaw(value) {\n\treturn new BigNumber(value).times(QLC);\n}\nfunction rawToMqlc(value) {\n\treturn new BigNumber(value).div(Mqlc);\n}\nfunction rawToKqlc(value) {\n\treturn new BigNumber(value).div(kqlc);\n}\nfunction rawToQlc(value) {\n\treturn new BigNumber(value).div(QLC);\n}\n\nfunction array_crop(array) {\n\tconst length = array.length - 1;\n\tconst cropped_array = new Uint8Array(length);\n\tfor (let i = 0; i < length; i++) {\n\t\tcropped_array[i] = array[i + 1];\n\t}\n\treturn cropped_array;\n}\n\nfunction equal_arrays(array1, array2) {\n\tfor (let i = 0; i < array1.length; i++) {\n\t\tif (array1[i] !== array2[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction generateSeedBytes() {\n\treturn nacl.randomBytes(32);\n}\n\n\nconst util = {\n\thex: {\n\t\ttoUint4: hexToUint4,\n\t\tfromUint8: uint8ToHex,\n\t\ttoUint8: hexToUint8\n\t},\n\tuint4: {\n\t\ttoUint5: uint4ToUint5,\n\t\ttoUint8: uint4ToUint8\n\t},\n\tuint5: {\n\t\ttoString: uint5ToString\n\t},\n\tuint8: {\n\t\ttoUint4: uint8ToUint4,\n\t\tfromHex: hexToUint8,\n\t\ttoHex: uint8ToHex\n\t},\n\tdec: {\n\t\ttoHex: decToHex\n\t},\n\taccount: {\n\t\tgenerateAccountSecretKeyBytes: generateAccountSecretKeyBytes,\n\t\tgenerateAccountKeyPair: generateAccountKeyPair,\n\t\tgetPublicAccountID: getPublicAccountID,\n\t\tgenerateSeedBytes: generateSeedBytes,\n\t\tgetAccountPublicKey: getAccountPublicKey\n\t},\n\tqlc: {\n\t\tmqlcToRaw: mqlcToRaw,\n\t\tkqlcToRaw: kqlcToRaw,\n\t\tqlcToRaw: qlcToRaw,\n\t\trawToMqlc: rawToMqlc,\n\t\trawToKqlc: rawToKqlc,\n\t\trawToQlc: rawToQlc\n\t},\n\tb64: {\n\t\tencodeUnicode: b64EncodeUnicode,\n\t\tdecodeUnicode: b64DecodeUnicode\n\t}\n\t\n};\n","import { Injectable } from '@angular/core';\nimport { UtilService } from './util.service';\nimport { ApiService } from './api.service';\nimport { BigNumber } from 'bignumber.js';\nimport { AddressBookService } from './address-book.service';\nimport * as CryptoJS from 'crypto-js';\nimport { WorkPoolService } from './work-pool.service';\n// import { WebsocketService } from './websocket.service';\nimport { QLCBlockService } from './qlc-block.service';\nimport { NotificationService } from './notification.service';\nimport { AppSettingsService } from './app-settings.service';\nimport { PriceService } from './price.service';\n// import { LedgerService } from './ledger.service';\nimport { NGXLogger } from 'ngx-logger';\nimport { interval, timer } from 'rxjs';\nimport { ChainxAccountService } from './chainx-account.service';\n\nexport type WalletType = 'seed' | 'ledger' | 'privateKey';\n\nexport interface WalletAccount {\n\tid: string;\n\t// frontiers: any | null;\n\tsecret: any;\n\tkeyPair: any;\n\tindex: number;\n\tbalance: BigNumber;\n\tbalances: any;\n\totherTokens: any;\n\tpendingBlocks: any;\n\tpendingCount: number;\n\tpendingPerTokenCount: any;\n\tlatestTransactions: any;\n\t// balanceRaw: BigNumber;\n\t// pendingRaw: BigNumber;\n\t// balanceFiat: number;\n\t// pendingFiat: number;\n\taddressBookName: string | null;\n\taccountMeta: any;\n}\nexport interface NeoWallet {\n\tid: string;\n\tindex: number;\n\tbalances: any;\n\taddressBookName: string | null;\n\tencryptedwif: string;\n}\nexport interface ChainxAccount {\n  id: string;\n  index: number;\n  addressBookName: string | null;\n  balances: object | null;\n  wif: string;\n  mnemonic: boolean;\n}\nexport interface FullWallet {\n\ttype: WalletType;\n\tseedBytes: any;\n\tseed: string | null;\n\t// tokens: any;\n\t// balance: BigNumber;\n\t// pending: BigNumber;\n\tpendingCount: number;\n\t// balanceRaw: BigNumber;\n\t// pendingRaw: BigNumber;\n\t// balanceFiat: number;\n\t// pendingFiat: number;\n\taccounts: WalletAccount[];\n\tneowallets: NeoWallet[];\n\tchainxAccounts: ChainxAccount[];\n\taccountsIndex: number;\n\tlocked: boolean;\n\tpassword: string;\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WalletService {\n\tqlc = 100000000;\n\tstoreKey = `sms-billing`;\n\n\twallet: FullWallet = {\n\t\ttype: 'seed',\n\t\tseedBytes: null,\n\t\tseed: '',\n\t\t// tokens: {},\n\t\t// balance: new BigNumber(0),\n\t\t// pending: new BigNumber(0),\n\t\tpendingCount: 0,\n\t\t// balanceRaw: new BigNumber(0),\n\t\t// pendingRaw: new BigNumber(0),\n\t\t// balanceFiat: 0,\n\t\t// pendingFiat: 0,\n\t\taccounts: [],\n\t\tneowallets: [],\n\t\tchainxAccounts: [],\n\t\taccountsIndex: 0,\n\t\tlocked: false,\n\t\tpassword: ''\n\t};\n\n\tprocessingPending = false;\n\tloadingPending = false;\n\tpendingBlocks = [];\n\tsuccessfulBlocks = [];\n\tblocksCount = {\n\t\t'count':0,\n\t\t'unchecked':0\n\t};\n\ttokenMap = {};\n\ttokenRefreshTime = 0;\n\n\tprivate pendingRefreshInterval$ = interval(60000);\n\tprivate blocksCountInterval$ = interval(60000);\n\tprivate confirmTxTimer = timer(500);\n\n\tconstructor(\n\t\tprivate util: UtilService,\n\t\tprivate api: ApiService,\n\t\tprivate appSettings: AppSettingsService,\n\t\tprivate addressBook: AddressBookService,\n\t\tprivate price: PriceService,\n\t\tprivate workPool: WorkPoolService,\n\t\t// private websocket: WebsocketService,\n\t\tprivate qlcBlock: QLCBlockService,\n\t\t// private ledgerService: LedgerService,\n\t\tprivate notifications: NotificationService,\n\t\tprivate logger: NGXLogger\n\t) {\n\t\t// this.websocket.newTransactions$.subscribe(async transaction => {\n\t\t// \tif (!transaction) {\n\t\t// \t\treturn; // Not really a new transaction\n\t\t// \t}\n\n\t\t// \t// Find out if this is a send, with our account as a destination or not\n\t\t// \tconst walletAccountIDs = this.wallet.accounts.map(a => a.id);\n\t\t// \tif (transaction.block.type === 'send' && walletAccountIDs.indexOf(transaction.block.destination) !== -1) {\n\t\t// \t\t// Perform an automatic receive\n\t\t// \t\tconst walletAccount = this.wallet.accounts.find(a => a.id === transaction.block.destination);\n\t\t// \t\tif (walletAccount) {\n\t\t// \t\t\t// If the wallet is locked, show a notification\n\t\t// \t\t\tif (this.wallet.locked) {\n\t\t// \t\t\t\tconst lockMessage = 'New incoming transaction - unlock the wallet to receive it!';\n\t\t// \t\t\t\tthis.notifications.sendWarning(lockMessage, {\n\t\t// \t\t\t\t\tlength: 0,\n\t\t// \t\t\t\t\tidentifier: 'pending-locked'\n\t\t// \t\t\t\t});\n\t\t// \t\t\t}\n\t\t// \t\t\tthis.addPendingBlock(walletAccount.id, transaction.hash, transaction.amount, transaction.token);\n\t\t// \t\t\tawait this.processPendingBlocks();\n\t\t// \t\t}\n\t\t// \t} else if (transaction.block.type === 'state') {\n\t\t// \t\tawait this.processStateBlock(transaction);\n\t\t// \t}\n\n\t\t// \t// TODO: We don't really need to call to update balances, we should be able to balance on our own from here\n\t\t// \tawait this.reloadBalances();\n\t\t// });\n\n\t\tthis.addressBook.addressBook$.subscribe(newAddressBook => {\n\t\t\tthis.reloadAddressBook();\n\t\t});\n\n\t\tthis.pendingRefreshInterval$.subscribe(async () => {\n\t\t\t// check every x sec for new pending transactions\n\t\t\tthis.loadPending();\n\t\t});\n\n\t\tthis.blocksCountInterval$.subscribe(async () => {\n\t\t\tthis.refreshBlocks();\n\t\t});\n\t\tthis.load();\n\t}\n\n\tasync load() {\n\t\tawait this.refreshBlocks();\n\t\tthis.loadPending();\n\t}\n\n\tasync loadTokens() {\n\t\tif ((Date.now() - this.tokenRefreshTime) < 100000) {\n\t\t\treturn;\n\t\t}\n\t\tthis.tokenRefreshTime = Date.now();\n\t\tthis.tokenMap = {};\n\t\tconst tokens = await this.api.tokens();\n\t\tif (!tokens.error) {\n\t\t\ttokens.result.forEach(token => {\n\t\t\t\tif (token.tokenSymbol != 'QLC' && token.tokenSymbol != 'QGAS') {\n\t\t\t\t\ttoken.image = 'none';\n\t\t\t\t} else {\n\t\t\t\t\ttoken.image = token.tokenSymbol;\n\t\t\t\t}\n\t\t\t\tthis.tokenMap[token.tokenId] = token;\n\t\t\t});\n\t\t}\n\t\treturn;\n\t}\n\n\tasync loadPending() {\n\t\tif (this.processingPending === true) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.loadingPending === true) {\n\t\t\treturn;\n\t\t}\n\t\tthis.loadingPending = true;\n\t\tthis.pendingBlocks = [];\n\t\tlet pendingCount = 0;\n\t\tconst accountsPending = await this.api.accountsPending(this.wallet.accounts.map(a => a.id));\n\n\t\tlet allAccounts = this.wallet.accounts;\n\n\t\tif (!accountsPending.error) {\n\t\t\tawait this.loadTokens();\n\t\t\tconst pendingResult = accountsPending.result;\n\t\t\tfor (const account in pendingResult) {\n\t\t\t\tif (!pendingResult.hasOwnProperty(account)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tpendingCount += pendingResult[account].length;\n\t\t\t\tlet walletAccount = this.wallet.accounts.find(a => a.id === account);\n\t\t\t\twalletAccount.pendingCount = pendingResult[account].length;\n\t\t\t\twalletAccount.pendingPerTokenCount = [];\n\t\t\t\twalletAccount.pendingBlocks = [];\n\t\t\t\tpendingResult[account].forEach(pending => {\n\t\t\t\t\tif (this.tokenMap.hasOwnProperty(pending.type)) {\n\t\t\t\t\t\tpending.tokenInfo = this.tokenMap[pending.type];\n\t\t\t\t\t}\n\t\t\t\t\twalletAccount.pendingBlocks.push(pending);\n\t\t\t\t\tif (pending.tokenName != 'QLC' && pending.tokenName != 'QGAS') {\n\t\t\t\t\t\tpending.tokenName = 'OTHER';\n\t\t\t\t\t}\n\t\t\t\t\tif (!walletAccount.pendingPerTokenCount[pending.tokenName])\n\t\t\t\t\t\twalletAccount.pendingPerTokenCount[pending.tokenName] = 0;\n\n\t\t\t\t\twalletAccount.pendingPerTokenCount[pending.tokenName] += 1;\n\t\t\t\t\tthis.pendingBlocks.push({\n\t\t\t\t\t\taccount: pending.source,\n\t\t\t\t\t\treceiveAccount: account,\n\t\t\t\t\t\tamount: pending.amount,\n\t\t\t\t\t\ttoken: pending.type,\n\t\t\t\t\t\ttokenName: pending.tokenName,\n\t\t\t\t\t\ttokenSymbol: pending.tokenName,\n\t\t\t\t\t\ttimestamp: pending.timestamp,\n\t\t\t\t\t\thash: pending.hash\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tallAccounts = allAccounts.filter(function( obj ) {\n\t\t\t\t\treturn obj.id !== account;\n\t\t\t\t});\n\t\t\t\t//console.log(walletAccount.pendingBlocks);\n\t\t\t}\n\t\t\tthis.loadingPending = false;\n\t\t\tif (!this.isLocked() && this.appSettings.settings.receive == 'auto') {\n\t\t\t\tthis.processPendingBlocks();\n\t\t\t}\n\t\t}\n\n\t\tallAccounts.forEach((data) => {\n\t\t\tlet walletAccount = this.wallet.accounts.find(a => a.id === data.id);\n\t\t\twalletAccount.pendingBlocks = [];\n\t\t\twalletAccount.pendingPerTokenCount = [];\n\t\t\twalletAccount.pendingCount = 0;\n\t\t});\n\n\t\tthis.wallet.pendingCount = pendingCount;\n\t\tthis.loadingPending = false;\n\t}\n\n\tasync removeBlockFromPendingAccount(block,newhash = '') {\n\t\tlet walletAccount = this.wallet.accounts.find(a => a.id === block.receiveAccount);\n\n\t\tif (walletAccount === undefined) {\n\t\t\tconsole.log('ERROR - Account not found');\n\t\t\treturn;\n\t\t}\n\n\t\tconst pendingBlock = walletAccount.pendingBlocks.find( (pendingBlock) => {\n\t\t\treturn pendingBlock.hash === block.hash;\n\t\t});\n\n\t\twalletAccount.pendingBlocks = walletAccount.pendingBlocks.filter( (pendingBlock) => {\n\t\t\treturn pendingBlock.hash !== block.hash;\n\t\t});\n\n\t\twalletAccount.pendingCount = walletAccount.pendingBlocks.length;\n\t\t/*let tokenName = block.tokenName;\n\t\tif (block.tokenName != 'QLC' && block.tokenName != 'QGAS') {\n\t\t\ttokenName = 'OTHER';\n\t\t}*/\n\t\twalletAccount.pendingPerTokenCount = [];\n\t\tfor (const pending of walletAccount.pendingBlocks) {\n\t\t\tif (walletAccount.pendingPerTokenCount[pending.tokenName]) {\n\t\t\t\twalletAccount.pendingPerTokenCount[pending.tokenName] += 1;\n\t\t\t} else {\n\t\t\t\twalletAccount.pendingPerTokenCount[pending.tokenName] = 1;\n\t\t\t}\n\t\t}\n\t\t//walletAccount.pendingPerTokenCount[tokenName] -= 1;\n\n\t\t// update balances\n\t\tawait this.getTokenBalance(walletAccount);\n\n\t\tif (newhash != '' && newhash != null) {\n\t\t\tconst blocksInfo = await this.api.blocksInfo([newhash]);\n\t\t\tif (blocksInfo.result) {\n\t\t\t\tlet block = blocksInfo.result[0];\n\t\t\t\tawait this.loadTokens();\n\t\t\t\tif (this.tokenMap.hasOwnProperty(block.token)) {\n\t\t\t\t\tblock.tokenInfo = this.tokenMap[block.token];\n\t\t\t\t}\n\t\t\t\twalletAccount.latestTransactions.unshift(block); // add block to latest transactions\n\n\t\t\t}\n\t\t}\n\t}\n\n\tasync getTokenBalance(walletAccount,block = null) {\n\t\t/*let tokenBalance = undefined;\n\t\tif (walletAccount.accountMeta && walletAccount.accountMeta.tokens) {\n\t\t\ttokenBalance = walletAccount.accountMeta.tokens.find( (token) => {\n\t\t\t\treturn token.type === block.token;\n\t\t\t});\n\t\t}\n\t\tif (tokenBalance === undefined) {*/\n\t\t\tconst accountInfo = await this.api.accountInfo(walletAccount.id);\n\t\t\tif (!accountInfo.error) {\n\t\t\t\tconst am = accountInfo.result;\n\t\t\t\tfor (const token of am.tokens) {\n\t\t\t\t\tif (this.tokenMap.hasOwnProperty(token.type)) {\n\t\t\t\t\t\ttoken.tokenInfo = this.tokenMap[token.type];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twalletAccount.accountMeta = am;\n\t\t\t\tlet accountMeta = [];\n\t\t\t\tlet otherTokens = [];\n    \t\t\tif (accountInfo.result && accountInfo.result.tokens && Array.isArray(accountInfo.result.tokens)) {\n      \t\t\t\taccountInfo.result.tokens.forEach(token => {\n\t\t\t\t\t\taccountMeta[token.tokenName] = token;\n\t\t\t\t\t\tif (token.tokenInfo.tokenSymbol != 'QLC' && token.tokenInfo.tokenSymbol != 'QGAS') {\n\t\t\t\t\t\t\totherTokens.push(token);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\twalletAccount.otherTokens = otherTokens;\n\t\t\t\twalletAccount.balances = accountMeta;\n\t\t\t}\n\t\t\t//return await this.getTokenBalance(walletAccount,block);\n\t\t//}\n\t\t//return tokenBalance;\n\t}\n\n\tasync refreshBlocks() {\n\t\tconst blocksCount = await this.api.blocksCount();\n\n\t\tif (blocksCount.result) {\n\t\t\tthis.blocksCount = blocksCount.result;\n\t\t}\n\t}\n\n\tasync processStateBlock(transaction) {\n\t\tif (transaction.is_send === 'true' && transaction.block.link_as_account) {\n\t\t\t// This is an incoming send block, we want to perform a receive\n\t\t\tconst walletAccount = this.wallet.accounts.find(a => a.id === transaction.block.link_as_account);\n\t\t\tif (!walletAccount) {\n\t\t\t\treturn; // Not for our wallet?\n\t\t\t}\n\n\t\t\tthis.addPendingBlock(walletAccount.id, transaction.hash, new BigNumber(0), transaction.token, transaction.tokenName);\n\t\t\tawait this.processPendingBlocks();\n\t\t} else {\n\t\t\t// Not a send to us, which means it was a block posted by us.  We shouldnt need to do anything...\n\t\t\tconst walletAccount = this.wallet.accounts.find(a => a.id === transaction.block.link_as_account);\n\t\t\tif (!walletAccount) {\n\t\t\t\treturn; // Not for our wallet?\n\t\t\t}\n\t\t}\n\t}\n\n\treloadAddressBook() {\n\t\tthis.wallet.accounts.forEach(account => {\n\t\t\taccount.addressBookName = this.addressBook.getAccountName(account.id);\n\t\t});\n\t}\n\n\tasync getWalletAccount(accountID) {\n\t\treturn this.wallet.accounts.find(a => a.id === accountID);\n\t}\n\n\tasync getNeoWallet(walletID) {\n\t\treturn this.wallet.neowallets.find(a => a.id === walletID);\n\t}\n\n\tasync loadStoredWallet() {\n\t\tthis.resetWallet();\n\n\t\tconst walletData = localStorage.getItem(this.storeKey);\n\t\tif (!walletData) {\n\t\t\treturn this.wallet;\n\t\t}\n\n\t\tconst walletJson = JSON.parse(walletData);\n\t\tconst walletType = walletJson.type || 'seed';\n\t\tthis.wallet.type = walletType;\n\t\tif (walletType === 'seed') {\n\t\t\tthis.wallet.seed = walletJson.seed;\n\t\t\tthis.wallet.seedBytes = this.util.hex.toUint8(walletJson.seed);\n\t\t}\n\t\tif (walletType === 'seed' || walletType === 'privateKey') {\n\t\t\tthis.wallet.locked = walletJson.locked;\n\t\t\tthis.wallet.password = walletJson.password || null;\n\t\t}\n\n\t\tthis.wallet.accountsIndex = walletJson.accountsIndex || 0;\n\n\t\tif (walletJson.accounts && walletJson.accounts.length) {\n\t\t\tif (walletType === 'ledger' || this.wallet.locked) {\n\t\t\t\t// With the wallet locked, we load a simpler version of the accounts which does not have the keypairs, and uses the ID as input\n\t\t\t\twalletJson.accounts.forEach(account => this.loadWalletAccount(account.index, account.id));\n\t\t\t} else {\n\t\t\t\tawait Promise.all(walletJson.accounts.map(async account => await this.addWalletAccount(account.index, false)));\n\t\t\t}\n\t\t} else {\n\t\t\t// Loading from accounts index\n\t\t\tif (!this.wallet.locked) {\n\t\t\t\tawait this.loadAccountsFromIndex(); // Need to have the seed to reload any accounts if they are not stored\n\t\t\t}\n\t\t}\n\t\tif (walletJson.neowallets && walletJson.neowallets.length) {\n\t\t\twalletJson.neowallets.forEach(async account => await this.loadNeoWalletAccount(account));\n\t\t}\n\t\tif (walletJson.chainxAccounts && walletJson.chainxAccounts.length) {\n\t\t\twalletJson.chainxAccounts.forEach(async account => await this.loadChainxAccount(account));\n\t\t}\n\n\t\tawait this.reloadBalances(true);\n\n\n\t\treturn this.wallet;\n\t}\n\n\n\n\tasync loadNeoWalletAccount(account) {\n\t\tconst addressBookName = this.addressBook.getAccountName(account.id);\n\n\t\tconst newAccount: NeoWallet = {\n\t\t\tid: account.id,\n\t\t\tindex: account.index,\n\t\t\taddressBookName,\n\t\t\tbalances: [],\n\t\t\tencryptedwif: account.encryptedwif\n\t\t};\n\t\tthis.wallet.neowallets.push(newAccount);\n\t\tthis.saveWalletExport();\n\t\treturn newAccount;\n\t}\n\n\tasync loadChainxAccount(account) {\n\t\tconst addressBookName = this.addressBook.getAccountName(account.id);\n\n\t\tconst newAccount: ChainxAccount = {\n\t\t\tid: account.id,\n\t\t\tindex: account.index,\n\t\t\taddressBookName,\n\t\t\tbalances: null,\n\t\t\twif: account.wif,\n      mnemonic: account.mnemonic\n\t\t};\n\t\tthis.wallet.chainxAccounts.push(newAccount);\n\t\tthis.saveWalletExport();\n\t\treturn newAccount;\n\t}\n\n\tasync loadImportedWallet(seed, password, accountsIndex = 1) {\n\t\tthis.resetWallet();\n\n\t\tthis.wallet.seed = seed;\n\t\tthis.wallet.seedBytes = this.util.hex.toUint8(seed);\n\t\tthis.wallet.accountsIndex = accountsIndex;\n\t\tthis.wallet.password = password;\n\n\t\tfor (let i = 0; i < accountsIndex; i++) {\n\t\t\tawait this.addWalletAccount(i, false);\n\t\t}\n\n\t\tawait this.reloadBalances(true);\n\n\t\t// if (this.wallet.accounts.length) {\n\t\t// \tthis.websocket.subscribeAccounts(this.wallet.accounts.map(a => a.id));\n\t\t// }\n\n\t\treturn this.wallet;\n\t}\n\n\tasync loadAccountsFromIndex() {\n\t\tthis.wallet.accounts = [];\n\n\t\tfor (let i = 0; i < this.wallet.accountsIndex; i++) {\n\t\t\tawait this.addWalletAccount(i, false);\n\t\t}\n\t}\n\n\tgenerateExportData() {\n\t\tconst exportData: any = {\n\t\t\taccountsIndex: this.wallet.accountsIndex\n\t\t};\n\t\tif (this.wallet.locked) {\n\t\t\texportData.seed = this.wallet.seed;\n\t\t} else {\n\t\t\texportData.seed = CryptoJS.AES.encrypt(this.wallet.seed, this.wallet.password).toString();\n\t\t}\n\n\t\treturn exportData;\n\t}\n\n\tgenerateExportUrl() {\n\t\tconst exportData = this.generateExportData();\n\t\tconst base64Data = btoa(JSON.stringify(exportData));\n\n\t\t// FIXME: change url\n\t\treturn `https://wallet.qlcchain.online/import-wallet#${base64Data}`;\n\t}\n\n\tlockWallet() {\n\t\tif (!this.wallet.seed || !this.wallet.password) {\n\t\t\treturn; // Nothing to lock, password not set\n\t\t}\n\t\tconst encryptedSeed = CryptoJS.AES.encrypt(this.wallet.seed, this.wallet.password);\n\n\t\t// Update the seed\n\t\tthis.wallet.seed = encryptedSeed.toString();\n\t\tthis.wallet.seedBytes = null;\n\n\t\t// Remove secrets from accounts\n\t\tthis.wallet.accounts.forEach(a => {\n\t\t\ta.keyPair = null;\n\t\t\ta.secret = null;\n\t\t});\n\n\t\tthis.wallet.locked = true;\n\t\tthis.wallet.password = '';\n\n\t\tthis.saveWalletExport(); // Save so that a refresh gives you a locked wallet\n\n\t\treturn true;\n\t}\n\tasync unlockWallet(password: string) {\n\t\ttry {\n\t\t\tconst decryptedBytes = CryptoJS.AES.decrypt(this.wallet.seed, password);\n\t\t\tconst decryptedSeed = decryptedBytes.toString(CryptoJS.enc.Utf8);\n\t\t\tif (!decryptedSeed || decryptedSeed.length !== 64) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.wallet.seed = decryptedSeed;\n\t\t\tthis.wallet.seedBytes = this.util.hex.toUint8(this.wallet.seed);\n\t\t\tthis.wallet.accounts.forEach(a => {\n\t\t\t\ta.secret = this.util.account.generateAccountSecretKeyBytes(this.wallet.seedBytes, a.index);\n\t\t\t\ta.keyPair = this.util.account.generateAccountKeyPair(a.secret);\n\t\t\t});\n\n\t\t\tthis.wallet.locked = false;\n\t\t\tthis.wallet.password = password;\n\n\t\t\tthis.notifications.removeNotification('pending-locked'); // If there is a notification to unlock, remove it\n\n\t\t\t// TODO: Determine if we need to load some accounts - should only be used when? Loading from import.\n\t\t\tif (this.wallet.accounts.length < this.wallet.accountsIndex) {\n\t\t\t\tthis.loadAccountsFromIndex().then(() => this.reloadBalances()); // Reload all?\n\t\t\t}\n\n\t\t\t// Process any pending blocks\n\t\t\tthis.processPendingBlocks();\n\n\t\t\tthis.saveWalletExport(); // Save so a refresh also gives you your unlocked wallet?\n\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\twalletIsLocked() {\n\t\treturn this.wallet.locked;\n\t}\n\n\tasync createWalletFromSeed(seed: string, emptyAccountBuffer: number = 10) {\n\t\tthis.resetWallet();\n\n\t\tthis.wallet.seed = seed;\n\t\tthis.wallet.seedBytes = this.util.hex.toUint8(seed);\n\n\t\tlet emptyTicker = 0;\n\t\tconst usedIndices = [];\n\t\tlet greatestUsedIndex = 0;\n\t\tconst batchSize = emptyAccountBuffer + 1;\n\t\tfor (let batch = 0; emptyTicker < emptyAccountBuffer; batch++) {\n\t\t\tconst batchAccounts = {};\n\t\t\tconst batchAccountsArray = [];\n\t\t\tfor (let i = 0; i < batchSize; i++) {\n\t\t\t\tconst index = batch * batchSize + i;\n\t\t\t\tconst accountBytes = this.util.account.generateAccountSecretKeyBytes(this.wallet.seedBytes, index);\n\t\t\t\tconst accountKeyPair = this.util.account.generateAccountKeyPair(accountBytes);\n\t\t\t\tconst accountAddress = this.util.account.getPublicAccountID(accountKeyPair.publicKey);\n\n\t\t\t\tbatchAccounts[accountAddress] = {\n\t\t\t\t\tindex: index,\n\t\t\t\t\tpublicKey: this.util.uint8.toHex(accountKeyPair.publicKey).toUpperCase(),\n\t\t\t\t\tused: false\n\t\t\t\t};\n\t\t\t\tbatchAccountsArray.push(accountAddress);\n\t\t\t}\n\t\t\tconst accountFrontier = await this.api.accountsFrontiers(batchAccountsArray);\n\n\t\t\tif (!accountFrontier.error) {\n\t\t\t\t// if frontiers contains this account\n\t\t\t\tconst frontierResult = accountFrontier.result;\n\t\t\t\tObject.keys(frontierResult).map(account => {\n\t\t\t\t\tif (batchAccounts.hasOwnProperty(account)) {\n\t\t\t\t\t\tbatchAccounts[account].used = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tObject.keys(batchAccounts).map(accountID => {\n\t\t\t\tconst account = batchAccounts[accountID];\n\t\t\t\tif (account.used) {\n\t\t\t\t\tusedIndices.push(account.index);\n\t\t\t\t\tif (account.index > greatestUsedIndex) {\n\t\t\t\t\t\tgreatestUsedIndex = account.index;\n\t\t\t\t\t\temptyTicker = 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (account.index > greatestUsedIndex) {\n\t\t\t\t\t\temptyTicker++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (usedIndices.length > 0) {\n\t\t\tfor (let i = 0; i < usedIndices.length; i++) {\n\t\t\t\t// add account and reload balance when add complete\n\t\t\t\tthis.addWalletAccount(usedIndices[i], i === usedIndices.length - 1);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.addWalletAccount();\n\t\t}\n\n\t\treturn this.wallet.seed;\n\t}\n\n\tcreateNewWallet() {\n\t\tthis.resetWallet();\n\n\t\tconst seedBytes = this.util.account.generateSeedBytes();\n\t\tthis.wallet.seedBytes = seedBytes;\n\t\tthis.wallet.seed = this.util.hex.fromUint8(seedBytes);\n\n\t\tthis.addWalletAccount();\n\n\t\treturn this.wallet.seed;\n\t}\n\n\tcreateLedgerWallet() {\n\t\tthis.resetWallet();\n\n\t\tthis.wallet.type = 'ledger';\n\t\tconst newAccount = this.addWalletAccount(0);\n\n\t\treturn this.wallet;\n\t}\n\n\t// async createLedgerAccount(index) {\n\t// \tconst account = await this.ledgerService.getLedgerAccount(index);\n\n\t// \tconst accountID = account.address;\n\t// \tconst addressBookName = this.addressBook.getAccountName(accountID);\n\n\t// \tconst newAccount: WalletAccount = {\n\t// \t\tid: accountID,\n\t// \t\tfrontiers: null,\n\t// \t\tsecret: null,\n\t// \t\tkeyPair: null,\n\t// \t\tbalance: new BigNumber(0),\n\t// \t\tpending: new BigNumber(0),\n\t// \t\tpendingCount: 0,\n\t// \t\tbalanceRaw: new BigNumber(0),\n\t// \t\tpendingRaw: new BigNumber(0),\n\t// \t\tbalanceFiat: 0,\n\t// \t\tpendingFiat: 0,\n\t// \t\tindex: index,\n\t// \t\taddressBookName,\n\t// \t\taccountMeta: {}\n\t// \t};\n\n\t// \treturn newAccount;\n\t// }\n\n\tasync createSeedAccount(index) {\n\t\tconst accountBytes = this.util.account.generateAccountSecretKeyBytes(this.wallet.seedBytes, index);\n\t\tconst accountKeyPair = this.util.account.generateAccountKeyPair(accountBytes);\n\t\tconst accountName = this.util.account.getPublicAccountID(accountKeyPair.publicKey);\n\t\tconst addressBookName = this.addressBook.getAccountName(accountName);\n\n\t\tconst newAccount: WalletAccount = {\n\t\t\tid: accountName,\n\t\t\t// frontiers: null,\n\t\t\tsecret: accountBytes,\n\t\t\tkeyPair: accountKeyPair,\n\t\t\tbalance: new BigNumber(0),\n\t\t\t// pending: new BigNumber(0),\n\t\t\tpendingBlocks: [],\n\t\t\tpendingCount: 0,\n\t\t\tpendingPerTokenCount: [],\n\t\t\tbalances: null,\n\t\t\totherTokens: [],\n\t\t\tlatestTransactions: [],\n\t\t\t// balanceRaw: new BigNumber(0),\n\t\t\t// pendingRaw: new BigNumber(0),\n\t\t\t// balanceFiat: 0,\n\t\t\t// pendingFiat: 0,\n\t\t\tindex: index,\n\t\t\taddressBookName,\n\t\t\taccountMeta: {}\n\t\t};\n\n\t\treturn newAccount;\n\t}\n\n\t/**\n\t * Reset wallet to a base state, without changing reference to the main object\n\t */\n\tresetWallet() {\n\t\t// if (this.wallet.accounts.length) {\n\t\t// \tthis.websocket.unsubscribeAccounts(this.wallet.accounts.map(a => a.id)); // Unsubscribe from old accounts\n\t\t// }\n\t\tthis.wallet.type = 'seed';\n\t\tthis.wallet.password = '';\n\t\tthis.wallet.locked = false;\n\t\tthis.wallet.seed = '';\n\t\tthis.wallet.seedBytes = null;\n\t\tthis.wallet.accounts = [];\n\t\tthis.wallet.accountsIndex = 0;\n\t\t// this.wallet.balance = new BigNumber(0);\n\t\t// this.wallet.pending = new BigNumber(0);\n\t\t// this.wallet.balanceFiat = 0;\n\t\t// this.wallet.pendingFiat = 0;\n\t}\n\n\tisConfigured() {\n\t\tswitch (this.wallet.type) {\n\t\t\tcase 'seed':\n\t\t\t\treturn !!this.wallet.seed;\n\t\t\tcase 'ledger':\n\t\t\t\treturn true; // ?\n\t\t\tcase 'privateKey':\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tisLocked() {\n\t\tswitch (this.wallet.type) {\n\t\t\tcase 'privateKey':\n\t\t\tcase 'seed':\n\t\t\t\treturn this.wallet.locked;\n\t\t\tcase 'ledger':\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tisLedgerWallet() {\n\t\t// return this.wallet.type === 'ledger';\n\t\treturn false;\n\t}\n\n\treloadFiatBalances() {\n\t\t// const fiatPrice = this.price.price.lastPrice;\n\t\t// this.wallet.accounts.forEach(account => {\n\t\t// \taccount.balanceFiat = this.util.qlc\n\t\t// \t\t.rawToMqlc(account.balance)\n\t\t// \t\t.times(fiatPrice)\n\t\t// \t\t.toNumber();\n\t\t// \taccount.pendingFiat = this.util.qlc\n\t\t// \t\t.rawToMqlc(account.pending)\n\t\t// \t\t.times(fiatPrice)\n\t\t// \t\t.toNumber();\n\t\t// });\n\t\t// this.wallet.balanceFiat = this.util.qlc\n\t\t// \t.rawToMqlc(this.wallet.balance)\n\t\t// \t.times(fiatPrice)\n\t\t// \t.toNumber();\n\t\t// this.wallet.pendingFiat = this.util.qlc\n\t\t// \t.rawToMqlc(this.wallet.pending)\n\t\t// \t.times(fiatPrice)\n\t\t// \t.toNumber();\n\t}\n\n\tasync reloadBalances(reloadPending = true) {\n\t\tthis.wallet.pendingCount = 0;\n\t\tconst accountsPending = await this.api.accountsPending(this.wallet.accounts.map(a => a.id));\n\t\tif (!accountsPending.error) {\n\t\t\tconst pendingResult = accountsPending.result;\n\t\t\tfor (const account in pendingResult) {\n\t\t\t\tif (!pendingResult.hasOwnProperty(account)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis.wallet.pendingCount += pendingResult[account].length;\n\t\t\t}\n\t\t}\n\n\t\t// console.log('pendingCount >>> ' + this.wallet.pendingCount);\n\n\t\tconst tokenMap = {};\n\t\tconst tokens = await this.api.tokens();\n\t\tif (!tokens.error && tokens.result) {\n\t\t\ttokens.result.forEach(token => {\n\t\t\t\ttokenMap[token.tokenId] = token;\n\t\t\t});\n\t\t}\n\n\t\t// fill account meta\n\t\tfor (const account of this.wallet.accounts) {\n\t\t\tconst accountInfo = await this.api.accountInfo(account.id);\n\t\t\tif (!accountInfo.error && accountInfo.result) {\n\t\t\t\tconst am = accountInfo.result;\n\t\t\t\tfor (const token of am.tokens) {\n\t\t\t\t\tif (tokenMap.hasOwnProperty(token.type)) {\n\t\t\t\t\t\ttoken.tokenInfo = tokenMap[token.type];\n\t\t\t\t\t}\n\t\t\t\t\tif (token.type === this.api.qlcTokenHash) {\n\t\t\t\t\t\taccount.balance = new BigNumber(token.balance);\n\t\t\t\t\t}\n\t\t\t\t\t//this.logger.debug(JSON.stringify(token));\n\t\t\t\t}\n\t\t\t\taccount.accountMeta = am;\n\t\t\t}\n\t\t}\n\n\t\t// for (let account of this.wallet.accounts) {\n\t\t// \tthis.logger.debug(JSON.stringify(account));\n\t\t// }\n\n\t\t// Make sure any frontiers are in the work pool\n\t\t// If they have no frontier, we want to use their pub key?\n\t\tconst hashes = [];\n\t\tthis.wallet.accounts.forEach(account => {\n\t\t\tconst tokensMeta = account.accountMeta.tokens;\n\t\t\tif (tokensMeta && Array.isArray(tokensMeta)) {\n\t\t\t\ttokensMeta.forEach(tm => {\n\t\t\t\t\thashes.push(tm.header);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\thashes.forEach(hash => this.workPool.addWorkToCache(hash));\n\n\t\t// If there is a pending balance, search for the actual pending transactions\n\t\tif (reloadPending && this.wallet.pendingCount > 0) {\n\t\t\tawait this.loadPendingBlocksForWallet();\n\t\t}\n\t}\n\n\tasync loadWalletAccount(accountIndex, accountID) {\n\t\tconst index = accountIndex;\n\t\tconst addressBookName = this.addressBook.getAccountName(accountID);\n\n\t\tconst newAccount: WalletAccount = {\n\t\t\tid: accountID,\n\t\t\t// frontiers: null,\n\t\t\tsecret: null,\n\t\t\tkeyPair: null,\n\t\t\tbalance: new BigNumber(0),\n\t\t\tbalances: null,\n\t\t\totherTokens: [],\n\t\t\t// pending: new BigNumber(0),\n\t\t\tpendingBlocks: [],\n\t\t\tpendingCount: 0,\n\t\t\tpendingPerTokenCount: [],\n\t\t\tlatestTransactions: [],\n\t\t\t// balanceRaw: new BigNumber(0),\n\t\t\t// pendingRaw: new BigNumber(0),\n\t\t\t// balanceFiat: 0,\n\t\t\t// pendingFiat: 0,\n\t\t\tindex: index,\n\t\t\taddressBookName,\n\t\t\taccountMeta: {}\n\t\t};\n\n\t\tthis.wallet.accounts.push(newAccount);\n\t\t// this.websocket.subscribeAccounts([accountID]);\n\t\treturn newAccount;\n\t}\n\n\tasync addWalletAccount(accountIndex: number | null = null, reloadBalances: boolean = true) {\n\t\t// if (!this.wallet.seedBytes) return;\n\t\tlet index = accountIndex;\n\t\tlet nextIndex = index + 1;\n\t\tif (index === null) {\n\t\t\tindex = this.wallet.accountsIndex; // Use the existing number, then increment it\n\n\t\t\t// Make sure the index is not being used (ie. if you delete acct 3/5, then press add twice, it goes 3, 6, 7)\n\t\t\twhile (this.wallet.accounts.find(a => a.index === index)) {\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\t// Find the next available index\n\t\t\ttry {\n\t\t\t\tnextIndex = index + 1;\n\t\t\t\twhile (this.wallet.accounts.find(a => a.index === nextIndex)) {\n\t\t\t\t\tnextIndex++;\n\t\t\t\t}\n\t\t\t\tthis.wallet.accountsIndex = nextIndex;\n\t\t\t} catch (error) {\n\t\t\t\tthis.logger.error(error.messages);\n\t\t\t}\n\t\t}\n\n\t\tlet newAccount: WalletAccount | null;\n\n\t\tif (this.wallet.type === 'privateKey') {\n\t\t\tthrow new Error(`Cannot add another account in private key mode`);\n\t\t} else if (this.wallet.type === 'seed') {\n\t\t\tnewAccount = await this.createSeedAccount(index);\n\t\t} else if (this.wallet.type === 'ledger') {\n\t\t\t// try {\n\t\t\t// \tnewAccount = await this.createLedgerAccount(index);\n\t\t\t// } catch (err) {\n\t\t\t// \tthis.notifications.sendWarning(`Unable to load account from ledger.  Make sure it is connected`);\n\t\t\t// \tthrow err;\n\t\t\t// }\n\t\t}\n\n\t\tthis.wallet.accounts.push(newAccount);\n\t\tthis.wallet.accountsIndex = this.wallet.accounts.length;\n\n\t\tif (reloadBalances) {\n\t\t\tawait this.reloadBalances();\n\t\t}\n\n\t\t// this.websocket.subscribeAccounts([newAccount.id]);\n\n\t\tthis.saveWalletExport();\n\n\t\treturn newAccount;\n\t}\n\n\tasync removeWalletAccount(accountID: string) {\n\t\tconst walletAccount = await this.getWalletAccount(accountID);\n\t\tconst errMessage = 'Account is not in wallet';\n\t\tif (!walletAccount) {\n\t\t\tthrow new Error(errMessage);\n\t\t}\n\t\tconst walletAccountIndex = this.wallet.accounts.findIndex(a => a.id === accountID);\n\t\tif (walletAccountIndex === -1) {\n\t\t\tthrow new Error(errMessage);\n\t\t}\n\n\t\tthis.wallet.accounts.splice(walletAccountIndex, 1);\n\n\t\t// Reset the account index if this account is lower than the current index\n\t\tif (walletAccount.index < this.wallet.accountsIndex) {\n\t\t\tthis.wallet.accountsIndex = walletAccount.index;\n\t\t}\n\n\t\t// this.websocket.unsubscribeAccounts([accountID]);\n\n\t\t// Reload the balances, save new wallet state\n\t\tawait this.reloadBalances();\n\t\tthis.saveWalletExport();\n\n\t\treturn true;\n\t}\n\n\taddPendingBlock(accountID, blockHash, amount, tokenHash, tokenName) {\n\t\tif (this.successfulBlocks.indexOf(blockHash) !== -1) {\n\t\t\treturn; // Already successful with this block\n\t\t}\n\t\tconst existingHash = this.pendingBlocks.find(b => b.hash === blockHash);\n\t\tif (existingHash) {\n\t\t\treturn; // Already added\n\t\t}\n\t\tthis.pendingBlocks.push({\n\t\t\taccount: accountID,\n\t\t\treceiveAccount: accountID,\n\t\t\thash: blockHash,\n\t\t\tamount: amount,\n\t\t\ttoken: tokenHash,\n\t\t\ttokenName: tokenName,\n\t\t\ttokenSymbol: tokenName\n\t\t});\n\t}\n\n\tasync loadPendingBlocksForWallet() {\n\t\tif (!this.wallet.accounts.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst accountsPending = await this.api.accountsPending(this.wallet.accounts.map(a => a.id));\n\t\tif (accountsPending.error) {\n\t\t\treturn;\n\t\t}\n\t\tconst pendingResult = accountsPending.result;\n\t\tfor (const account in pendingResult) {\n\t\t\tif (!pendingResult.hasOwnProperty(account)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpendingResult[account].forEach(pending => {\n\t\t\t\tthis.addPendingBlock(account, pending.hash, pending.amount, pending.type, pending.tokenName);\n\t\t\t});\n\t\t}\n\n\t\tif (this.pendingBlocks.length && this.appSettings.settings.receive == 'auto') {\n\t\t\tthis.processPendingBlocks();\n\t\t}\n\t}\n\n\tasync processPendingBlocks() {\n\t\tif (this.processingPending || this.wallet.locked || !this.pendingBlocks.length || this.appSettings.settings.receive != 'auto') {\n\t\t\treturn;\n\t\t}\n\t\tthis.processingPending = true;\n\n\t\tconst nextBlock = this.pendingBlocks[0];\n\t\tif (this.successfulBlocks.find(b => b.hash === nextBlock.hash)) {\n\t\t\t//console.log('Block has already been processed')\n\t\t\tthis.pendingBlocks.shift(); // Remove it after processing, to prevent attempting to receive duplicated messages\n\t\t\tthis.removeBlockFromPendingAccount(nextBlock);\n\t\t\tthis.processingPending = false;\n\t\t\treturn setTimeout(() => this.processPendingBlocks(), 1500); // Block has already been processed\n\t\t}\n\t\tconst walletAccount = await this.getWalletAccount(nextBlock.receiveAccount);\n\t\tif (!walletAccount) {\n\t\t\t//console.log('Dispose of the block, no matching account')\n\t\t\tthis.pendingBlocks.shift(); // Remove it after processing, to prevent attempting to receive duplicated messages\n\t\t\tthis.removeBlockFromPendingAccount(nextBlock);\n\t\t\tthis.processingPending = false;\n\t\t\treturn setTimeout(() => this.processPendingBlocks(), 1500); // Dispose of the block, no matching account\n\t\t}\n\n\t\tconst newHash = await this.qlcBlock.generateReceive(walletAccount, nextBlock.hash, this.isLedgerWallet());\n\n\t\tif (newHash) {\n\t\t\tthis.confirmTx(newHash,nextBlock,true);\n\t\t}\n\t}\n\n\tasync processPendingBlock(pending) {\n\t\tif (this.processingPending || this.wallet.locked) {\n\t\t\treturn;\n\t\t}\n\t\tthis.processingPending = true;\n\t\tconst nextBlock = {\n\t\t\taccount: pending.source,\n\t\t\treceiveAccount: pending.account,\n\t\t\tamount: pending.amount,\n\t\t\ttoken: pending.type,\n\t\t\ttokenName: pending.tokenName,\n\t\t\ttokenSymbol: pending.tokenName,\n\t\t\ttimestamp: pending.timestamp,\n\t\t\thash: pending.hash\n\t\t};\n\t\tif (this.successfulBlocks.find(b => b.hash === nextBlock.hash)) {\n\t\t\t//console.log('Block has already been processed')\n\t\t\tthis.pendingBlocks.shift(); // Remove it after processing, to prevent attempting to receive duplicated messages\n\t\t\tthis.removeBlockFromPendingAccount(nextBlock);\n\t\t\tthis.processingPending = false;\n\t\t\treturn; // Block has already been processed\n\t\t}\n\t\tconst walletAccount = await this.getWalletAccount(nextBlock.receiveAccount);\n\t\tif (!walletAccount) {\n\t\t\t//console.log('Dispose of the block, no matching account')\n\t\t\tthis.pendingBlocks.shift(); // Remove it after processing, to prevent attempting to receive duplicated messages\n\t\t\tthis.removeBlockFromPendingAccount(nextBlock);\n\t\t\tthis.processingPending = false;\n\t\t\treturn; // Dispose of the block, no matching account\n\t\t}\n\n\t\tconst newHash = await this.qlcBlock.generateReceive(walletAccount, nextBlock.hash, this.isLedgerWallet());\nconsole.log(newHash);\n\t\tif (newHash) {\n\t\t\tthis.confirmTx(newHash,nextBlock);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tasync confirmTx(hash,nextBlock,auto = false) {\n\t\tconst blockConfirmedQuery = await this.api.blockConfirmedStatus(hash);\n\t\tconsole.log(blockConfirmedQuery);\n\t\tif (typeof blockConfirmedQuery.result != 'undefined') {\n\t\t\tif (blockConfirmedQuery.result == true) {\n\t\t\t\tif (this.successfulBlocks.length >= 500) {\n\t\t\t\t\tthis.successfulBlocks.shift();\n\t\t\t\t}\n\t\t\t\tthis.successfulBlocks.push(nextBlock.hash);\n\t\t\t\tawait this.loadTokens();\n\t\t\t\tlet tokenInfo;\n\t\t\t\tif (this.tokenMap.hasOwnProperty(nextBlock.token)) {\n\t\t\t\t\ttokenInfo = this.tokenMap[nextBlock.token];\n\t\t\t\t}\n\t\t\t\tthis.notifications.sendSuccess(\n\t\t\t\t\t`Successfully received ${nextBlock.amount == 0 ? '' : new BigNumber(nextBlock.amount).dividedBy(Math.pow(10,tokenInfo.decimals)).toFixed(tokenInfo.decimals)} ${tokenInfo.tokenSymbol}!`\n\t\t\t\t);\n\t\t\t\t// Remove it after processing, to prevent attempting to receive duplicated messages\n\t\t\t\tthis.pendingBlocks = this.pendingBlocks.filter(function( obj ) {\n\t\t\t\t\treturn obj.hash !== nextBlock.hash;\n\t\t\t\t});\n\t\t\t\tthis.removeBlockFromPendingAccount(nextBlock,hash);\n\t\t\t\tthis.processingPending = false;\n\t\t\t\tsetTimeout(() => this.processPendingBlocks(), 1500);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tthis.confirmTxTimer.subscribe( val => {\n\t\t\tthis.confirmTx(hash,nextBlock,auto);\n\t\t});\n\t}\n\n\tsaveWalletExport() {\n\t\tconst exportData = this.generateWalletExport();\n\n\t\tswitch (this.appSettings.settings.walletStore) {\n\t\t\tcase 'none':\n\t\t\t\tthis.removeWalletData();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\tcase 'localStorage':\n\t\t\t\tlocalStorage.setItem(this.storeKey, JSON.stringify(exportData));\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveWalletData() {\n\t\tlocalStorage.removeItem(this.storeKey);\n\t}\n\n\tgenerateWalletExport() {\n\t\tconst data: any = {\n\t\t\ttype: this.wallet.type,\n\t\t\taccounts: this.wallet.accounts.map(a => ({ id: a.id, index: a.index })),\n\t\t\tneowallets: this.wallet.neowallets.map(a => ({ id: a.id, index: a.index, encryptedwif: a.encryptedwif })),\n\t\t\tchainxAccounts: this.wallet.chainxAccounts.map(a => ({ id: a.id, index: a.index, wif: a.wif, mnemonic: a.mnemonic })),\n\t\t\taccountsIndex: this.wallet.accountsIndex\n\t\t};\n\n\t\tif (this.wallet.type === 'seed') {\n\t\t\tdata.seed = this.wallet.seed;\n\t\t\tdata.locked = this.wallet.locked;\n\t\t\tdata.password = this.wallet.locked ? '' : this.wallet.password;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\t\n\n\tasync prepareQLCBlockView(blocks) {\n\t\tlet preparedBlocks = [];\n\t\t\n\t\tawait this.loadTokens();\n\n\t\tfor (const block of blocks) {\n\t\t\t//const blockInfo = await this.api.blocksInfo([block.link]);\n\t\t\t// For Open and receive blocks, we need to look up block info to get originating account\n\t\t\tif (block.type === 'Online' || block.type === 'Change') {\n\t\t\t\tblock.link_as_account = block.address;\n\t\t\t} else if (block.type === 'Open' || block.type === 'Receive' || block.type === 'ContractReward') {\n\t\t\t\tconst preBlock = await this.api.blocksInfo([block.link]);\n\t\t\t\tif (!preBlock.error && typeof (preBlock.result[0]) != 'undefined' && preBlock.result.length > 0) {\n\t\t\t\t\tblock.link_as_account = preBlock.result[0].address;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst link_as_account = await this.api.accountForPublicKey(block.link);\n\t\t\t\tif (!link_as_account.error && typeof (link_as_account.result) != 'undefined') {\n\t\t\t\t\tblock.link_as_account = link_as_account.result;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.tokenMap.hasOwnProperty(block.token)) {\n\t\t\t\tblock.tokenInfo = this.tokenMap[block.token];\n\t\t\t}\n\t\t\tpreparedBlocks.push(block);\n\t\t}\n\t\treturn preparedBlocks;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { PowService } from './pow.service';\nimport { NotificationService } from './notification.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WorkPoolService {\n\tstoreKey = `sms-billing-workcache`;\n\n\tcacheLength = 25;\n\tworkCache = [];\n\n\tretryCount = 0;\n\n\tconstructor(private pow: PowService, private notifications: NotificationService) {}\n\n\tpublic workExists(hash) {\n\t\treturn !!this.workCache.find(p => p.hash === hash);\n\t}\n\n\t// A simple helper, which doesn't wait for a response (Used for pre-loading work)\n\tpublic addWorkToCache(hash) {\n\t\tthis.getWork(hash);\n\t}\n\n\t// Remove a hash from from the cache\n\tpublic removeFromCache(hash) {\n\t\tconst cachedIndex = this.workCache.findIndex(p => p.hash === hash);\n\t\tif (cachedIndex === -1) {\n\t\t\treturn;\n\t\t}\n\t\tthis.workCache.splice(cachedIndex, 1);\n\t\tthis.saveWorkCache();\n\t}\n\n\tpublic clearCache() {\n\t\tthis.workCache = [];\n\t\tthis.saveWorkCache();\n\n\t\treturn true;\n\t}\n\n\tpublic deleteCache() {\n\t\tthis.workCache = [];\n\t\tlocalStorage.removeItem(this.storeKey);\n\t}\n\n\t// Get work for a hash.  Uses the cache, or the current setting for generating it.\n\tpublic async getWork(hash) {\n\t\tconst cached = this.workCache.find(p => p.hash === hash);\n\t\tif (cached && cached.work) {\n\t\t\treturn cached.work;\n\t\t}\n\t\tconst work = await this.pow.getPow(hash);\n\t\tif (!work) {\n\t\t\tif (this.retryCount < 5) {\n\t\t\t\tthis.notifications.sendWarning(`Failed to retrieve work for ${hash}.  Retrying.`);\n\t\t\t\treturn this.getWork(hash);\n\t\t\t}\n\t\t\tthis.notifications.sendWarning(`Failed to retrieve work for ${hash}.  Try again later.`);\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.workCache.push({ hash, work });\n\t\tif (this.workCache.length >= this.cacheLength) {\n\t\t\tthis.workCache.shift(); // Prune if we are at max length\n\t\t}\n\t\tthis.saveWorkCache();\n\n\t\treturn work;\n\t}\n\n\t/**\n\t * Save the work cache to localStorage\n\t */\n\tprivate saveWorkCache() {\n\t\t// Remove duplicates\n\t\tthis.workCache = this.workCache.reduce((previous, current) => {\n\t\t\tif (!previous.find(p => p.hash === current.hash)) {\n\t\t\t\tprevious.push(current);\n\t\t\t}\n\t\t\treturn previous;\n\t\t}, []);\n\n\t\tlocalStorage.setItem(this.storeKey, JSON.stringify(this.workCache));\n\t}\n\n\t/**\n\t * Load the work cache from localStorage\n\t */\n\tpublic loadWorkCache() {\n\t\tlet workCache = [];\n\t\tconst workCacheStore = localStorage.getItem(this.storeKey);\n\t\tif (workCacheStore) {\n\t\t\tworkCache = JSON.parse(workCacheStore);\n\t\t}\n\t\tthis.workCache = workCache;\n\n\t\treturn this.workCache;\n\t}\n}\n","var map = {\n\t\"./neoTokenList_main.json\": \"./src/assets/data/neoTokenList_main.json\",\n\t\"./neoTokenList_test.json\": \"./src/assets/data/neoTokenList_test.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/assets/data sync recursive ^\\\\.\\\\/neoTokenList_.*\\\\.json$\";","export const neo5toerc20swap = [\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"user\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"nep5Addr\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Burn\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"user\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"bytes32\",\n        \"name\": \"nep5Hash\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"previousOwner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"OwnershipTransferred\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint8\",\n        \"name\": \"\",\n        \"type\": \"uint8\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"subtractedValue\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"decreaseAllowance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"addedValue\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"increaseAllowance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"name\": \"lockedAmount\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"renounceOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"recipient\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"recipient\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"transferOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"name\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"symbol\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"initialize\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"nep5Hash\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"signature\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"nep5Addr\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"burn\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n]","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  desktop: false,\n  version: '1.3.3',\n  qlcChainNetwork: 'main', // test or main\n  neoNetwork: 'test', // test or main\n  chainxNetworkDefault: 'main', // test or main // test doesn't work\n  ethNetworkDefault: 'rinkeby', // mainnet, ropsten, rinkeby\n  mainRpcUrl: {\n    test: '',\n    main: 'https://rpc.qlcchain.online'\n  },\n  rpcUrl: {\n    test: 'http://seed2.ngd.network:20332/',\n    main: 'https://rpc.qlcchain.online'\n  },\n  swapUrl: {\n    test: 'http://seed2.ngd.network:20332/',\n    main: 'http://seed2.ngd.network:10332/'\n  },\n  neotube: {\n    test: 'https://testnet.api.neotube.io/api/',\n    main: 'https://mainnet.api.neotube.io/api/'\n  },\n  etherscan: {\n    test: 'https://rinkeby.etherscan.io/',\n    main: 'https://etherscan.io/'\n  },\n  ethExplorer: {\n    mainnet: 'https://etherscan.io',\n    ropsten: 'https://ropsten.etherscan.io',\n    rinkeby: 'https://rinkeby.etherscan.io'\n  },\n  ethEtherscanApiKey: 'QB9XWH5BSIYIVIVZ5A85C8TK3XTH4WPVAK',\n  ethEtherscanApi: {\n    mainnet: 'https://api.etherscan.io',\n    ropsten: 'https://api-ropsten.etherscan.io',\n    rinkeby: 'https://api-rinkeby.etherscan.io'\n  },\n  neotubeSite: {\n    test: 'https://testnet.neotube.io/',\n    main: 'https://neotube.io/'\n  },\n  wsUrl: {\n    test: '',\n    main: 'wss://rpc-ws.qlcchain.online'\n  },\n  nep5Url: {\n    test: '',\n    main: 'https://nep5.qlcchain.online'\n  },\n  neo5toerc20swapwrapperurl: {\n    test: 'https://hub-test.qlcchain.online',\n    main: 'https://hub.qlcchain.online'\n  },\n  neo5toerc20swapjwtauth: {\n    test:\n    // tslint:disable-next-line: max-line-length\n    {authorization: 'eyJhbGciOiJFUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJRTENDaGFpbiBCb3QiLCJqdGkiOiJiZDhiMDM3YS03YzgzLTQxN2UtYTVhMC1kNzc2ODg0MGNlMjIiLCJpYXQiOjE2MDYzOTY5MDgsImlzcyI6IlFMQ0NoYWluIEJvdCIsInN1YiI6InNpZ25lciIsInJvbGVzIjpbInVzZXIiXX0.AHXxllMMeBelYQ8zMLMIZLrlwkxqwGfZ_Zrdzfny7dGHgLOVxUQpIGZjwL5ZTyOTZa5aJ-3sr5lehNWofnM47vOjAV5CpJ3LdGec1DcGX9mN45anluoavcBVePmE1c4maMv4Ale7DEamhSndsYnEGjRJYb2HjNMm0geIVOcs9xW9zQ5z'},\n    main:\n    // tslint:disable-next-line: max-line-length\n    {authorization:'eyJhbGciOiJFUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJRTENDaGFpbiBCb3QiLCJqdGkiOiJiZDhiMDM3YS03YzgzLTQxN2UtYTVhMC1kNzc2ODg0MGNlMjIiLCJpYXQiOjE2MDYzOTY5MDgsImlzcyI6IlFMQ0NoYWluIEJvdCIsInN1YiI6InNpZ25lciIsInJvbGVzIjpbInVzZXIiXX0.AHXxllMMeBelYQ8zMLMIZLrlwkxqwGfZ_Zrdzfny7dGHgLOVxUQpIGZjwL5ZTyOTZa5aJ-3sr5lehNWofnM47vOjAV5CpJ3LdGec1DcGX9mN45anluoavcBVePmE1c4maMv4Ale7DEamhSndsYnEGjRJYb2HjNMm0geIVOcs9xW9zQ5z'}\n  },\n  neoSmartContract: {\n    test: '',\n    main: '3078aa0e095defba3f00e0af12810187ecfb586a'\n  },\n  neo5swapSmartContract: {\n    test: 'bfcbb52d61bc6d3ef2c8cf43f595f4bf5cac66c5',\n    main: ''\n  },\n  neo5QLCSmartContract: {\n    test: 'b9d7ea3062e6aeeb3e8ad9548220c4ba1361d263',\n    main: '0d821bd7b6d53f5c2b40e217c6defc8bbe896cf5'\n  },\n  etherswapSmartContract: {\n    test: '0xE2484A4178Ce7FfD5cd000030b2a5de08c0Caf8D',\n    main: ''\n  },\n  testSmartContract: {\n    test: '0x40E3dCC2EC0B8f7381332614630Aa9EF19b18cA2',\n    main: ''\n  },\n  neoPublicKey: {\n    test: '',\n    main: '02c6e68c61480003ed163f72b41cbb50ded29d79e513fd299d2cb844318b1b8ad5'\n  },\n  neoScanApi: {\n    test: 'https://api.neoscan.io/api/main_net',\n    main: 'https://api.neoscan.io/api/main_net'\n  },\n  neoScan: {\n    test: 'https://testnet.api.neotube.io',\n    main: 'https://neoscan.io'\n  },\n  neonNetwork: {\n    test: 'TestNet',\n    main: 'MainNet'\n  },\n  chainxWs: {\n    test: '',\n    main: 'wss://w1.chainx.org/ws'\n  },\n  chainxExplorer: {\n    test: 'https://scan.chainx.org',\n    main: 'https://scan.chainx.org'\n  },\n  chainxNetwork: {\n    test: 'TestNet',\n    main: 'MainNet'\n  },\n  chainxApi: {\n    test: 'https://api.chainx.org.cn',\n    main: 'https://api.chainx.org.cn'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}